{"version":3,"sources":["../webpack/bootstrap","../../datapack-language-server/lib/CommandTree.js","../../datapack-language-server/lib/data sync ^\\.\\/CommandTree.*$","../../datapack-language-server/lib/data/CommandTree.js","../../datapack-language-server/lib/data/CommandTree1.15.js","../../datapack-language-server/lib/data/CommandTree1.16.js","../../datapack-language-server/lib/data/CommandTree1.17.js","../../datapack-language-server/lib/data/JsonSchema.js","../../datapack-language-server/lib/data/VanillaData.js","../../datapack-language-server/lib/index.js","../../datapack-language-server/lib/locales sync ^\\.\\/.*\\.json$","../../datapack-language-server/lib/locales/index.js","../../datapack-language-server/lib/nodes/ArgumentNode.js","../../datapack-language-server/lib/nodes/BlockNode.js","../../datapack-language-server/lib/nodes/BlockStateNode.js","../../datapack-language-server/lib/nodes/EntityNode.js","../../datapack-language-server/lib/nodes/IdentityNode.js","../../datapack-language-server/lib/nodes/ItemNode.js","../../datapack-language-server/lib/nodes/JsonDocument.js","../../datapack-language-server/lib/nodes/JsonNode.js","../../datapack-language-server/lib/nodes/MapNode.js","../../datapack-language-server/lib/nodes/MessageNode.js","../../datapack-language-server/lib/nodes/NbtArrayNode.js","../../datapack-language-server/lib/nodes/NbtByteArrayNode.js","../../datapack-language-server/lib/nodes/NbtByteNode.js","../../datapack-language-server/lib/nodes/NbtCollectionNode.js","../../datapack-language-server/lib/nodes/NbtCompoundKeyNode.js","../../datapack-language-server/lib/nodes/NbtCompoundNode.js","../../datapack-language-server/lib/nodes/NbtDoubleNode.js","../../datapack-language-server/lib/nodes/NbtFloatNode.js","../../datapack-language-server/lib/nodes/NbtIntArrayNode.js","../../datapack-language-server/lib/nodes/NbtIntNode.js","../../datapack-language-server/lib/nodes/NbtListNode.js","../../datapack-language-server/lib/nodes/NbtLongArrayNode.js","../../datapack-language-server/lib/nodes/NbtLongNode.js","../../datapack-language-server/lib/nodes/NbtNode.js","../../datapack-language-server/lib/nodes/NbtNumberNode.js","../../datapack-language-server/lib/nodes/NbtPathNode.js","../../datapack-language-server/lib/nodes/NbtPrimitiveNode.js","../../datapack-language-server/lib/nodes/NbtShortNode.js","../../datapack-language-server/lib/nodes/NbtStringNode.js","../../datapack-language-server/lib/nodes/NumberNode.js","../../datapack-language-server/lib/nodes/NumberRangeNode.js","../../datapack-language-server/lib/nodes/ParticleNode.js","../../datapack-language-server/lib/nodes/SelectorArgumentsNode.js","../../datapack-language-server/lib/nodes/StringNode.js","../../datapack-language-server/lib/nodes/TextComponent.js","../../datapack-language-server/lib/nodes/TimeNode.js","../../datapack-language-server/lib/nodes/VectorNode.js","../../datapack-language-server/lib/nodes/index.js","../../datapack-language-server/lib/parsers/ArgumentParser.js","../../datapack-language-server/lib/parsers/BlockArgumentParser.js","../../datapack-language-server/lib/parsers/CodeSnippetArgumentParser.js","../../datapack-language-server/lib/parsers/CommandParser.js","../../datapack-language-server/lib/parsers/DeclarationDescriptionArgumentParser.js","../../datapack-language-server/lib/parsers/DeclarationIDArgumentParser.js","../../datapack-language-server/lib/parsers/EntityArgumentParser.js","../../datapack-language-server/lib/parsers/IdentityArgumentParser.js","../../datapack-language-server/lib/parsers/ItemArgumentParser.js","../../datapack-language-server/lib/parsers/ItemSlotArgumentParser.js","../../datapack-language-server/lib/parsers/LiteralArgumentParser.js","../../datapack-language-server/lib/parsers/MapParser.js","../../datapack-language-server/lib/parsers/MessageArgumentParser.js","../../datapack-language-server/lib/parsers/NbtArgumentParser.js","../../datapack-language-server/lib/parsers/NbtPathArgumentParser.js","../../datapack-language-server/lib/parsers/NumberArgumentParser.js","../../datapack-language-server/lib/parsers/NumberRangeArgumentParser.js","../../datapack-language-server/lib/parsers/ObjectiveArgumentParser.js","../../datapack-language-server/lib/parsers/ObjectiveCriterionArgumentParser.js","../../datapack-language-server/lib/parsers/ParserCollection.js","../../datapack-language-server/lib/parsers/ParticleArgumentParser.js","../../datapack-language-server/lib/parsers/ScoreboardSlotArgumentParser.js","../../datapack-language-server/lib/parsers/StringArgumentParser.js","../../datapack-language-server/lib/parsers/TagArgumentParser.js","../../datapack-language-server/lib/parsers/TeamArgumentParser.js","../../datapack-language-server/lib/parsers/TextComponentArgumentParser.js","../../datapack-language-server/lib/parsers/TimeArgumentParser.js","../../datapack-language-server/lib/parsers/UuidArgumentParser.js","../../datapack-language-server/lib/parsers/VectorArgumentParser.js","../../datapack-language-server/lib/parsers/index.js","../../datapack-language-server/lib/plugins sync","../../datapack-language-server/lib/plugins/Contributor.js","../../datapack-language-server/lib/plugins/ContributorImpl.js","../../datapack-language-server/lib/plugins/LanguageConfig.js","../../datapack-language-server/lib/plugins/LanguageConfigImpl.js","../../datapack-language-server/lib/plugins/LanguageDefinition.js","../../datapack-language-server/lib/plugins/Plugin.js","../../datapack-language-server/lib/plugins/PluginLoader.js","../../datapack-language-server/lib/plugins/SyntaxComponent.js","../../datapack-language-server/lib/plugins/builtin/DocCommentPlugin.js","../../datapack-language-server/lib/plugins/builtin/McfunctionPlugin.js","../../datapack-language-server/lib/plugins/index.js","../../datapack-language-server/lib/server.js","../../datapack-language-server/lib/services/DatapackLanguageService.js","../../datapack-language-server/lib/services/commands/fixFileCommandHandler.js","../../datapack-language-server/lib/services/commands/index.js","../../datapack-language-server/lib/services/common.js","../../datapack-language-server/lib/services/index.js","../../datapack-language-server/lib/services/onCallHierarchyIncomingCalls.js","../../datapack-language-server/lib/services/onCallHierarchyOutgoingCalls.js","../../datapack-language-server/lib/services/onCallHierarchyPrepare.js","../../datapack-language-server/lib/services/onCodeAction.js","../../datapack-language-server/lib/services/onColorPresentation.js","../../datapack-language-server/lib/services/onCompletion.js","../../datapack-language-server/lib/services/onDidChangeTextDocument.js","../../datapack-language-server/lib/services/onDidCloseTextDocument.js","../../datapack-language-server/lib/services/onDocumentColor.js","../../datapack-language-server/lib/services/onDocumentFormatting.js","../../datapack-language-server/lib/services/onDocumentHighlight.js","../../datapack-language-server/lib/services/onDocumentLinks.js","../../datapack-language-server/lib/services/onFoldingRanges.js","../../datapack-language-server/lib/services/onHover.js","../../datapack-language-server/lib/services/onNavigation.js","../../datapack-language-server/lib/services/onPrepareRename.js","../../datapack-language-server/lib/services/onRenameRequest.js","../../datapack-language-server/lib/services/onSelectionRanges.js","../../datapack-language-server/lib/services/onSemanticTokens.js","../../datapack-language-server/lib/services/onSemanticTokensEdits.js","../../datapack-language-server/lib/services/onSignatureHelp.js","../../datapack-language-server/lib/types/BlockDefinition.js","../../datapack-language-server/lib/types/ClientCache.js","../../datapack-language-server/lib/types/ClientCapabilities.js","../../datapack-language-server/lib/types/CommandComponent.js","../../datapack-language-server/lib/types/CommandTree.js","../../datapack-language-server/lib/types/CommandTreeVersion.js","../../datapack-language-server/lib/types/Config.js","../../datapack-language-server/lib/types/DatapackDocument.js","../../datapack-language-server/lib/types/Formattable.js","../../datapack-language-server/lib/types/GameMode.js","../../datapack-language-server/lib/types/HoverInformation.js","../../datapack-language-server/lib/types/IndexMapping.js","../../datapack-language-server/lib/types/JsonSchemaVersion.js","../../datapack-language-server/lib/types/Locale.js","../../datapack-language-server/lib/types/Manager.js","../../datapack-language-server/lib/types/NamespaceSummary.js","../../datapack-language-server/lib/types/NamespaceTreeSummary.js","../../datapack-language-server/lib/types/NamingConventionConfig.js","../../datapack-language-server/lib/types/Parser.js","../../datapack-language-server/lib/types/ParserSuggestion.js","../../datapack-language-server/lib/types/ParsingContext.js","../../datapack-language-server/lib/types/ParsingError.js","../../datapack-language-server/lib/types/QuoteTypeConfig.js","../../datapack-language-server/lib/types/Registry.js","../../datapack-language-server/lib/types/StrictCheckConfig.js","../../datapack-language-server/lib/types/StylisticConfig.js","../../datapack-language-server/lib/types/TextRange.js","../../datapack-language-server/lib/types/Token.js","../../datapack-language-server/lib/types/VersionInformation.js","../../datapack-language-server/lib/types/handlers.js","../../datapack-language-server/lib/types/index.js","../../datapack-language-server/lib/types/nbtdoc.js","../../datapack-language-server/lib/types/scoreboard.js","../../datapack-language-server/lib/utils/JsonSchemaHelper.js","../../datapack-language-server/lib/utils/NbtdocHelper.js","../../datapack-language-server/lib/utils/PathPatterns.js","../../datapack-language-server/lib/utils/StringReader.js","../../datapack-language-server/lib/utils/datafixers/attributeName.js","../../datapack-language-server/lib/utils/datafixers/nbtUuid.js","../../datapack-language-server/lib/utils/index.js","../../datapack-language-server/node_modules/@mcschema sync ^\\.\\/.*\\/lib\\/index\\.js$","../../datapack-language-server/node_modules/@mcschema/locales/src sync ^\\.\\/.*\\.json$","../../datapack-language-server/node_modules/appdata-path/lib/index.js","../../datapack-language-server/node_modules/balanced-match/index.js","../../datapack-language-server/node_modules/brace-expansion/index.js","../../datapack-language-server/node_modules/clone/clone.js","../../datapack-language-server/node_modules/concat-map/index.js","../../datapack-language-server/node_modules/fast-deep-equal/index.js","../../datapack-language-server/node_modules/jsonc-parser/lib/esm/impl/edit.js","../../datapack-language-server/node_modules/jsonc-parser/lib/esm/impl/format.js","../../datapack-language-server/node_modules/jsonc-parser/lib/esm/impl/parser.js","../../datapack-language-server/node_modules/jsonc-parser/lib/esm/impl/scanner.js","../../datapack-language-server/node_modules/jsonc-parser/lib/esm/main.js","../../datapack-language-server/node_modules/lodash.frompairs/index.js","../../datapack-language-server/node_modules/minimatch/minimatch.js","../../datapack-language-server/node_modules/python-range/dist/array-indices-proxy.js","../../datapack-language-server/node_modules/python-range/dist/index.js","../../datapack-language-server/node_modules/rfdc/index.js","../../datapack-language-server/node_modules/synchronous-promise/index.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/index.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/md5.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/nil.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/parse.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/regex.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/rng.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/sha1.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/stringify.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/v1.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/v3.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/v35.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/v4.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/v5.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/validate.js","../../datapack-language-server/node_modules/uuid/dist/esm-node/version.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/jsonLanguageService.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/jsonLanguageTypes.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/parser/jsonParser.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/configuration.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/jsonCompletion.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/jsonDefinition.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/jsonDocumentSymbols.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/jsonFolding.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/jsonHover.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/jsonSchemaService.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/jsonSelectionRanges.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/services/jsonValidation.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/utils/colors.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/utils/json.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/utils/objects.js","../../datapack-language-server/node_modules/vscode-json-languageservice/lib/esm/utils/strings.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/cancellation.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/events.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/is.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/linkedMap.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/main.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/messageReader.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/messageWriter.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/messages.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/pipeSupport.js","../../datapack-language-server/node_modules/vscode-jsonrpc/lib/socketSupport.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/main.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/messages.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.callHierarchy.proposed.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.progress.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.selectionRange.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.sematicTokens.proposed.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js","../../datapack-language-server/node_modules/vscode-languageserver-protocol/lib/utils/is.js","../../datapack-language-server/node_modules/vscode-languageserver-textdocument/lib/esm/main.js","../../datapack-language-server/node_modules/vscode-languageserver-types/lib/esm/main.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/callHierarchy.proposed.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/configuration.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/files.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/main.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/progress.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/sematicTokens.proposed.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/utils/is.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/utils/uuid.js","../../datapack-language-server/node_modules/vscode-languageserver/lib/workspaceFolders.js","../../datapack-language-server/node_modules/vscode-nls/lib/main.js","../../datapack-language-server/node_modules/vscode-uri/lib/esm/index.js","../../mcschema/core/lib/Hook.js","../../mcschema/core/lib/Registries.js","../../mcschema/core/lib/ValidationOption.js","../../mcschema/core/lib/index.js","../../mcschema/core/lib/model/DataModel.js","../../mcschema/core/lib/model/Errors.js","../../mcschema/core/lib/model/Path.js","../../mcschema/core/lib/nodes/BooleanNode.js","../../mcschema/core/lib/nodes/ChoiceNode.js","../../mcschema/core/lib/nodes/ListNode.js","../../mcschema/core/lib/nodes/MapNode.js","../../mcschema/core/lib/nodes/Node.js","../../mcschema/core/lib/nodes/NumberNode.js","../../mcschema/core/lib/nodes/ObjectNode.js","../../mcschema/core/lib/nodes/Reference.js","../../mcschema/core/lib/nodes/StringNode.js","../../mcschema/core/lib/nodes/SwitchNode.js","../../mcschema/core/lib/utils.js","../../mcschema/core/node_modules/diff/lib/convert/dmp.js","../../mcschema/core/node_modules/diff/lib/convert/xml.js","../../mcschema/core/node_modules/diff/lib/diff/array.js","../../mcschema/core/node_modules/diff/lib/diff/base.js","../../mcschema/core/node_modules/diff/lib/diff/character.js","../../mcschema/core/node_modules/diff/lib/diff/css.js","../../mcschema/core/node_modules/diff/lib/diff/json.js","../../mcschema/core/node_modules/diff/lib/diff/line.js","../../mcschema/core/node_modules/diff/lib/diff/sentence.js","../../mcschema/core/node_modules/diff/lib/diff/word.js","../../mcschema/core/node_modules/diff/lib/index.js","../../mcschema/core/node_modules/diff/lib/patch/apply.js","../../mcschema/core/node_modules/diff/lib/patch/create.js","../../mcschema/core/node_modules/diff/lib/patch/merge.js","../../mcschema/core/node_modules/diff/lib/patch/parse.js","../../mcschema/core/node_modules/diff/lib/util/array.js","../../mcschema/core/node_modules/diff/lib/util/distance-iterator.js","../../mcschema/core/node_modules/diff/lib/util/params.js","../../mcschema/core/node_modules/json5/lib/index.js","../../mcschema/core/node_modules/json5/lib/parse.js","../../mcschema/core/node_modules/json5/lib/stringify.js","../../mcschema/core/node_modules/json5/lib/unicode.js","../../mcschema/core/node_modules/json5/lib/util.js","../../mcschema/core/node_modules/minimist/index.js","../../mcschema/core/node_modules/strip-bom/index.js","../../mcschema/core/node_modules/tsconfig-paths/lib sync","../../mcschema/core/node_modules/tsconfig-paths/lib/config-loader.js","../../mcschema/core/node_modules/tsconfig-paths/lib/filesystem.js","../../mcschema/core/node_modules/tsconfig-paths/lib/index.js","../../mcschema/core/node_modules/tsconfig-paths/lib/mapping-entry.js","../../mcschema/core/node_modules/tsconfig-paths/lib/match-path-async.js","../../mcschema/core/node_modules/tsconfig-paths/lib/match-path-sync.js","../../mcschema/core/node_modules/tsconfig-paths/lib/options.js","../../mcschema/core/node_modules/tsconfig-paths/lib/register.js","../../mcschema/core/node_modules/tsconfig-paths/lib/try-path.js","../../mcschema/core/node_modules/tsconfig-paths/lib/tsconfig-loader.js","../../mcschema/java/1.16/lib/Collections.js","../../mcschema/java/1.16/lib/LootContext.js","../../mcschema/java/1.16/lib/index.js","../../mcschema/java/1.16/lib/schemas/Advancement.js","../../mcschema/java/1.16/lib/schemas/Common.js","../../mcschema/java/1.16/lib/schemas/Condition.js","../../mcschema/java/1.16/lib/schemas/Dimension.js","../../mcschema/java/1.16/lib/schemas/DimensionType.js","../../mcschema/java/1.16/lib/schemas/LootTable.js","../../mcschema/java/1.16/lib/schemas/PackMcmeta.js","../../mcschema/java/1.16/lib/schemas/Predicates.js","../../mcschema/java/1.16/lib/schemas/Recipe.js","../../mcschema/java/1.16/lib/schemas/Tags.js","../../mcschema/java/1.16/lib/schemas/TextComponent.js","../../mcschema/java/1.16/lib/schemas/WorldSettings.js","../../mcschema/java/1.16/lib/schemas/index.js","../../mcschema/java/1.16/lib/schemas/worldgen/Biome.js","../../mcschema/java/1.16/lib/schemas/worldgen/Carver.js","../../mcschema/java/1.16/lib/schemas/worldgen/Decorator.js","../../mcschema/java/1.16/lib/schemas/worldgen/Feature.js","../../mcschema/java/1.16/lib/schemas/worldgen/NoiseSettings.js","../../mcschema/java/1.16/lib/schemas/worldgen/ProcessorList.js","../../mcschema/java/1.16/lib/schemas/worldgen/StructureFeature.js","../../mcschema/java/1.16/lib/schemas/worldgen/SurfaceBuilder.js","../../mcschema/java/1.16/lib/schemas/worldgen/TemplatePool.js","../../mcschema/java/1.16/lib/schemas/worldgen/index.js","../../mcschema/java/1.17/lib/Collections.js","../../mcschema/java/1.17/lib/LootContext.js","../../mcschema/java/1.17/lib/index.js","../../mcschema/java/1.17/lib/schemas/Advancement.js","../../mcschema/java/1.17/lib/schemas/Common.js","../../mcschema/java/1.17/lib/schemas/Condition.js","../../mcschema/java/1.17/lib/schemas/Dimension.js","../../mcschema/java/1.17/lib/schemas/DimensionType.js","../../mcschema/java/1.17/lib/schemas/ItemModifier.js","../../mcschema/java/1.17/lib/schemas/LootTable.js","../../mcschema/java/1.17/lib/schemas/PackMcmeta.js","../../mcschema/java/1.17/lib/schemas/Predicates.js","../../mcschema/java/1.17/lib/schemas/Recipe.js","../../mcschema/java/1.17/lib/schemas/Tags.js","../../mcschema/java/1.17/lib/schemas/TextComponent.js","../../mcschema/java/1.17/lib/schemas/WorldSettings.js","../../mcschema/java/1.17/lib/schemas/index.js","../../mcschema/java/1.17/lib/schemas/worldgen/Biome.js","../../mcschema/java/1.17/lib/schemas/worldgen/Carver.js","../../mcschema/java/1.17/lib/schemas/worldgen/Decorator.js","../../mcschema/java/1.17/lib/schemas/worldgen/Feature.js","../../mcschema/java/1.17/lib/schemas/worldgen/NoiseSettings.js","../../mcschema/java/1.17/lib/schemas/worldgen/ProcessorList.js","../../mcschema/java/1.17/lib/schemas/worldgen/StructureFeature.js","../../mcschema/java/1.17/lib/schemas/worldgen/SurfaceBuilder.js","../../mcschema/java/1.17/lib/schemas/worldgen/TemplatePool.js","../../mcschema/java/1.17/lib/schemas/worldgen/index.js","../external \"child_process\"","../external \"crypto\"","../external \"fs\"","../external \"https\"","../external \"module\"","../external \"net\"","../external \"os\"","../external \"path\"","../external \"url\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,wBAAwB,mBAAO,CAAC,kFAAmB;AACnD,uDAAuD,qCAAqC,sCAAsC,EAAE,EAAE;AACtI;AACA;AACA;AACA;AACA;AACA,qFAAqF,iGAAQ,cAAc,EAAE,QAAQ,CAAC,CAAC;AACvH;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC3Ca;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,sEAAgB;AAC9C,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,8BAA8B,mBAAO,CAAC,sGAAgC;AACtE,oCAAoC,mBAAO,CAAC,kHAAsC;AAClF,+CAA+C,mBAAO,CAAC,wIAAiD;AACxG,sCAAsC,mBAAO,CAAC,sHAAwC;AACtF,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,4BAA4B,mBAAO,CAAC,kGAA8B;AAClE,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,oCAAoC,mBAAO,CAAC,kHAAsC;AAClF,kCAAkC,mBAAO,CAAC,8GAAoC;AAC9E,2CAA2C,mBAAO,CAAC,gIAA6C;AAChG,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,uCAAuC,mBAAO,CAAC,wHAAyC;AACxF,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,4BAA4B,mBAAO,CAAC,kGAA8B;AAClE,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,sCAAsC,mBAAO,CAAC,sHAAwC;AACtF,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO,GAAG,cAAc;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,sEAAsE,OAAO;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjyCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjiCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,eAAe;AACliCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9hFa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,sBAAsB,mBAAO,CAAC,sEAAgB;AAC9C,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,8BAA8B,mBAAO,CAAC,sGAAgC;AACtE,oCAAoC,mBAAO,CAAC,kHAAsC;AAClF,+CAA+C,mBAAO,CAAC,wIAAiD;AACxG,sCAAsC,mBAAO,CAAC,sHAAwC;AACtF,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,4BAA4B,mBAAO,CAAC,kGAA8B;AAClE,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,oCAAoC,mBAAO,CAAC,kHAAsC;AAClF,kCAAkC,mBAAO,CAAC,8GAAoC;AAC9E,2CAA2C,mBAAO,CAAC,gIAA6C;AAChG,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,uCAAuC,mBAAO,CAAC,wHAAyC;AACxF,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,4BAA4B,mBAAO,CAAC,kGAA8B;AAClE,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,sCAAsC,mBAAO,CAAC,sHAAwC;AACtF,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA,0EAA0E,qEAAqE;AAC/I;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,sEAAsE,OAAO;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA,0EAA0E,qEAAqE;AAC/I;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qEAAqE;AACvJ;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qEAAqE;AACvJ;AACA,qCAAqC;AACrC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjyCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjiCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzyCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,OAAO;AAC5E;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA,kFAAkF,qEAAqE;AACvJ;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACl1Fa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,sBAAsB,mBAAO,CAAC,sEAAgB;AAC9C,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,8BAA8B,mBAAO,CAAC,sGAAgC;AACtE,oCAAoC,mBAAO,CAAC,kHAAsC;AAClF,+CAA+C,mBAAO,CAAC,wIAAiD;AACxG,sCAAsC,mBAAO,CAAC,sHAAwC;AACtF,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,4BAA4B,mBAAO,CAAC,kGAA8B;AAClE,gCAAgC,mBAAO,CAAC,0GAAkC;AAC1E,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,oCAAoC,mBAAO,CAAC,kHAAsC;AAClF,kCAAkC,mBAAO,CAAC,8GAAoC;AAC9E,2CAA2C,mBAAO,CAAC,gIAA6C;AAChG,iCAAiC,mBAAO,CAAC,4GAAmC;AAC5E,uCAAuC,mBAAO,CAAC,wHAAyC;AACxF,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,4BAA4B,mBAAO,CAAC,kGAA8B;AAClE,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,sCAAsC,mBAAO,CAAC,sHAAwC;AACtF,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,6BAA6B,mBAAO,CAAC,oGAA+B;AACpE,+BAA+B,mBAAO,CAAC,wGAAiC;AACxE,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA,0EAA0E,qEAAqE;AAC/I;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,sEAAsE,OAAO;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA,0EAA0E,qEAAqE;AAC/I;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qEAAqE;AACvJ;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qEAAqE;AACvJ;AACA,qCAAqC;AACrC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjyCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjiCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA,kFAAkF,yGAAyG;AAC3L;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA,0FAA0F,yGAAyG;AACnM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzyCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,OAAO;AAC5E;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA,kFAAkF,qEAAqE;AACvJ;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACx5Fa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,oBAAoB,mBAAO,CAAC,+DAAqB;AACjD,oCAAoC,mBAAO,CAAC,kFAAW;AACvD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,sBAAsB,mBAAO,CAAC,0EAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA,eAAe,6BAA6B,mDAAmD,uHAAQ,GAAW,EAAE,GAAG,cAAc,CAAC;AACtI;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGa;AACb;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,sEAAO;AAC/C,aAAa,mBAAO,CAAC,cAAI;AACzB,+BAA+B,mBAAO,CAAC,kBAAM;AAC7C,gBAAgB,mBAAO,CAAC,gEAAU;AAClC;AACA;AACA,kCAAkC,mBAAO,CAAC,yFAAwB;AAClE,mCAAmC,mBAAO,CAAC,2FAAyB;AACpE,yBAAyB,mBAAO,CAAC,uEAAe;AAChD,2BAA2B,mBAAO,CAAC,2EAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAA6D;AACvF,2BAA2B,8DAA8D;AACzF,iBAAiB,oDAAoD;AACrE,mBAAmB;AACnB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gDAAgD,WAAW,GAAG,KAAK,GAAG,KAAK;AAC3E,QAAQ;AACR,gDAAgD,KAAK,OAAO,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,sCAAsC;AACtG;AACA;AACA,gEAAgE,QAAQ;AACxE;AACA;AACA;AACA,yEAAyE,kCAAkC,QAAQ,UAAU;AAC7H;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,QAAQ,MAAM;AAChH;AACA;AACA;AACA,gEAAgE,sCAAsC;AACtG;AACA;AACA,gEAAgE,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,KAAK;AACxF;AACA;AACA,sDAAsD,KAAK,OAAO,QAAQ,4BAA4B,uCAAuC,kBAAkB,GAAG;AAClK;AACA,sDAAsD,KAAK,OAAO,QAAQ;AAC1E;AACA;AACA;AACA;AACA;AACA,sDAAsD,KAAK,OAAO,QAAQ,kBAAkB,OAAO,GAAG,IAAI;AAC1G;AACA;AACA;AACA,kDAAkD,gCAAgC,EAAE;AACpF,6BAA6B;AAC7B;AACA;AACA,sDAAsD,KAAK,OAAO,QAAQ,iBAAiB,OAAO;AAClG;AACA,oEAAoE,kBAAkB;AACtF,oEAAoE,mBAAmB;AACvF,0DAA0D,KAAK,OAAO,QAAQ,aAAa,uCAAuC,kBAAkB,GAAG;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,KAAK,OAAO,QAAQ,IAAI,EAAE,IAAI,aAAa,GAAG,cAAc;AAC9G,kDAAkD,KAAK,OAAO,QAAQ;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACxJa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAO,CAAC,mEAAW;AAClD,gCAAgC,mBAAO,CAAC,+GAAoC;AAC5E,2DAA2D,qCAAqC,0DAA0D,EAAE,EAAE;AAC9J,aAAa,mBAAO,CAAC,+DAAS;;;;;;;;;;;;AChC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5Ba;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,kCAAkC,mBAAO,CAAC,kEAAW;AACrD,kCAAkC,mBAAO,CAAC,sEAA+B;AACzE;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4IAA4I,IAAI;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uEAAuE,gGAAQ,GAAG,EAAE,KAAK,MAAM,CAAC;AAChG,2EAA2E,uHAAQ,GAAuB,EAAE,KAAK,MAAM,CAAC;AACxH,sDAAsD;AACtD;AACA,uCAAuC,KAAK;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,oBAAoB,mBAAO,CAAC,8EAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAyD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Fa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,yBAAyB,mBAAO,CAAC,iFAAkB;AACnD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,0BAA0B,mBAAO,CAAC,mFAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG,EAAE,OAAO,EAAE,IAAI;AACpC;AACA;AACA;;;;;;;;;;;;;ACxBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,gCAAgC,mBAAO,CAAC,+FAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc,EAAE,sDAAsD;AAC7F;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;;;;;;;;;;;;;AC1Ca;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,oCAAoC,mBAAO,CAAC,kFAAW;AACvD,4BAA4B,mBAAO,CAAC,kBAAM;AAC1C,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,oBAAoB,mBAAO,CAAC,8EAAoB;AAChD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB,EAAE,gCAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+BAA+B,EAAE,mBAAmB;AACtE;AACA;AACA;AACA;AACA;AACA,kBAAkB,gCAAgC,EAAE,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB,EAAE,+BAA+B,EAAE,mBAAmB;AAChG;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB,EAAE,gCAAgC,EAAE,mBAAmB;AACjG;AACA;AACA;AACA;AACA,oBAAoB,eAAe,EAAE,gCAAgC,EAAE,qCAAqC;AAC5G;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB,EAAE,GAAG;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK,EAAE,WAAW,EAAE,oBAAoB,EAAE,WAAW,EAAE,iBAAiB,EAAE,WAAW,EAAE,2BAA2B,EAAE,IAAI;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,SAAS;AAC1F,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpRa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,0BAA0B,mBAAO,CAAC,mFAAmB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG,EAAE,IAAI;AAC3B;AACA;AACA;;;;;;;;;;;;;ACtBa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,oBAAoB,mBAAO,CAAC,8EAAoB;AAChD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK,EAAE,QAAQ;AACrC;AACA;AACA,sBAAsB,QAAQ,EAAE,KAAK;AACrC;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO,EAAE,KAAK,EAAE,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gIAAgI,IAAI,EAAE,IAAI,EAAE,uCAAuC;AACnL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK,EAAE,cAAc,EAAE,MAAM;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ha;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,4BAA4B,mBAAO,CAAC,uFAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,kBAAkB,uBAAuB,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,kBAAkB,MAAM,EAAE;AAC7G;AACA;AACA;;;;;;;;;;;;;ACpBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,wBAAwB,mBAAO,CAAC,+EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,kBAAkB,mBAAO,CAAC,mEAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK,EAAE,cAAc,EAAE,MAAM;AAC/C;AACA;AACA;;;;;;;;;;;;;ACjDa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,kBAAkB,mBAAO,CAAC,gGAA6B;AACvD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,0BAA0B,mBAAO,CAAC,mFAAmB;AACrD,sBAAsB,mBAAO,CAAC,2EAAe;AAC7C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,wBAAwB,mBAAO,CAAC,+EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,kBAAkB,mBAAO,CAAC,gGAA6B;AACvD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,kBAAkB,mBAAO,CAAC,mEAAW;AACrC;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,wBAAwB,mBAAO,CAAC,+EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;;;;;;;;;;;;;AC1B1D;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,wBAAwB,mBAAO,CAAC,+EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;;;;;;;;;;;;;ACpBvD;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,wBAAwB,mBAAO,CAAC,+EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;;;;;;;;;;;;;ACxBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,4BAA4B,mBAAO,CAAC,uFAAqB;AACzD,kBAAkB,mBAAO,CAAC,mEAAW;AACrC;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,wBAAwB,mBAAO,CAAC,+EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,2BAA2B,mBAAO,CAAC,qFAAoB;AACvD;AACA;AACA;AACA,kBAAkB,KAAK,EAAE,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,SAAS;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ba;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,mEAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,wBAAwB,mBAAO,CAAC,+EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;;;;;;;;;;;;;ACpBvD;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,wBAAwB,mBAAO,CAAC,4GAAmC;AACnE,kBAAkB,mBAAO,CAAC,gGAA6B;AACvD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,2BAA2B,mBAAO,CAAC,qFAAoB;AACvD,qBAAqB,mBAAO,CAAC,yEAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0IAA0I,wDAAwD;AAClM;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ca;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0CAA0C,IAAI,0CAA0C;AAC9G;AACA;AACA;AACA;;;;;;;;;;;;;ACxBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gDAAgD,EAAE,iBAAiB,mDAAmD,OAAO;AAC/I;AACA;AACA;;;;;;;;;;;;;ACjBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,kBAAkB,mBAAO,CAAC,mEAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB,EAAE,IAAI,GAAG,uCAAuC;AACvF;AACA,kBAAkB,IAAI,EAAE,IAAI,EAAE,uCAAuC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvHa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,qBAAqB,mBAAO,CAAC,yEAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS,EAAE,UAAU;AAC3C;AACA;AACA;AACA;;;;;;;;;;;;;ACrBa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,qBAAqB,mBAAO,CAAC,yEAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,MAAM;AAClE;AACA;AACA,aAAa;AACb;AACA,4DAA4D,MAAM;AAClE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChHa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,uEAAa;AAClC,aAAa,mBAAO,CAAC,iFAAkB;AACvC,aAAa,mBAAO,CAAC,yEAAc;AACnC,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,qEAAY;AACjC,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,qEAAY;AACjC,aAAa,mBAAO,CAAC,mEAAW;AAChC,aAAa,mBAAO,CAAC,2EAAe;AACpC,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,qFAAoB;AACzC,aAAa,mBAAO,CAAC,2EAAe;AACpC,aAAa,mBAAO,CAAC,uFAAqB;AAC1C,aAAa,mBAAO,CAAC,yFAAsB;AAC3C,aAAa,mBAAO,CAAC,mFAAmB;AACxC,aAAa,mBAAO,CAAC,+EAAiB;AACtC,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,mFAAmB;AACxC,aAAa,mBAAO,CAAC,yEAAc;AACnC,aAAa,mBAAO,CAAC,2EAAe;AACpC,aAAa,mBAAO,CAAC,qFAAoB;AACzC,aAAa,mBAAO,CAAC,2EAAe;AACpC,aAAa,mBAAO,CAAC,mEAAW;AAChC,aAAa,mBAAO,CAAC,+EAAiB;AACtC,aAAa,mBAAO,CAAC,2EAAe;AACpC,aAAa,mBAAO,CAAC,qFAAoB;AACzC,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,+EAAiB;AACtC,aAAa,mBAAO,CAAC,yEAAc;AACnC,aAAa,mBAAO,CAAC,mFAAmB;AACxC,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,+FAAyB;AAC9C,aAAa,mBAAO,CAAC,yEAAc;AACnC,aAAa,mBAAO,CAAC,+EAAiB;AACtC,aAAa,mBAAO,CAAC,qEAAY;AACjC,aAAa,mBAAO,CAAC,yEAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;;;;;;;;;;;;AC7Ea;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO,EAAE,KAAK,IAAI,kCAAkC,cAAc,GAAG,EAAE,OAAO;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,oBAAoB,mBAAO,CAAC,8EAAoB;AAChD,yBAAyB,mBAAO,CAAC,wFAAyB;AAC1D,kBAAkB,mBAAO,CAAC,0EAAkB;AAC5C,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD,oBAAoB,mBAAO,CAAC,yEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yDAAyD;AACzD;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;;;;;;;;;;;;;ACrFa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B,WAAW,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,sBAAsB,mBAAO,CAAC,sEAAgB;AAC9C,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,+CAA+C;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAiD;AAC5F;AACA;AACA;AACA;AACA;AACA,sEAAsE,+CAA+C;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,mEAAmE,0EAA0E;AAC7I;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA2C;AAC9D;AACA;AACA,oDAAoD,8BAA8B;AAClF,wGAAwG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,uGAAuG,wCAAwC,4BAA4B,EAAE,IAAI,qCAAqC;AACtN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,+CAA+C;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,wCAAwC;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,wCAAwC;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,4BAA4B;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,qCAAqC;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,4BAA4B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,SAAS,aAAa;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Sa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,iDAAiD,wBAAwB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,wBAAwB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Da;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,kBAAkB,mBAAO,CAAC,0EAAkB;AAC5C,gCAAgC,mBAAO,CAAC,sGAAgC;AACxE,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD,oBAAoB,mBAAO,CAAC,yEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,wBAAwB;AACrF;AACA;AACA;AACA,iEAAiE,mCAAmC;AACpG;AACA;AACA;AACA,iEAAiE,mCAAmC;AACpG;AACA;AACA;AACA,iEAAiE,mCAAmC;AACpG;AACA;AACA;AACA,6DAA6D,mCAAmC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mCAAmC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,mCAAmC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,IAAI;AACtC;AACA,0CAA0C,uDAAuD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,YAAY,YAAY;AAC7E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,YAAY,YAAY;AACrF,qBAAqB;AACrB,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY,aAAa;AAC9F,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,KAAK;;;;;;;;;;;;;ACrW9F;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6DAA6D;AAC5E;AACA;AACA;AACA;AACA,UAAU,4CAA4C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,4BAA4B;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,4BAA4B;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU,EAAE,+CAA+C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,6CAA6C;AAC1F;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,sCAAsC,EAAE,eAAe;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,sCAAsC,EAAE,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,KAAK;AACxF;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+CAA+C,KAAK,oCAAoC;AAClH;AACA;AACA;AACA;;;;;;;;;;;;;AClea;AACb,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,mBAAmB,mBAAO,CAAC,4EAAmB;AAC9C,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,wBAAwB,mBAAO,CAAC,sFAAwB;AACxD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,gCAAgC;AAChC;AACA,oIAAoI;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;;;;;;;;;;;;;AC5Ca;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,uCAAuC,mBAAO,CAAC,yFAAc;AAC7D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS,EAAE,2BAA2B,EAAE,IAAI;AAC1E;AACA;AACA;AACA;AACA,qEAAqE,+CAA+C;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClEa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,MAAM,EAAE,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,0CAA0C;AACzG;AACA;AACA,+DAA+D,+BAA+B;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFa;AACb,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,kBAAkB,mBAAO,CAAC,0EAAkB;AAC5C,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,+BAA+B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ea;AACb,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,kBAAkB,mBAAO,CAAC,0EAAkB;AAC5C,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,6BAA6B,mBAAO,CAAC,gGAA6B;AAClE,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,wBAAwB,mBAAO,CAAC,sFAAwB;AACxD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,kBAAkB,mBAAO,CAAC,0EAAkB;AAC5C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,wBAAwB,mBAAO,CAAC,sFAAwB;AACxD,iCAAiC,mBAAO,CAAC,wGAAiC;AAC1E,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD,oBAAoB,mBAAO,CAAC,yEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,KAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,sDAAsD,kBAAkB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,aAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,wBAAwB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;AACA;AACA;AACA,4EAA4E,aAAa;AACzF;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,8CAA8C;AAC9C;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kHAAkH;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,+CAA+C;AAC1G;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,4BAA4B;AACrG;AACA;AACA;AACA;AACA;AACA,yEAAyE,4BAA4B;AACrG;AACA;AACA;AACA;AACA;AACA,yEAAyE,4BAA4B;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,aAAa;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,gHAAgH;AAChH;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF,iEAAiE,wBAAwB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,4BAA4B;AACrG;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,0BAA0B,KAAK,SAAS;AACxC;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvda;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,6BAA6B,mBAAO,CAAC,gGAA6B;AAClE,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,oBAAoB,mBAAO,CAAC,8EAAoB;AAChD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,+CAA+C;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,+CAA+C;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,+CAA+C,sGAAsG,EAAE;AAC5N;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,wGAAwG,4BAA4B;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,+CAA+C;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA;AACA;;;;;;;;;;;;;ACrPa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,+CAA+C;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,+CAA+C;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA;AACA;AACA,kCAAkC,8DAA8D;AAChG;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClEa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,wBAAwB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mCAAmC;AAC1E;AACA;AACA;AACA;AACA;AACA,qEAAqE,mCAAmC;AACxG;AACA;AACA;AACA;AACA,iEAAiE,mCAAmC;AACpG;AACA;AACA,iEAAiE,mCAAmC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yGAAyG;AAC3I,uPAAuP,OAAO,yDAAyD;AACvT;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4IAA4I,OAAO,yDAAyD;AAC5M;AACA;AACA;AACA;AACA,qEAAqE,4BAA4B;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,2CAA2C;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFa;AACb,8CAA8C,cAAc;AAC5D;AACA,8BAA8B,mBAAO,CAAC,6FAAuB;AAC7D,+CAA+C,mBAAO,CAAC,+HAAwC;AAC/F,sCAAsC,mBAAO,CAAC,6GAA+B;AAC7E,+BAA+B,mBAAO,CAAC,+FAAwB;AAC/D,iCAAiC,mBAAO,CAAC,mGAA0B;AACnE,6BAA6B,mBAAO,CAAC,2FAAsB;AAC3D,iCAAiC,mBAAO,CAAC,mGAA0B;AACnE,gCAAgC,mBAAO,CAAC,iGAAyB;AACjE,gCAAgC,mBAAO,CAAC,iGAAyB;AACjE,4BAA4B,mBAAO,CAAC,yFAAqB;AACzD,gCAAgC,mBAAO,CAAC,iGAAyB;AACjE,+BAA+B,mBAAO,CAAC,+FAAwB;AAC/D,oCAAoC,mBAAO,CAAC,yGAA6B;AACzE,kCAAkC,mBAAO,CAAC,qGAA2B;AACrE,2CAA2C,mBAAO,CAAC,uHAAoC;AACvF,iCAAiC,mBAAO,CAAC,mGAA0B;AACnE,uCAAuC,mBAAO,CAAC,+GAAgC;AAC/E,+BAA+B,mBAAO,CAAC,+FAAwB;AAC/D,4BAA4B,mBAAO,CAAC,yFAAqB;AACzD,6BAA6B,mBAAO,CAAC,2FAAsB;AAC3D,sCAAsC,mBAAO,CAAC,6GAA+B;AAC7E,6BAA6B,mBAAO,CAAC,2FAAsB;AAC3D,6BAA6B,mBAAO,CAAC,2FAAsB;AAC3D,+BAA+B,mBAAO,CAAC,+FAAwB;AAC/D,oCAAoC,mBAAO,CAAC,yGAA6B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDa;AACb,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,eAAe,GAAG,eAAe,GAAG,eAAe;AAC1F;AACA;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,+CAA+C;AAChH;AACA;AACA;AACA;AACA;AACA,iHAAiH,gCAAgC,EAAE,EAAE;AACrJ;AACA;AACA;AACA,8BAA8B,SAAS,EAAE,gCAAgC,EAAE,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ca;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,4BAA4B;AACpF;AACA;AACA;AACA,gEAAgE,4BAA4B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sEAAsE;AAChH;AACA;AACA;AACA,0CAA0C,uDAAuD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnFa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,wBAAwB;AACrF;AACA;AACA;AACA;AACA,iEAAiE,mCAAmC;AACpG;AACA;AACA,iEAAiE,mCAAmC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,wBAAwB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mCAAmC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mCAAmC;AAC1E;AACA;AACA;AACA;AACA;AACA,qEAAqE,mCAAmC;AACxG;AACA;AACA;AACA;AACA,iEAAiE,mCAAmC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFa;AACb,8CAA8C,cAAc;AAC5D;AACA,sCAAsC,mBAAO,CAAC,wIAA6B;AAC3E,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,wBAAwB,mBAAO,CAAC,sFAAwB;AACxD,iBAAiB,mBAAO,CAAC,8EAAoB;AAC7C,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,iEAAiE,mEAAmE;AACpI;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,mBAAmB,mBAAO,CAAC,4EAAmB;AAC9C,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,4BAA4B;AAC7F;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kFAAM;AAC7B,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU,KAAK;;;;;;;;;;;;;AC1CxF;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,yBAAyB,mBAAO,CAAC,mFAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,6BAA6B,KAAK;AAClC,kCAAkC,KAAK,GAAG,EAAE;AAC5C;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,4BAA4B;AACjG;AACA;AACA;AACA,iEAAiE,wBAAwB;AACzF;AACA;AACA;AACA,6DAA6D,wBAAwB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,4BAA4B;AACjG;AACA;AACA,qEAAqE,4BAA4B;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnLa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,uFAAoB;;;;;;;;;;;;ACZzC;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,kF;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,GAAG;AACjD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACda;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,GAAG;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Ca;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iDAAiD;;;;;;;;;;;;;ACfrC;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,cAAI;AACzB,eAAe,mBAAO,CAAC,kBAAM;AAC7B,WAAW,mBAAO,CAAC,2DAAG;AACtB,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,0BAA0B,mBAAO,CAAC,qFAAmB;AACrD,6BAA6B,mBAAO,CAAC,2FAAsB;AAC3D,iBAAiB,mBAAO,CAAC,mEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,mBAAO,CAAC,uGAA4B;AACjH,6EAA6E,mBAAO,CAAC,uGAA4B;AACjH;AACA;AACA;AACA;AACA,kFAAkF,kDAAkD,8EAAkC,yBAAyB,CAAC,GAAG,EAAE;AACrM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,4BAA4B;AACvG;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iCAAiC;AAC5E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;AC5Ga;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,gEAAU;AAClC;AACA;AACA,4CAA4C;AAC5C;AACA,8BAA8B,qEAAqE,uBAAuB,EAAE;AAC5H;AACA;AACA,CAAC,4EAA4E;;;;;;;;;;;;;ACXhE;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,YAAY,mBAAO,CAAC,uDAAO;AAC3B,kBAAkB,mBAAO,CAAC,uEAAe;AACzC,gBAAgB,mBAAO,CAAC,mEAAa;AACrC,gBAAgB,mBAAO,CAAC,mEAAa;AACrC,uBAAuB,mBAAO,CAAC,uFAA0B;AACzD,2BAA2B,mBAAO,CAAC,+FAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,4BAA4B;AACnG;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,qCAAqC;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iJAAiJ,OAAO,2DAA2D;AACnN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS,SAAS,4BAA4B,cAAc;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wCAAwC;AACvF;AACA;AACA;AACA,mDAAmD,gDAAgD;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,+BAA+B;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnSa;AACb;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,YAAY,mBAAO,CAAC,uDAAO;AAC3B,wBAAwB,mBAAO,CAAC,6FAA6B;AAC7D,uBAAuB,mBAAO,CAAC,uFAA0B;AACzD;AACA;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,6EAAe;AACpC,aAAa,mBAAO,CAAC,mFAAkB;AACvC,aAAa,mBAAO,CAAC,2FAAsB;AAC3C,aAAa,mBAAO,CAAC,mEAAU;AAC/B,aAAa,mBAAO,CAAC,qFAAmB;;;;;;;;;;;;;AChB3B;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,uCAAuC,mBAAO,CAAC,wFAAc;AAC7D,wBAAwB,mBAAO,CAAC,cAAI;AACpC,aAAa,mBAAO,CAAC,cAAI;AACzB,+BAA+B,mBAAO,CAAC,kBAAM;AAC7C,+BAA+B,mBAAO,CAAC,oEAAM;AAC7C,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,qBAAqB,mBAAO,CAAC,wFAAY;AACzC,WAAW,mBAAO,CAAC,mDAAG;AACtB,kBAAkB,mBAAO,CAAC,mEAAW;AACrC,gBAAgB,mBAAO,CAAC,+DAAS;AACjC,uBAAuB,mBAAO,CAAC,uFAAwB;AACvD,iBAAiB,mBAAO,CAAC,6EAAmB;AAC5C,kCAAkC,mBAAO,CAAC,+GAAoC;AAC9E,gBAAgB,mBAAO,CAAC,+DAAS;AACjC,sBAAsB,mBAAO,CAAC,iFAAqB;AACnD,iBAAiB,mBAAO,CAAC,uEAAgB;AACzC,gBAAgB,mBAAO,CAAC,+DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2CAA2C,iEAAiE,iCAAiC;AACvK;AACA;AACA;AACA;AACA;AACA,sDAAsD,kBAAkB;AACxE;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2BAA2B;AAC7E,yDAAyD,uBAAuB;AAChF,uDAAuD,kBAAkB;AACzE,+CAA+C,UAAU;AACzD,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA,SAAS;AACT;AACA,gCAAgC,iCAAiC,YAAY,GAAG;AAChF;AACA;AACA,SAAS;AACT;AACA;AACA,qGAAqG,sBAAsB;AAC3H;AACA;AACA,4FAA4F,qBAAqB,yBAAyB,GAAG;AAC7I;AACA;AACA,2FAA2F,qBAAqB,yBAAyB,GAAG;AAC5I;AACA;AACA,sFAAsF,qBAAqB,yBAAyB,GAAG;AACvI;AACA;AACA,wFAAwF,qBAAqB,yBAAyB,GAAG;AACzI;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,uBAAuB;AACnH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD,mCAAmC,gBAAgB,oDAAoD,EAAE;AACzG;AACA;AACA,oEAAoE,sFAAsF,aAAa,EAAE,GAAG;AAC5K;AACA;AACA,CAAC;AACD,qCAAqC,gCAAgC,0BAA0B,EAAE;AACjG;AACA;AACA;AACA,CAAC;AACD,oCAAoC,gBAAgB,iBAAiB,EAAE;AACvE;AACA;AACA,CAAC;AACD,0FAA0F,iCAAiC,EAAE;AAC7H,qCAAqC,UAAU;AAC/C,2BAA2B,0BAA0B;AACrD,2BAA2B,wBAAwB;AACnD,gBAAgB,uBAAuB;AACvC;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,IAAI;AAC9D;AACA,mFAAmF,UAAU;AAC7F;AACA,oDAAoD,uBAAuB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD,CAAC;AACD,0BAA0B,gBAAgB,iBAAiB,qBAAqB;AAChF;AACA;AACA;AACA,CAAC;AACD,6BAA6B,gBAAgB,iBAAiB,YAAY;AAC1E;AACA;AACA,CAAC;AACD,6BAA6B,gBAAgB,iBAAiB,EAAE;AAChE;AACA;AACA,CAAC;AACD,qBAAqB,gBAAgB,iBAAiB,YAAY;AAClE;AACA;AACA,CAAC;AACD,kCAAkC,gBAAgB,iBAAiB,EAAE;AACrE;AACA;AACA,CAAC;AACD,2BAA2B,gBAAgB,iBAAiB,YAAY;AACxE;AACA;AACA,CAAC;AACD,0BAA0B,gBAAgB,iBAAiB,YAAY;AACvE;AACA;AACA,CAAC;AACD,0BAA0B,gBAAgB,iBAAiB,YAAY;AACvE;AACA;AACA,CAAC;AACD,iCAAiC,gBAAgB,iBAAiB,YAAY;AAC9E;AACA;AACA,CAAC;AACD,+BAA+B,gBAAgB,iBAAiB,aAAa;AAC7E;AACA;AACA,CAAC;AACD,0BAA0B,gBAAgB,iBAAiB,mBAAmB,cAAc,EAAE;AAC9F;AACA;AACA,CAAC;AACD,+CAA+C,0BAA0B,iBAAiB,EAAE;AAC5F;AACA;AACA,CAAC;AACD,qDAAqD,OAAO;AAC5D;AACA,CAAC;AACD,qDAAqD,OAAO;AAC5D;AACA,CAAC;AACD,6BAA6B,gBAAgB,iBAAiB,YAAY;AAC1E;AACA;AACA,CAAC;AACD,6BAA6B,gBAAgB,iBAAiB,qBAAqB;AACnF;AACA;AACA,CAAC;AACD,6BAA6B,gBAAgB,iBAAiB,EAAE;AAChE;AACA;AACA,CAAC;AACD,6BAA6B,gBAAgB,iBAAiB,EAAE;AAChE;AACA;AACA,CAAC;AACD,iCAAiC,gBAAgB,iBAAiB,gBAAgB;AAClF;AACA;AACA,CAAC;AACD,yCAAyC,gBAAgB,iBAAiB,EAAE;AAC5E;AACA;AACA,CAAC;AACD,8CAA8C,gBAAgB,iBAAiB,oBAAoB;AACnG;AACA;AACA,CAAC;AACD,8BAA8B,2BAA2B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,QAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,IAAI;AAC3F;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,QAAQ;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,aAAa,MAAM,eAAe;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gCAAgC,EAAE;AACxE,iBAAiB;AACjB;AACA,mBAAmB,UAAU,oBAAoB,YAAY;AAC7D;AACA;AACA;AACA,2CAA2C,sEAAsE;AACjH;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA,8DAA8D,oBAAoB;AAClF;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,8CAA8C,eAAe;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0FAA0F,mBAAmB;AAC7G;AACA,KAAK;AACL;AACA;AACA;AACA,wEAAwE,mBAAmB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,cAAc;AAChE,kDAAkD,cAAc;AAChE,kDAAkD,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC5lBY;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,+BAA+B,mBAAO,CAAC,oEAAM;AAC7C,8BAA8B,mBAAO,CAAC,kGAAqB;AAC3D,sCAAsC,mBAAO,CAAC,wIAA6B;AAC3E,yBAAyB,mBAAO,CAAC,yGAAuB;AACxD,6CAA6C,mBAAO,CAAC,uIAAoC;AACzF,WAAW,mBAAO,CAAC,4DAAG;AACtB,sBAAsB,mBAAO,CAAC,gFAAqB;AACnD,qBAAqB,mBAAO,CAAC,8EAAoB;AACjD,sBAAsB,mBAAO,CAAC,gFAAqB;AACnD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,wFAAyB;AACxD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,iBAAiB,mBAAO,CAAC,oEAAU;AACnC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,KAAK,GAAG,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yIAAyI,+DAA+D;AACxM;AACA;AACA,+LAA+L,8BAA8B,EAAE;AAC/N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK,GAAG,GAAG;AACnD;AACA;AACA;AACA,2BAA2B,KAAK,GAAG,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,6CAA6C,EAAE;AAC7H,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,mEAAmE;AACrK,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,wFAAwF,kCAAkC,EAAE;AAC5H,oEAAoE,sCAAsC;AAC1G,4BAA4B;AAC5B;AACA;AACA;AACA,oDAAoD,IAAI;AACxD;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,kFAAkF;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,8DAA8D;AAC3H;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,kFAAkF;AACzG,wCAAwC,iGAAiG;AACzI;AACA,6BAA6B,8DAA8D;AAC3F;AACA;AACA,2BAA2B,sEAAsE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA,+CAA+C,sEAAsE;AACrH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oHAAoH;AACtK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0HAA0H;AACjL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,wCAAwC,mFAAmF;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,+BAA+B;AACzF;AACA;AACA;AACA;AACA,yFAAyF,oFAAoF,yEAAyE;AACtP;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,uCAAuC,mFAAmF;AAC1H,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,0DAA0D,+BAA+B;AACzF,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,oCAAoC,gDAAgD;AACpF,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,2CAA2C,uCAAuC;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0BAA0B;AACnE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kFAAkF;AAC1H;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,8CAA8C,uCAAuC;AACrF,SAAS;AACT;AACA,kCAAkC,iBAAiB;AACnD;AACA,oDAAoD,0BAA0B;AAC9E,SAAS;AACT;AACA,kCAAkC,WAAW;AAC7C;AACA,oDAAoD,oBAAoB;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,uCAAuC,wBAAwB;AAC/D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,kDAAkD,uCAAuC;AACzF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,eAAe;AACtD,SAAS;AACT;AACA,qCAAqC,sCAAsC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kCAAkC;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wCAAwC,wBAAwB;AAChE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,6CAA6C,0CAA0C;AACvF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,yBAAyB;AACzB;AACA,2CAA2C,yCAAyC;AACpF;AACA,4CAA4C,SAAS,wBAAwB,QAAQ,wBAAwB,EAAE;AAC/G;AACA,iCAAiC;AACjC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,KAAK,GAAG,GAAG;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA,oEAAoE,yDAAyD;AAC7H;AACA;AACA;AACA;AACA;AACA,uFAAuF,4FAA4F;AACnL;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,2DAA2D,wCAAwC;AACnG,qCAAqC,SAAS,wBAAwB,QAAQ,sCAAsC;;;;;;;;;;;;;AC94BvG;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,gBAAgB,mBAAO,CAAC,mEAAa;AACrC,gBAAgB,mBAAO,CAAC,mEAAa;AACrC,iBAAiB,mBAAO,CAAC,qEAAW;AACpC,uBAAuB,mBAAO,CAAC,iFAAiB;AAChD,gCAAgC,eAAe;AAC/C;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,yDAAyD,eAAe;AACxE;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,6BAA6B,GAAG,yCAAyC;AACnI,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3Ga;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,2GAAyB;;;;;;;;;;;;;ACZjC;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,aAAa,mBAAO,CAAC,cAAI;AACzB,oCAAoC,mBAAO,CAAC,kFAAW;AACvD,+BAA+B,mBAAO,CAAC,kBAAM;AAC7C,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,6CAA6C,mBAAO,CAAC,uIAAoC;AACzF,qBAAqB,mBAAO,CAAC,wFAAY;AACzC,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS,GAAG,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sFAAsF,YAAY;AAClG;AACA,6EAA6E,YAAY;AACzF;AACA;AACA;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA,wBAAwB,2FAA2F;AACnH,+BAA+B,mEAAmE;AAClG,+CAA+C,8DAA8D;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sEAAsE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qDAAqD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,cAAc,UAAU,uBAAuB;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACxPa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,8EAAY;AACjC,aAAa,mBAAO,CAAC,gHAAgC;AACrD,aAAa,mBAAO,CAAC,gHAAgC;AACrD,aAAa,mBAAO,CAAC,oGAA0B;AAC/C,aAAa,mBAAO,CAAC,gFAAgB;AACrC,aAAa,mBAAO,CAAC,8FAAuB;AAC5C,aAAa,mBAAO,CAAC,gFAAgB;AACrC,aAAa,mBAAO,CAAC,gFAAgB;AACrC,aAAa,mBAAO,CAAC,sGAA2B;AAChD,aAAa,mBAAO,CAAC,oGAA0B;AAC/C,aAAa,mBAAO,CAAC,sFAAmB;AACxC,aAAa,mBAAO,CAAC,gGAAwB;AAC7C,aAAa,mBAAO,CAAC,8FAAuB;AAC5C,aAAa,mBAAO,CAAC,sFAAmB;AACxC,aAAa,mBAAO,CAAC,sFAAmB;AACxC,aAAa,mBAAO,CAAC,sEAAW;AAChC,aAAa,mBAAO,CAAC,sFAAmB;AACxC,aAAa,mBAAO,CAAC,sFAAmB;AACxC,aAAa,mBAAO,CAAC,0FAAqB;AAC1C,aAAa,mBAAO,CAAC,wFAAoB;AACzC,aAAa,mBAAO,CAAC,kGAAyB;AAC9C,aAAa,mBAAO,CAAC,sFAAmB;;;;;;;;;;;;;ACjC3B;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iCAAiC,mBAAO,CAAC,oGAA0B;AACnE,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gDAAgD;AACxF,sCAAsC;AACtC,6BAA6B;AAC7B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACnDa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iCAAiC,mBAAO,CAAC,oGAA0B;AACnE,uCAAuC,cAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gDAAgD;AAChG,8CAA8C;AAC9C,qCAAqC;AACrC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACnDa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,iCAAiC,iCAAiC;AAClE;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD,kBAAkB;AAClB,SAAS;AACT;AACA,oBAAoB,oCAAoC;AACxD,kBAAkB;AAClB,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3Da;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,YAAY,mBAAO,CAAC,oDAAI;AACxB,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,oBAAoB,mBAAO,CAAC,8EAAoB;AAChD,iBAAiB,mBAAO,CAAC,oEAAU;AACnC,uBAAuB,iDAAiD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,mBAAmB,wBAAwB;AAC3C,mBAAmB,sBAAsB;AACzC,yDAAyD,eAAe;AACxE,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,MAAM;AAC9F;AACA,wFAAwF,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,iFAAiF,UAAU,aAAa,GAAG,0DAA0D,GAAG,UAAU,WAAW,uDAAuD,EAAE,YAAY,WAAW,OAAO;AACpX;AACA;AACA;AACA;;;;;;;;;;;;;AChFa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG;AAC3G;AACA;AACA,sBAAsB,0BAA0B,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG;AACrH;AACA;AACA;AACA;AACA,8CAA8C,IAAI;AAClD;AACA,sBAAsB,YAAY,SAAS,EAAE,SAAS,EAAE,SAAS,GAAG;AACpE;AACA;AACA,sBAAsB,WAAW,+EAA+E,GAAG;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,iBAAiB,mBAAO,CAAC,oEAAU;AACnC,uBAAuB,uDAAuD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,sFAAsF,2EAA2E;AAC5P;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AClDa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,6CAA6C,mBAAO,CAAC,uIAAoC;AACzF,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,iBAAiB,mBAAO,CAAC,oEAAU;AACnC;AACA;AACA;AACA,kCAAkC,+EAA+E;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oCAAoC;AACzD,uBAAuB,kCAAkC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC/Da;AACb,8CAA8C,cAAc;AAC5D;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,iBAAiB,mBAAO,CAAC,oEAAU;AACnC,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;AClBa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,4BAA4B,mBAAO,CAAC,0FAAqB;AACzD,8BAA8B,uCAAuC;AACrE;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,QAAQ,qEAAqE,EAAE;AAClK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,sCAAsC;AACxF;AACA;;;;;;;;;;;;;AChCa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,8FAA8F;AAC9F;AACA;AACA,6GAA6G;AAC7G;AACA,yFAAyF,QAAQ,qEAAqE,EAAE;AACxK;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,8CAA8C,oDAAoD;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AClDa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,iBAAiB,mBAAO,CAAC,oEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ea;AACb,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,gCAAgC;AACvD;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAA4C;AACxE,0BAA0B;AAC1B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,0BAA0B,wBAAwB;AAClD;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,+BAA+B,mBAAO,CAAC,kBAAM;AAC7C,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,0BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA,2DAA2D,iDAAiD;AAC5G;AACA;AACA;AACA,gEAAgE,gDAAgD;AAChH,8DAA8D;AAC9D;AACA,iDAAiD;AACjD,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,YAAY,GAAG,MAAM;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG,OAAO,OAAO,2BAA2B,EAAE,eAAe;AAC/J;AACA;AACA;AACA,8HAA8H,uBAAuB;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC1Ha;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBa;AACb,8CAA8C,cAAc;AAC5D;AACA,2BAA2B,wBAAwB;AACnD,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,gCAAgC,0CAA0C;AAC1E;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACba;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA,iBAAiB,mBAAO,CAAC,oEAAU;AACnC,0BAA0B,uDAAuD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,2DAA2D;AAC3D;AACA;AACA,kCAAkC,SAAS,GAAG,QAAQ,GAAG,WAAW;AACpE;AACA,6BAA6B,sCAAsC;AACnE,6BAA6B,oCAAoC;AACjE,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC1Da;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,+BAA+B,mBAAO,CAAC,oEAAM;AAC7C,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,oBAAoB,mBAAO,CAAC,uEAAa;AACzC;AACA,4BAA4B,UAAU,kBAAkB,SAAS,cAAcgCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qHAAqH;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAyD;AAC3E;AACA;AACA;AACA,kBAAkB,wBAAwB,UAAU,MAAM;AAC1D;AACA,sBAAsB,wBAAwB,sCAAsC,MAAM;AAC1F;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,cAAc,SAAS,QAAQ,GAAG,MAAM;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,+BAA+B,GAAG;AAClC,6BAA6B,GAAG;AAChC,+BAA+B,GAAG,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,oEAAoE,gEAAgE;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB,oBAAoB,iBAAiB,0EAA0E,EAAE;AACzK;AACA;AACA;AACA;;;;;;;;;;;;;AChWa;AACb,8CAA8C,cAAc;AAC5D;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D;AACA,YAAY,mBAAO,CAAC,oDAAI;AACxB,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,sBAAsB,mBAAO,CAAC,2EAAe;AAC7C;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,oCAAoC,mBAAO,CAAC,kFAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mCAAmC,YAAY;AAC/C,iCAAiC,sBAAsB;AACvD,iCAAiC,sBAAsB;AACvD;AACA;AACA,iCAAiC,YAAY;AAC7C,+BAA+B,sBAAsB;AACrD,mCAAmC,WAAW;AAC9C;AACA;AACA,oCAAoC,YAAY;AAChD,kCAAkC,sBAAsB;AACxD,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C,+BAA+B,sBAAsB;AACrD,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,+CAA+C,eAAe,GAAG,YAAY,KAAK,eAAe,GAAG,YAAY;AAChH,oEAAoE,sBAAsB,GAAG,mBAAmB,GAAG,2BAA2B,GAAG,sBAAsB,GAAG,mBAAmB;AAC7L,wDAAwD,eAAe,GAAG,YAAY,GAAG,IAAI;AAC7F,uBAAuB,SAAS,OAAO,MAAM;AAC7C,0BAA0B,SAAS,UAAU,MAAM;AACnD,0DAA0D,KAAK,GAAG,OAAO,sBAAsB,OAAO;AACtG,8DAA8D,iEAAiE,MAAM,GAAG;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,gDAAgD;AAChD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO,mBAAmB,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChKa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ba;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA,yEAAyE,WAAW;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrFa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,2EAAe;AAC7C,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA,gCAAgC;AAChC;AACA;AACA,2EAA2E;AAC3E;AACA,wEAAwE,uBAAuB;AAC/F;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA,gCAAgC;AAChC;AACA,8BAA8B,8EAA8E;AAC5G;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA,sCAAsC;AACtC,6CAA6C;AAC7C;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA,6CAA6C,mBAAO,CAAC,uIAAoC;AACzF,0BAA0B,mBAAO,CAAC,wFAAyB;AAC3D,qBAAqB,mBAAO,CAAC,8EAAoB;AACjD,sBAAsB,mBAAO,CAAC,gFAAqB;AACnD,2BAA2B,mBAAO,CAAC,gGAA6B;AAChE,kCAAkC,mBAAO,CAAC,gHAAqC;AAC/E,iBAAiB,mBAAO,CAAC,iEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,oBAAoB,mBAAO,CAAC,uEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS,yFAAyF,wGAAwG,6BAA6B,kBAAkB,KAAK;AAC5R;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Da;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;AACb,8CAA8C,cAAc;AAC5D;AACA,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW,mHAAmH;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ba;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,sEAAO;AAC/C,oBAAoB,mBAAO,CAAC,uEAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzFa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA,qBAAqB,mBAAO,CAAC,wFAAY;AACzC;;;;;;;;;;;;;ACJa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,mFAAmB;AACxC,aAAa,mBAAO,CAAC,2EAAe;AACpC,aAAa,mBAAO,CAAC,yFAAsB;AAC3C,aAAa,mBAAO,CAAC,2EAAe;AACpC,aAAa,mBAAO,CAAC,yFAAsB;AAC3C,aAAa,mBAAO,CAAC,iEAAU;AAC/B,aAAa,mBAAO,CAAC,qFAAoB;AACzC,aAAa,mBAAO,CAAC,2EAAe;AACpC,aAAa,mBAAO,CAAC,qEAAY;AACjC,aAAa,mBAAO,CAAC,qEAAY;AACjC,aAAa,mBAAO,CAAC,qFAAoB;AACzC,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,uFAAqB;AAC1C,aAAa,mBAAO,CAAC,qFAAoB;AACzC,aAAa,mBAAO,CAAC,iEAAU;AAC/B,aAAa,mBAAO,CAAC,mEAAW;AAChC,aAAa,mBAAO,CAAC,qFAAoB;AACzC,aAAa,mBAAO,CAAC,6FAAwB;AAC7C,aAAa,mBAAO,CAAC,iGAA0B;AAC/C,aAAa,mBAAO,CAAC,iEAAU;AAC/B,aAAa,mBAAO,CAAC,iEAAU;AAC/B,aAAa,mBAAO,CAAC,qFAAoB;AACzC,aAAa,mBAAO,CAAC,iFAAkB;AACvC,aAAa,mBAAO,CAAC,6EAAgB;AACrC,aAAa,mBAAO,CAAC,mFAAmB;AACxC,aAAa,mBAAO,CAAC,qEAAY;AACjC,aAAa,mBAAO,CAAC,yEAAc;AACnC,aAAa,mBAAO,CAAC,uFAAqB;AAC1C,aAAa,mBAAO,CAAC,mFAAmB;AACxC,aAAa,mBAAO,CAAC,8FAA4B;AACjD,aAAa,mBAAO,CAAC,uEAAa;AAClC,aAAa,mBAAO,CAAC,+DAAS;AAC9B,aAAa,mBAAO,CAAC,yFAAsB;;;;;;;;;;;;;AC5C9B;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,2OAA2O;AAC5R;AACA;AACA,CAAC,6DAA6D;;;;;;;;;;;;;ACtBjD;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,0CAA0C,mBAAO,CAAC,0FAAiB;AACnE,sCAAsC,mBAAO,CAAC,wIAA6B;AAC3E,6CAA6C,mBAAO,CAAC,uIAAoC;AACzF,WAAW,mBAAO,CAAC,yDAAG;AACtB,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,wBAAwB,mBAAO,CAAC,0FAA0B;AAC1D,gBAAgB,mBAAO,CAAC,gEAAU;AAClC,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,mBAAmB,qFAAqF;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,mBAAmB,6DAA6D;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qGAAqG;AACjI;AACA;AACA,yCAAyC,MAAM,iBAAiB,KAAK;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,kDAAkD,oBAAoB,uKAAuK;AAC7O;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sDAAsD,oBAAoB,4GAA4G;AACtL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ,IAAI,oBAAoB;AAClE,iDAAiD,OAAO,iJAAiJ;AACzM,SAAS;AACT;AACA;AACA,qDAAqD,OAAO,wEAAwE;AACpI;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uCAAuC,GAAG,MAAM,GAAG,qCAAqC;AAC9G;AACA;AACA,sBAAsB,wCAAwC,GAAG,MAAM,GAAG,sCAAsC;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,2BAA2B,WAAW,GAAG,GAAG,QAAQ,yBAAyB,cAAc,EAAE,oBAAoB,2BAA2B,SAAS,yBAAyB,gBAAgB,EAAE,EAAE,IAAI,oBAAoB,4BAA4B,SAAS,0BAA0B,eAAe,EAAE,EAAE,IAAI;AACrY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA,yDAAyD,SAAS,oLAAoL;AACtP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qKAAqK;AACrK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,iBAAiB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA,eAAe;AACf,2DAA2D,mBAAmB;AAC9E,qDAAqD,MAAM,6KAA6K,MAAM;AAC9O;AACA;AACA,yBAAyB,uBAAuB,KAAK,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4DAA4D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrgBa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,gCAAgC,mBAAO,CAAC,sEAAO;AAC/C,+BAA+B,mBAAO,CAAC,oEAAM;AAC7C,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,6CAA6C,mBAAO,CAAC,uIAAoC;AACzF,WAAW,mBAAO,CAAC,yDAAG;AACtB,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,kBAAkB,mBAAO,CAAC,0EAAkB;AAC5C,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,wBAAwB,mBAAO,CAAC,sFAAwB;AACxD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,qBAAqB,mBAAO,CAAC,gFAAqB;AAClD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,2BAA2B,mBAAO,CAAC,4FAA2B;AAC9D,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,kBAAkB,mBAAO,CAAC,0EAAkB;AAC5C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,wBAAwB,mBAAO,CAAC,sFAAwB;AACxD,wBAAwB,mBAAO,CAAC,0FAA0B;AAC1D,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,iBAAiB,mBAAO,CAAC,wEAAiB;AAC1C,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,gBAAgB,mBAAO,CAAC,sEAAgB;AACxC,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK,EAAE,MAAM;AACnC,2BAA2B,KAAK,IAAI,MAAM;AAC1C;AACA,SAAS;AACT;AACA,iCAAiC,UAAU,OAAO,UAAU;AAC5D;AACA;AACA,gCAAgC,UAAU,OAAO,UAAU;AAC3D;AACA;AACA,gCAAgC,UAAU,OAAO,UAAU;AAC3D;AACA;AACA,4BAA4B,UAAU,OAAO,UAAU;AACvD;AACA;AACA,iCAAiC,UAAU,OAAO,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,gLAAgL;AAC9P;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,IAAI,MAAM,mBAAmB;AAChF,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,qDAAqD,SAAS,+HAA+H;AAC7L;AACA;AACA;AACA,6FAA6F,SAAS,0CAA0C;AAChJ;AACA;AACA;AACA,qDAAqD,SAAS,+HAA+H;AAC7L;AACA;AACA;AACA;AACA,iGAAiG,SAAS,0CAA0C;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4LAA4L,SAAS,gCAAgC,OAAO;AAC5O;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA,6CAA6C,qDAAqD;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE,GAAG,EAAE,GAAG,EAAE;AACpC;AACA;AACA;AACA,aAAa;AACbpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA,iDAAiD,8BAA8B,iBAAiB,mBAAmB;AACnH;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,8DAA8D,IAAI,KAAK,mBAAmB;AAC1F,kEAAkE,UAAU;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,SAAS,oMAAoM;AACtQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kDAAkD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,SAAS,oMAAoM;AAC1Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,sBAAsB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+CAA+C,8BAA8B;AACtF;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAA0D,iBAAiB,4CAA4C;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5+Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE;AACA;AACA,uDAAuD,aAAa;AACpE;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,4BAA4B,YAAY,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,qCAAqC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qCAAqC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA,sBAAsB,YAAY,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzUa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA,0BAA0B,mBAAO,CAAC,6FAA6B;AAC/D,0BAA0B,mBAAO,CAAC,6FAA6B;AAC/D,qBAAqB,mBAAO,CAAC,mFAAwB;AACrD,wBAAwB,mBAAO,CAAC,yFAA2B;AAC3D,wBAAwB,mBAAO,CAAC,yFAA2B;AAC3D;AACA;AACA;AACA;AACA,gCAAgC,EAAE,EAAE,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gDAAgD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,QAAQ,SAAS,SAAS;AACpF;AACA;AACA;AACA;AACA,SAAS,SAAS,mBAAmB,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,IAAI;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxEa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,0CAA0C,mBAAO,CAAC,0FAAiB;AACnE,wBAAwB,mBAAO,CAAC,cAAI;AACpC,aAAa,mBAAO,CAAC,cAAI;AACzB,gCAAgC,mBAAO,CAAC,oBAAO;AAC/C,aAAa,mBAAO,CAAC,cAAI;AACzB,+BAA+B,mBAAO,CAAC,oEAAM;AAC7C,gCAAgC,mBAAO,CAAC,yGAAuB;AAC/D,kBAAkB,mBAAO,CAAC,oEAAY;AACtC,sBAAsB,mBAAO,CAAC,kFAAsB;AACpD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,uBAAuB,mBAAO,CAAC,oFAAuB;AACtD,0BAA0B,mBAAO,CAAC,0FAA0B;AAC5D,uBAAuB,mBAAO,CAAC,6EAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kBAAkB;AAC7D,gDAAgD,qBAAqB,EAAE,qBAAqB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY;AACjF;AACA;AACA,sBAAsB,sDAAsD,YAAY,SAAS,EAAE,gCAAgC,YAAY,QAAQ,EAAE,oBAAoB;AAC7K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,KAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM,EAAE,2BAA2B,EAAE,MAAM;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kCAAkC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA,mCAAmC,6CAA6C;AAChF;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY,QAAQ,kBAAkB,aAAa,gBAAgB,WAAW;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+CAA+C;AACxF;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sH;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sH;;;;;;;;;;;;AC/Ba;;AAEb,OAAO,kBAAkB,GAAG,mBAAO,CAAC,cAAI;AACxC,OAAO,KAAK,GAAG,mBAAO,CAAC,kBAAM;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AC1Da;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC1DA,gBAAgB,mBAAO,CAAC,gFAAY;AACpC,eAAe,mBAAO,CAAC,wFAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;;;AAGA;AACA;AACA,wCAAwC,GAAG,IAAI;AAC/C;AACA;AACA;;AAEA;AACA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,uCAAuC,GAAG;AAC1C,YAAY,GAAG,yBAAyB;AACxC;AACA;AACA,8BAA8B;AAC9B,cAAc,GAAG;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE;AACV,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,KAAK,QAAQ,EAAE,IAAI,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mCAAmC,2BAA2B;AAC9D;;AAEA,iBAAiB,cAAc;AAC/B,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,IAAI,KAA0B;AAC9B;AACA;;;;;;;;;;;;AChQA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACZa;;AAEb;;;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,WAAW;AAC/B;;AAEA,oBAAoB,WAAW;AAC/B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AAC4B;AACgB;AAClD;AACP;AACA;AACO;AACP;AACA;AACA;AACA,eAAe,yDAAS;AACxB;AACA;AACA;AACA;AACA,iBAAiB,kEAAkB;AACnC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,qCAAqC,iGAAiG;AACtI;AACA;AACA,uBAAuB,kEAAkB;AACzC;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oEAAoE;AACjH;AACA;AACA;AACA,6CAA6C,mFAAmF;AAChI;AACA;AACA;AACA,mCAAmC;AACnC,0BAA0B;AAC1B;AACA;AACA,gHAAgH,4BAA4B,EAAE;AAC9I;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,6BAA6B,qDAAK;AAClC;AACA;AACA,wCAAwC,qDAAK;AAC7C;AACA;AACA;AACA,gBAAgB,sDAAM,WAAW,qCAAqC;AACtE;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAA4E;AACzF;AACO;AACP;AACA;AACO;AACP;AACA;;;;;;;;;;;;;ACzLA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AAC6B;AACnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8DAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sEAAsE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AAC6B;AAC1C;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACO;AACP,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2CAA2C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4BAA4B,aAAa;AACzC,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,+CAA+C;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4BAA4B,aAAa;AACzC,6BAA6B,gCAAgC;AAC7D,yBAAyB,0EAA0E;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kFAAkF;AACvH,SAAS;AACT;AACA,qCAAqC,oFAAoF;AACzH,yCAAyC,qFAAqF;AAC9H,SAAS;AACT;AACA,oDAAoD;AACpD;AACA;AACA;AACA,SAAS;AACT;AACA,qCAAqC,iFAAiF;AACtH,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,gGAAgG;AACrH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,+CAA+C;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA;AACO;AACP,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA,2BAA2B,qDAAqD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6BAA6B,gCAAgC;AAC7D,mBAAmB,8DAAa;AAChC;AACA,4CAA4C,6IAA6I,EAAE,gBAAgB,aAAa;AACxN;AACA;AACA,+CAA+C,kJAAkJ,EAAE,gBAAgB,aAAa;AAChO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,mBAAmB,8DAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjnBA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACO;AACP,kCAAkC,sBAAsB;AACxaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kCAAkC,YAAY,EAAE;AAChD;AACA,+BAA+B,cAAc,EAAE;AAC/C,oCAAoC,cAAc,EAAE;AACpD,qCAAqC,oBAAoB,EAAE;AAC3D,qCAAqC,0BAA0B,EAAE;AACjE,wCAAwC,wBAAwB,EAAE;AAClE,6CAA6C,+CAA+C,EAAE;AAC9F,oCAAoC,kBAAkB,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1WA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AAC8B;AACP;AACM;AACF;AACxC;AACA;AACA;AACA;AACO,oBAAoB,2DAAqB;AAChD;AACA;AACA;AACO,kBAAkB,wDAAkB;AAC3C;AACA;AACA;AACA;AACO,YAAY,kDAAY;AAC/B;AACA;AACA;AACO,gBAAgB,sDAAgB;AACvC;AACA;AACA;AACO,yBAAyB,+DAAyB;AACzD;AACA;AACA;AACO,uBAAuB,6DAAuB;AACrD;AACA;AACA;AACO,kBAAkB,wDAAkB;AAC3C;AACA;AACA;AACO,mBAAmB,yDAAmB;AAC7C;AACA;AACA;AACO,YAAY,kDAAY;AAC/B;AACA;AACA;AACA;AACA;AACO,oBAAoB,0DAAoB;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,mDAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,sDAAgB;AAC3B;AACA;AACA;AACA;AACO;AACP,kCAAkC,QAAQ;AAC1C,eAAe,oDAAc;AAC7B;AACA;AACA;;;;;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnCA;AACA;;AAEA,YAAY;AACZ;AACA,SAAS,mBAAO,CAAC,kBAAM;AACvB,CAAC;;AAED;AACA,aAAa,mBAAO,CAAC,0FAAiB;;AAEtC;AACA,QAAQ,uCAAuC;AAC/C,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,IAAI;;AAE7C;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT,KAAK,GAAG;AACR,KAAK,KAAK;AACV,KAAK,IAAI,IAAI,EAAE;AACf,KAAK,IAAI,EAAE,IAAI;AACf;AACA;AACA,KAAK,IAAI,OAAO,IAAI;AACpB,KAAK,EAAE,OAAO,EAAE;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,gCAAgC,EAAE,EAAE,KAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,6CAA6C;;AAElD;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;;;;;;;;;;;;AC15Ba;;AAEb;AACA;AACA,CAAC;;AAED,cAAc,mBAAO,CAAC,4FAAkB;;AAExC;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oC;;;;;;;;;;;;AChCa;;AAEb;AACA;AACA,CAAC;AACD;;AAEA,mDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE9P;;AAEA,yBAAyB,mBAAO,CAAC,gHAAuB;;AAExD;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA,yBAAyB,UAAU;AACnC;;AAEA;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;AACA;AACA,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,mBAAmB,eAAe;AACvF,oDAAoD,mBAAmB,cAAc;AACrF,oDAAoD,mBAAmB,cAAc;;AAErF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,OAAO,gBAAgB;AAC7E;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO,YAAY;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO,YAAY;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO,YAAY;AAClE;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,IAAI,UAAU,IAAI,UAAU;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,C;;;;;;;;;;;;ACjMY;AACZ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClJA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AChYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACA;AACA;AACA;AACE;AACQ;AACE;AACE;;;;;;;;;;;;;ACPtD;AAAA;AAAA;AAA4B;;AAE5B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,SAAS,6CAAM;AACf;;AAEe,kEAAG,E;;;;;;;;;;;;ACZlB;AAAe,qGAAsC,E;;;;;;;;;;;;ACArD;AAAA;AAAqC;;AAErC;AACA,OAAO,4DAAQ;AACf;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AClCpB;AAAe,6EAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC,E;;;;;;;;;;;;ACApI;AAAA;AAAA;AAAA;AAA4B;AAC5B;AACe;AACf,SAAS,6CAAM;AACf,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AAA4B;;AAE5B;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,SAAS,6CAAM;AACf;;AAEe,mEAAI,E;;;;;;;;;;;;ACZnB;AAAA;AAAqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA,2gBAA2gB;AAC3gB;AACA;AACA;AACA;;AAEA,OAAO,4DAAQ;AACf;AACA;;AAEA;AACA;;AAEe,wEAAS,E;;;;;;;;;;;;AC5BxB;AAAA;AAAA;AAA2B;AACY;AACvC;AACA;AACA;;AAEA;;AAEA,cAAc;;;AAGd;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;;AAEA;AACA,wDAAwD,+CAAG;;AAE3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA,uEAAuE;AACvE;;AAEA,2EAA2E;;AAE3E,+DAA+D;;AAE/D;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,sBAAsB;;AAEtB,mCAAmC;;AAEnC,6BAA6B;;AAE7B,iCAAiC;;AAEjC,2BAA2B;;AAE3B,iBAAiB,OAAO;AACxB;AACA;;AAEA,gBAAgB,6DAAS;AACzB;;AAEe,iEAAE,E;;;;;;;;;;;;AC9FjB;AAAA;AAAA;AAA2B;AACA;AAC3B,WAAW,uDAAG,aAAa,+CAAG;AACf,iEAAE,E;;;;;;;;;;;;ACHjB;AAAA;AAAA;AAAA;AAAA;AAAuC;AACR;;AAE/B;AACA,0CAA0C;;AAE1C;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEO;AACA;AACQ;AACf;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,yDAAK;AACvB;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;;AAEA;AACA;;AAEA,WAAW,6DAAS;AACpB,GAAG;;;AAGH;AACA,6BAA6B;AAC7B,GAAG,eAAe;;;AAGlB;AACA;AACA;AACA,C;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAA2B;AACY;;AAEvC;AACA;AACA,iDAAiD,+CAAG,IAAI;;AAExD;AACA,kCAAkC;;AAElC;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA,SAAS,6DAAS;AAClB;;AAEe,iEAAE,E;;;;;;;;;;;;ACvBjB;AAAA;AAAA;AAA2B;AACE;AAC7B,WAAW,uDAAG,aAAa,gDAAI;AAChB,iEAAE,E;;;;;;;;;;;;ACHjB;AAAA;AAA+B;;AAE/B;AACA,qCAAqC,iDAAK;AAC1C;;AAEe,uEAAQ,E;;;;;;;;;;;;ACNvB;AAAA;AAAqC;;AAErC;AACA,OAAO,4DAAQ;AACf;AACA;;AAEA;AACA;;AAEe,sEAAO,E;;;;;;;;;;;;ACVthB;AACE;AACK;AACvB;AAC7B;AACP;AACA,gCAAgC,6EAAiB;AACjD,6CAA6C,2EAAmB;AAChE,6BAA6B,uEAAc;AAC3C,wBAAwB,6DAAS;AACjC,kCAAkC,iFAAmB;AACrD,6BAA6B,uEAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,qCAAqC,gDAAgD,EAAE;AACvF;AACA,gDAAgD,QAAQ,gEAAS,YAAY,wBAAwB,EAAE,EAAE;AACzG,uDAAuD,QAAQ,0EAAe,oBAAoB,EAAE;AACpG;AACA;AACA;AACA;AACA,2CAA2C,wEAAwE,4BAA4B,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE;AACzK;AACA;AACA;AACA,0BAA0B,sEAAgB;AAC1C,4BAA4B,gFAAkB;AAC9C,wBAAwB,wEAAc;AACtC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,2BAA2B;AAC3B,mBAAmB,2DAAU;AAC7B,uBAAuB,4DAAQ,SAAS,yDAAK;AAC7C,aAAa;AACbyD;AACS;AACtB;AAC5C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA,0CAA0C,sEAAU,WAAW,sEAAU;AACzE;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;;;;;;;;;;;;;ACvCjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACoC;AAC+C;AACI;AACtD;AAClC,eAAe,4DAAqB;AACpC;AACA,kBAAkB,2IAA2I,IAAI,cAAc,EAAE,EAAE,IAAI,KAAK;AAC5L,kBAAkB,uGAAuG,EAAE,mJAAmJ;AAC9Q,aAAa,8FAA8F,EAAE,+CAA+C;AAC5J,aAAa,kMAAkM;AAC/M,cAAc,+GAA+G,yBAAyB,6BAA6B,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,gCAAgC,GAAG;AAC9P;AACA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,+GAA+G,+BAA+B;AAC9I;AACA;AACA,CAAC;AACsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC6B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC2B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC4B;AACtB;AACP,QAAQ,gEAAS;AACjB,0BAA0B,IAAI,UAAU;AACxC;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B,WAAW,EAAE;AACvC;AACA;AACA,KAAK;AACL,2DAA2D;AAC3D,4DAA4D;AAC5D,6DAA6D,aAAa;AAC1E,wDAAwD,aAAa;AACrE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iCAAiC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA,mCAAmC,4DAAS;AAC5C,mGAAmG,EAAE,sCAAsC,0BAA0B,EAAE;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC2B;AACrB;AACP,iCAAiC,kBAAkB;AACnD;AACA;AACO;AACP,WAAW,yDAAiB;AAC5B;AACO;AACP,WAAW,wDAAgB;AAC3B;AACO;AACP,uCAAuC,2BAA2B;AAClE;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA,mBAAmB,6DAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAK;AACjC,uBAAuB,6DAAU;AACjC,aAAa;AACb;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACuB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6BAA6B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD,2HAA2H,EAAE;AAC7H,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD,gHAAgH,EAAE;AAClH,iBAAiB;AACjB;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD;AACA,iBAAiB;AACjB;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,4BAA4B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE,8BAA8B,qEAAkB;AAChD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA,oBAAoB,6DAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD,0BAA0B,4DAAS;AACnC,mHAAmH,EAAE,kCAAkC,0BAA0B,EAAE;AACnL,iBAAiB;AACjB;AACA;AACA,YAAY,gEAAS;AACrB;AACA,iBAAiB,6DAAM;AACvB;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD,0BAA0B,4DAAS;AACnC,6FAA6F,EAAE;AAC/F,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAyD;AACpF,0BAA0B,qEAAkB;AAC5C;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,+DAAQ;AACpB;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD,uFAAuF,EAAE;AACzF,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB,+DAAQ;AACxB;AACA;AACA,gBAAgB,gEAAS;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB,gEAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAQ;AACpB;AACA,2BAA2B,2CAA2C;AACtE,0BAA0B,qEAAkB;AAC5C,uGAAuG,EAAE;AACzG,aAAa;AACb;AACA;AACA,YAAY,+DAAQ;AACpB;AACA,2BAA2B,2CAA2C;AACtE,0BAA0B,qEAAkB;AAC5C,uGAAuG,EAAE;AACzG,aAAa;AACb;AACA;AACA,YAAY,+DAAQ;AACpB;AACA,2BAA2B,2CAA2C;AACtE,0BAA0B,qEAAkB;AAC5C,oFAAoF,EAAE;AACtF,aAAa;AACb;AACA;AACA,YAAY,+DAAQ;AACpB;AACA,2BAA2B,2CAA2C;AACtE,0BAA0B,qEAAkB;AAC5C,oFAAoF,EAAE;AACtF,aAAa;AACb;AACA;AACA;AACA,YAAY,+DAAQ;AACpB;AACA,2BAA2B,2CAA2C;AACtE,0BAA0B,qEAAkB;AAC5C,qGAAqG,EAAE;AACvG,aAAa;AACb;AACA,YAAY,+DAAQ;AACpB;AACA,2BAA2B,2CAA2C;AACtE,0BAA0B,qEAAkB;AAC5C,oGAAoG,EAAE;AACtG,aAAa;AACb;AACA,YAAY,+DAAQ;AACpB;AACA;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD,qJAAqJ,EAAE;AACvJ,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2CAA2C;AACtF,0CAA0C,qEAAkB;AAC5D,kJAAkJ,EAAE;AACpJ,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2CAA2C;AAClF,sCAAsC,qEAAkB;AACxD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uBAAuB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2CAA2C;AAC9E,kCAAkC,qEAAkB;AACpD,6HAA6H,EAAE;AAC/H,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD;AACA,iBAAiB;AACjB;AACA;AACA,YAAY,+DAAQ;AACpB;AACA,2BAA2B,2CAA2C;AACtE,0BAA0B,qEAAkB;AAC5C,yFAAyF,EAAE;AAC3F,aAAa;AACb;AACA,YAAY,+DAAQ;AACpB;AACA,2BAA2B,2CAA2C;AACtE,0BAA0B,qEAAkB;AAC5C,0FAA0F,EAAE;AAC5F,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA,8CAA8C,iDAAiD,IAAI;AACnG;AACA;AACA,kCAAkC,qEAAkB;AACpD,4FAA4F,EAAE;AAC9F,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAS;AACjC;AACA;AACA;AACA,2CAA2C,2EAA2E;AACtH,0CAA0C,qEAAkB;AAC5D,kHAAkH,EAAE;AACpH,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gBAAgB;AACxF;AACA;AACA,qEAAqE,gBAAgB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gEAAS;AACzC;AACA;AACA;AACA,mDAAmD,2EAA2E;AAC9H,kDAAkD,qEAAkB;AACpE,0HAA0H,EAAE;AAC5H,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,qCAAqC;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,qCAAqC;AACtH;AACA;AACA;AACA;AACA;AACA,uCAAuC,2EAA2E;AAClH,sCAAsC,qEAAkB;AACxD,8GAA8G,EAAE;AAChH,yBAAyB;AACzB;AACA;AACA;AACA;AACA,YAAY,+DAAQ;AACpB;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD,mGAAmG,EAAE;AACrG,iBAAiB;AACjB;AACA;AACA,YAAY,+DAAQ;AACpB;AACA;AACA,+BAA+B,2CAA2C;AAC1E,8BAA8B,qEAAkB;AAChD,kHAAkH,EAAE;AACpH,iBAAiB;AACjB;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA;AACA;AACA;AACA,qEAAqE,2BAA2B;AAChG;AACA;AACA;AACA,+CAA+C,2CAA2C;AAC1F,8CAA8C,qEAAkB;AAChE,mHAAmH,EAAE,uBAAuB,EAAE;AAC9I,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,kBAAkB,0DAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wDAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY,qEAAkB,OAAO;AACvE;AACA,wBAAwB,wDAAK;AAC7B,0BAA0B,6DAAU;AACpC;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD,wCAAwC,qBAAqB;AAC7D,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,4DAAS;AACnG;AACA;AACA,kGAAkG,4DAAS;AAC3G;AACA;AACA,uFAAuF,4DAAS;AAChG;AACA;AACA,yFAAyF,4DAAS;AAClG;AACA;AACA,uFAAuF,4DAAS;AAChG;AACA;AACA,0HAA0H,4DAAS;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,wEAAwE,4DAAS;AACjF;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,mFAAmF,4DAAS;AAC5F;AACA;AACA;AACA;AACA;AACA,oEAAoE,4DAAS;AAC7E;AACA;AACA;AACA,uEAAuE,4DAAS;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,4DAAS;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,4DAAS;AACxG;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,4DAAS,+EAA+E,qEAAkB;AAC7L;AACA,uFAAuF,4DAAS,+EAA+E,qEAAkB;AACjM;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,gEAAgE,4DAAS;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,4DAAS;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,8EAA8E,4DAAS;AACvF;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,mFAAmF,4DAAS;AAC5F;AACA;AACA;AACA;AACA;AACA,oEAAoE,4DAAS;AAC7E;AACA;AACA;AACA,0EAA0E,4DAAS;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,4DAAS;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+DAAQ;AAC7B,6FAA6F,4DAAS;AACtG;AACA;AACA;AACA;AACA,yFAAyF,4DAAS;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,4DAAS;AACrG;AACA;AACA,8EAA8E,4DAAS;AACvF;AACA;AACA;AACA;;;;;;;;;;;;;ACtrCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACkC;AAClC,eAAe,4DAAqB;AAC7B;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yBAAyB,6CAA6C;AACtE,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,8BAA8B,6CAA6C;AAC3E,8BAA8B,qDAAqD;AACnF;AACA;AACA;AACA,iBAAiB;AACjB,oCAAoC,cAAc;AAClD;AACA;AACA,yBAAyB,cAAc;AACvC,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB,6BAA6B,6CAA6C;AAC1E,6BAA6B,qDAAqD;AAClF;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,cAAc;AAC3C,kCAAkC,6CAA6C;AAC/E,kCAAkC,qDAAqD;AACvF,6BAA6B,sCAAsC;AACnE,yCAAyC,cAAc;AACvD;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA,iBAAiB;AACjB;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA,iBAAiB;AACjB;AACA;AACA,6CAA6C,cAAc;AAC3D,sCAAsC,oBAAoB;AAC1D;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C,6BAA6B;AAC7B;AACA;AACA,iBAAiB;AACjB,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yBAAyB,sCAAsC;AAC/D;AACA;AACA,sCAAsC,sCAAsC;AAC5E;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,mBAAmB;AAC9C,qCAAqC,mBAAmB;AACxD,oCAAoC,mBAAmB;AACvD,uBAAuB,cAAc;AACrC,yBAAyB,cAAc;AACvC,yBAAyB,cAAc;AACvC,0BAA0B,sCAAsC;AAChE,0BAA0B,sCAAsC;AAChE,0BAA0B,sCAAsC;AAChE,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAC+C;AACV;AACW;AACJ;AACC;AAC4E;AACvF;AAClC,eAAe,4DAAqB;AACpC,oCAAoC;AACpC;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D,4CAA4C,8BAA8B;AAC1E,4CAA4C,yBAAyB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAK;AAClC;AACA,6CAA6C,uCAAuC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2DAAQ;AACtD;AACA;AACA,0EAA0E,qEAAkB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,iEAAc;AAClE;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8DAAkB;AACnD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8BAA8B,qEAAkB;AAChD;AACA;AACA,0CAA0C,mEAAgB;AAC1D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qEAAkB;AACxD;AACA;AACA,kDAAkD,mEAAgB;AAClE;AACA;AACA;AACA,uDAAuD,+DAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qEAAkB;AAC5C;AACA;AACA,sCAAsC,mEAAgB;AACtD;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB,qEAAkB;AACxC;AACA;AACA,kCAAkC,mEAAgB;AAClD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,kCAAkC,mEAAgB;AAClD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kCAAkC,mEAAgB;AAClD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iCAAiC,2DAAe;AAChD;AACA;AACA;AACA;AACA,sCAAsC,mEAAgB;AACtD,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,+BAA+B;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8DAAkB;AACvD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,6EAA6E,EAAE;AAClI;AACA;AACA,mDAAmD,6EAA6E,EAAE;AAClI;AACA;AACA,mDAAmD,6EAA6E,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA,YAAY,gEAAS;AACrB;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mEAAgB;AAClD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAgB;AACtD,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAS;AAC7B;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAgB;AACtD;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAS;AACrB;AACA;AACA;AACA;AACA,kCAAkC,mEAAgB;AAClD;AACA,aAAa;AACb;AACA;AACA,wDAAwD,YAAY;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAgB;AACtD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0CAA0C,gEAAS;AACnD;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,gEAAgE;AAChE,kCAAkC,mEAAgB;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mEAAgB;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mEAAgB;AAC9C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mEAAgB;AAC9C;AACA,SAAS;AACT;AACA;AACA;AACA,qFAAqF,gDAAgD,EAAE;AACvI,+CAA+C;AAC/C,kBAAkB,qEAAkB;AACpC;AACA;AACA;AACA,8BAA8B,mEAAgB;AAC9C,SAAS,EAAE,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,QAAQ,KAAK;AAC/D;AACA;AACA;AACA,kCAAkC,QAAQ,KAAK;AAC/C;AACA;AACA,oCAAoC,aAAa,qB;AACjD;AACA;AACA;AACA,wBAAwB;AACxB,qBAAqB,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mEAAe;AAC9B;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA,+EAA+E;AAC/E,4EAA4E;AAC5E,2BAA2B,uBAAuB;AAClD;AACA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qEAAkB;AACrC;AACA;AACA,kCAAkC,qEAAkB;AACpD,kCAAkC,qEAAkB;AACpD,oCAAoC,qEAAkB;AACtD,4BAA4B,qEAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gEAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gEAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,GAAG;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA,sBAAsB,0DAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0DAAkB;AACxC;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,0DAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6DAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAS;AACtB;AACA,qMAAqM,6DAAU;AAC/M;AACA;AACA;AACA;AACA,aAAa,gEAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACyB;;;;;;;;;;;;;ACn2B1B;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAC6C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,6CAA6C,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAC+C;AACH;AACG;AAC8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY,iCAAiC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,uDAAgB;AAChG;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA,8DAA8D,gBAAgB;AAC9E;AACA;AACA,+CAA+C,2DAAQ;AACvD,+CAA+C,OAAO,+DAAmB,4BAA4B,6DAAU,+BAA+B;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2CAA2C;AACjF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2DAAQ;AACnD;AACA,yCAAyC,iIAAiI;AAC1K,0CAA0C,qDAAqD;AAC/F;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY,iCAAiC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,uDAAgB;AAChG;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA,8DAA8D,gBAAgB;AAC9E;AACA;AACA;AACA;AACA,+CAA+C,OAAO,+DAAmB,4BAA4B,6DAAU,yDAAyD;AACxK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,0CAA0C,sCAAsC;AAChF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,0CAA0C,2CAA2C;AACrF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6DAAU;AACjC;AACA,uBAAuB,6DAAU;AACjC;AACA,uBAAuB,6DAAU;AACjC;AACA,uBAAuB,6DAAU;AACjC;AACA,uBAAuB,6DAAU;AACjC;AACA,uBAAuB,6DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,+BAA+B;AACpG;AACA;AACA;AACA;AACA,wCAAwC,kEAAY,CAAC,+DAAmB;AACxE;AACA;AACA,6CAA6C,6BAA6B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB,2DAAQ,wCAAwC;AAC9F;AACA;AACA;AACA,CAAC;AAC8B;AAC/B;AACA,WAAW,wDAAK;AAChB;;;;;;;;;;;;;ACnQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAC6C;AACqB;AAC3D;AACP;AACA;AACA;AACA;AACA,kBAAkB,kEAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,2DAAQ;AAClE;AACA;AACA;AACA,kCAAkC,+CAA+C,mEAAgB,UAAU;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,qCAAqC,uCAAuC,mEAAgB;AAC5F;AACA;AACA;AACA;AACA,2DAA2D,mEAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,6BAA6B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAC+C;AACF;AAC7C;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAkB;AACzC,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA,4DAA4D,iCAAiC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,+DAAmB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACoB;AACrB;AACA;AACA,2EAA2E;AAC3E,oCAAoC,wBAAwB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACqC;AACJ;AACW;AACG;AACb;AAClC,eAAe,4DAAqB;AACpC;AACA;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB;AACxE;AACA;AACA;AACA;AACA;AACA,oDAAoD,0EAAmC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA,CAAC;AAC2B;AAC5B;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2DAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gBAAgB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8CAAG;AAC5B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,+BAA+B,EAAE;AACrG;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,kCAAkC;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gBAAgB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG,EAAE;AACzG,+DAA+D;AAC/D;AACA;AACA;AACA,oGAAoG,EAAE;AACtG,8CAA8C;AAC9C;AACA;AACA;AACA,4BAA4B,kDAAU;AACtC,qHAAqH,EAAE,2BAA2B,EAAE;AACpJ;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uDAAgB;AAChC;AACA;AACA,0CAA0C,oEAAoE,EAAE,KAAK,EAAE;AACvH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,EAAE,SAAS,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,EAAE,KAAK,EAAE;AACzH;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,qDAAqD,uBAAuB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA,yDAAyD,qBAAqB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,kDAAkD,EAAE;AAC3I;AACA;AACA;AACA;AACA,iFAAiF,wFAAwF,EAAE;AAC3K;AACA;AACA;AACA,mCAAmC,+DAAmB;AACtD,oCAAoC,yDAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gBAAgB;AAC3E;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,UAAU,iBAAiB,EAAE,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA,CAAC;AAC4B;AAC7B;AACA;AACA;AACA,eAAe,8CAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8CAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAC6D;AAChB;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY;AACvD,sBAAsB,iEAAc;AACpC;AACA;AACA,sBAAsB,iEAAc,QAAQ,wDAAK;AACjD;AACA;AACA;AACA;AACA,eAAe,wDAAK;AACpB;AACA,kBAAkB,kEAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACuD;AACiC;AACtD;AACW;AAC7C,eAAe,4DAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,qEAAkB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mHAAmH,qEAAkB;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wDAAK;AACzC,mCAAmC,6DAAU,iCAAiC,qEAAkB,UAAU,4DAAS;AACnH;AACA;AACA,oCAAoC,wDAAK;AACzC,mCAAmC,6DAAU,iCAAiC,qEAAkB,UAAU,4DAAS;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gBAAgB;AAC5E;AACA,+BAA+B,4DAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAU,uCAAuC,4DAAS;AACzF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mEAAmE,mEAAgB,gBAAgB;AACnG;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACyB;AAC1B;AACA;AACA;AACA,YAAY,gEAAS;AACrB;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA,oBAAoB,gEAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gEAAS;AACrB;AACA;AACA;AACA,YAAY,gEAAS,0CAA0C;AAC/D;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA,oBAAoB,gEAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qEAAkB;AAC/C,+BAA+B,qEAAkB;AACjD;AACA;AACA;AACA;;;;;;;;;;;;;AC/IA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,2BAA2B;AAC3B,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;;;;;;;;;;;;;AChEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,mCAAmC,EAAE;AACrC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,uFAAU;AACnC,WAAW,mBAAO,CAAC,+EAAM;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA,YAAY,YAAY,sBAAsB,EAAE;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA,yBAAyB,YAAY,EAAE;AACvC,8BAA8B,oBAAoB;AAClD,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAgD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;;;ACnI7B;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCa;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjtRA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+EAAM;AACzB,mBAAmB,mBAAO,CAAC,2FAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,qGAAiB;AACjD;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,qGAAiB;AACjD;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,uFAAU;AACnC;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,mGAAgB;AAC/C;AACA;AACA,oBAAoB,mBAAO,CAAC,6FAAa;AACzC,SAAS,mBAAO,CAAC,iGAAe;AAChC,SAAS,mBAAO,CAAC,qGAAiB;AAClC;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE;AACpB,iBAAiB,EAAE;AACnB,iBAAiB,EAAE;AACnB,gBAAgB;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oHAAoH,sBAAsB,wBAAwB,cAAc;AAChL;AACA;AACA,oHAAoH,sBAAsB;AAC1I;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,sBAAsB,wBAAwB,cAAc;AACxK;AACA;AACA,4GAA4G,sBAAsB;AAClI;AACA;AACA;AACA;AACA,8GAA8G,sBAAsB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,oDAAoD;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,uBAAuB,yBAAyB,cAAc;AACxH;AACA;AACA,0DAA0D,uBAAuB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe,yBAAyB,cAAc;AAChH;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,iCAAiC;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,2CAA2C,eAAe,MAAM,WAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO,MAAM,WAAW,8BAA8B,uBAAuB;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,4CAA4C,eAAe,MAAM,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,sBAAsB,IAAI,mBAAmB;AAC7G,iDAAiD,uBAAuB,MAAM,WAAW,QAAQ,wCAAwC,KAAK,MAAM;AACpJ;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,yDAAyD;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA,8DAA8D,MAAM;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oEAAoE,eAAe;AACnF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0EAA0E,KAAK;AAC/E,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gCAAgC;AACxG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACh8BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,uFAAU;AACnC,WAAW,mBAAO,CAAC,+EAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChOA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,uFAAU;AACnC,WAAW,mBAAO,CAAC,+EAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjMA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+EAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzOA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,kBAAM;AAC7B,aAAa,mBAAO,CAAC,cAAI;AACzB,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,cAAc,mBAAO,CAAC,gBAAK;AAC3B,wBAAwB,mBAAO,CAAC,qGAAiB;AACjD,wBAAwB,mBAAO,CAAC,qGAAiB;AACjD;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,gBAAK;AAC3B,wBAAwB,mBAAO,CAAC,qGAAiB;AACjD,wBAAwB,mBAAO,CAAC,qGAAiB;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,yHAA6B;AAC9C,SAAS,mBAAO,CAAC,2GAAY;AAC7B,sBAAsB,mBAAO,CAAC,yJAAmC;AACjE,WAAW,mBAAO,CAAC,yJAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,kHAAkH;AACvH;AACA;AACA;AACA;AACA,KAAK,oIAAoI;AACzI;AACA;AACA;AACA;AACA,KAAK,oIAAoI;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gGAAgG;AACrG;AACA;AACA;AACA;AACA,KAAK,+GAA+G;AACpH;AACA;AACA;AACA;AACA,KAAK,+GAA+G;AACpH,CAAC,uDAAuD;AACxD;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gHAAgH;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;;;;;;;;;;;;;ACrCnI;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;;;;;;;;;;;;;AC9BxG;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;;;;;;;;;;;;;ACnB5F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;;;;;;;;;;;;;ACvBzE;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;;;;;;;;;;;;;ACtCzF;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;ACtB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,2GAAY;AAC/B,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD,mBAAmB,mBAAO,CAAC,2GAAY;AACvC,kCAAkC,mBAAO,CAAC,yIAA2B;AACrE;AACA,kCAAkC,mBAAO,CAAC,yIAA2B;AACrE;AACA,oCAAoC,mBAAO,CAAC,6IAA6B;AACzE;AACA;AACA,iCAAiC,mBAAO,CAAC,uIAA0B;AACnE;AACA,iCAAiC,mBAAO,CAAC,uIAA0B;AACnE;AACA;AACA,gCAAgC,mBAAO,CAAC,qIAAyB;AACjE;AACA,+BAA+B,mBAAO,CAAC,mIAAwB;AAC/D;AACA,kCAAkC,mBAAO,CAAC,yIAA2B;AACrE;AACA,4BAA4B,mBAAO,CAAC,6HAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qIAAqI;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2IAA2I;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;;;;;;;;;;;;;AC5qB3G;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sHAAsH;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qIAAqI;;;;;;;;;;;;;AC3BzH;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;ACpB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;;;;;;;;;;;;;AC5F9G;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,2FAAgB;AACjD,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;ACtB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,2GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8IAA8I;;;;;;;;;;;;;ACrB/I;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,SAAS;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,mGAAmG,SAAS;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qDAAqD,2BAA2B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;;;;;;;;;;;;AC5QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E;AAC3E;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C,IAAI;AACjF;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;;;;;;;;;;;;;ACt/CjB;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,2HAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,2HAAgC;AACjF,WAAW,mBAAO,CAAC,kGAAY;AAC/B;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yC;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,WAAW,mBAAO,CAAC,cAAI;AACvB,wBAAwB,mBAAO,CAAC,oCAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC;AACtC,yBAAyB;AACzB,mBAAmB;AACnB,UAAU;AACV,+BAA+B;AAC/B,aAAa;AACb,oCAAoC;AACpC,iBAAiB,mBAAmB,EAAE;AACtC,UAAU;AACV,oBAAoB;AACpB,iBAAiB,gBAAgB,EAAE;AACnC,UAAU;AACV,UAAU;AACV,UAAU,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,6EAA6E,WAAW;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACrQA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,2HAAgC;AACjF;AACA,wBAAwB,mBAAO,CAAC,4GAAiB;AACjD,2BAA2B,mBAAO,CAAC,kHAAoB;AACvD,mBAAmB,mBAAO,CAAC,kGAAY;AACvC,WAAW,mBAAO,CAAC,kGAAY;AAC/B,aAAa,mBAAO,CAAC,sGAAc;AACnC;AACA,SAAS,mBAAO,CAAC,2HAAgC;AACjD,WAAW,mBAAO,CAAC,4FAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA,sEAAsE,OAAO;AAC7E;AACA;AACA;AACA,yDAAyD,WAAW;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,SAAS;AACT;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF;AACA,SAAS;AACT;AACA;AACA;AACA,8DAA8D,iCAAiC;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,gBAAgB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+EAA+E,kBAAkB;AACjG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAmD,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA,SAAS;AACT,4EAA4E,OAAO;AACnF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAmD,EAAE;AAClF;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,4EAA4E,OAAO;AACnF;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA,8EAA8E,GAAG;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA,0GAA0G,SAAS,oDAAoD,EAAE;AACzK,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2IAA2I,OAAO;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe,EAAE;AACxC,yBAAyB,kBAAkB,EAAE;AAC7C,sBAAsB,eAAe,EAAE;AACvC,sBAAsB,eAAe,EAAE;AACvC,sBAAsB,qBAAqB,EAAE;AAC7C,yBAAyB,kBAAkB,EAAE;AAC7C,yBAAyB,kBAAkaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0BAA0B,gBAAgB,+EAA+E;AACzH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC,mBAAO,CAAC,8HAA0B;AACnE,WAAW,mBAAO,CAAC,8HAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF,gC;;;;;;;;;;;;ACl9BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,2HAAgC;AACjF,eAAe,mBAAO,CAAC,sGAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,cAAc;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH,QAAQ;AACjI;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACtIA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,2HAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,yBAAyB;AACzB;AACA;AACA;AACA,wBAAwB;AACxB,yBAAyB;AACzB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,2HAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuuBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,+BAA+B;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,uCAAuC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AClfA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACb,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,iJAAiJ;AAC1M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,YAAY;AAClF;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,0CAA0C,EAAE;AACrG;;;;;;;;;;;;;ACloBa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,GAAG;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,GAAG;AAC3D;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCa;AACb,8CAA8C,cAAc;;;;;;;;;;;;;ACD/C;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,kEAAmB;AACxC,aAAa,mBAAO,CAAC,wDAAc;AACnC,aAAa,mBAAO,CAAC,4DAAgB;AACrC,aAAa,mBAAO,CAAC,wDAAc;AACnC,aAAa,mBAAO,CAAC,sEAAqB;AAC1C,aAAa,mBAAO,CAAC,oEAAoB;AACzC,aAAa,mBAAO,CAAC,gEAAkB;AACvC,aAAa,mBAAO,CAAC,8DAAiB;AACtC,aAAa,mBAAO,CAAC,oEAAoB;AACzC,aAAa,mBAAO,CAAC,oEAAoB;AACzC,aAAa,mBAAO,CAAC,kEAAmB;AACxC,aAAa,mBAAO,CAAC,oEAAoB;AACzC,aAAa,mBAAO,CAAC,oEAAoB;AACzC,aAAa,mBAAO,CAAC,4CAAQ;AAC7B,aAAa,mBAAO,CAAC,wDAAc;AACnC,aAAa,mBAAO,CAAC,oEAAoB;;;;;;;;;;;;;AC3B5B;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,iBAAiB,mBAAO,CAAC,sDAAU;AACntF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;ACnKa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCa;AACb,8CAA8C,cAAcoDAAoD,EAAE,QAAQ,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvLa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;;;;;;;;;;;;;AC1Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,mBAAmB,mBAAO,CAAC,0DAAY;AACvC,qBAAqB,mBAAO,CAAC,8DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,gFAAgF,cAAc;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ,oEAAoE;AACtG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,0BAA0B,QAAQ,4FAA4F;AAC9H;AACA;AACA;;;;;;;;;;;;;ACxEa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,uBAAuB;AACrD;AACA,KAAK;AACL;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,uFAAuF,EAAE;AACtH;AACA;AACA;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa,EAAE;AAC/B;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB,aAAa,iBAAiB,EAAE;AAClF;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,mGAAmG,EAAE;AACrI;AACA;AACA;;;;;;;;;;;;;ACvCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,eAAe,mBAAO,CAAC,yDAAe;AACtC,iBAAiB,mBAAO,CAAC,6DAAiB;AAC1C,gBAAgB,mBAAO,CAAC,+CAAU;AAClC;AACA;AACA;AACA,WAAW,oEAAoE;AAC/E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kGAAkG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,gCAAgC,uFAAuF;AACvH;AACA,KAAK;AACL;;;;;;;;;;;;;ACzGa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACpDY;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kDAAQ;AAC/B,gBAAgB,mBAAO,CAAC,+CAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ,0IAA0I;AACvK;AACA;AACA;AACA;AACA,6BAA6B,QAAQ,0JAA0J;AAC/L,6BAA6B,QAAQ,iJAAiJ,EAAE;AACxL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;;;;;;;;;;;;;ACtEa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,kDAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,YAAY,wHAAwH;AAC1K;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;AC3Da;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;;;;;;;;;;;;;ACVA,yBAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACvBzD,yBAAsC;;AAEtC;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B,2BAA2B;AAC3B,2BAA2B;AAC3B,6BAA6B;;AAE7B;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;AClCzD,yBAAsC;;AAEtC;AACA;AACA;;AAEA,qCAAqC,mBAAO,CAAC,mEAAQ;;AAErD;;AAEA,sCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACvBzD,yBAAsC;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;;AAElD;AACA;AACA;AACA;AACA,oBAAoB,uDAAuD;AAC3E;;AAEA;AACA;AACA,8CAA8C,4BAA4B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6BAA6B;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,KAAK;AACL,uBAAuB,2CAA2C;AAClE;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,qBAAqB;AACrD;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,6BAA6B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV;AACA,2CAA2C,cAAc;;;;;;;;;;;;;AC1OzD,yBAAsC;;AAEtC;AACA;AACA;;AAEA,qCAAqC,mBAAO,CAAC,mEAAQ;;AAErD;;AAEA,sCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;AChBzD,yBAAsC;;AAEtC;AACA;AACA;;AAEA,qCAAqC,mBAAO,CAAC,mEAAQ;;AAErD;;AAEA,sCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA,0BAA0B,EAAE;AAC5B;;AAEA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACpBzD,yBAAsC;;AAEtC;AACA;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;;AAEA,qCAAqC,mBAAO,CAAC,mEAAQ;;AAErD;;AAEA,4DAA4D,mBAAO,CAAC,mEAAQ;;AAE5E,+DAA+D,uCAAuC,kBAAkB;;AAExH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;AC3GzD,yBAAsC;;AAEtC;AACA;AACA;AACA;;AAEA,qCAAqC,mBAAO,CAAC,mEAAQ;;AAErD;;AAEA,8DAA8D,mBAAO,CAAC,6EAAgB;;AAEtF,+DAA+D,uCAAuC,kBAAkB;;AAExH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,6BAA6B;AAC9C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,yGAAyG,yBAAyB;AAClI;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACjDzD,yBAAsC;;AAEtC;AACA;AACA;;AAEA,qCAAqC,mBAAO,CAAC,mEAAQ;;AAErD;;AAEA,sCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACpBzD,yBAAsC;;AAEtC;AACA;AACA;AACA;;AAEA,qCAAqC,mBAAO,CAAC,mEAAQ;;AAErD;;AAEA,8DAA8D,mBAAO,CAAC,6EAAgB;;AAEtF,+DAA+D,uCAAuC,kBAAkB;;AAExH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oGAAoG,yBAAyB;AAC7H;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACrEzD,yBAAsC;;AAEtC;AACA;;AAEA,4DAA4D,mBAAO,CAAC,wEAAa;;AAEjF;;AAEA,iEAAiE,mBAAO,CAAC,kFAAkB;;AAE3F,qCAAqC,mBAAO,CAAC,wEAAa;;AAE1D,qCAAqC,mBAAO,CAAC,wEAAa;;AAE1D,yCAAyC,mBAAO,CAAC,gFAAiB;;AAElE,oCAAoC,mBAAO,CAAC,sEAAY;;AAExD,qCAAqC,mBAAO,CAAC,wEAAa;;AAE1D,sCAAsC,mBAAO,CAAC,0EAAc;;AAE5D,sCAAsC,mBAAO,CAAC,4EAAe;;AAE7D,sCAAsC,mBAAO,CAAC,4EAAe;;AAE7D,sCAAsC,mBAAO,CAAC,4EAAe;;AAE7D,uCAAuC,mBAAO,CAAC,8EAAgB;;AAE/D,oCAAoC,mBAAO,CAAC,4EAAe;;AAE3D,oCAAoC,mBAAO,CAAC,4EAAe;;AAE3D,+DAA+D,uCAAuC,kBAAkB;;AAExH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACzEzD,yBAAsC;;AAEtC;AACA;AACA;;AAEA,sCAAsC,mBAAO,CAAC,sEAAS;;AAEvD,iDAAiD,mBAAO,CAAC,mGAA2B;;AAEpF;;AAEA,sCAAsC,uCAAuC,kBAAkB;;AAE/F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;;AAEA,UAAU,2BAA2B;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACnLzD,yBAAsC;;AAEtC;AACA;AACA;AACA;;AAEA,qCAAqC,mBAAO,CAAC,yEAAc;;AAE3D,2DAA2D,0BAA0B,0CAA0C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE,OAAO,wBAAwB,EAAE;;AAE1N;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,uBAAuB,EAAE;;AAEtC;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACnJzD,yBAAsC;;AAEtC;AACA;AACA;;AAEA,uCAAuC,mBAAO,CAAC,wEAAU;;AAEzD,sCAAsC,mBAAO,CAAC,sEAAS;;AAEvD,sCAAsC,mBAAO,CAAC,2EAAe;;AAE7D,2DAA2D,0BAA0B,0CAA0C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE,OAAO,wBAAwB,EAAE;;AAE1N;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,qBAAqB;AACrE,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,iDAAiD;AAC/D,eAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,UAAU;AACV;AACA,2CAA2C,cAAc;;;;;;;;;;;;;AC3YzD,yBAAsC;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;AClJzD,yBAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;AC1BzD,yBAAsC;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;AC9CzD,yBAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;;;;;;;;;;;;;ACjB5C,4CAA4C,WAAW,EAAE,WAAW,mBAAO,CAAC,iEAAS,EAAE,2CAA2C,eAAe,mBAAO,CAAC,yEAAa,EAAE,mDAAmD,qCAAqC,gCAAgC,aAAa,iBAAiB,qDAAqD,kC;;;;;;;;;;;;ACAnX,4CAA4C,WAAW,EAAE,wFAAwF,kBAAkB,eAAe,8GAA8G,sBAAsB,UAAU,mBAAO,CAAC,+DAAQ,EAAE,wCAAwC,sCAAsC,wBAAwB,WAAW,KAAK,cAAc,cAAc,oBAAoB,uEAAuE,mBAAmB,eAAe,kBAAkB,sBAAsB,iBAAiB,eAAe,gBAAgB,kBAAkB,iBAAiB,eAAe,gBAAgB,6BAA6B,oBAAoB,mBAAmB,SAAS,MAAM,OAAO,SAAS,gBAAgB,cAAc,eAAe,GAAG,YAAY,0BAA0B,0BAA0B,gCAAgC,oBAAoB,QAAQ,aAAa,YAAY,0CAA0C,uBAAuB,oFAAoF,uBAAuB,gDAAgD,4BAA4B,mBAAmB,KAAK,0BAA0B,uCAAuC,oBAAoB,kBAAkB,uBAAuB,iBAAiB,aAAa,eAAe,mBAAmB,UAAU,kBAAkB,QAAQ,MAAM,EAAE,SAAS,iCAAiC,WAAW,gBAAgB,gBAAgB,gBAAgB,sDAAsD,gBAAgB,aAAa,aAAa,OAAO,SAAS,WAAW,iBAAiB,KAAK,SAAS,MAAM,cAAc,SAAS,eAAe,4BAA4B,UAAU,gHAAgH,OAAO,eAAe,mBAAmB,OAAO,sBAAsB,wBAAwB,6BAA6B,OAAO,OAAO,+BAA+B,4BAA4B,UAAU,eAAe,4BAA4B,OAAO,eAAe,6BAA6B,QAAQ,0BAA0B,8CAA8C,UAAU,eAAe,oCAAoC,OAAO,0CAA0C,OAAO,8DAA8D,UAAU,eAAe,OAAO,eAAe,mBAAmB,OAAO,0CAA0C,OAAO,4BAA4B,gDAAgD,UAAU,mDAAmD,mBAAmB,OAAO,sBAAsB,wBAAwB,OAAO,wBAAwB,UAAU,MAAM,+CAA+C,eAAe,eAAe,6BAA6B,eAAe,eAAe,gCAAgC,eAAe,gBAAgB,iCAAiC,iCAAiC,SAAS,gBAAgB,OAAO,sBAAsB,+BAA+B,OAAO,sBAAsB,gBAAgB,OAAO,sFAAsF,0BAA0B,OAAO,eAAe,mBAAmB,oCAAoC,eAAe,cAAc,+BAA+B,0CAA0C,UAAU,kBAAkB,QAAQ,0BAA0B,gEAAgE,YAAY,0BAA0B,OAAO,sBAAsB,UAAU,sBAAsB,mCAAmC,0BAA0B,OAAO,UAAU,0BAA0B,0CAA0C,UAAU,yDAAyD,OAAO,gBAAgB,gCAAgC,QAAQ,6BAA6B,eAAe,OAAO,qCAAqC,sDAAsD,YAAY,0BAA0B,OAAO,sBAAsB,UAAU,gDAAgD,sCAAsC,0BAA0B,OAAO,UAAU,0BAA0B,sBAAsB,UAAU,sBAAsB,+BAA+B,OAAO,sBAAsB,gBAAgB,OAAO,sFAAsF,0BAA0B,OAAO,eAAe,mBAAmB,0CAA0C,eAAe,cAAc,gCAAgC,0BAA0B,sBAAsB,UAAU,uBAAuB,wBAAwB,OAAO,+BAA+B,2BAA2B,OAAO,+BAA+B,uBAAuB,QAAQ,mCAAmC,0CAA0C,UAAU,uBAAuB,wBAAwB,OAAO,+BAA+B,2BAA2B,QAAQ,oBAAoB,eAAe,OAAO,gDAAgD,oDAAoD,oBAAoB,eAAe,2BAA2B,OAAO,0BAA0B,sCAAsC,UAAU,+BAA+B,2BAA2B,QAAQ,oBAAoB,eAAe,2BAA2B,OAAO,gDAAgD,4CAA4C,UAAU,+BAA+B,2BAA2B,QAAQ,oBAAoB,eAAe,OAAO,gDAAgD,4CAA4C,UAAU,+BAA+B,+BAA+B,QAAQ,oBAAoB,eAAe,kCAAkC,OAAO,0BAA0B,oDAAoD,oBAAoB,eAAe,kCAAkC,OAAO,0BAA0B,0DAA0D,oBAAoB,eAAe,OAAO,gDAAgD,oCAAoC,uBAAuB,eAAe,8BAA8B,OAAO,0BAA0B,kDAAkD,uBAAuB,eAAe,OAAO,gDAAgD,0BAA0B,UAAU,gBAAgB,iBAAiB,OAAO,wBAAwB,OAAO,iCAAiC,eAAe,OAAO,0BAA0B,OAAO,iCAAiC,eAAe,OAAO,4CAA4C,2CAA2C,MAAM,0CAA0C,eAAe,wBAAwB,UAAU,MAAM,gDAAgD,iBAAiB,kDAAkD,UAAU,8BAA8B,0BAA0B,OAAO,gBAAgB,qCAAqC,OAAO,MAAM,uCAAuC,0CAA0C,kBAAkB,QAAQ,0BAA0B,eAAe,0BAA0B,OAAO,0BAA0B,gDAAgD,YAAY,qCAAqC,0BAA0B,oDAAoD,iBAAiB,kDAAkD,UAAU,cAAc,wCAAwC,0BAA0B,8CAA8C,YAAY,qCAAqC,iBAAiB,4CAA4C,UAAU,sDAAsD,0BAA0B,oBAAoB,4BAA4B,8BAA8B,OAAO,+CAA+C,oBAAoB,mCAAmC,4BAA4B,6BAA6B,IAAI,6CAA6C,2DAA2D,gCAAgC,mBAAmB,aAAa,WAAW,0BAA0B,QAAQ,WAAW,uBAAuB,mBAAmB,QAAQ,IAAI,iDAAiD,oBAAoB,QAAQ,sBAAsB,wBAAwB,kBAAkB,aAAa,UAAU,eAAe,WAAW,eAAe,WAAW,eAAe,WAAW,eAAe,WAAW,eAAe,WAAW,eAAe,aAAa,eAAe,yBAAyB,0BAA0B,WAAW,eAAe,mBAAmB,eAAe,uBAAuB,0CAA0C,SAAS,gBAAgB,kBAAkB,OAAO,SAAS,kGAAkG,0CAA0C,cAAc,qBAAqB,cAAc,aAAa,wBAAwB,0BAA0B,eAAe,SAAS,wBAAwB,0BAA0B,eAAe,iDAAiD,yBAAyB,cAAc,YAAY,iBAAiB,eAAe,0BAA0B,0BAA0B,eAAe,iDAAiD,iBAAiB,uBAAuB,uBAAuB,mBAAmB,OAAO,kDAAkD,mBAAmB,8CAA8C,+BAA+B,OAAO,uBAAuB,OAAO,+BAA+B,gDAAgD,uBAAuB,mBAAmB,iCAAiC,oDAAoD,uBAAuB,mBAAmB,OAAO,8CAA8C,uBAAuB,mBAAmB,iDAAiD,MAAM,OAAO,OAAO,kDAAkD,uBAAuB,mBAAmB,oBAAoB,wCAAwC,OAAO,MAAM,UAAU,4CAA4C,uBAAuB,mBAAmB,oBAAoB,sCAAsC,OAAO,gBAAgB,uBAAuB,gBAAgB,iBAAiB,mBAAmB,qCAAqC,MAAM,WAAW,MAAM,iBAAiB,OAAO,MAAM,sEAAsE,OAAO,qBAAqB,WAAW,KAAK,iCAAiC,0BAA0B,mBAAmB,KAAK,mBAAmB,qFAAqF,kBAAkB,yBAAyB,8BAA8B,KAAK,iCAAiC,KAAK,kCAAkC,kBAAkB,iBAAiB,gCAAgC,6BAA6B,KAAK,kCAAkC,eAAe,YAAY,kCAAkC,kBAAkB,iBAAiB,gCAAgC,6BAA6B,KAAK,iCAAiC,wBAAwB,kBAAkB,sEAAsE,yFAAyF,sBAAsB,sEAAsE,6BAA6B,UAAU,8EAA8E,0BAA0B,uDAAuD,qBAAqB,uBAAuB,kBAAkB,wJAAwJ,oBAAoB,uBAAuB,UAAU,2CAA2C,yDAAyD,SAAS,8BAA8B,iCAAiC,oBAAoB,wBAAwB,WAAW,kC;;;;;;;;;;;;ACAvqZ,4CAA4C,WAAW,EAAE,wFAAwF,kBAAkB,eAAe,8GAA8G,0BAA0B,UAAU,mBAAO,CAAC,+DAAQ,EAAE,wCAAwC,sCAAsC,wBAAwB,WAAW,KAAK,cAAc,cAAc,oBAAoB,uEAAuE,mBAAmB,eAAe,yCAAyC,aAAa,cAAc,wBAAwB,wBAAwB,WAAW,iBAAiB,uHAAuH,qBAAqB,qBAAqB,2BAA2B,iCAAiC,sBAAsB,iCAAiC,gBAAgB,mCAAmC,4BAA4B,6BAA6B,IAAI,oDAAoD,2DAA2D,gCAAgC,kBAAkB,gBAAgB,wBAAwB,OAAO,uEAAuE,eAAe,mDAAmD,0BAA0B,WAAW,uBAAuB,mBAAmB,QAAQ,IAAI,iDAAiD,oBAAoB,QAAQ,sBAAsB,wBAAwB,4BAA4B,oBAAoB,iCAAiC,oBAAoB,4BAA4B,YAAY,qCAAqC,kCAAkC,iCAAiC,uBAAuB,6BAA6B,SAAS,EAAE,uCAAuC,sBAAsB,gBAAgB,sCAAsC,yBAAyB,0CAA0C,yBAAyB,iBAAiB,0CAA0C,4BAA4B,oBAAoB,iCAAiC,oBAAoB,kCAAkC,sBAAsB,cAAc,uBAAuB,uBAAuB,0BAA0B,4BAA4B,gCAAgC,4BAA4B,qBAAqB,uEAAuE,yEAAyE,iBAAiB,4BAA4B,YAAY,kBAAkB,kBAAkB,wJAAwJ,eAAe,oCAAoC,6BAA6B,8BAA8B,IAAI,mDAAmD,8DAA8D,iCAAiC,mBAAmB,UAAU,6BAA6B,WAAW,UAAU,oBAAoB,yBAAyB,SAAS,UAAU,2CAA2C,4DAA4D,SAAS,YAAY,WAAW,wBAAwB,oBAAoB,QAAQ,IAAI,mDAAmD,qBAAqB,QAAQ,uBAAuB,wBAAwB,8DAA8D,+BAA+B,EAAE,2EAA2E,mCAAmC,gCAAgC,4BAA4B,0DAA0D,kBAAkB,oBAAoB,kBAAkB,0CAA0C,eAAe,oCAAoC,6BAA6B,8BAA8B,IAAI,kDAAkD,8DAA8D,iCAAiC,qBAAqB,gDAAgD,+BAA+B,iCAAiC,aAAa,YAAY,uBAAuB,uBAAuB,WAAW,wBAAwB,oBAAoB,QAAQ,IAAI,mDAAmD,qBAAqB,QAAQ,uBAAuB,wBAAwB,iBAAiB,uBAAuB,SAAS,EAAE,KAAK,sBAAsB,aAAa,6BAA6B,QAAQ,eAAe,EAAE,KAAK,2BAA2B,mCAAmC,QAAQ,uCAAuC,GAAG,YAAY,gBAAgB,aAAa,2BAA2B,mBAAmB,6BAA6B,uDAAuD,mCAAmC,6BAA6B,2BAA2B,aAAa,KAAK,qEAAqE,8BAA8B,WAAW,+BAA+B,4BAA4B,0DAA0D,kBAAkB,oBAAoB,kBAAkB,eAAe,YAAY,eAAe,KAAK,sDAAsD,+DAA+D,iBAAiB,uBAAuB,WAAW,KAAK,aAAa,iCAAiC,yBAAyB,KAAK,2BAA2B,wCAAwC,mDAAmD,YAAY,gBAAgB,cAAc,kC;;;;;;;;;;;;ACAn9L,4CAA4C,WAAW,EAAE,sFAAsF,wxNAAwxN,qsQ;;;;;;;;;;;;ACAv6N,4CAA4C,WAAW,EAAE,0CAA0C,oCAAoC,0CAA0C,wBAAwB,8BAA8B,aAAa,mBAAO,CAAC,0EAAgB,EAAE,8CAA8C,sCAAsC,wBAAwB,WAAW,KAAK,cAAc,cAAc,oBAAoB,uEAAuE,mBAAmB,eAAe,6BAA6B,uCAAuC,0BAA0B,kFAAkF,6BAA6B,iIAAiI,oBAAoB,uBAAuB,uBAAuB,6B;;;;;;;;;;;ACAh8B;AACA;;AAEA,iBAAiB,WAAW,cAAc;;AAE1C;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA,gBAAgB;AAChB;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,oBAAoB;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnPa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,2F;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,8FAAmB;AAChD,WAAW,mBAAO,CAAC,kBAAM;AACzB,gBAAgB,mBAAO,CAAC,8EAAW;AACnC;AACA,yBAAyB,6BAA6B;AACtD,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDa;AACb,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,cAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uFAAQ,eAAe,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDa;AACb,8CAA8C,cAAc;AAC5D;AACA,wBAAwB,mBAAO,CAAC,8FAAmB;AACnD;AACA;AACA,yBAAyB,mBAAO,CAAC,gGAAoB;AACrD;AACA;AACA,iBAAiB,mBAAO,CAAC,gFAAY;AACrC;AACA,sBAAsB,mBAAO,CAAC,0FAAiB;AAC/C;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kBAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0BAA0B;AACzE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gDAAgD,EAAE;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClDa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kBAAM;AACzB,cAAc,mBAAO,CAAC,gFAAY;AAClC,mBAAmB,mBAAO,CAAC,0FAAiB;AAC5C,iBAAiB,mBAAO,CAAC,oFAAc;AACvC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6CAA6C;AAC3E,gCAAgC,yCAAyC;AACzE,gCAAgC,0BAA0B,QAAkB,EAAE;AAC9E,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,WAAW;AACtC,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChHa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kBAAM;AACzB,iBAAiB,mBAAO,CAAC,oFAAc;AACvC,mBAAmB,mBAAO,CAAC,0FAAiB;AAC5C,cAAc,mBAAO,CAAC,gFAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAA4C;AAC1E,gCAAgC,wCAAwC;AACxE,gCAAgC,0BAA0B,QAAkB,EAAE;AAC9E,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAA4C;AAC1E,gCAAgC,uBAAuB;AACvD,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtFa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,iEAAU;AACjC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;;;;;;;;;;;ACZa;AACb,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,8FAAmB;AACnD,sBAAsB,mBAAO,CAAC,0FAAiB;AAC/C,gBAAgB,mBAAO,CAAC,8EAAW;AACnC,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,mBAAmB,mBAAO,CAAC,oFAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,oCAAoC;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mCAAmC;AACpE,+EAA+E,UAAU,4CAA4C,EAAE,EAAE;AACzI;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+EAA+E,UAAU,qCAAqC,EAAE,EAAE;AAClI;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1Fa;AACb;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;AACrB;AACA,YAAY,mBAAO,CAAC,+DAAO;AAC3B,eAAe,mBAAO,CAAC,mEAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D,kCAAkC;AAClC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB,6BAA6B,iDAAiD;AACzH;AACA;AACA;AACA;;;;;;;;;;;;;AChGa;AACb,8CAA8C,cAAcnfa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,sCAAsC,6DAA6D;AACnG,sCAAsC,6DAA6D;AACnG,0BAA0B,6CAA6C;AACvE,yBAAyB,2IAA2I;AACpK,yBAAyB,2DAA2D;AACpF,2BAA2B,2DAA2D;AACtF,yBAAyB,2BAA2B;AACpD,0BAA0B,6JAA6J;AACvL,2BAA2B,yEAAyE;AACpG,2BAA2B,+OAA+O;AAC1Q,wBAAwB,6DAA6D;AACrF,4BAA4B,2DAA2D;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,sBAAsB,mBAAO,CAAC,+DAAe;AAC7C,kBAAkB,mBAAO,CAAC,6DAAW;AACrC,mCAAmC,mBAAO,CAAC,+DAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,YAAY,iHAAiH,EAAE;AACzJ,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,QAAQ,8BAA8B;AACtC;AACA;AACA;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,4CAA4C,4BAA4B,YAAY,0CAA0C,eAAe,GAAG,EAAE,EAAE;AACpJ,aAAa;AACb;AACA;AACA;AACA,0CAA0C,sCAAsC;AAChF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT,uCAAuC,iCAAiC,uBAAuB,EAAE;AACjG;AACA;AACA;AACA;AACA,6CAA6C,iCAAiC,oBAAoB,EAAE;AACpG,yDAAyD,iCAAiC,sBAAsB,EAAE;AAClH,4DAA4D,iCAAiC,kBAAkB,EAAE;AACjH,sDAAsD,gBAAgB;AACtE,SAAS;AACT,KAAK,GAAG,yBAAyB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,6BAA6B,iCAAiC,+CAA+C,EAAE;AAC/G;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kDAAkD,iCAAiC,gBAAgB,EAAE;AACrG,mEAAmE,gBAAgB;AACnF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mDAAmD,iCAAiC,iBAAiB,EAAE;AACvG,iBAAiB;AACjB;AACA,iDAAiD,iCAAiC,qBAAqB,EAAE;AACzG,+CAA+C,iCAAiC,qBAAqB,EAAE;AACvG,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mEAAmE,iCAAiC,qBAAqB,EAAE;AAC3H;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,kDAAkD,iCAAiC,gBAAgB,EAAE;AACrG,kFAAkF,cAAc,wCAAwC,cAAc,gBAAgB,GAAG,EAAE,EAAE;AAC7K,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,kDAAkD,iCAAiC,gBAAgB,EAAE;AACrG,kFAAkF,cAAc,wCAAwC,cAAc,gBAAgB,GAAG,EAAE,EAAE;AAC7K;AACA;AACA,iBAAiB;AACjB;AACA,4CAA4C,iCAAiC,sBAAsB,EAAE;AACrG,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,wCAAwC,iCAAiC,kBAAkB,EAAE;AAC7F,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,kDAAkD,iCAAiC,gBAAgB,EAAE;AACrG,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gEAAgE,gBAAgB;AAChF,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS,GAAG,uBAAuB;AACnC,KAAK,GAAG,8CAA8C;AACtD;AACA;;;;;;;;;;;;;ACvOa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC,gBAAgB,EAAE;AAC7E,2EAA2E,cAAc,wCAAwC,cAAc,eAAe,GAAG,EAAE,EAAE;AACrK,KAAK,GAAG,yBAAyB;AACjC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,gBAAgB,EAAE;AAC7E;AACA,KAAK,GAAG,yBAAyB;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,gFAAgF,gBAAgB;AAChG;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB,wKAAwK;AACxN,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG,mBAAmB;AACnC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,sCAAsC,+BAA+B;AACrE,0CAA0C,wBAAwB;AAClE,0CAA0C,iBAAiB;AAC3D,iBAAiB,GAAG,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,QAAQ,yBAAyB;AACjC;AACA;AACA;AACA,qCAAqC,kJAAkJ;AACvL;AACA,SAAS;AACT;AACA;AACA;AACA,yCAAyC,kJAAkJ;AAC3L,2CAA2C,+FAA+F;AAC1I,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,iCAAiC,gBAAgB,EAAE;AAClF,oEAAoE,cAAc,wCAAwC,cAAc,gBAAgB,GAAG,EAAE,EAAE;AAC/J,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,gCAAgC,wBAAwB;AACxD;AACA,SAAS;AACT;AACA,gCAAgC,wBAAwB;AACxD,+CAA+C,yBAAyB,kBAAkB,mBAAmB;AAC7G,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,uCAAuC,iBAAiB;AACxD,SAAS;AACT;AACA,uCAAuC,iBAAiB;AACxD;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,8BAA8B,iCAAiC,qBAAqB,EAAE;AACtF,SAAS;AACT;AACA,qCAAqC,iCAAiC,sBAAsB,EAAE;AAC9F,wDAAwD,iBAAiB;AACzE,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+EAA+E,iCAAiC,0BAA0B,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,+EAA+E,iCAAiC,mCAAmC,EAAE;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC5ba;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA,+EAA+E,6BAA6B;AAC5G;AACA,+BAA+B,iCAAiC,8BAA8B,EAAE;AAChG;AACA;AACA,KAAK,GAAG,8CAA8C;AACtD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8BAA8B,iCAAiC,mCAAmC,EAAE;AACpG,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA,0CAA0C,iCAAiC,gCAAgC,EAAE;AAC7G,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA,mDAAmD,iCAAiC,0BAA0B,EAAE;AAChH,6BAA6B;AAC7B;AACA,+DAA+D,mBAAmB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,qEAAqE,iCAAiC;AACtG,oEAAoE,iCAAiC,0BAA0B,EAAE;AACjI,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB,GAAG,oDAAoD;AAC5E;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD,iCAAiC,0BAA0B,EAAE;AACnH;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS,GAAG,6BAA6B;AACzC,KAAK,GAAG,yCAAyC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2BAA2B,iCAAiC,0BAA0B,EAAE;AACxF;AACA,yCAAyC,kBAAkB;AAC3D,4CAA4C,kBAAkB;AAC9D,yCAAyC,kBAAkB;AAC3D,0CAA0C,kBAAkB;AAC5D,uCAAuC,kBAAkB;AACzD,SAAS;AACT,KAAK,GAAG,6BAA6B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,wCAAwC,gBAAgB;AACxD;AACA,KAAK,GAAG,mCAAmC;AAC3C;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AC/Ga;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA,qCAAqC,iCAAiC,8CAA8C,EAAE;AACtH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8BAA8B;AAC3E;AACA,kDAAkD,gBAAgB;AAClE,2CAA2C,kCAAkC;AAC7E,wCAAwC,6EAA6E;AACrH,gCAAgC,iCAAiC,qBAAqB,EAAE;AACxF,KAAK,GAAG,4BAA4B;AACpC;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC7Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,sBAAsB,mBAAO,CAAC,gEAAgB;AAC9C,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,oBAAoB,gDAAgD;AACpE;AACA;AACA,2HAA2H,iCAAiC,6DAA6D,EAAE;AAC3N,wHAAwH,iCAAiC,4DAA4D,EAAE;AACvN,2HAA2H,aAAa;AACxI,qHAAqH,aAAa;AAClI;AACA,qCAAqC,iCAAiC,6CAA6C,EAAE;AACrH;AACA,mCAAmC,qCAAqC;AACxE,oDAAoD,gBAAgB;AACpE;AACA;AACA,SAAS,GAAG,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb,SAAS;AACT;AACA,KAAK,GAAG,wBAAwB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC,+BAA+B,EAAE;AAC5F,yDAAyD,wBAAwB;AACjF,0DAA0D,gBAAgB;AAC1E;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF;AACA,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,iCAAiC,oBAAoB,EAAE;AACzF;AACA;AACA;AACA;AACA,KAAK,GAAG,wBAAwB;AAChC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC,sBAAsB,EAAE;AAClG,qCAAqC,iCAAiC,0DAA0D,EAAE;AAClI;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,wCAAwC,iCAAiC,YAAY,qDAAqD,iBAAiB,GAAG,EAAE,EAAE;AAClK,wCAAwC,iCAAiC,6BAA6B,EAAE;AACxG,oCAAoC,uCAAuC;AAC3E,iBAAiB,GAAG,2BAA2B;AAC/C;AACA,aAAa;AACb;AACA,mCAAmC,iCAAiC,gBAAgB,EAAE;AACtF,wDAAwD,wCAAwC,qBAAqB,gBAAgB,GAAG,EAAE;AAC1I;AACA,aAAa;AACb;AACA,qEAAqE,iCAAiC,sBAAsB,EAAE;AAC9H;AACA,aAAa;AACb;AACA,wCAAwC,sBAAsB;AAC9D;AACA;AACA,aAAa;AACb;AACA,oDAAoD,iCAAiC,qCAAqC,EAAE;AAC5H,mDAAmD,yBAAyB;AAC5E,oDAAoD,gBAAgB;AACpE,6DAA6D,gBAAgB;AAC7E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,uCAAuC,eAAe;AACtD;AACA,aAAa;AACb;AACA,uCAAuC,eAAe;AACtD,qDAAqD,gBAAgB;AACrE;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,uCAAuC,sBAAsB;AAC7D;AACA,aAAa;AACb;AACA,wCAAwC,mBAAmB;AAC3D;AACA,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F,oDAAoD,gBAAgB;AACpE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,4BAA4B,YAAY,6BAA6B,EAAE,EAAE;AAC1G;AACA,aAAa;AACb;AACA;AACA,sCAAsC,iCAAiC,qBAAqB,EAAE;AAC9F;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK,GAAG,4CAA4C;AACpD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mDAAmD,yBAAyB,mBAAmB,eAAe;AAC9G;AACA;AACA,KAAK,GAAG,8CAA8C;AACtD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,+BAA+B,iCAAiC,oBAAoB,EAAE;AACtF;AACA,gCAAgC,eAAe;AAC/C,+BAA+B,wDAAwD;AACvF,8CAA8C,eAAe;AAC7D,KAAK,GAAG,gCAAgC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AC/Qa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA,2CAA2C,YAAY,gSAAgS;AACvV;AACA;AACA,uDAAuD,gCAAgC,IAAI,mBAAmB;AAC9G;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE,aAAa;AACb,qDAAqD,iBAAiB,OAAO;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iCAAiC,eAAe,EAAE;AACvF,oCAAoC,iCAAiC,oBAAoB,EAAE;AAC3F;AACA;AACA,uCAAuC,iCAAiC,iBAAiB,EAAE;AAC3F,oCAAoC,4BAA4B,YAAY,0CAA0C,eAAe,GAAG,EAAE,EAAE;AAC5I;AACA,KAAK,GAAG,kBAAkB;AAC1B;AACA,4CAA4C,iCAAiC,sBAAsB,EAAE;AACrG;AACA,KAAK,GAAG,yBAAyB;AACjC;AACA,sCAAsC,iCAAiC,gBAAgB,EAAE;AACzF,oCAAoC,iCAAiC,qBAAqB,EAAE;AAC5F,oCAAoC,4BAA4B,YAAY,2CAA2C,gBAAgB,GAAG,EAAE,EAAE;AAC9I,qEAAqE,cAAc,wCAAwC,cAAc,gBAAgB,GAAG,EAAE,EAAE;AAChK,KAAK,GAAG,mBAAmB;AAC3B;AACA,sCAAsC,iCAAiC,gBAAgB,EAAE;AACzF,oCAAoC,iCAAiC,qBAAqB,EAAE;AAC5F;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sCAAsC,iCAAiC,0BAA0B,EAAE;AACnG,wCAAwC,4EAA4E;AACpH,0CAA0C,iCAAiC,qBAAqB,EAAE;AAClG;AACA,8CAA8C,iCAAiC;AAC/E,SAAS;AACT;AACA;AACA;AACA,KAAK,GAAG,sBAAsB;AAC9B;AACA,0BAA0B,iCAAiC,oBAAoB,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC,gBAAgB,EAAE;AACrF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F;AACA;AACA,KAAK;AACL;AACA,yCAAyC,mBAAmB;AAC5D;AACA,4DAA4D,iCAAiC,uBAAuB,EAAE;AACtH,aAAa,iEAAiE;AAC9E;AACA;AACA;AACA;AACA,uDAAuD,iCAAiC,kBAAkB,EAAE;AAC5G;AACA,KAAK,GAAG,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,2BAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,sBAAsB;AAC9B;AACA,qCAAqC,iCAAiC,sCAAsC,EAAE;AAC9G,oCAAoC,4BAA4B,YAAY,4CAA4C,eAAe,GAAG,EAAE,EAAE;AAC9I,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uDAAuD,iCAAiC,qBAAqB,EAAE;AAC/G,KAAK,GAAG,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,2BAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,oBAAoB;AAC5B;AACA;;;;;;;;;;;;;AC/Ka;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC,4BAA4B,EAAE;AACzF;AACA;AACA;AACA,8CAA8C,yCAAyC;AACvF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF;AACA,sEAAsE,gBAAgB,IAAI,qBAAqB;AAC/G,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF;AACA,sEAAsE,gBAAgB,IAAI,qBAAqB;AAC/G,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF;AACA,sEAAsE,gBAAgB,IAAI,qBAAqB;AAC/G,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF;AACA,sEAAsE,gBAAgB,IAAI,qBAAqB;AAC/G,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF,0CAA0C,gBAAgB;AAC1D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,oBAAoB;AAC5B;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,qCAAqC,iCAAiC,eAAe,EAAE;AACvF,oCAAoC,iCAAiC,oBAAoB,EAAE;AAC3F,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,eAAe,EAAE;AAC5E,wDAAwD,gBAAgB,IAAI,mBAAmB;AAC/F,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACtGa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC,6BAA6B,EAAE;AAClG;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,iDAAiD,EAAE;AACxH;AACA,iBAAiB;AACjB,+BAA+B,QAAQ;AACvC;AACA;AACA,KAAK,GAAG,iBAAiB;AACzB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA,2CAA2C,YAAY,gSAAgS;AACvV;AACA;AACA;AACA;AACA,kFAAkF,8BAA8B,iCAAiC;AACjJ,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4BAA4B;AACpC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B,0DAA0D,EAAE;AACzH,mCAAmC,yBAAyB;AAC5D;AACA,SAAS;AACT,yCAAyC,+BAA+B,uCAAuC,EAAE;AACjH,wCAAwC,oCAAoC;AAC5E,oCAAoC,wBAAwB;AAC5D;AACA,wDAAwD,+BAA+B,gCAAgC,EAAE;AACzH,yDAAyD,+BAA+B,qCAAqC,EAAE;AAC/H,0DAA0D,iCAAiC,mBAAmB,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wGAAwG;AACxI;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,uCAAuC,gCAAgC,yCAAyC,EAAE;AAClH,iBAAiB;AACjB;AACA,uCAAuC,gCAAgC,yCAAyC,EAAE;AAClH;AACA;AACA,SAAS;AACT;AACA,gCAAgC,kDAAkD;AAClF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,kDAAkD,4BAA4B,gCAAgC,EAAE;AAChH;AACA,wCAAwC,iCAAiC,eAAe,EAAE;AAC1F,6DAA6D,gBAAgB;AAC7E,oDAAoD,4BAA4B,YAAY,0CAA0C,aAAa,GAAG,EAAE,EAAE;AAC1J,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,0CAA0C,iCAAiC,sBAAsB,EAAE;AACnG,wCAAwC,oBAAoB;AAC5D,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,SAAS;AACT,KAAK,GAAG,mDAAmD;AAC3D;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;;;;;;;;;;;;;AC7Ia;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,+CAA+C,iCAAiC,qBAAqB,EAAE;AACvG,KAAK,GAAG,4BAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,qDAAqD,8EAA8E;AACnI;AACA,qCAAqC;AACrC;AACA,qDAAqD,+EAA+E;AACpI;AACA,qCAAqC;AACrC;AACA,qDAAqD,8EAA8E;AACnI;AACA,qCAAqC;AACrC;AACA,qDAAqD,gFAAgF;AACrI;AACA,qCAAqC;AACrC;AACA,qDAAqD,iFAAiF;AACtI;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACnGa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,uEAAe;AAC7C,iBAAiB,mBAAO,CAAC,6DAAU;AACnC,oBAAoB,mBAAO,CAAC,mEAAa;AACzC,oBAAoB,mBAAO,CAAC,mEAAa;AACzC,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD,oBAAoB,mBAAO,CAAC,mEAAa;AACzC,qBAAqB,mBAAO,CAAC,qEAAc;AAC3C,qBAAqB,mBAAO,CAAC,qEAAc;AAC3C,iBAAiB,mBAAO,CAAC,6DAAU;AACnC,eAAe,mBAAO,CAAC,yDAAQ;AAC/B,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD,mBAAmB,mBAAO,CAAC,uEAAY;AACvC,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA,qCAAqC,iCAAiC,+CAA+C,EAAE;AACvH;AACA;AACA;AACA;AACA,mCAAmC,iCAAiC;AACpE,qDAAqD,2BAA2B;AAChF,8BAA8B,yBAAyB;AACvD;AACA,kEAAkE,iBAAiB;AACnF;AACA,0CAA0C,cAAc;AACxD,0CAA0C,cAAc;AACxD,4CAA4C,cAAc;AAC1D,gDAAgD,cAAc;AAC9D,uDAAuD,cAAc;AACrE,yDAAyD,cAAc;AACvE,yDAAyD,yCAAyC;AAClG;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D,wDAAwD,gBAAgB;AACxE;AACA,aAAa;AACb;AACA;AACA,gDAAgD,iBAAiB;AACjE,aAAa;AACb;AACA;AACA,8CAA8C,wBAAwB;AACtE,8CAA8C,wBAAwB;AACtE;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,gDAAgD,iBAAiB;AACjE,aAAa;AACb,SAAS;AACT,4CAA4C,iCAAiC,iDAAiD,EAAE;AAChI,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,8BAA8B,iCAAiC,sBAAsB,EAAE;AACvF,uCAAuC,gBAAgB;AACvD,yCAAyC,gBAAgB;AACzD,yCAAyC,gBAAgB;AACzD,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT,gDAAgD,iCAAiC,sBAAsB,EAAE;AACzG;AACA;AACA,SAAS,GAAG,uBAAuB;AACnC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,4CAA4C,0BAA0B,0CAA0C,iCAAiC,sCAAsC,EAAE;AACzL;AACA,SAAS;AACT,yEAAyE,iCAAiC,uCAAuC,EAAE,KAAK,8BAA8B;AACtL,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACpGa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA,0BAA0B,iCAAiC,0BAA0B,EAAE;AACvF;AACA,4CAA4C,iBAAiB;AAC7D,SAAS;AACT,KAAK,GAAG,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,8DAAW;AACpC;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,0CAA0C,gBAAgB;AAC1D,uCAAuC,gBAAgB;AACvD;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA,oCAAoC,qCAAqC;AACzE;AACA;AACA,0BAA0B,iCAAiC,6BAA6B,EAAE;AAC1F;AACA;AACA;AACA;AACA,sCAAsC,0BAA0B;AAChE,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA;AACA;AACA,8CAA8C,wBAAwB;AACtE,oDAAoD,wBAAwB;AAC5E,qDAAqD,iBAAiB;AACtE,iBAAiB;AACjB;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE,oDAAoD,gBAAgB;AACpE,iBAAiB;AACjB;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iDAAiD,gBAAgB;AACjE,+CAA+C,gBAAgB;AAC/D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,8CAA8C;AAC1D,KAAK,GAAG,8CAA8C;AACtD;AACA;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,8DAAW;AACpC,mBAAO,CAAC,4EAAa;AACrB,mBAAO,CAAC,oFAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,oCAAoC,gBAAgB;AACpD,oCAAoC,gBAAgB;AACpD,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+BAA+B;AACpE,wCAAwC,gCAAgC;AACxE;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA;AACA;AACA,oCAAoC,qCAAqC;AACzE;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC,uCAAuC,EAAE;AACxG,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,2BAA2B;AACnC;AACA,0BAA0B,iCAAiC,2BAA2B,EAAE;AACxF;AACA;AACA;AACA;AACA,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA,gDAAgD,+BAA+B;AAC/E,iDAAiD,+BAA+B;AAChF,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+CAA+C,+BAA+B;AAC9E,mDAAmD,+BAA+B;AAClF,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE,oDAAoD,gBAAgB;AACpE,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,+CAA+C,kCAAkC;AACjF,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE;AACA,8DAA8D,iCAAiC,gBAAgB,EAAE;AACjH,iBAAiB;AACjB;AACA,wDAAwD,gBAAgB;AACxE;AACA,2CAA2C,yBAAyB;AACpE;AACA;AACA;AACA;AACA,0CAA0C,iCAAiC,qCAAqC,EAAE;AAClH,wDAAwD,iCAAiC;AACzF,0DAA0D,iCAAiC;AAC3F,0DAA0D,iCAAiC;AAC3F,qBAAqB,GAAG,0BAA0B;AAClD;AACA,0CAA0C,iCAAiC,uCAAuC,EAAE;AACpH,qDAAqD,+BAA+B;AACpF,qDAAqD,+BAA+B;AACpF;AACA;AACA;AACA,2DAA2D,iCAAiC;AAC5F,6BAA6B;AAC7B;AACA,2DAA2D,iCAAiC;AAC5F,6BAA6B;AAC7B;AACA,2DAA2D,iCAAiC;AAC5F,6BAA6B;AAC7B;AACA,2DAA2D,iCAAiC;AAC5F,6BAA6B;AAC7B;AACA,mEAAmE,gCAAgC;AACnG,6BAA6B;AAC7B;AACA,6DAA6D,gCAAgC;AAC7F,6BAA6B;AAC7B;AACA,mEAAmE,gCAAgC;AACnG;AACA;AACA,qBAAqB,GAAG,wDAAwD;AAChF;AACA,0CAA0C,iCAAiC,uCAAuC,EAAE;AACpH;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,gEAAgE,iBAAiB;AACjF,6BAA6B;AAC7B;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA,qBAAqB,GAAG,4BAA4B;AACpD;AACA;AACA,SAAS,GAAG,qBAAqB;AACjC,KAAK,GAAG,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,qCAAqC,EAAE;AAClG,0DAA0D,kBAAkB;AAC5E;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF,0DAA0D,iCAAiC;AAC3F,0DAA0D,iCAAiC;AAC3F,aAAa;AACb;AACA,qDAAqD,iCAAiC;AACtF,2DAA2D,iCAAiC;AAC5F,0DAA0D,iCAAiC;AAC3F,2DAA2D,iCAAiC;AAC5F,0DAA0D,iCAAiC;AAC3F;AACA;AACA,KAAK,GAAG,6BAA6B;AACrC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,6CAA6C,EAAE;AAC1G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,KAAK,GAAG,kCAAkC;AAC1C;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,qCAAqC,EAAE;AAClG;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D,+CAA+C,gBAAgB;AAC/D;AACA;AACA,KAAK,GAAG,0BAA0B;AAClC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AClUa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,8DAAW;AACpC;AACA;AACA;AACA;AACA,qCAAqC,iCAAiC,uDAAuD,EAAE;AAC/H;AACA,SAAS;AACT,kDAAkD,gBAAgB;AAClE,mDAAmD,gBAAgB;AACnE,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE,8CAA8C,gBAAgB;AAC9D,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2CAA2C,gBAAgB;AAC3D,yCAAyC,gBAAgB;AACzD,2CAA2C,gBAAgB;AAC3D,aAAa;AACb;AACA,2CAA2C,gBAAgB;AAC3D,yCAAyC,gBAAgB;AACzD,2CAA2C,gBAAgB;AAC3D,aAAa;AACb,SAAS;AACT;AACA,KAAK,GAAG,4BAA4B;AACpC;AACA,KAAK;AACL;AACA;AACA,yCAAyC,mCAAmC;AAC5E,uCAAuC,mCAAmC;AAC1E,sCAAsC,mCAAmC;AACzE,SAAS;AACT,+CAA+C,iCAAiC,qCAAqC,EAAE;AACvH,wCAAwC,mCAAmC;AAC3E,sDAAsD,mCAAmC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,wBAAwB;AAC7D,SAAS,GAAG,iCAAiC;AAC7C;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,2BAA2B,iCAAiC,gBAAgB,EAAE;AAC9E,mCAAmC,wBAAwB;AAC3D,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACpFa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,4BAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB,SAAS;AACT,KAAK;AACL;AACA,oCAAoC,iCAAiC,uCAAuC,EAAE;AAC9G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,8CAA8C,iBAAiB;AAC/D,aAAa;AACb;AACA,uCAAuC,yBAAyB;AAChE,2CAA2C,gBAAgB;AAC3D,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,GAAG,6CAA6C;AACrD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2CAA2C,4BAA4B,YAAY,8BAA8B,EAAE,EAAE;AACrH,KAAK,GAAG,mDAAmD;AAC3D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,qCAAqC,kCAAkC;AACvE,qCAAqC,kCAAkC;AACvE,uCAAuC,iBAAiB;AACxD,uCAAuC,iBAAiB;AACxD;AACA;AACA,oCAAoC,iCAAiC,wBAAwB,EAAE;AAC/F;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA,aAAa;AACb;AACA;AACA,KAAK,GAAG,uDAAuD;AAC/D;AACA,oCAAoC,iCAAiC,oBAAoB,EAAE;AAC3F;AACA;AACA;AACA,mCAAmC,iCAAiC,gBAAgB,EAAE;AACtF,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,mCAAmC,iCAAiC,gBAAgB,EAAE;AACtF,gDAAgD,iBAAiB;AACjE,aAAa;AACb;AACA;AACA,gDAAgD,iBAAiB;AACjE,aAAa;AACb;AACA,iCAAiC,iCAAiC,qBAAqB,EAAE;AACzF;AACA;AACA,KAAK,GAAG,mDAAmD;AAC3D;AACA;;;;;;;;;;;;;ACnHa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA,gCAAgC,iCAAiC,kCAAkC,EAAE;AACrG,iCAAiC,gBAAgB;AACjD;AACA;AACA,0BAA0B,iCAAiC,qCAAqC,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA,sCAAsC,2BAA2B;AACjE,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA,4CAA4C,yBAAyB;AACrE,0DAA0D,iBAAiB;AAC3E,4DAA4D,iBAAiB;AAC7E,iBAAiB;AACjB;AACA;AACA,6CAA6C,iFAAiF;AAC9H,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS,GAAG,2DAA2D;AACvE,KAAK,GAAG,+BAA+B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AChDa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC,mCAAmC,EAAE;AAChG;AACA;AACA;AACA;AACA,SAAS,GAAG,6BAA6B;AACzC,KAAK,GAAG,6BAA6B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,mBAAO,CAAC,oFAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC,mCAAmC,EAAE;AACpG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,2BAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,mCAAmC,wBAAwB;AAC3D;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,kCAAkC,iCAAiC,0CAA0C,EAAE;AAC/G,gCAAgC,sCAAsC;AACtE;AACA;AACA;AACA,qCAAqC,iCAAiC,uCAAuC,EAAE;AAC/G;AACA,aAAa;AACb;AACA,sCAAsC,iCAAiC,qBAAqB,EAAE;AAC9F;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,sCAAsC,iCAAiC,qBAAqB,EAAE;AAC9F;AACA;AACA;AACA,KAAK,GAAG,0DAA0D;AAClE;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACrFa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,oEAAS;AACjC,iBAAiB,mBAAO,CAAC,sEAAU;AACnC,oBAAoB,mBAAO,CAAC,4EAAa;AACzC,kBAAkB,mBAAO,CAAC,wEAAW;AACrC,wBAAwB,mBAAO,CAAC,oFAAiB;AACjD,wBAAwB,mBAAO,CAAC,oFAAiB;AACjD,2BAA2B,mBAAO,CAAC,0FAAoB;AACvD,yBAAyB,mBAAO,CAAC,sFAAkB;AACnD,uBAAuB,mBAAO,CAAC,kFAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAchjBa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA,sCAAsC,6DAA6D;AACnG,sCAAsC,6DAA6D;AACnG,0BAA0B,6CAA6C;AACvE,yBAAyB,2IAA2I;AACpK,yBAAyB,2DAA2D;AACpF,2BAA2B,2DAA2D;AACtF,yBAAyB,2BAA2B;AACpD,0BAA0B,6JAA6J;AACvL,2BAA2B,yEAAyE;AACpG,2BAA2B,+OAA+O;AAC1Q,wBAAwB,6DAA6D;AACrF,4BAA4B,2DAA2D;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,sBAAsB,mBAAO,CAAC,+DAAe;AAC7C,kBAAkB,mBAAO,CAAC,6DAAW;AACrC,mCAAmC,mBAAO,CAAC,+DAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,YAAY,iHAAiH,EAAE;AACzJ,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,QAAQ,8BAA8B;AACtC;AACA;AACA;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,4CAA4C,4BAA4B,YAAY,0CAA0C,eAAe,GAAG,EAAE,EAAE;AACpJ,aAAa;AACb;AACA;AACA;AACA,0CAA0C,sCAAsC;AAChF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT,uCAAuC,iCAAiC,uBAAuB,EAAE;AACjG;AACA;AACA;AACA;AACA,6CAA6C,iCAAiC,oBAAoB,EAAE;AACpG,yDAAyD,iCAAiC,sBAAsB,EAAE;AAClH,4DAA4D,iCAAiC,kBAAkB,EAAE;AACjH,sDAAsD,gBAAgB;AACtE,SAAS;AACT,KAAK,GAAG,yBAAyB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,6BAA6B,iCAAiC,+CAA+C,EAAE;AAC/G;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kDAAkD,iCAAiC,gBAAgB,EAAE;AACrG,mEAAmE,gBAAgB;AACnF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mDAAmD,iCAAiC,iBAAiB,EAAE;AACvG,iBAAiB;AACjB;AACA,iDAAiD,iCAAiC,qBAAqB,EAAE;AACzG,+CAA+C,iCAAiC,qBAAqB,EAAE;AACvG,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mEAAmE,iCAAiC,qBAAqB,EAAE;AAC3H;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,kDAAkD,iCAAiC,gBAAgB,EAAE;AACrG,kFAAkF,cAAc,wCAAwC,cAAc,gBAAgB,GAAG,EAAE,EAAE;AAC7K,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,kDAAkD,iCAAiC,gBAAgB,EAAE;AACrG,kFAAkF,cAAc,wCAAwC,cAAc,gBAAgB,GAAG,EAAE,EAAE;AAC7K;AACA;AACA,iBAAiB;AACjB;AACA,4CAA4C,iCAAiC,sBAAsB,EAAE;AACrG,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,wCAAwC,iCAAiC,kBAAkB,EAAE;AAC7F,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,kDAAkD,iCAAiC,gBAAgB,EAAE;AACrG,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS,GAAG,uBAAuB;AACnC,KAAK,GAAG,8CAA8C;AACtD;AACA;;;;;;;;;;;;;ACtOa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC,gBAAgB,EAAE;AAC7E,2EAA2E,cAAc,wCAAwC,cAAc,eAAe,GAAG,EAAE,EAAE;AACrK,KAAK,GAAG,yBAAyB;AACjC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,gBAAgB,EAAE;AAC7E;AACA,KAAK,GAAG,yBAAyB;AACjC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,gFAAgF,gBAAgB;AAChG;AACA,KAAK;AACL;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C,4BAA4B,YAAY,4HAA4H;AACpK,SAAS;AACT;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D,mDAAmD,UAAU;AAC7D,aAAa,GAAG,mBAAmB;AACnC;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA,QAAQ,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,oDAAoD,iCAAiC,OAAO,EAAE;AAC9F;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS,GAAG,sCAAsC;AAClD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C,aAAa;AACb,SAAS;AACT,2CAA2C,4BAA4B,QAAQ,QAAQ;AACvF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA,8BAA8B,+BAA+B,4DAA4D,EAAE;AAC3H,SAAS;AACT;AACA,2CAA2C,wBAAwB,IAAI,wBAAwB;AAC/F;AACA,KAAK;AACL;AACA;AACA,gCAAgC,iCAAiC,mBAAmB,EAAE;AACtF,SAAS;AACT;AACA,2CAA2C,sBAAsB,IAAI,wBAAwB;AAC7F;AACA,KAAK;AACL;AACA;AACA;AACA,qCAAqC,4IAA4I;AACjL;AACA,SAAS;AACT;AACA;AACA;AACA,yCAAyC,4IAA4I;AACrL,2CAA2C,yFAAyF;AACpI,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA,6DAA6D,wBAAwB;AACrF;AACA;AACA,SAAS;AACT;AACA,+BAA+B,iCAAiC,gBAAgB,EAAE;AAClF,oEAAoE,cAAc,wCAAwC,cAAc,gBAAgB,GAAG,EAAE,EAAE;AAC/J,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+CAA+C,yBAAyB;AACxE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,uCAAuC,iBAAiB;AACxD,SAAS;AACT;AACA,uCAAuC,iBAAiB;AACxD;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,8BAA8B,iCAAiC,qBAAqB,EAAE;AACtF,SAAS;AACT;AACA,qCAAqC,iCAAiC,sBAAsB,EAAE;AAC9F,wDAAwD,iBAAiB;AACzE,SAAS;AACT;AACA;AACA,kDAAkD,gBAAgB;AAClE,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,sEAAsE,sBAAsB,kCAAkC,wBAAwB;AACtJ;AACA,qCAAqC,iCAAiC,sBAAsB,EAAE;AAC9F,iCAAiC,iCAAiC,0DAA0D,EAAE;AAC9H;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oCAAoC,iCAAiC,YAAY,qDAAqD,iBAAiB,GAAG,EAAE,EAAE;AAC9J,oCAAoC,iCAAiC,6BAA6B,EAAE;AACpG,gCAAgC,uCAAuC;AACvE,aAAa,GAAG,2BAA2B;AAC3C;AACA,SAAS;AACT;AACA,+BAA+B,iCAAiC,gBAAgB,EAAE;AAClF,oDAAoD,wCAAwC,qBAAqB,gBAAgB,GAAG,EAAE;AACtI;AACA,SAAS;AACT;AACA,iEAAiE,iCAAiC,sBAAsB,EAAE;AAC1H;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gDAAgD,iCAAiC,qCAAqC,EAAE;AACxH,+CAA+C,yBAAyB;AACxE,gDAAgD,gBAAgB;AAChE,yDAAyD,gBAAgB;AACzE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qCAAqC,yBAAyB;AAC9D,mCAAmC,oBAAoB;AACvD,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qDAAqD,iCAAiC,sBAAsB,EAAE;AAC9G;AACA;AACA,SAAS;AACT;AACA,8BAA8B,iCAAiC,sBAAsB,EAAE;AACvF,gDAAgD,gBAAgB;AAChE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,4BAA4B,YAAY,6BAA6B,EAAE,EAAE;AACtG;AACA,SAAS;AACT;AACA;AACA,kCAAkC,iCAAiC,qBAAqB,EAAE;AAC1F;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL,+EAA+E,iCAAiC,0BAA0B,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,+EAA+E,iCAAiC,mCAAmC,EAAE;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACjpBa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA,+EAA+E,6BAA6B;AAC5G;AACA,+BAA+B,iCAAiC,8BAA8B,EAAE;AAChG;AACA;AACA,KAAK,GAAG,8CAA8C;AACtD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,8BAA8B,iCAAiC,mCAAmC,EAAE;AACpG,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA,0CAA0C,iCAAiC,gCAAgC,EAAE;AAC7G,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA,mDAAmD,iCAAiC,0BAA0B,EAAE;AAChH,6BAA6B;AAC7B;AACA,+DAA+D,mBAAmB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,qEAAqE,iCAAiC;AACtG,oEAAoE,iCAAiC,0BAA0B,EAAE;AACjI,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB,GAAG,oDAAoD;AAC5E;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD,iCAAiC,0BAA0B,EAAE;AACnH;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,SAAS,GAAG,6BAA6B;AACzC,KAAK,GAAG,yCAAyC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2BAA2B,iCAAiC,0BAA0B,EAAE;AACxF;AACA,yCAAyC,kBAAkB;AAC3D,4CAA4C,kBAAkB;AAC9D,yCAAyC,kBAAkB;AAC3D,0CAA0C,kBAAkB;AAC5D,uCAAuC,kBAAkB;AACzD,SAAS;AACT,KAAK,GAAG,6BAA6B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,wCAAwC,gBAAgB;AACxD;AACA,KAAK,GAAG,mCAAmC;AAC3C;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AC/Ga;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA,qCAAqC,iCAAiC,8CAA8C,EAAE;AACtH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8BAA8B;AAC3E;AACA,kDAAkD,gBAAgB;AAClE,2CAA2C,mCAAmC;AAC9E,wCAAwC,6EAA6E;AACrH,gCAAgC,iCAAiC,qBAAqB,EAAE;AACxF,kCAAkC,uCAAuC;AACzE,mCAAmC,mCAAmC;AACtE,KAAK,GAAG,4BAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA,kFAAkF,4BAA4B;AAC9G;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC,6BAA6B,EAAE;AAC9F;AACA;AACA,KAAK,GAAG,4CAA4C;AACpD;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;;;;;;;;;;;;;ACvBa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,sBAAsB,mBAAO,CAAC,gEAAgB;AAC9C,iBAAiB,mBAAO,CAAC,6DAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,oBAAoB,gDAAgD;AACpE;AACA;AACA,6HAA6H,iCAAiC,6DAA6D,EAAE;AAC7N,0HAA0H,iCAAiC,4DAA4D,EAAE;AACzN,2HAA2H,aAAa;AACxI,qHAAqH,aAAa;AAClI;AACA,qCAAqC,iCAAiC,6CAA6C,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,yCAAyC;AACrD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb,SAAS;AACT;AACA,KAAK,GAAG,wBAAwB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC,+BAA+B,EAAE;AAC5F,yDAAyD,wBAAwB;AACjF,0DAA0D,gBAAgB;AAC1E;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF;AACA,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,iCAAiC,oBAAoB,EAAE;AACzF;AACA;AACA;AACA;AACA,KAAK,GAAG,wBAAwB;AAChC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK,GAAG,4CAA4C;AACpD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK,GAAG,8CAA8C;AACtD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,+BAA+B,iCAAiC,oBAAoB,EAAE;AACtF;AACA;AACA,+BAA+B,wDAAwD;AACvF,8CAA8C,eAAe;AAC7D,KAAK,GAAG,gCAAgC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACxJa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA,2CAA2C,YAAY,gSAAgS;AACvV;AACA;AACA,uDAAuD,oEAAoE;AAC3H;AACA;AACA,gCAAgC,oFAAoF;AACpH,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AC9Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE,aAAa;AACb,qDAAqD,iBAAiB,OAAO;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iCAAiC,eAAe,EAAE;AACvF,oCAAoC,iCAAiC,oBAAoB,EAAE;AAC3F;AACA;AACA,uCAAuC,iCAAiC,iBAAiB,EAAE;AAC3F,oCAAoC,4BAA4B,YAAY,0CAA0C,eAAe,GAAG,EAAE,EAAE;AAC5I;AACA,KAAK,GAAG,kBAAkB;AAC1B;AACA,4CAA4C,iCAAiC,sBAAsB,EAAE;AACrG;AACA,KAAK,GAAG,yBAAyB;AACjC;AACA,sCAAsC,iCAAiC,gBAAgB,EAAE;AACzF,oCAAoC,iCAAiC,qBAAqB,EAAE;AAC5F,oCAAoC,4BAA4B,YAAY,2CAA2C,gBAAgB,GAAG,EAAE,EAAE;AAC9I,qEAAqE,cAAc,wCAAwC,cAAc,gBAAgB,GAAG,EAAE,EAAE;AAChK,KAAK,GAAG,mBAAmB;AAC3B;AACA,sCAAsC,iCAAiC,gBAAgB,EAAE;AACzF,oCAAoC,iCAAiC,qBAAqB,EAAE;AAC5F;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sCAAsC,iCAAiC,0BAA0B,EAAE;AACnG,wCAAwC,4EAA4E;AACpH,0CAA0C,iCAAiC,qBAAqB,EAAE;AAClG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,GAAG,sBAAsB;AAC9B;AACA,0BAA0B,iCAAiC,oBAAoB,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC,gBAAgB,EAAE;AACrF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,eAAe,EAAE;AACpF,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F,aAAa;AACb;AACA,kCAAkC,iCAAiC,sBAAsB,EAAE;AAC3F;AACA;AACA,KAAK;AACL;AACA,yCAAyC,mBAAmB;AAC5D;AACA,4DAA4D,iCAAiC,uBAAuB,EAAE;AACtH,aAAa,iEAAiE;AAC9E;AACA;AACA;AACA;AACA,uDAAuD,iCAAiC,kBAAkB,EAAE;AAC5G;AACA,KAAK,GAAG,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,2BAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,sBAAsB;AAC9B;AACA,qCAAqC,iCAAiC,sCAAsC,EAAE;AAC9G,oCAAoC,4BAA4B,YAAY,4CAA4C,eAAe,GAAG,EAAE,EAAE;AAC9I,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uDAAuD,iCAAiC,qBAAqB,EAAE;AAC/G,KAAK,GAAG,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,2BAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,oBAAoB;AAC5B;AACA;;;;;;;;;;;;;AC9Ka;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC,4BAA4B,EAAE;AACzF;AACA;AACA;AACA,8CAA8C,yCAAyC;AACvF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF;AACA,sEAAsE,gBAAgB,IAAI,qBAAqB;AAC/G,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF;AACA,sEAAsE,gBAAgB,IAAI,qBAAqB;AAC/G,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF;AACA,sEAAsE,gBAAgB,IAAI,qBAAqB;AAC/G,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF;AACA,sEAAsE,gBAAgB,IAAI,qBAAqB;AAC/G,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,eAAe,EAAE;AACtF,0CAA0C,gBAAgB;AAC1D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,oBAAoB;AAC5B;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,qCAAqC,iCAAiC,eAAe,EAAE;AACvF,oCAAoC,iCAAiC,oBAAoB,EAAE;AAC3F,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,eAAe,EAAE;AAC5E,wDAAwD,gBAAgB,IAAI,mBAAmB;AAC/F,KAAK;AACL;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACtGa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC,6BAA6B,EAAE;AAClG;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,iCAAiC,iDAAiD,EAAE;AACxH;AACA,iBAAiB;AACjB,+BAA+B,QAAQ;AACvC;AACA;AACA,KAAK,GAAG,iBAAiB;AACzB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA,2CAA2C,YAAY,gSAAgS;AACvV;AACA;AACA;AACA;AACA,kFAAkF,8BAA8B,iCAAiC;AACjJ,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4BAA4B;AACpC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,8BAA8B,+BAA+B,0DAA0D,EAAE;AACzH,mCAAmC,yBAAyB;AAC5D;AACA,SAAS;AACT,yCAAyC,+BAA+B,uCAAuC,EAAE;AACjH,wCAAwC,oCAAoC;AAC5E,oCAAoC,wBAAwB;AAC5D;AACA,wDAAwD,+BAA+B,gCAAgC,EAAE;AACzH,yDAAyD,+BAA+B,qCAAqC,EAAE;AAC/H,0DAA0D,iCAAiC,mBAAmB,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wGAAwG;AACxI;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,uCAAuC,gCAAgC,yCAAyC,EAAE;AAClH,iBAAiB;AACjB;AACA,uCAAuC,gCAAgC,yCAAyC,EAAE;AAClH;AACA;AACA,SAAS;AACT;AACA,gCAAgC,kDAAkD;AAClF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,kDAAkD,4BAA4B,gCAAgC,EAAE;AAChH;AACA,wCAAwC,iCAAiC,eAAe,EAAE;AAC1F,6DAA6D,gBAAgB;AAC7E,oDAAoD,4BAA4B,YAAY,0CAA0C,aAAa,GAAG,EAAE,EAAE;AAC1J,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,0CAA0C,iCAAiC,sBAAsB,EAAE;AACnG,wCAAwC,oBAAoB;AAC5D,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA,SAAS;AACT,KAAK,GAAG,mDAAmD;AAC3D;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;;;;;;;;;;;;;AC7Ia;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,+CAA+C,iCAAiC,qBAAqB,EAAE;AACvG,KAAK,GAAG,4BAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,qDAAqD,8EAA8E;AACnI;AACA,qCAAqC;AACrC;AACA,qDAAqD,+EAA+E;AACpI;AACA,qCAAqC;AACrC;AACA,qDAAqD,8EAA8E;AACnI;AACA,qCAAqC;AACrC;AACA,qDAAqD,gFAAgF;AACrI;AACA,qCAAqC;AACrC;AACA,qDAAqD,iFAAiF;AACtI;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACnGa;AACb,8CAA8C,cAAc;AAC5D;AACA,sBAAsB,mBAAO,CAAC,uEAAe;AAC7C,iBAAiB,mBAAO,CAAC,6DAAU;AACnC,oBAAoB,mBAAO,CAAC,mEAAa;AACzC,oBAAoB,mBAAO,CAAC,mEAAa;AACzC,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD,uBAAuB,mBAAO,CAAC,yEAAgB;AAC/C,oBAAoB,mBAAO,CAAC,mEAAa;AACzC,qBAAqB,mBAAO,CAAC,qEAAc;AAC3C,qBAAqB,mBAAO,CAAC,qEAAc;AAC3C,iBAAiB,mBAAO,CAAC,6DAAU;AACnC,eAAe,mBAAO,CAAC,yDAAQ;AAC/B,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD,mBAAmB,mBAAO,CAAC,uEAAY;AACvC,wBAAwB,mBAAO,CAAC,2EAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA,qCAAqC,iCAAiC,+CAA+C,EAAE;AACvH;AACA;AACA;AACA;AACA,mCAAmC,iCAAiC;AACpE,qDAAqD,2BAA2B;AAChF,8BAA8B,yBAAyB;AACvD;AACA,kEAAkE,iBAAiB;AACnF;AACA,0CAA0C,cAAc;AACxD,0CAA0C,cAAc;AACxD,4CAA4C,cAAc;AAC1D,gDAAgD,cAAc;AAC9D,uDAAuD,cAAc;AACrE,yDAAyD,cAAc;AACvE,yDAAyD,yCAAyC;AAClG;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D,wDAAwD,gBAAgB;AACxE;AACA,aAAa;AACb;AACA;AACA,gDAAgD,iBAAiB;AACjE,aAAa;AACb;AACA;AACA,8CAA8C,wBAAwB;AACtE,8CAA8C,wBAAwB;AACtE;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,gDAAgD,iBAAiB;AACjE,aAAa;AACb,SAAS;AACT,4CAA4C,iCAAiC,iDAAiD,EAAE;AAChI,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,8BAA8B,iCAAiC,sBAAsB,EAAE;AACvF,uCAAuC,gBAAgB;AACvD,yCAAyC,gBAAgB;AACzD,yCAAyC,gBAAgB;AACzD,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT,gDAAgD,iCAAiC,sBAAsB,EAAE;AACzG;AACA;AACA,SAAS,GAAG,uBAAuB;AACnC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,4CAA4C,0BAA0B,0CAA0C,iCAAiC,sCAAsC,EAAE;AACzL;AACA,SAAS;AACT,yEAAyE,iCAAiC,uCAAuC,EAAE,KAAK,8BAA8B;AACtL,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACpGa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA,0BAA0B,iCAAiC,0BAA0B,EAAE;AACvF;AACA,4CAA4C,iBAAiB;AAC7D,SAAS;AACT,KAAK,GAAG,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACpBa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,8DAAW;AACpC;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,0CAA0C,gBAAgB;AAC1D,uCAAuC,gBAAgB;AACvD;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA,oCAAoC,qCAAqC;AACzE;AACA;AACA,0BAA0B,iCAAiC,6BAA6B,EAAE;AAC1F;AACA;AACA;AACA;AACA,sCAAsC,0BAA0B;AAChE,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA;AACA;AACA,8CAA8C,wBAAwB;AACtE,oDAAoD,wBAAwB;AAC5E,qDAAqD,iBAAiB;AACtE,iBAAiB;AACjB;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE,oDAAoD,gBAAgB;AACpE,iBAAiB;AACjB;AACA,6DAA6D,gBAAgB;AAC7E;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iDAAiD,gBAAgB;AACjE,+CAA+C,gBAAgB;AAC/D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,8CAA8C;AAC1D,KAAK,GAAG,8CAA8C;AACtD;AACA;;;;;;;;;;;;;ACjEa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,8DAAW;AACpC,mBAAO,CAAC,4EAAa;AACrB,mBAAO,CAAC,oFAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,oCAAoC,gBAAgB;AACpD,oCAAoC,gBAAgB;AACpD,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+BAA+B;AACpE,wCAAwC,gCAAgC;AACxE;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA,iCAAiC,iCAAiC;AAClE;AACA;AACA;AACA,oCAAoC,qCAAqC;AACzE;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC,uCAAuC,EAAE;AACxG,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,2BAA2B;AACnC;AACA,0BAA0B,iCAAiC,2BAA2B,EAAE;AACxF;AACA;AACA;AACA;AACA,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA,gDAAgD,+BAA+B;AAC/E,iDAAiD,+BAA+B;AAChF,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+CAA+C,+BAA+B;AAC9E,mDAAmD,+BAA+B;AAClF,iBAAiB;AACjB;AACA;AACA,sEAAsE,kCAAkC;AACxG,iDAAiD,iCAAiC;AAClF,iDAAiD,iCAAiC;AAClF,8EAA8E,iCAAiC;AAC/G,yDAAyD,iCAAiC;AAC1F,0EAA0E,iCAAiC;AAC3G,oDAAoD,+BAA+B;AACnF,oDAAoD,+BAA+B;AACnF,qDAAqD,iBAAiB;AACtE,0DAA0D,iBAAiB;AAC3E,+FAA+F,iBAAiB;AAChH,sGAAsG,iCAAiC;AACvI,uFAAuF,iCAAiC;AACxH,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE,oDAAoD,gBAAgB;AACpE,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,+CAA+C,kCAAkC;AACjF,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,+DAA+D,qBAAqB;AACpF,mEAAmE,qBAAqB;AACxF,oEAAoE,qBAAqB;AACzF,mEAAmE,qBAAqB;AACxF,qBAAqB;AACrB;AACA,6EAA6E,iBAAiB;AAC9F,uEAAuE,iBAAiB;AACxF,0EAA0E,iCAAiC;AAC3G,qBAAqB;AACrB,oEAAoE,iBAAiB;AACrF,mFAAmF,iBAAiB;AACpG,+EAA+E,iBAAiB;AAChG;AACA,2EAA2E,iCAAiC;AAC5G,2EAA2E,iCAAiC;AAC5G,2EAA2E,iCAAiC;AAC5G,2EAA2E,iCAAiC;AAC5G,oEAAoE,iCAAiC;AACrG,oEAAoE,iCAAiC;AACrG,kEAAkE,gBAAgB;AAClF,kEAAkE,gBAAgB;AAClF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,iFAAiF,kCAAkC;AACnH,wDAAwD,iCAAiC;AACzF,yDAAyD,iCAAiC;AAC1F,+EAA+E,iBAAiB;AAChG,iEAAiE,iCAAiC;AAClG,iEAAiE,iCAAiC;AAClG,uDAAuD,+BAA+B;AACtF,4DAA4D,kCAAkC;AAC9F,+DAA+D,iBAAiB;AAChF,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,uDAAuD,kCAAkC;AACzF,kEAAkE,iCAAiC;AACnG,+DAA+D,iCAAiC;AAChG,8EAA8E,gCAAgC;AAC9G,iBAAiB;AACjB;AACA;AACA,mDAAmD,gBAAgB;AACnE,mDAAmD,gBAAgB;AACnE;AACA,8DAA8D,iCAAiC,gBAAgB,EAAE;AACjH,iBAAiB;AACjB;AACA,wDAAwD,gBAAgB;AACxE;AACA,2CAA2C,yBAAyB;AACpE;AACA;AACA;AACA;AACA,0CAA0C,iCAAiC,qCAAqC,EAAE;AAClH,wDAAwD,iCAAiC;AACzF,0DAA0D,iCAAiC;AAC3F,0DAA0D,iCAAiC;AAC3F,qBAAqB,GAAG,0BAA0B;AAClD;AACA,0CAA0C,iCAAiC,uCAAuC,EAAE;AACpH,qDAAqD,+BAA+B;AACpF,qDAAqD,+BAA+B;AACpF;AACA;AACA;AACA,2DAA2D,iCAAiC;AAC5F,6BAA6B;AAC7B;AACA,2DAA2D,iCAAiC;AAC5F,6BAA6B;AAC7B;AACA,2DAA2D,iCAAiC;AAC5F,6BAA6B;AAC7B;AACA,2DAA2D,iCAAiC;AAC5F,6BAA6B;AAC7B;AACA,mEAAmE,gCAAgC;AACnG,6BAA6B;AAC7B;AACA,6DAA6D,gCAAgC;AAC7F,6BAA6B;AAC7B;AACA,mEAAmE,gCAAgC;AACnG;AACA;AACA,qBAAqB,GAAG,wDAAwD;AAChF;AACA,0CAA0C,iCAAiC,uCAAuC,EAAE;AACpH;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,gEAAgE,iBAAiB;AACjF,6BAA6B;AAC7B;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA,qBAAqB,GAAG,4BAA4B;AACpD;AACA;AACA,SAAS,GAAG,qBAAqB;AACjC,KAAK,GAAG,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,qCAAqC,EAAE;AAClG,0DAA0D,kBAAkB;AAC5E;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF,0DAA0D,iCAAiC;AAC3F,0DAA0D,iCAAiC;AAC3F,aAAa;AACb;AACA,qDAAqD,iCAAiC;AACtF,2DAA2D,iCAAiC;AAC5F,0DAA0D,iCAAiC;AAC3F,2DAA2D,iCAAiC;AAC5F,0DAA0D,iCAAiC;AAC3F;AACA;AACA,KAAK,GAAG,6BAA6B;AACrC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,6CAA6C,EAAE;AAC1G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,KAAK,GAAG,kCAAkC;AAC1C;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,iCAAiC,qCAAqC,EAAE;AAClG;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D,+CAA+C,gBAAgB;AAC/D;AACA;AACA,KAAK,GAAG,0BAA0B;AAClC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACnYa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,iBAAiB,mBAAO,CAAC,8DAAW;AACpC;AACA;AACA;AACA;AACA,qCAAqC,iCAAiC,uDAAuD,EAAE;AAC/H;AACA,SAAS;AACT,kDAAkD,gBAAgB;AAClE,mDAAmD,gBAAgB;AACnE,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA,sCAAsC,uCAAuC;AAC7E,uCAAuC,mCAAmC;AAC1E;AACA;AACA,gDAAgD,gBAAgB;AAChE,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2CAA2C,gBAAgB;AAC3D,yCAAyC,gBAAgB;AACzD,2CAA2C,gBAAgB;AAC3D,aAAa;AACb;AACA,2CAA2C,gBAAgB;AAC3D,yCAAyC,gBAAgB;AACzD,2CAA2C,gBAAgB;AAC3D,aAAa;AACb,SAAS;AACT;AACA,KAAK,GAAG,4BAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yCAAyC,mCAAmC;AAC5E,uCAAuC,mCAAmC;AAC1E,sCAAsC,mCAAmC;AACzE,SAAS;AACT,+CAA+C,iCAAiC,qCAAqC,EAAE;AACvH,wCAAwC,mCAAmC;AAC3E,sDAAsD,mCAAmC;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,wBAAwB;AAC7D,SAAS,GAAG,iCAAiC;AAC7C;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,2BAA2B,iCAAiC,gBAAgB,EAAE;AAC9E,mCAAmC,wBAAwB;AAC3D,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACnGa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,4BAA4B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB,SAAS;AACT,KAAK;AACL;AACA,oCAAoC,iCAAiC,uCAAuC,EAAE;AAC9G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,8CAA8C,iBAAiB;AAC/D,aAAa;AACb;AACA,uCAAuC,yBAAyB;AAChE,2CAA2C,gBAAgB;AAC3D,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK,GAAG,6CAA6C;AACrD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2CAA2C,4BAA4B,YAAY,8BAA8B,EAAE,EAAE;AACrH,KAAK,GAAG,mDAAmD;AAC3D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,qCAAqC,kCAAkC;AACvE,qCAAqC,kCAAkC;AACvE,uCAAuC,iBAAiB;AACxD,uCAAuC,iBAAiB;AACxD;AACA;AACA,oCAAoC,iCAAiC,wBAAwB,EAAE;AAC/F;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA,aAAa;AACb;AACA;AACA,KAAK,GAAG,uDAAuD;AAC/D;AACA,oCAAoC,iCAAiC,oBAAoB,EAAE;AAC3F;AACA;AACA;AACA,mCAAmC,iCAAiC,gBAAgB,EAAE;AACtF,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,mCAAmC,iCAAiC,gBAAgB,EAAE;AACtF,gDAAgD,iBAAiB;AACjE,aAAa;AACb;AACA;AACA,gDAAgD,iBAAiB;AACjE,aAAa;AACb;AACA,iCAAiC,iCAAiC,qBAAqB,EAAE;AACzF;AACA;AACA,KAAK,GAAG,mDAAmD;AAC3D;AACA;;;;;;;;;;;;;ACnHa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA,gCAAgC,iCAAiC,kCAAkC,EAAE;AACrG,iCAAiC,gBAAgB;AACjD;AACA;AACA,0BAA0B,iCAAiC,qCAAqC,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA,sCAAsC,2BAA2B;AACjE,oDAAoD,iBAAiB;AACrE,iBAAiB;AACjB;AACA,4CAA4C,yBAAyB;AACrE,0DAA0D,iBAAiB;AAC3E,4DAA4D,iBAAiB;AAC7E,iBAAiB;AACjB;AACA;AACA,6CAA6C,iFAAiF;AAC9H,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS,GAAG,2DAA2D;AACvE,KAAK,GAAG,+BAA+B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AChDa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC,mCAAmC,EAAE;AAChG;AACA;AACA;AACA;AACA,SAAS,GAAG,6BAA6B;AACzC,KAAK,GAAG,6BAA6B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;AClCa;AACb,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,qDAAgB;AACvC,mBAAO,CAAC,oFAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC,mCAAmC,EAAE;AACpG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,2BAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,mCAAmC,wBAAwB;AAC3D;AACA,KAAK,GAAG,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,kCAAkC,iCAAiC,0CAA0C,EAAE;AAC/G,gCAAgC,sCAAsC;AACtE;AACA;AACA;AACA,qCAAqC,iCAAiC,uCAAuC,EAAE;AAC/G;AACA,aAAa;AACb;AACA,sCAAsC,iCAAiC,qBAAqB,EAAE;AAC9F;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,sCAAsC,iCAAiC,qBAAqB,EAAE;AAC9F;AACA;AACA;AACA,KAAK,GAAG,0DAA0D;AAClE;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;ACrFa;AACb,8CAA8C,cAAc;AAC5D;AACA,gBAAgB,mBAAO,CAAC,oEAAS;AACjC,iBAAiB,mBAAO,CAAC,sEAAU;AACnC,oBAAoB,mBAAO,CAAC,4EAAa;AACzC,kBAAkB,mBAAO,CAAC,wEAAW;AACrC,wBAAwB,mBAAO,CAAC,oFAAiB;AACjD,wBAAwB,mBAAO,CAAC,oFAAiB;AACjD,2BAA2B,mBAAO,CAAC,0FAAoB;AACvD,yBAAyB,mBAAO,CAAC,sFAAkB;AACnD,uBAAuB,mBAAO,CAAC,kFAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA,0C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../datapack-language-server/lib/server.js\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fillChildrenTemplate = exports.fillSingleTemplate = exports.getChildren = exports.getArgData = exports.getArgOrDefault = void 0;\n/**\n * @param lastIndex The index counted from the last, starting from `1`.\n */\nfunction getArgOrDefault(args, lastIndex, fallback) {\n    return lastIndex <= args.length ? args[args.length - lastIndex].data : fallback;\n}\nexports.getArgOrDefault = getArgOrDefault;\n/**\n * @param lastIndex The index counted from the last, starting from `1`.\n */\nfunction getArgData(args, lastIndex) {\n    return lastIndex <= args.length ? args[args.length - lastIndex] : undefined;\n}\nexports.getArgData = getArgData;\n/**\n * Get the `children` of specific `CommandTreeNode`.\n */\nfunction getChildren(tree, node) {\n    let children;\n    if (node && node.children) {\n        children = node.children;\n    }\n    else if (node && node.redirect) {\n        if (!node.redirect.includes('.')) {\n            children = tree[node.redirect];\n        }\n        else {\n            const seg = node.redirect.split('.');\n            const childNode = tree[seg[0]][seg[1]];\n            children = getChildren(tree, childNode);\n        }\n    }\n    else if (node && node.template) {\n        if (!node.template.includes('.')) {\n            children = fillChildrenTemplate(node, tree[node.template]);\n        }\n        else {\n            const seg = node.template.split('.');\n            const result = getChildren(tree, tree[seg[0]][seg[1]]);\n            if (result) {\n                children = fillChildrenTemplate(node, result);\n            }\n            else {\n                return undefined;\n            }\n        }\n    }\n    else {\n        return undefined;\n    }\n    return children;\n}\nexports.getChildren = getChildren;\n/**\n * This is a pure function.\n * @param currentNode Node which contains `template`.\n * @param singleTemplate Node whose path is the `template` defined in `currentNode`.\n */\nfunction fillSingleTemplate(currentNode, singleTemplate) {\n    if (singleTemplate.children) {\n        const ans = Object.assign({}, singleTemplate);\n        ans.children = fillChildrenTemplate(currentNode, ans.children);\n        return ans;\n    }\n    else {\n        const ans = Object.assign(Object.assign({}, singleTemplate), currentNode);\n        delete ans.template;\n        return ans;\n    }\n}\nexports.fillSingleTemplate = fillSingleTemplate;\n/**\n * This is a pure function.\n * @param currentNode Node which contains `template`.\n * @param childrenTemplate NodeChildren whose path is the `template` defined in `currentNode`.\n */\nfunction fillChildrenTemplate(currentNode, childrenTemplate) {\n    const ans = {};\n    for (const key of Object.keys(childrenTemplate)) {\n        const node = childrenTemplate[key];\n        ans[key] = fillSingleTemplate(currentNode, node);\n    }\n    return ans;\n}\nexports.fillChildrenTemplate = fillChildrenTemplate;\n","var map = {\n\t\"./CommandTree\": \"../datapack-language-server/lib/data/CommandTree.js\",\n\t\"./CommandTree.d\": \"../datapack-language-server/lib/data/CommandTree.d.ts\",\n\t\"./CommandTree.d.ts\": \"../datapack-language-server/lib/data/CommandTree.d.ts\",\n\t\"./CommandTree.js\": \"../datapack-language-server/lib/data/CommandTree.js\",\n\t\"./CommandTree1.15\": \"../datapack-language-server/lib/data/CommandTree1.15.js\",\n\t\"./CommandTree1.15.d\": \"../datapack-language-server/lib/data/CommandTree1.15.d.ts\",\n\t\"./CommandTree1.15.d.ts\": \"../datapack-language-server/lib/data/CommandTree1.15.d.ts\",\n\t\"./CommandTree1.15.js\": \"../datapack-language-server/lib/data/CommandTree1.15.js\",\n\t\"./CommandTree1.16\": \"../datapack-language-server/lib/data/CommandTree1.16.js\",\n\t\"./CommandTree1.16.d\": \"../datapack-language-server/lib/data/CommandTree1.16.d.ts\",\n\t\"./CommandTree1.16.d.ts\": \"../datapack-language-server/lib/data/CommandTree1.16.d.ts\",\n\t\"./CommandTree1.16.js\": \"../datapack-language-server/lib/data/CommandTree1.16.js\",\n\t\"./CommandTree1.17\": \"../datapack-language-server/lib/data/CommandTree1.17.js\",\n\t\"./CommandTree1.17.d\": \"../datapack-language-server/lib/data/CommandTree1.17.d.ts\",\n\t\"./CommandTree1.17.d.ts\": \"../datapack-language-server/lib/data/CommandTree1.17.d.ts\",\n\t\"./CommandTree1.17.js\": \"../datapack-language-server/lib/data/CommandTree1.17.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../datapack-language-server/lib/data sync recursive ^\\\\.\\\\/CommandTree.*$\";","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCommandTree = exports.FallbackCommandTree = void 0;\nvar CommandTree1_16_1 = require(\"./CommandTree1.16\");\nObject.defineProperty(exports, \"FallbackCommandTree\", { enumerable: true, get: function () { return CommandTree1_16_1.CommandTree; } });\nconst CommandTrees = {};\n/* istanbul ignore next */\nfunction getCommandTree(version) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!CommandTrees[version]) {\n            CommandTrees[version] = (yield Promise.resolve().then(() => __importStar(require(`./CommandTree${version}`)))).CommandTree;\n        }\n        return CommandTrees[version];\n    });\n}\nexports.getCommandTree = getCommandTree;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandTree = void 0;\nconst CommandTree_1 = require(\"../CommandTree\");\nconst EntityNode_1 = require(\"../nodes/EntityNode\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst BlockArgumentParser_1 = require(\"../parsers/BlockArgumentParser\");\nconst CodeSnippetArgumentParser_1 = require(\"../parsers/CodeSnippetArgumentParser\");\nconst DeclarationDescriptionArgumentParser_1 = require(\"../parsers/DeclarationDescriptionArgumentParser\");\nconst DeclarationIDArgumentParser_1 = require(\"../parsers/DeclarationIDArgumentParser\");\nconst EntityArgumentParser_1 = require(\"../parsers/EntityArgumentParser\");\nconst IdentityArgumentParser_1 = require(\"../parsers/IdentityArgumentParser\");\nconst ItemArgumentParser_1 = require(\"../parsers/ItemArgumentParser\");\nconst ItemSlotArgumentParser_1 = require(\"../parsers/ItemSlotArgumentParser\");\nconst LiteralArgumentParser_1 = require(\"../parsers/LiteralArgumentParser\");\nconst MessageArgumentParser_1 = require(\"../parsers/MessageArgumentParser\");\nconst NbtArgumentParser_1 = require(\"../parsers/NbtArgumentParser\");\nconst NbtPathArgumentParser_1 = require(\"../parsers/NbtPathArgumentParser\");\nconst NumberArgumentParser_1 = require(\"../parsers/NumberArgumentParser\");\nconst NumberRangeArgumentParser_1 = require(\"../parsers/NumberRangeArgumentParser\");\nconst ObjectiveArgumentParser_1 = require(\"../parsers/ObjectiveArgumentParser\");\nconst ObjectiveCriterionArgumentParser_1 = require(\"../parsers/ObjectiveCriterionArgumentParser\");\nconst ParticleArgumentParser_1 = require(\"../parsers/ParticleArgumentParser\");\nconst ScoreboardSlotArgumentParser_1 = require(\"../parsers/ScoreboardSlotArgumentParser\");\nconst StringArgumentParser_1 = require(\"../parsers/StringArgumentParser\");\nconst TagArgumentParser_1 = require(\"../parsers/TagArgumentParser\");\nconst TeamArgumentParser_1 = require(\"../parsers/TeamArgumentParser\");\nconst TextComponentArgumentParser_1 = require(\"../parsers/TextComponentArgumentParser\");\nconst TimeArgumentParser_1 = require(\"../parsers/TimeArgumentParser\");\nconst VectorArgumentParser_1 = require(\"../parsers/VectorArgumentParser\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\n/**\n * Command tree of Minecraft Java Edition 1.15.2 commands.\n */\n/* istanbul ignore next */\nexports.CommandTree = {\n    line: {\n        command: {\n            redirect: 'commands'\n        },\n        comment: {\n            redirect: 'comments'\n        }\n    },\n    commands: {\n        advancement: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('advancement'),\n            description: 'Grant or revoke advancements from players.',\n            children: {\n                grant_revoke: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('grant', 'revoke'),\n                    children: {\n                        targets: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                everything: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('everything'),\n                                    executable: true\n                                },\n                                only: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('only'),\n                                    children: {\n                                        advancement: {\n                                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$advancement'),\n                                            executable: true,\n                                            children: {\n                                                criterion: {\n                                                    parser: new StringArgumentParser_1.StringArgumentParser(0 /* Unquoted */, null, 'stringQuote', 'stringQuoteType'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                from_through_until: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('from', 'through', 'until'),\n                                    children: {\n                                        advancement: {\n                                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$advancement'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        'ban-ip': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('ban-ip'),\n            permission: 3,\n            description: 'Adds IP addresses to blacklist.',\n            children: {\n                name: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                address: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        banlist: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('banlist'),\n            permission: 3,\n            description: 'Displays the blacklist on this server.',\n            children: {\n                ips_players: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('ips', 'players'),\n                    executable: true\n                }\n            }\n        },\n        ban: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('ban'),\n            permission: 3,\n            description: 'Adds players to blacklist.',\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        bossbar: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('bossbar'),\n            description: 'Adds, removes or modifies boss bars.',\n            children: {\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar', undefined, undefined, undefined, true),\n                            children: {\n                                name: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            children: {\n                                max_players_value_visible: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('max', 'players', 'value', 'visible'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            executable: true\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            children: {\n                                color: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('color'),\n                                    children: {\n                                        colors: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('blue', 'green', 'pink', 'purple', 'red', 'white', 'yellow'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                max: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('max'),\n                                    children: {\n                                        max: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 1),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                name: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('name'),\n                                    children: {\n                                        name: {\n                                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                players: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('players'),\n                                    executable: true,\n                                    children: {\n                                        targets: {\n                                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                style: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('style'),\n                                    children: {\n                                        styles: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('progress', 'notched_6', 'notched_10', 'notched_12', 'notched_20'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                value: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('value'),\n                                    children: {\n                                        value: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                visible: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('visible'),\n                                    children: {\n                                        visible: {\n                                            template: 'templates.boolean',\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        clear: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n            description: '',\n            executable: true,\n            children: {\n                targets: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(true, true),\n                            executable: true,\n                            children: {\n                                maxCount: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        clone: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clone'),\n            description: '',\n            children: {\n                begin: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        end: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            children: {\n                                destination: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                    executable: true,\n                                    children: {\n                                        filtered: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('filtered'),\n                                            children: {\n                                                block: {\n                                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true),\n                                                    executable: true,\n                                                    children: {\n                                                        cloneMode: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'move', 'normal'),\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        otherMaskMode: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('masked', 'replace'),\n                                            executable: true,\n                                            children: {\n                                                cloneMode: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'move', 'normal'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        datapack: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('datapack'),\n            children: {\n                disable: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('disable'),\n                    children: {\n                        name: {\n                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                            executable: true\n                        }\n                    }\n                },\n                enable: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('enable'),\n                    children: {\n                        name: {\n                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                            executable: true,\n                            children: {\n                                first_last: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('first', 'last'),\n                                    executable: true\n                                },\n                                before_after: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('before', 'after'),\n                                    children: {\n                                        existing: {\n                                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true,\n                    children: {\n                        available_enabled: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('available', 'enabled'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        data: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('data'),\n            children: {\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            executable: true,\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true,\n                                    children: {\n                                        scale: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                merge: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('merge'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                nbt: {\n                                    parser: ({ data }, { nbtdoc: nbt }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:entity', id);\n                                        }\n                                        else {\n                                            return new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:block');\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                modify: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                targetPath: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    children: {\n                                        modification: {\n                                            template: 'data_modification',\n                                            children: {\n                                                from: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('from'),\n                                                    children: {\n                                                        source: {\n                                                            template: 'nbt_holder',\n                                                            executable: true,\n                                                            children: {\n                                                                sourcePath: {\n                                                                    parser: ({ data }) => {\n                                                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                                                        if (type === 'entity') {\n                                                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                                                        }\n                                                                        else if (type === 'block') {\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                                                        }\n                                                                        else {\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                                                        }\n                                                                    },\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                },\n                                                value: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('value'),\n                                                    children: {\n                                                        nbt: {\n                                                            parser: ({ data }) => {\n                                                                const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                                                if (type === 'entity') {\n                                                                    const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                                                    const id = utils_1.getNbtdocRegistryId(entity);\n                                                                    return new NbtArgumentParser_1.NbtArgumentParser(undefined, 'minecraft:entity', id);\n                                                                }\n                                                                else {\n                                                                    return new NbtArgumentParser_1.NbtArgumentParser(undefined, 'minecraft:block');\n                                                                }\n                                                            },\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        debug: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('debug'),\n            permission: 3,\n            children: {\n                start_stop_report: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('start', 'stop', 'report'),\n                    executable: true\n                }\n            }\n        },\n        defaultgamemode: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('defaultgamemode'),\n            children: {\n                mode: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('adventure', 'creative', 'spectator', 'survival'),\n                    executable: true\n                }\n            }\n        },\n        deop: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('deop'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        difficulty: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('difficulty'),\n            executable: true,\n            children: {\n                difficulty: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('easy', 'normal', 'hard', 'peaceful'),\n                    executable: true\n                }\n            }\n        },\n        effect: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('effect'),\n            children: {\n                clear: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n                    executable: true,\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            executable: true,\n                            children: {\n                                effect: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:mob_effect'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                give: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                effect: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:mob_effect'),\n                                    executable: true,\n                                    children: {\n                                        seconds: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 1000000),\n                                            executable: true,\n                                            children: {\n                                                amplifier: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 255),\n                                                    executable: true,\n                                                    children: {\n                                                        hideParticles: {\n                                                            template: 'templates.boolean',\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enchant: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('enchant'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        enchantment: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:enchantment'),\n                            executable: true,\n                            children: {\n                                level: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 5),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        execute: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('execute'),\n            children: {\n                subcommand: {\n                    template: 'execute_subcommand'\n                }\n            }\n        },\n        experience: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('experience', 'xp'),\n            children: {\n                add_set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'set'),\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                amount: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    executable: true,\n                                    children: {\n                                        points_levels: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('points', 'levels'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'players'),\n                            children: {\n                                points_levels: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('points', 'levels'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        fill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('fill'),\n            children: {\n                from: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        to: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            children: {\n                                block: {\n                                    parser: new BlockArgumentParser_1.BlockArgumentParser(false),\n                                    executable: true,\n                                    children: {\n                                        mathod: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('destroy', 'hollow', 'keep', 'outline'),\n                                            executable: true\n                                        },\n                                        replace: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('replace'),\n                                            executable: true,\n                                            children: {\n                                                filter: {\n                                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true, true),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        forceload: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('forceload'),\n            children: {\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true,\n                            children: {\n                                to: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true,\n                            children: {\n                                to: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                                    executable: true\n                                }\n                            }\n                        },\n                        all: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('all'),\n                            executable: true\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        function: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('function'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                    executable: true\n                }\n            }\n        },\n        gamemode: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('gamemode'),\n            children: {\n                mode: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('adventure', 'creative', 'spectator', 'survival'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        gamerule: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('gamerule'),\n            children: {\n                boolRuleName: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('announceAdvancements', 'commandBlockOutput', 'disableElytraMovementCheck', 'disableRaids', 'doDaylightCycle', 'doEntityDrops', 'doFireTick', 'doLimitedCrafting', 'doMobLoot', 'doMobSpawning', 'doTileDrops', 'doWeatherCycle', 'keepInventory', 'logAdminCommands', 'mobGriefing', 'naturalRegeneration', 'reducedDebugInfo', 'sendCommandFeedback', 'showDeathMessages', 'spectatorsGenerateChunks', 'doInsomnia', 'doImmediateRespawn', 'drowningDamage', 'fallDamage', 'fireDamage'),\n                    executable: true,\n                    children: {\n                        value: {\n                            template: 'templates.boolean',\n                            executable: true\n                        }\n                    }\n                },\n                intRuleName: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('maxCommandChainLength', 'maxEntityCramming', 'randomTickSpeed', 'spawnRadius'),\n                    executable: true,\n                    children: {\n                        value: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        give: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(false),\n                            executable: true,\n                            children: {\n                                count: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        help: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('help'),\n            permission: 0,\n            executable: true,\n            children: {\n                command: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(2 /* Greedy */),\n                    executable: true\n                }\n            }\n        },\n        kick: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kick'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        kill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kill'),\n            executable: true,\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    executable: true\n                }\n            }\n        },\n        list: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n            permission: 0,\n            executable: true,\n            children: {\n                uuids: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('uuids'),\n                    executable: true\n                }\n            }\n        },\n        locate: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('locate'),\n            children: {\n                type: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('Buried_Treasure', 'EndCity', 'Fortress', 'Mansion', 'Mineshaft', 'Monument', 'Ocean_Ruin', 'Shipwreck', 'Stronghold', 'Desert_Pyramid', 'Igloo', 'Jungle_Pyramid', 'Swamp_Hut', 'Village', 'Pillager_Outpost'),\n                    executable: true\n                }\n            }\n        },\n        loot: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('loot'),\n            children: {\n                replace: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('replace'),\n                    children: {\n                        target: {\n                            template: 'item_holder',\n                            children: {\n                                slot: {\n                                    parser: new ItemSlotArgumentParser_1.ItemSlotArgumentParser(),\n                                    children: {\n                                        count: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            children: {\n                                                source: {\n                                                    template: 'loot_source',\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        source: {\n                                            template: 'loot_source',\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                target: {\n                    template: 'loot_target_without_replace',\n                    children: {\n                        source: {\n                            template: 'loot_source',\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        me: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('me'),\n            permission: 0,\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        op: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('op'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        'pardon-ip': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('pardon-ip'),\n            permission: 3,\n            children: {\n                address: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(0 /* Unquoted */),\n                    executable: true\n                }\n            }\n        },\n        pardon: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('pardon'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        particle: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('particle'),\n            children: {\n                name: {\n                    parser: new ParticleArgumentParser_1.ParticleArgumentParser(),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                delta: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                    children: {\n                                        speed: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                            children: {\n                                                count: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                                    executable: true,\n                                                    children: {\n                                                        mode: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'normal'),\n                                                            executable: true,\n                                                            children: {\n                                                                player: {\n                                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        playsound: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('playsound'),\n            children: {\n                sound: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:sound_event'),\n                    children: {\n                        source: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('master', 'music', 'record', 'weather', 'block', 'hostile', 'neutral', 'player', 'ambient', 'voice'),\n                            children: {\n                                player: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                    executable: true,\n                                    children: {\n                                        pos: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                            executable: true,\n                                            children: {\n                                                volume: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                    executable: true,\n                                                    children: {\n                                                        pitch: {\n                                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                            executable: true,\n                                                            children: {\n                                                                minimumVolume: {\n                                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        publish: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('publish'),\n            permission: 4,\n            executable: true,\n            children: {\n                port: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 65535),\n                    executable: true\n                }\n            }\n        },\n        recipe: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('recipe'),\n            children: {\n                give_take: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('give', 'take'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                '*': {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('*'),\n                                    executable: true\n                                },\n                                name: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$recipe'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        reload: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('reload'),\n            executable: true\n        },\n        replaceitem: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('replaceitem'),\n            children: {\n                target: {\n                    template: 'item_holder',\n                    children: {\n                        slot: {\n                            parser: new ItemSlotArgumentParser_1.ItemSlotArgumentParser(),\n                            children: {\n                                item: {\n                                    parser: new ItemArgumentParser_1.ItemArgumentParser(false),\n                                    executable: true,\n                                    children: {\n                                        count: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 64),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        'save-all': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('save-all'),\n            permission: 4,\n            executable: true,\n            children: {\n                flush: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('flush'),\n                    executable: true\n                }\n            }\n        },\n        'save-off': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('save-off', 'save-on'),\n            permission: 4,\n            executable: true\n        },\n        say: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('say'),\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        schedule: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('schedule'),\n            children: {\n                function: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('function'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                            children: {\n                                time: {\n                                    parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                                    executable: true,\n                                    children: {\n                                        append_replace: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('append', 'replace'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                clear: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        scoreboard: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('scoreboard'),\n            children: {\n                objectives: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('objectives'),\n                    children: {\n                        add: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(true),\n                                    children: {\n                                        criterion: {\n                                            parser: new ObjectiveCriterionArgumentParser_1.ObjectiveCriterionArgumentParser(),\n                                            executable: true,\n                                            children: {\n                                                displayName: {\n                                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true\n                        },\n                        modify: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                    children: {\n                                        displayname: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('displayname'),\n                                            children: {\n                                                displayName: {\n                                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        rendertype: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('rendertype'),\n                                            children: {\n                                                displayName: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('hearts', 'integer'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        setdisplay: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setdisplay'),\n                            children: {\n                                slot: {\n                                    parser: new ScoreboardSlotArgumentParser_1.ScoreboardSlotArgumentParser(),\n                                    executable: true,\n                                    children: {\n                                        objective: {\n                                            parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                players: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('players'),\n                    children: {\n                        add_remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'remove'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        score: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        set: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        score: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        enable: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('enable'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    executable: true\n                                }\n                            }\n                        },\n                        get: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                            children: {\n                                target: {\n                                    template: 'templates.single_score',\n                                    executable: true\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true,\n                            children: {\n                                target: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                                    executable: true\n                                }\n                            }\n                        },\n                        operation: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('operation'),\n                            children: {\n                                target: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        operation: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('+=', '-=', '*=', '/=', '%=', '=', '>', '<', '><'),\n                                            run: parsedLine => {\n                                                parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                            },\n                                            children: {\n                                                source: {\n                                                    template: 'templates.multiple_score',\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        reset: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('reset'),\n                            children: {\n                                targets: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                                    executable: true,\n                                    children: {\n                                        objective: {\n                                            parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        seed: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('seed'),\n            executable: true\n        },\n        setblock: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setblock'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        block: {\n                            parser: new BlockArgumentParser_1.BlockArgumentParser(false),\n                            executable: true,\n                            children: {\n                                mode: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('destroy', 'keep', 'replace'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        setidletimeout: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setidletimeout'),\n            permission: 3,\n            children: {\n                minutes: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 35000),\n                    executable: true\n                }\n            }\n        },\n        setworldspawn: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setworldspawn'),\n            executable: true,\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    executable: true\n                }\n            }\n        },\n        spawnpoint: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spawnpoint'),\n            executable: true,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        spectate: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spectate'),\n            executable: true,\n            children: {\n                target: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'players'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        spreadplayers: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spreadplayers'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(2),\n                    children: {\n                        spreadDistance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                            children: {\n                                maxRange: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 1),\n                                    children: {\n                                        respectTeams: {\n                                            template: 'templates.boolean',\n                                            children: {\n                                                entity: {\n                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        stopsound: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('stopsound'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        source: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('*', 'master', 'music', 'record', 'weather', 'block', 'hostile', 'neutral', 'player', 'ambient', 'voice'),\n                            executable: true,\n                            children: {\n                                sound: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:sound_event'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        stop: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('stop'),\n            permission: 4,\n            executable: true\n        },\n        summon: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('summon'),\n            children: {\n                name: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:entity_type'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                nbt: {\n                                    parser: ({ data }) => new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:entity', CommandTree_1.getArgOrDefault(data, 2, new IdentityNode_1.IdentityNode()).toString()),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        tag: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('tag'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        add_remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'remove'),\n                            children: {\n                                tag: {\n                                    parser: new TagArgumentParser_1.TagArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        teammsg: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('teammsg', 'tm'),\n            permission: 0,\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        team: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('team'),\n            children: {\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(true),\n                            executable: true,\n                            children: {\n                                displayName: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                empty_remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('empty', 'remove'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                join: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('join'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true,\n                            children: {\n                                members: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                leave: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('leave'),\n                    children: {\n                        members: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                            executable: true\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true,\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                modify: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            children: {\n                                color: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('color'),\n                                    children: {\n                                        value: {\n                                            template: 'templates.color',\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                friendlyFire_seeFriendlyInvisibles: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('friendlyFire', 'seeFriendlyInvisibles'),\n                                    children: {\n                                        value: {\n                                            template: 'templates.boolean',\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                nametagVisibility_deathMessageVisibility: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('nametagVisibility', 'deathMessageVisibility'),\n                                    children: {\n                                        value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('never', 'hideForOtherTeams', 'hideForOwnTeam', 'always'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                collisionRule: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('collisionRule'),\n                                    children: {\n                                        value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('never', 'pushOtherTeams', 'pushOwnTeam', 'always'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                displayName_prefix_suffix: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('displayName', 'prefix', 'suffix'),\n                                    children: {\n                                        value: {\n                                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        teleport: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('teleport', 'tp'),\n            children: {\n                destination: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    executable: true\n                },\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    executable: true,\n                    children: {\n                        destination: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                facing: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('facing'),\n                                    children: {\n                                        entity: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                                            children: {\n                                                facingEntity: {\n                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                                                    executable: true,\n                                                    children: {\n                                                        facingAnchor: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('feet', 'eyes'),\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        pos: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                rotation: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'float', false),\n                                    executable: true\n                                }\n                            }\n                        },\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        tellraw: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('tellraw'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        message: {\n                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        time: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('time'),\n            children: {\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        value: {\n                            parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        literals: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('day', 'night', 'noon', 'midnight'),\n                            executable: true\n                        },\n                        value: {\n                            parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    children: {\n                        value: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('day', 'daytime', 'gametime'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        title: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('title'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        clear_reset: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear', 'reset'),\n                            executable: true\n                        },\n                        title_subtitle_actionbar: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('title', 'subtitle', 'actionbar'),\n                            children: {\n                                text: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        times: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('times'),\n                            children: {\n                                fadeIn: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    children: {\n                                        stay: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            children: {\n                                                fadeOut: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        trigger: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('trigger'),\n            permission: 0,\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                    executable: true,\n                    children: {\n                        add_set: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'set'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        weather: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('weather'),\n            children: {\n                clear_rain_thunder: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear', 'rain', 'thunder'),\n                    executable: true,\n                    children: {\n                        duration: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 1000000),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        whitelist: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('whitelist'),\n            permission: 3,\n            children: {\n                add_remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'remove'),\n                    children: {\n                        plauer: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            executable: true\n                        }\n                    }\n                },\n                list_off_on_reload: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list', 'off', 'on', 'reload'),\n                    executable: true\n                }\n            }\n        },\n        worldborder: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('worldborder'),\n            children: {\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        distance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', -60000000, 60000000),\n                            executable: true,\n                            children: {\n                                time: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        distance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 1, 60000000),\n                            executable: true,\n                            children: {\n                                time: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                center: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('center'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2),\n                            executable: true\n                        }\n                    }\n                },\n                damage: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('damage'),\n                    children: {\n                        amount_buffer: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('amount', 'buffer'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    executable: true\n                },\n                warning: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('warning'),\n                    children: {\n                        distance_time: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('distance', 'time'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        w: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('msg', 'tell', 'w'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        message: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        snippet: {\n            parser: new CodeSnippetArgumentParser_1.CodeSnippetArgumentParser(),\n            permission: 0,\n            executable: true\n        }\n    },\n    comments: {\n        // #define bossbar|entity|objective|storage|tag|team <id: string>\n        '#define': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('#define'),\n            description: 'Defines a bossbar, an entity name (like a fake player), an objective, a data storage, an entity tag, or a team. Will be used for completions.',\n            children: {\n                type: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('bossbar', 'entity', 'objective', 'score_holder', 'storage', 'tag', 'team'),\n                    description: 'Type of the definition',\n                    run: parsedLine => {\n                        if (!CommandTree_1.getArgOrDefault(parsedLine.data, 2, '').startsWith('#define')) {\n                            parsedLine.completions = [];\n                        }\n                    },\n                    children: {\n                        id: {\n                            parser: ({ data }) => new DeclarationIDArgumentParser_1.DeclarationIDArgumentParser(CommandTree_1.getArgOrDefault(data, 1, '')),\n                            description: 'ID',\n                            executable: true,\n                            children: {\n                                description: {\n                                    parser: ({ data }) => new DeclarationDescriptionArgumentParser_1.DeclarationDescriptionArgumentParser(CommandTree_1.getArgOrDefault(data, 2, ''), CommandTree_1.getArgOrDefault(data, 1, '')),\n                                    description: 'Description of the definition',\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    templates: {\n        boolean: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('false', 'true'),\n            run: ({ tokens, data }) => {\n                const lastArg = CommandTree_1.getArgOrDefault(data, 1, undefined);\n                const lastToken = tokens[tokens.length - 1];\n                lastToken.type = Token_1.TokenType.boolean;\n            }\n        },\n        single_score: {\n            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities', true),\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser()\n                }\n            }\n        },\n        multiple_score: {\n            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser()\n                }\n            }\n        },\n        color: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('black', 'dark_blue', 'dark_green', 'dark_aqua', 'dark_red', 'dark_purple', 'gold', 'gray', 'dark_gray', 'blue', 'green', 'aqua', 'red', 'light_purple', 'yellow', 'white')\n        }\n    },\n    data_modification: {\n        simple: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('append', 'merge', 'prepend', 'set')\n        },\n        insert: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('insert'),\n            children: {\n                index: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer')\n                }\n            }\n        }\n    },\n    item_holder: {\n        block: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3)\n                }\n            }\n        },\n        entity: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities')\n                }\n            }\n        }\n    },\n    nbt_holder: {\n        block: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3)\n                }\n            }\n        },\n        entity: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities')\n                }\n            }\n        },\n        storage: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('storage'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$storage')\n                }\n            }\n        }\n    },\n    loot_target_without_replace: {\n        spawn: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spawn'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3)\n                }\n            }\n        },\n        give: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players')\n                }\n            }\n        },\n        insert: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('insert'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3)\n                }\n            }\n        }\n    },\n    loot_source: {\n        fish: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('fish'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$loot_table'),\n                    children: {\n                        location: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                mainhand_offhand: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('mainhand', 'offhand')\n                                },\n                                item: {\n                                    parser: new ItemArgumentParser_1.ItemArgumentParser(false)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loot: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('loot'),\n            children: {\n                lootTable: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$loot_table')\n                }\n            }\n        },\n        kill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kill'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities')\n                }\n            }\n        },\n        mine: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('mine'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    executable: true,\n                    children: {\n                        mainhand_offhand: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('mainhand', 'offhand')\n                        },\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(false)\n                        }\n                    }\n                }\n            }\n        }\n    },\n    execute_subcommand: {\n        align: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('align'),\n            children: {\n                axes: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('x', 'xy', 'xyz', 'xz', 'xzy', 'y', 'yx', 'yxz', 'yz', 'yzx', 'z', 'zx', 'zxy', 'zy', 'zyx'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        anchored: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('anchored'),\n            children: {\n                eyes_feet: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('eyes', 'feet'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        as: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        at: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('at'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        facing: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('facing'),\n            children: {\n                entity: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                    children: {\n                        target: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                eyes_feet: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('eyes', 'feet'),\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        in: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('in'),\n            children: {\n                dimension: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser(['minecraft:overworld', 'minecraft:the_end', 'minecraft:the_nether'], undefined, undefined, true),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        positioned: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('positioned'),\n            children: {\n                as: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        rotated: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('rotated'),\n            children: {\n                as: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                rot: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'float', false),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        store: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('store'),\n            children: {\n                result_success: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('result', 'success'),\n                    children: {\n                        bossbar: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('bossbar'),\n                            children: {\n                                id: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                                    children: {\n                                        max_value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('max', 'value'),\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        score: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('score'),\n                            children: {\n                                score: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        nbt_holder: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    children: {\n                                        type: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('byte', 'short', 'int', 'long', 'float', 'double'),\n                                            children: {\n                                                scale: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                    children: {\n                                                        subcommand: {\n                                                            redirect: 'execute_subcommand'\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        if_unless: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('if', 'unless'),\n            children: {\n                blocks: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('blocks'),\n                    children: {\n                        start: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            children: {\n                                end: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                    children: {\n                                        destination: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                            children: {\n                                                all_masked: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('all', 'masked'),\n                                                    executable: true,\n                                                    children: {\n                                                        subcommand: {\n                                                            redirect: 'execute_subcommand'\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                block: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            children: {\n                                block: {\n                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true, true),\n                                    executable: true,\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                data: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('data'),\n                    children: {\n                        nbt_holder: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const anchor = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', anchor);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true,\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                entity: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                    children: {\n                        entities: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            executable: true,\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                predicate: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('predicate'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$predicate'),\n                            executable: true,\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                score: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('score'),\n                    children: {\n                        target: {\n                            template: 'templates.single_score',\n                            children: {\n                                operation: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('<', '<=', '=', '>', '>='),\n                                    run: parsedLine => {\n                                        parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                    },\n                                    children: {\n                                        source: {\n                                            template: 'templates.single_score',\n                                            executable: true,\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                matches: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('matches'),\n                                    run: parsedLine => {\n                                        parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                    },\n                                    children: {\n                                        range: {\n                                            parser: new NumberRangeArgumentParser_1.NumberRangeArgumentParser('integer'),\n                                            executable: true,\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        run: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('run'),\n            children: {\n                command: {\n                    redirect: 'commands'\n                }\n            }\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandTree = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst CommandTree_1 = require(\"../CommandTree\");\nconst locales_1 = require(\"../locales\");\nconst nodes_1 = require(\"../nodes\");\nconst EntityNode_1 = require(\"../nodes/EntityNode\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst BlockArgumentParser_1 = require(\"../parsers/BlockArgumentParser\");\nconst CodeSnippetArgumentParser_1 = require(\"../parsers/CodeSnippetArgumentParser\");\nconst DeclarationDescriptionArgumentParser_1 = require(\"../parsers/DeclarationDescriptionArgumentParser\");\nconst DeclarationIDArgumentParser_1 = require(\"../parsers/DeclarationIDArgumentParser\");\nconst EntityArgumentParser_1 = require(\"../parsers/EntityArgumentParser\");\nconst IdentityArgumentParser_1 = require(\"../parsers/IdentityArgumentParser\");\nconst ItemArgumentParser_1 = require(\"../parsers/ItemArgumentParser\");\nconst ItemSlotArgumentParser_1 = require(\"../parsers/ItemSlotArgumentParser\");\nconst LiteralArgumentParser_1 = require(\"../parsers/LiteralArgumentParser\");\nconst MessageArgumentParser_1 = require(\"../parsers/MessageArgumentParser\");\nconst NbtArgumentParser_1 = require(\"../parsers/NbtArgumentParser\");\nconst NbtPathArgumentParser_1 = require(\"../parsers/NbtPathArgumentParser\");\nconst NumberArgumentParser_1 = require(\"../parsers/NumberArgumentParser\");\nconst NumberRangeArgumentParser_1 = require(\"../parsers/NumberRangeArgumentParser\");\nconst ObjectiveArgumentParser_1 = require(\"../parsers/ObjectiveArgumentParser\");\nconst ObjectiveCriterionArgumentParser_1 = require(\"../parsers/ObjectiveCriterionArgumentParser\");\nconst ParticleArgumentParser_1 = require(\"../parsers/ParticleArgumentParser\");\nconst ScoreboardSlotArgumentParser_1 = require(\"../parsers/ScoreboardSlotArgumentParser\");\nconst StringArgumentParser_1 = require(\"../parsers/StringArgumentParser\");\nconst TagArgumentParser_1 = require(\"../parsers/TagArgumentParser\");\nconst TeamArgumentParser_1 = require(\"../parsers/TeamArgumentParser\");\nconst TextComponentArgumentParser_1 = require(\"../parsers/TextComponentArgumentParser\");\nconst TimeArgumentParser_1 = require(\"../parsers/TimeArgumentParser\");\nconst UuidArgumentParser_1 = require(\"../parsers/UuidArgumentParser\");\nconst VectorArgumentParser_1 = require(\"../parsers/VectorArgumentParser\");\nconst types_1 = require(\"../types\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\n/**\n * Command tree of Minecraft Java Edition 1.16.4 commands.\n */\n/* istanbul ignore next */\nexports.CommandTree = {\n    line: {\n        command: {\n            redirect: 'commands'\n        },\n        comment: {\n            redirect: 'comments'\n        }\n    },\n    commands: {\n        [types_1.Switchable]: true,\n        [types_1.AlwaysValidates]: {\n            snippet: {\n                parser: new CodeSnippetArgumentParser_1.CodeSnippetArgumentParser(),\n                permission: 0,\n                executable: true\n            }\n        },\n        advancement: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('advancement'),\n            description: 'Grant or revoke advancements from players.',\n            children: {\n                grant_revoke: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('grant', 'revoke'),\n                    children: {\n                        targets: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                everything: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('everything'),\n                                    executable: true\n                                },\n                                only: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('only'),\n                                    children: {\n                                        advancement: {\n                                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$advancement'),\n                                            executable: true,\n                                            children: {\n                                                criterion: {\n                                                    parser: new StringArgumentParser_1.StringArgumentParser(0 /* Unquoted */),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                from_through_until: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('from', 'through', 'until'),\n                                    children: {\n                                        advancement: {\n                                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$advancement'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        attribute: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('attribute'),\n            description: 'Operate entity attributes and attribute modifiers.',\n            children: {\n                target: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                    children: {\n                        attribute: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:attribute'),\n                            children: {\n                                [types_1.Switchable]: true,\n                                base: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('base'),\n                                    children: {\n                                        [types_1.Switchable]: true,\n                                        get: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                                            executable: true,\n                                            children: {\n                                                scale: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        set: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                                            children: {\n                                                value: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                get: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                                    executable: true,\n                                    children: {\n                                        scale: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                modifier: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modifier'),\n                                    children: {\n                                        [types_1.Switchable]: true,\n                                        add: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                                            children: {\n                                                uuid: {\n                                                    parser: new UuidArgumentParser_1.UuidArgumentParser(),\n                                                    children: {\n                                                        name: {\n                                                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                                                            children: {\n                                                                value: {\n                                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                                    children: {\n                                                                        operation: {\n                                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'multiply', 'multiply_base'),\n                                                                            executable: true\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        remove: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                                            children: {\n                                                uuid: {\n                                                    parser: new UuidArgumentParser_1.UuidArgumentParser(),\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('value'),\n                                            children: {\n                                                get: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                                                    children: {\n                                                        uuid: {\n                                                            parser: new UuidArgumentParser_1.UuidArgumentParser(),\n                                                            executable: true,\n                                                            children: {\n                                                                scale: {\n                                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        'ban-ip': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('ban-ip'),\n            permission: 3,\n            description: 'Adds IP addresses to blacklist.',\n            children: {\n                name: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                address: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        banlist: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('banlist'),\n            permission: 3,\n            description: 'Displays the blacklist on this server.',\n            children: {\n                ips_players: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('ips', 'players'),\n                    executable: true\n                }\n            }\n        },\n        ban: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('ban'),\n            permission: 3,\n            description: 'Adds players to blacklist.',\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        bossbar: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('bossbar'),\n            description: 'Adds, removes or modifies boss bars.',\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar', undefined, undefined, undefined, true),\n                            children: {\n                                name: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            children: {\n                                max_players_value_visible: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('max', 'players', 'value', 'visible'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            executable: true\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            children: {\n                                [types_1.Switchable]: true,\n                                color: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('color'),\n                                    children: {\n                                        colors: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('blue', 'green', 'pink', 'purple', 'red', 'white', 'yellow'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                max: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('max'),\n                                    children: {\n                                        max: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 1),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                name: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('name'),\n                                    children: {\n                                        name: {\n                                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                players: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('players'),\n                                    executable: true,\n                                    children: {\n                                        targets: {\n                                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                style: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('style'),\n                                    children: {\n                                        styles: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('progress', 'notched_6', 'notched_10', 'notched_12', 'notched_20'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                value: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('value'),\n                                    children: {\n                                        value: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                visible: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('visible'),\n                                    children: {\n                                        visible: {\n                                            template: 'templates.boolean',\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        clear: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n            description: '',\n            executable: true,\n            children: {\n                targets: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(true, true),\n                            executable: true,\n                            children: {\n                                maxCount: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        clone: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clone'),\n            description: '',\n            children: {\n                begin: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    children: {\n                        end: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            run: ({ data, errors }) => {\n                                const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode());\n                                const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode());\n                                const volume = v1.volumeTo(v2);\n                                if (volume && volume > 32768) {\n                                    errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-block-affected', 32768, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                }\n                            },\n                            children: {\n                                destination: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                                    executable: true,\n                                    children: {\n                                        filtered: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('filtered'),\n                                            children: {\n                                                block: {\n                                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true),\n                                                    executable: true,\n                                                    children: {\n                                                        cloneMode: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'move', 'normal'),\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        otherMaskMode: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('masked', 'replace'),\n                                            executable: true,\n                                            children: {\n                                                cloneMode: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'move', 'normal'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        datapack: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('datapack'),\n            children: {\n                [types_1.Switchable]: true,\n                disable: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('disable'),\n                    children: {\n                        name: {\n                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                            executable: true\n                        }\n                    }\n                },\n                enable: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('enable'),\n                    children: {\n                        name: {\n                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                            executable: true,\n                            children: {\n                                first_last: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('first', 'last'),\n                                    executable: true\n                                },\n                                before_after: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('before', 'after'),\n                                    children: {\n                                        existing: {\n                                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true,\n                    children: {\n                        available_enabled: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('available', 'enabled'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        data: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('data'),\n            children: {\n                [types_1.Switchable]: true,\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            executable: true,\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true,\n                                    children: {\n                                        scale: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                merge: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('merge'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                nbt: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:entity', id);\n                                        }\n                                        else {\n                                            return new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:block');\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                modify: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                targetPath: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    children: {\n                                        modification: {\n                                            template: 'data_modification',\n                                            children: {\n                                                [types_1.Switchable]: true,\n                                                from: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('from'),\n                                                    children: {\n                                                        source: {\n                                                            template: 'nbt_holder',\n                                                            executable: true,\n                                                            children: {\n                                                                sourcePath: {\n                                                                    parser: ({ data }) => {\n                                                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                                                        if (type === 'entity') {\n                                                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                                                        }\n                                                                        else if (type === 'block') {\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                                                        }\n                                                                        else {\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                                                        }\n                                                                    },\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                },\n                                                value: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('value'),\n                                                    children: {\n                                                        nbt: {\n                                                            parser: ({ data }) => {\n                                                                const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                                                if (type === 'entity') {\n                                                                    const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                                                    const id = utils_1.getNbtdocRegistryId(entity);\n                                                                    return new NbtArgumentParser_1.NbtArgumentParser(undefined, 'minecraft:entity', id);\n                                                                }\n                                                                else {\n                                                                    return new NbtArgumentParser_1.NbtArgumentParser(undefined, 'minecraft:block');\n                                                                }\n                                                            },\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        debug: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('debug'),\n            permission: 3,\n            children: {\n                start_stop_report: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('start', 'stop', 'report'),\n                    executable: true\n                }\n            }\n        },\n        defaultgamemode: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('defaultgamemode'),\n            children: {\n                mode: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('adventure', 'creative', 'spectator', 'survival'),\n                    executable: true\n                }\n            }\n        },\n        deop: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('deop'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        difficulty: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('difficulty'),\n            executable: true,\n            children: {\n                difficulty: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('easy', 'normal', 'hard', 'peaceful'),\n                    executable: true\n                }\n            }\n        },\n        effect: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('effect'),\n            children: {\n                [types_1.Switchable]: true,\n                clear: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n                    executable: true,\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            executable: true,\n                            children: {\n                                effect: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:mob_effect'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                give: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                effect: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:mob_effect'),\n                                    executable: true,\n                                    children: {\n                                        seconds: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 1000000),\n                                            executable: true,\n                                            children: {\n                                                amplifier: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 255),\n                                                    executable: true,\n                                                    children: {\n                                                        hideParticles: {\n                                                            template: 'templates.boolean',\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enchant: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('enchant'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        enchantment: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:enchantment'),\n                            executable: true,\n                            children: {\n                                level: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 5),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        execute: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('execute'),\n            children: {\n                subcommand: {\n                    redirect: 'execute_subcommand'\n                }\n            }\n        },\n        experience: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('experience', 'xp'),\n            children: {\n                add_set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'set'),\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                amount: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    executable: true,\n                                    children: {\n                                        points_levels: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('points', 'levels'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'players'),\n                            children: {\n                                points_levels: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('points', 'levels'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        fill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('fill'),\n            children: {\n                from: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    children: {\n                        to: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            run: ({ data, errors }) => {\n                                const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode());\n                                const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode());\n                                const volume = v1.volumeTo(v2);\n                                if (volume && volume > 32768) {\n                                    errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-block-affected', 32768, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                }\n                            },\n                            children: {\n                                block: {\n                                    parser: new BlockArgumentParser_1.BlockArgumentParser(false),\n                                    executable: true,\n                                    children: {\n                                        mathod: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('destroy', 'hollow', 'keep', 'outline'),\n                                            executable: true\n                                        },\n                                        replace: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('replace'),\n                                            executable: true,\n                                            children: {\n                                                filter: {\n                                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true, true),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        forceload: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('forceload'),\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true,\n                            children: {\n                                to: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                                    run: ({ data, errors }) => {\n                                        const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode()).getChunk();\n                                        const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode()).getChunk();\n                                        if (!(v1 && v2)) {\n                                            return;\n                                        }\n                                        const volume = v1.volumeTo(v2);\n                                        if (volume && volume > 256) {\n                                            errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-chunk-affected', 256, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true,\n                            children: {\n                                to: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                                    run: ({ data, errors }) => {\n                                        const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode()).getChunk();\n                                        const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode()).getChunk();\n                                        if (!(v1 && v2)) {\n                                            return;\n                                        }\n                                        const volume = v1.volumeTo(v2);\n                                        if (volume && volume > 256) {\n                                            errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-chunk-affected', 256, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        },\n                        all: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('all'),\n                            executable: true\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        function: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('function'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                    executable: true\n                }\n            }\n        },\n        gamemode: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('gamemode'),\n            children: {\n                mode: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('adventure', 'creative', 'spectator', 'survival'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        gamerule: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('gamerule'),\n            children: {\n                boolRuleName: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('announceAdvancements', 'commandBlockOutput', 'disableElytraMovementCheck', 'disableRaids', 'doDaylightCycle', 'doEntityDrops', 'doFireTick', 'doLimitedCrafting', 'doMobLoot', 'doMobSpawning', 'doTileDrops', 'doWeatherCycle', 'keepInventory', 'logAdminCommands', 'mobGriefing', 'naturalRegeneration', 'reducedDebugInfo', 'sendCommandFeedback', 'showDeathMessages', 'spectatorsGenerateChunks', 'doInsomnia', 'doImmediateRespawn', 'drowningDamage', 'fallDamage', 'fireDamage', 'doPatrolSpawning', 'doTraderSpawning', 'universalAnger', 'forgiveDeadPlayers'),\n                    executable: true,\n                    children: {\n                        value: {\n                            template: 'templates.boolean',\n                            executable: true\n                        }\n                    }\n                },\n                intRuleName: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('maxCommandChainLength', 'maxEntityCramming', 'randomTickSpeed', 'spawnRadius'),\n                    executable: true,\n                    children: {\n                        value: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        give: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(false),\n                            executable: true,\n                            children: {\n                                count: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        help: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('help'),\n            permission: 0,\n            executable: true,\n            children: {\n                command: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(2 /* Greedy */),\n                    executable: true\n                }\n            }\n        },\n        kick: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kick'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        kill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kill'),\n            executable: true,\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    executable: true\n                }\n            }\n        },\n        list: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n            permission: 0,\n            executable: true,\n            children: {\n                uuids: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('uuids'),\n                    executable: true\n                }\n            }\n        },\n        locatebiome: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('locatebiome'),\n            children: {\n                type: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$worldgen/biome'),\n                    executable: true\n                }\n            }\n        },\n        locate: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('locate'),\n            children: {\n                type: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('bastion_remnant', 'buried_treasure', 'desert_pyramid', 'endcity', 'fortress', 'igloo', 'jungle_pyramid', 'mansion', 'mineshaft', 'monument', 'nether_fossil', 'ocean_ruin', 'pillager_outpost', 'ruined_portal', 'shipwreck', 'stronghold', 'swamp_hut', 'village'),\n                    executable: true\n                }\n            }\n        },\n        loot: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('loot'),\n            children: {\n                replace: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('replace'),\n                    children: {\n                        target: {\n                            template: 'item_holder',\n                            children: {\n                                slot: {\n                                    parser: new ItemSlotArgumentParser_1.ItemSlotArgumentParser(),\n                                    children: {\n                                        count: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            children: {\n                                                source: {\n                                                    template: 'loot_source',\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        source: {\n                                            template: 'loot_source',\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                target: {\n                    template: 'loot_target_without_replace',\n                    children: {\n                        source: {\n                            template: 'loot_source',\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        me: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('me'),\n            permission: 0,\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        msg: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('msg', 'tell', 'w'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        message: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        op: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('op'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        'pardon-ip': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('pardon-ip'),\n            permission: 3,\n            children: {\n                address: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(0 /* Unquoted */),\n                    executable: true\n                }\n            }\n        },\n        pardon: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('pardon'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        particle: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('particle'),\n            children: {\n                name: {\n                    parser: new ParticleArgumentParser_1.ParticleArgumentParser(),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                delta: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                    children: {\n                                        speed: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                            children: {\n                                                count: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                                    executable: true,\n                                                    children: {\n                                                        mode: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'normal'),\n                                                            executable: true,\n                                                            children: {\n                                                                player: {\n                                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        playsound: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('playsound'),\n            children: {\n                sound: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:sound_event'),\n                    children: {\n                        source: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('master', 'music', 'record', 'weather', 'block', 'hostile', 'neutral', 'player', 'ambient', 'voice'),\n                            children: {\n                                player: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                    executable: true,\n                                    children: {\n                                        pos: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                            executable: true,\n                                            children: {\n                                                volume: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                    executable: true,\n                                                    children: {\n                                                        pitch: {\n                                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                            executable: true,\n                                                            children: {\n                                                                minimumVolume: {\n                                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        publish: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('publish'),\n            permission: 4,\n            executable: true,\n            children: {\n                port: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 65535),\n                    executable: true\n                }\n            }\n        },\n        recipe: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('recipe'),\n            children: {\n                give_take: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('give', 'take'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                '*': {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('*'),\n                                    executable: true\n                                },\n                                name: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$recipe'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        reload: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('reload'),\n            executable: true\n        },\n        replaceitem: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('replaceitem'),\n            children: {\n                target: {\n                    template: 'item_holder',\n                    children: {\n                        slot: {\n                            parser: new ItemSlotArgumentParser_1.ItemSlotArgumentParser(),\n                            children: {\n                                item: {\n                                    parser: new ItemArgumentParser_1.ItemArgumentParser(false),\n                                    executable: true,\n                                    children: {\n                                        count: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 64),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        'save-all': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('save-all'),\n            permission: 4,\n            executable: true,\n            children: {\n                flush: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('flush'),\n                    executable: true\n                }\n            }\n        },\n        'save-off': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('save-off'),\n            permission: 4,\n            executable: true\n        },\n        'save-on': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('save-on'),\n            permission: 4,\n            executable: true\n        },\n        say: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('say'),\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        schedule: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('schedule'),\n            children: {\n                [types_1.Switchable]: true,\n                function: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('function'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                            children: {\n                                time: {\n                                    parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                                    executable: true,\n                                    children: {\n                                        append_replace: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('append', 'replace'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                clear: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        scoreboard: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('scoreboard'),\n            children: {\n                [types_1.Switchable]: true,\n                objectives: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('objectives'),\n                    children: {\n                        [types_1.Switchable]: true,\n                        add: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(true),\n                                    children: {\n                                        criterion: {\n                                            parser: new ObjectiveCriterionArgumentParser_1.ObjectiveCriterionArgumentParser(),\n                                            executable: true,\n                                            children: {\n                                                displayName: {\n                                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true\n                        },\n                        modify: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                    children: {\n                                        displayname: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('displayname'),\n                                            children: {\n                                                displayName: {\n                                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        rendertype: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('rendertype'),\n                                            children: {\n                                                displayName: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('hearts', 'integer'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        setdisplay: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setdisplay'),\n                            children: {\n                                slot: {\n                                    parser: new ScoreboardSlotArgumentParser_1.ScoreboardSlotArgumentParser(),\n                                    executable: true,\n                                    children: {\n                                        objective: {\n                                            parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                players: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('players'),\n                    children: {\n                        [types_1.Switchable]: true,\n                        add: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        score: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        set: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        score: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        enable: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('enable'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    executable: true\n                                }\n                            }\n                        },\n                        get: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                            children: {\n                                target: {\n                                    template: 'templates.single_score',\n                                    executable: true\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true,\n                            children: {\n                                target: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                                    executable: true\n                                }\n                            }\n                        },\n                        operation: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('operation'),\n                            children: {\n                                target: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        operation: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('+=', '-=', '*=', '/=', '%=', '=', '>', '<', '><'),\n                                            run: parsedLine => {\n                                                parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                            },\n                                            children: {\n                                                source: {\n                                                    template: 'templates.multiple_score',\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        score: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        reset: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('reset'),\n                            children: {\n                                targets: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                                    executable: true,\n                                    children: {\n                                        objective: {\n                                            parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        seed: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('seed'),\n            executable: true\n        },\n        setblock: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setblock'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    children: {\n                        block: {\n                            parser: new BlockArgumentParser_1.BlockArgumentParser(false),\n                            executable: true,\n                            children: {\n                                mode: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('destroy', 'keep', 'replace'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        setidletimeout: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setidletimeout'),\n            permission: 3,\n            children: {\n                minutes: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 35000),\n                    executable: true\n                }\n            }\n        },\n        setworldspawn: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setworldspawn'),\n            executable: true,\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    executable: true\n                }\n            }\n        },\n        spawnpoint: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spawnpoint'),\n            executable: true,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            executable: true,\n                            children: {\n                                angle: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(1, 'float', false),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        spectate: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spectate'),\n            executable: true,\n            children: {\n                target: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'players'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        spreadplayers: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spreadplayers'),\n            children: {\n                center: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(2),\n                    children: {\n                        spreadDistance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                            children: {\n                                maxRange: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 1),\n                                    children: {\n                                        under: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('under'),\n                                            children: {\n                                                maxHeight: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                                    children: {\n                                                        respectTeams: {\n                                                            template: 'templates.boolean',\n                                                            children: {\n                                                                entity: {\n                                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        respectTeams: {\n                                            template: 'templates.boolean',\n                                            children: {\n                                                entity: {\n                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        stopsound: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('stopsound'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        source: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('*', 'master', 'music', 'record', 'weather', 'block', 'hostile', 'neutral', 'player', 'ambient', 'voice'),\n                            executable: true,\n                            children: {\n                                sound: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:sound_event'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        stop: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('stop'),\n            permission: 4,\n            executable: true\n        },\n        summon: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('summon'),\n            children: {\n                name: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:entity_type'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                nbt: {\n                                    parser: ({ data }) => new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:entity', CommandTree_1.getArgOrDefault(data, 2, new IdentityNode_1.IdentityNode()).toString()),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        tag: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('tag'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        add_remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'remove'),\n                            children: {\n                                tag: {\n                                    parser: new TagArgumentParser_1.TagArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        teammsg: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('teammsg', 'tm'),\n            permission: 0,\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        team: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('team'),\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(true),\n                            executable: true,\n                            children: {\n                                displayName: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                empty: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('empty'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                join: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('join'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true,\n                            children: {\n                                members: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                leave: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('leave'),\n                    children: {\n                        members: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                            executable: true\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true,\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                modify: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            children: {\n                                color: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('color'),\n                                    children: {\n                                        value: {\n                                            template: 'templates.color',\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                friendlyFire_seeFriendlyInvisibles: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('friendlyFire', 'seeFriendlyInvisibles'),\n                                    children: {\n                                        value: {\n                                            template: 'templates.boolean',\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                nametagVisibility_deathMessageVisibility: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('nametagVisibility', 'deathMessageVisibility'),\n                                    children: {\n                                        value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('never', 'hideForOtherTeams', 'hideForOwnTeam', 'always'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                collisionRule: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('collisionRule'),\n                                    children: {\n                                        value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('never', 'pushOtherTeams', 'pushOwnTeam', 'always'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                displayName_prefix_suffix: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('displayName', 'prefix', 'suffix'),\n                                    children: {\n                                        value: {\n                                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        teleport: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('teleport', 'tp'),\n            children: {\n                destination: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    executable: true\n                },\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    executable: true,\n                    children: {\n                        destination: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                facing: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('facing'),\n                                    children: {\n                                        entity: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                                            children: {\n                                                facingEntity: {\n                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                                                    executable: true,\n                                                    children: {\n                                                        facingAnchor: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('feet', 'eyes'),\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        pos: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                rotation: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'float', false),\n                                    executable: true\n                                }\n                            }\n                        },\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        tell: {\n            redirect: 'commands.msg'\n        },\n        tellraw: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('tellraw'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        message: {\n                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        time: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('time'),\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        value: {\n                            parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        literals: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('day', 'night', 'noon', 'midnight'),\n                            executable: true\n                        },\n                        value: {\n                            parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    children: {\n                        value: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('day', 'daytime', 'gametime'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        title: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('title'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        clear_reset: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear', 'reset'),\n                            executable: true\n                        },\n                        title_subtitle_actionbar: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('title', 'subtitle', 'actionbar'),\n                            children: {\n                                text: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        times: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('times'),\n                            children: {\n                                fadeIn: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    children: {\n                                        stay: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            children: {\n                                                fadeOut: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        tm: {\n            redirect: 'commands.teammsg'\n        },\n        tp: {\n            redirect: 'commands.teleport'\n        },\n        trigger: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('trigger'),\n            permission: 0,\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                    executable: true,\n                    children: {\n                        add_set: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'set'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        weather: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('weather'),\n            children: {\n                clear_rain_thunder: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear', 'rain', 'thunder'),\n                    executable: true,\n                    children: {\n                        duration: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 1000000),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        whitelist: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('whitelist'),\n            permission: 3,\n            children: {\n                add_remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'remove'),\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            executable: true\n                        }\n                    }\n                },\n                list_off_on_reload: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list', 'off', 'on', 'reload'),\n                    executable: true\n                }\n            }\n        },\n        worldborder: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('worldborder'),\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        distance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', -60000000, 60000000),\n                            executable: true,\n                            children: {\n                                time: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        distance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 1, 60000000),\n                            executable: true,\n                            children: {\n                                time: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                center: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('center'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2),\n                            executable: true\n                        }\n                    }\n                },\n                damage: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('damage'),\n                    children: {\n                        amount_buffer: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('amount', 'buffer'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    executable: true\n                },\n                warning: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('warning'),\n                    children: {\n                        distance_time: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('distance', 'time'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        w: {\n            redirect: 'commands.msg'\n        },\n        xp: {\n            redirect: 'commands.experience'\n        }\n    },\n    comments: {\n        [types_1.Switchable]: true,\n        // #declare <type: string> <id: string>\n        '#declare': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('#declare', '#define'),\n            description: 'Declares a resource for completions.',\n            children: {\n                type: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser(...ClientCache_1.DeclarableTypes),\n                    description: 'Type of the declaration',\n                    children: {\n                        id: {\n                            parser: ({ data }) => new DeclarationIDArgumentParser_1.DeclarationIDArgumentParser(CommandTree_1.getArgOrDefault(data, 1, '')),\n                            description: 'ID',\n                            executable: true,\n                            children: {\n                                description: {\n                                    parser: ({ data }) => new DeclarationDescriptionArgumentParser_1.DeclarationDescriptionArgumentParser(CommandTree_1.getArgOrDefault(data, 2, ''), CommandTree_1.getArgOrDefault(data, 1, '')),\n                                    description: 'Description for the declaration',\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        '#define': {\n            redirect: 'comments.#declare'\n        },\n        // #alias <parser: string> <alias: string> <value: string>\n        '#alias': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('#alias'),\n            children: {\n                parser: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity', 'uuid', 'vector'),\n                    children: {\n                        alias: {\n                            parser: new StringArgumentParser_1.StringArgumentParser(),\n                            run: ({ tokens }) => {\n                                const lastToken = tokens[tokens.length - 1];\n                                if (lastToken) {\n                                    lastToken.type = Token_1.TokenType.identity;\n                                }\n                            },\n                            children: {\n                                value: {\n                                    parser: new StringArgumentParser_1.StringArgumentParser(2 /* Greedy */),\n                                    executable: true,\n                                    run: parsedLine => {\n                                        if (parsedLine.errors.length === 0) {\n                                            const parser = CommandTree_1.getArgOrDefault(parsedLine.data, 3, '');\n                                            const alias = CommandTree_1.getArgOrDefault(parsedLine.data, 2, null);\n                                            const value = CommandTree_1.getArgOrDefault(parsedLine.data, 1, null);\n                                            if (parser && alias && value) {\n                                                const key = `alias/${parser}`;\n                                                parsedLine.cache = {\n                                                    [key]: {\n                                                        [alias.valueOf()]: { foo: value.valueOf(), def: [alias[nodes_1.NodeRange]], ref: [] }\n                                                    }\n                                                };\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    templates: {\n        boolean: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('false', 'true'),\n            run: ({ tokens, data }) => {\n                const lastToken = tokens[tokens.length - 1];\n                lastToken.type = Token_1.TokenType.boolean;\n            }\n        },\n        color: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('black', 'dark_blue', 'dark_green', 'dark_aqua', 'dark_red', 'dark_purple', 'gold', 'gray', 'dark_gray', 'blue', 'green', 'aqua', 'red', 'light_purple', 'yellow', 'white')\n        },\n        execute_if_unless: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('if', 'unless'),\n            children: {\n                [types_1.Switchable]: true,\n                blocks: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('blocks'),\n                    children: {\n                        start: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            children: {\n                                end: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                                    run: ({ data, errors }) => {\n                                        const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode());\n                                        const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode());\n                                        const volume = v1.volumeTo(v2);\n                                        if (volume && volume > 32768) {\n                                            errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-block-affected', 32768, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                        }\n                                    },\n                                    children: {\n                                        destination: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                                            children: {\n                                                all_masked: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('all', 'masked'),\n                                                    executable: true,\n                                                    children: {\n                                                        subcommand: {\n                                                            redirect: 'execute_subcommand'\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                block: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            children: {\n                                block: {\n                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true, true),\n                                    executable: true,\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                data: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('data'),\n                    children: {\n                        nbt_holder: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true,\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                entity: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                    children: {\n                        entities: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            executable: true,\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                predicate: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('predicate'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$predicate'),\n                            executable: true,\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                score: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('score'),\n                    children: {\n                        target: {\n                            template: 'templates.single_score',\n                            children: {\n                                operation: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('<', '<=', '=', '>', '>='),\n                                    run: parsedLine => {\n                                        parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                    },\n                                    children: {\n                                        source: {\n                                            template: 'templates.single_score',\n                                            executable: true,\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                matches: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('matches'),\n                                    run: parsedLine => {\n                                        parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                    },\n                                    children: {\n                                        range: {\n                                            parser: new NumberRangeArgumentParser_1.NumberRangeArgumentParser('integer'),\n                                            executable: true,\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        multiple_score: {\n            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser()\n                }\n            }\n        },\n        single_score: {\n            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities', true),\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser()\n                }\n            }\n        }\n    },\n    data_modification: {\n        simple: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('append', 'merge', 'prepend', 'set')\n        },\n        insert: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('insert'),\n            children: {\n                index: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer')\n                }\n            }\n        }\n    },\n    item_holder: {\n        [types_1.Switchable]: true,\n        block: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer')\n                }\n            }\n        },\n        entity: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities')\n                }\n            }\n        }\n    },\n    nbt_holder: {\n        [types_1.Switchable]: true,\n        block: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer')\n                }\n            }\n        },\n        entity: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities')\n                }\n            }\n        },\n        storage: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('storage'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$storage')\n                }\n            }\n        }\n    },\n    loot_target_without_replace: {\n        [types_1.Switchable]: true,\n        spawn: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spawn'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3)\n                }\n            }\n        },\n        give: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players')\n                }\n            }\n        },\n        insert: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('insert'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3)\n                }\n            }\n        }\n    },\n    loot_source: {\n        [types_1.Switchable]: true,\n        fish: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('fish'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$loot_table'),\n                    children: {\n                        location: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            executable: true,\n                            children: {\n                                mainhand_offhand: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('mainhand', 'offhand')\n                                },\n                                item: {\n                                    parser: new ItemArgumentParser_1.ItemArgumentParser(false)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loot: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('loot'),\n            children: {\n                lootTable: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$loot_table')\n                }\n            }\n        },\n        kill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kill'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities')\n                }\n            }\n        },\n        mine: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('mine'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    executable: true,\n                    children: {\n                        mainhand_offhand: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('mainhand', 'offhand')\n                        },\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(false)\n                        }\n                    }\n                }\n            }\n        }\n    },\n    execute_subcommand: {\n        [types_1.Switchable]: true,\n        align: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('align'),\n            children: {\n                axes: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('x', 'xy', 'xyz', 'xz', 'xzy', 'y', 'yx', 'yxz', 'yz', 'yzx', 'z', 'zx', 'zxy', 'zy', 'zyx'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        anchored: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('anchored'),\n            children: {\n                eyes_feet: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('eyes', 'feet'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        as: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        at: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('at'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        facing: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('facing'),\n            children: {\n                entity: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                    children: {\n                        target: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                eyes_feet: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('eyes', 'feet'),\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        if: {\n            redirect: 'templates.execute_if_unless'\n        },\n        in: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('in'),\n            children: {\n                dimension: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$dimension'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        positioned: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('positioned'),\n            children: {\n                as: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        rotated: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('rotated'),\n            children: {\n                as: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                rot: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'float', false),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        run: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('run'),\n            children: {\n                command: {\n                    redirect: 'commands'\n                }\n            }\n        },\n        store: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('store'),\n            children: {\n                result_success: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('result', 'success'),\n                    children: {\n                        bossbar: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('bossbar'),\n                            children: {\n                                id: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                                    children: {\n                                        max_value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('max', 'value'),\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        score: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('score'),\n                            children: {\n                                score: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        nbt_holder: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    children: {\n                                        type: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('byte', 'short', 'int', 'long', 'float', 'double'),\n                                            children: {\n                                                scale: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                    children: {\n                                                        subcommand: {\n                                                            redirect: 'execute_subcommand'\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        unless: {\n            redirect: 'templates.execute_if_unless'\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandTree = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst CommandTree_1 = require(\"../CommandTree\");\nconst locales_1 = require(\"../locales\");\nconst nodes_1 = require(\"../nodes\");\nconst EntityNode_1 = require(\"../nodes/EntityNode\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst BlockArgumentParser_1 = require(\"../parsers/BlockArgumentParser\");\nconst CodeSnippetArgumentParser_1 = require(\"../parsers/CodeSnippetArgumentParser\");\nconst DeclarationDescriptionArgumentParser_1 = require(\"../parsers/DeclarationDescriptionArgumentParser\");\nconst DeclarationIDArgumentParser_1 = require(\"../parsers/DeclarationIDArgumentParser\");\nconst EntityArgumentParser_1 = require(\"../parsers/EntityArgumentParser\");\nconst IdentityArgumentParser_1 = require(\"../parsers/IdentityArgumentParser\");\nconst ItemArgumentParser_1 = require(\"../parsers/ItemArgumentParser\");\nconst ItemSlotArgumentParser_1 = require(\"../parsers/ItemSlotArgumentParser\");\nconst LiteralArgumentParser_1 = require(\"../parsers/LiteralArgumentParser\");\nconst MessageArgumentParser_1 = require(\"../parsers/MessageArgumentParser\");\nconst NbtArgumentParser_1 = require(\"../parsers/NbtArgumentParser\");\nconst NbtPathArgumentParser_1 = require(\"../parsers/NbtPathArgumentParser\");\nconst NumberArgumentParser_1 = require(\"../parsers/NumberArgumentParser\");\nconst NumberRangeArgumentParser_1 = require(\"../parsers/NumberRangeArgumentParser\");\nconst ObjectiveArgumentParser_1 = require(\"../parsers/ObjectiveArgumentParser\");\nconst ObjectiveCriterionArgumentParser_1 = require(\"../parsers/ObjectiveCriterionArgumentParser\");\nconst ParticleArgumentParser_1 = require(\"../parsers/ParticleArgumentParser\");\nconst ScoreboardSlotArgumentParser_1 = require(\"../parsers/ScoreboardSlotArgumentParser\");\nconst StringArgumentParser_1 = require(\"../parsers/StringArgumentParser\");\nconst TagArgumentParser_1 = require(\"../parsers/TagArgumentParser\");\nconst TeamArgumentParser_1 = require(\"../parsers/TeamArgumentParser\");\nconst TextComponentArgumentParser_1 = require(\"../parsers/TextComponentArgumentParser\");\nconst TimeArgumentParser_1 = require(\"../parsers/TimeArgumentParser\");\nconst UuidArgumentParser_1 = require(\"../parsers/UuidArgumentParser\");\nconst VectorArgumentParser_1 = require(\"../parsers/VectorArgumentParser\");\nconst types_1 = require(\"../types\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\n/**\n * Command tree of Minecraft Java Edition 20w46a commands.\n */\n/* istanbul ignore next */\nexports.CommandTree = {\n    line: {\n        command: {\n            redirect: 'commands'\n        },\n        comment: {\n            redirect: 'comments'\n        }\n    },\n    commands: {\n        [types_1.Switchable]: true,\n        [types_1.AlwaysValidates]: {\n            snippet: {\n                parser: new CodeSnippetArgumentParser_1.CodeSnippetArgumentParser(),\n                permission: 0,\n                executable: true\n            }\n        },\n        advancement: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('advancement'),\n            description: 'Grant or revoke advancements from players.',\n            children: {\n                grant_revoke: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('grant', 'revoke'),\n                    children: {\n                        targets: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                everything: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('everything'),\n                                    executable: true\n                                },\n                                only: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('only'),\n                                    children: {\n                                        advancement: {\n                                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$advancement'),\n                                            executable: true,\n                                            children: {\n                                                criterion: {\n                                                    parser: new StringArgumentParser_1.StringArgumentParser(0 /* Unquoted */),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                from_through_until: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('from', 'through', 'until'),\n                                    children: {\n                                        advancement: {\n                                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$advancement'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        attribute: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('attribute'),\n            description: 'Operate entity attributes and attribute modifiers.',\n            children: {\n                target: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                    children: {\n                        attribute: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:attribute'),\n                            children: {\n                                [types_1.Switchable]: true,\n                                base: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('base'),\n                                    children: {\n                                        [types_1.Switchable]: true,\n                                        get: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                                            executable: true,\n                                            children: {\n                                                scale: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        set: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                                            children: {\n                                                value: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                get: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                                    executable: true,\n                                    children: {\n                                        scale: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                modifier: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modifier'),\n                                    children: {\n                                        [types_1.Switchable]: true,\n                                        add: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                                            children: {\n                                                uuid: {\n                                                    parser: new UuidArgumentParser_1.UuidArgumentParser(),\n                                                    children: {\n                                                        name: {\n                                                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                                                            children: {\n                                                                value: {\n                                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                                    children: {\n                                                                        operation: {\n                                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'multiply', 'multiply_base'),\n                                                                            executable: true\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        remove: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                                            children: {\n                                                uuid: {\n                                                    parser: new UuidArgumentParser_1.UuidArgumentParser(),\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('value'),\n                                            children: {\n                                                get: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                                                    children: {\n                                                        uuid: {\n                                                            parser: new UuidArgumentParser_1.UuidArgumentParser(),\n                                                            executable: true,\n                                                            children: {\n                                                                scale: {\n                                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        'ban-ip': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('ban-ip'),\n            permission: 3,\n            description: 'Adds IP addresses to blacklist.',\n            children: {\n                name: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                address: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        banlist: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('banlist'),\n            permission: 3,\n            description: 'Displays the blacklist on this server.',\n            children: {\n                ips_players: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('ips', 'players'),\n                    executable: true\n                }\n            }\n        },\n        ban: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('ban'),\n            permission: 3,\n            description: 'Adds players to blacklist.',\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        bossbar: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('bossbar'),\n            description: 'Adds, removes or modifies boss bars.',\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar', undefined, undefined, undefined, true),\n                            children: {\n                                name: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            children: {\n                                max_players_value_visible: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('max', 'players', 'value', 'visible'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            executable: true\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                            children: {\n                                [types_1.Switchable]: true,\n                                color: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('color'),\n                                    children: {\n                                        colors: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('blue', 'green', 'pink', 'purple', 'red', 'white', 'yellow'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                max: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('max'),\n                                    children: {\n                                        max: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 1),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                name: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('name'),\n                                    children: {\n                                        name: {\n                                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                players: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('players'),\n                                    executable: true,\n                                    children: {\n                                        targets: {\n                                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                style: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('style'),\n                                    children: {\n                                        styles: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('progress', 'notched_6', 'notched_10', 'notched_12', 'notched_20'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                value: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('value'),\n                                    children: {\n                                        value: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                visible: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('visible'),\n                                    children: {\n                                        visible: {\n                                            template: 'templates.boolean',\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        clear: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n            description: '',\n            executable: true,\n            children: {\n                targets: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(true, true),\n                            executable: true,\n                            children: {\n                                maxCount: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        clone: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clone'),\n            description: '',\n            children: {\n                begin: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    children: {\n                        end: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            run: ({ data, errors }) => {\n                                const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode());\n                                const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode());\n                                const volume = v1.volumeTo(v2);\n                                if (volume && volume > 32768) {\n                                    errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-block-affected', 32768, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                }\n                            },\n                            children: {\n                                destination: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                                    executable: true,\n                                    children: {\n                                        filtered: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('filtered'),\n                                            children: {\n                                                block: {\n                                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true),\n                                                    executable: true,\n                                                    children: {\n                                                        cloneMode: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'move', 'normal'),\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        otherMaskMode: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('masked', 'replace'),\n                                            executable: true,\n                                            children: {\n                                                cloneMode: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'move', 'normal'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        datapack: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('datapack'),\n            children: {\n                [types_1.Switchable]: true,\n                disable: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('disable'),\n                    children: {\n                        name: {\n                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                            executable: true\n                        }\n                    }\n                },\n                enable: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('enable'),\n                    children: {\n                        name: {\n                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                            executable: true,\n                            children: {\n                                first_last: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('first', 'last'),\n                                    executable: true\n                                },\n                                before_after: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('before', 'after'),\n                                    children: {\n                                        existing: {\n                                            parser: new StringArgumentParser_1.StringArgumentParser(1 /* String */, null, 'stringQuote', 'stringQuoteType'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true,\n                    children: {\n                        available_enabled: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('available', 'enabled'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        data: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('data'),\n            children: {\n                [types_1.Switchable]: true,\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            executable: true,\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true,\n                                    children: {\n                                        scale: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                merge: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('merge'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                nbt: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:entity', id);\n                                        }\n                                        else {\n                                            return new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:block');\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                modify: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                targetPath: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    children: {\n                                        modification: {\n                                            template: 'data_modification',\n                                            children: {\n                                                [types_1.Switchable]: true,\n                                                from: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('from'),\n                                                    children: {\n                                                        source: {\n                                                            template: 'nbt_holder',\n                                                            executable: true,\n                                                            children: {\n                                                                sourcePath: {\n                                                                    parser: ({ data }) => {\n                                                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                                                        if (type === 'entity') {\n                                                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                                                        }\n                                                                        else if (type === 'block') {\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                                                        }\n                                                                        else {\n                                                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                                                        }\n                                                                    },\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                },\n                                                value: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('value'),\n                                                    children: {\n                                                        nbt: {\n                                                            parser: ({ data }) => {\n                                                                const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                                                if (type === 'entity') {\n                                                                    const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                                                    const id = utils_1.getNbtdocRegistryId(entity);\n                                                                    return new NbtArgumentParser_1.NbtArgumentParser(undefined, 'minecraft:entity', id);\n                                                                }\n                                                                else {\n                                                                    return new NbtArgumentParser_1.NbtArgumentParser(undefined, 'minecraft:block');\n                                                                }\n                                                            },\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        target: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        debug: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('debug'),\n            permission: 3,\n            children: {\n                start_stop_report: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('start', 'stop', 'report'),\n                    executable: true\n                }\n            }\n        },\n        defaultgamemode: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('defaultgamemode'),\n            children: {\n                mode: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('adventure', 'creative', 'spectator', 'survival'),\n                    executable: true\n                }\n            }\n        },\n        deop: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('deop'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        difficulty: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('difficulty'),\n            executable: true,\n            children: {\n                difficulty: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('easy', 'normal', 'hard', 'peaceful'),\n                    executable: true\n                }\n            }\n        },\n        effect: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('effect'),\n            children: {\n                [types_1.Switchable]: true,\n                clear: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n                    executable: true,\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            executable: true,\n                            children: {\n                                effect: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:mob_effect'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                give: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                effect: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:mob_effect'),\n                                    executable: true,\n                                    children: {\n                                        seconds: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 1000000),\n                                            executable: true,\n                                            children: {\n                                                amplifier: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 255),\n                                                    executable: true,\n                                                    children: {\n                                                        hideParticles: {\n                                                            template: 'templates.boolean',\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enchant: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('enchant'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        enchantment: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:enchantment'),\n                            executable: true,\n                            children: {\n                                level: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 5),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        execute: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('execute'),\n            children: {\n                subcommand: {\n                    redirect: 'execute_subcommand'\n                }\n            }\n        },\n        experience: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('experience', 'xp'),\n            children: {\n                add_set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'set'),\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                amount: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    executable: true,\n                                    children: {\n                                        points_levels: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('points', 'levels'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'players'),\n                            children: {\n                                points_levels: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('points', 'levels'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        fill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('fill'),\n            children: {\n                from: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    children: {\n                        to: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            run: ({ data, errors }) => {\n                                const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode());\n                                const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode());\n                                const volume = v1.volumeTo(v2);\n                                if (volume && volume > 32768) {\n                                    errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-block-affected', 32768, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                }\n                            },\n                            children: {\n                                block: {\n                                    parser: new BlockArgumentParser_1.BlockArgumentParser(false),\n                                    executable: true,\n                                    children: {\n                                        mathod: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('destroy', 'hollow', 'keep', 'outline'),\n                                            executable: true\n                                        },\n                                        replace: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('replace'),\n                                            executable: true,\n                                            children: {\n                                                filter: {\n                                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true, true),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        forceload: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('forceload'),\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true,\n                            children: {\n                                to: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                                    run: ({ data, errors }) => {\n                                        const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode()).getChunk();\n                                        const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode()).getChunk();\n                                        if (!(v1 && v2)) {\n                                            return;\n                                        }\n                                        const volume = v1.volumeTo(v2);\n                                        if (volume && volume > 256) {\n                                            errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-chunk-affected', 256, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true,\n                            children: {\n                                to: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                                    run: ({ data, errors }) => {\n                                        const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode()).getChunk();\n                                        const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode()).getChunk();\n                                        if (!(v1 && v2)) {\n                                            return;\n                                        }\n                                        const volume = v1.volumeTo(v2);\n                                        if (volume && volume > 256) {\n                                            errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-chunk-affected', 256, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                        }\n                                    },\n                                    executable: true\n                                }\n                            }\n                        },\n                        all: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('all'),\n                            executable: true\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'integer'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        function: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('function'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                    executable: true\n                }\n            }\n        },\n        gamemode: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('gamemode'),\n            children: {\n                mode: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('adventure', 'creative', 'spectator', 'survival'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        gamerule: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('gamerule'),\n            children: {\n                boolRuleName: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('announceAdvancements', 'commandBlockOutput', 'disableElytraMovementCheck', 'disableRaids', 'doDaylightCycle', 'doEntityDrops', 'doFireTick', 'doLimitedCrafting', 'doMobLoot', 'doMobSpawning', 'doTileDrops', 'doWeatherCycle', 'keepInventory', 'logAdminCommands', 'mobGriefing', 'naturalRegeneration', 'reducedDebugInfo', 'sendCommandFeedback', 'showDeathMessages', 'spectatorsGenerateChunks', 'doInsomnia', 'doImmediateRespawn', 'drowningDamage', 'fallDamage', 'fireDamage', 'doPatrolSpawning', 'doTraderSpawning', 'universalAnger', 'forgiveDeadPlayers'),\n                    executable: true,\n                    children: {\n                        value: {\n                            template: 'templates.boolean',\n                            executable: true\n                        }\n                    }\n                },\n                intRuleName: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('maxCommandChainLength', 'maxEntityCramming', 'randomTickSpeed', 'spawnRadius'),\n                    executable: true,\n                    children: {\n                        value: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        give: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(false),\n                            executable: true,\n                            children: {\n                                count: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        help: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('help'),\n            permission: 0,\n            executable: true,\n            children: {\n                command: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(2 /* Greedy */),\n                    executable: true\n                }\n            }\n        },\n        item: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('item'),\n            children: {\n                target: {\n                    template: 'item_holder',\n                    children: {\n                        slot: {\n                            parser: new ItemSlotArgumentParser_1.ItemSlotArgumentParser(),\n                            children: {\n                                [types_1.Switchable]: true,\n                                copy: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('copy'),\n                                    children: {\n                                        source: {\n                                            template: 'item_holder',\n                                            children: {\n                                                slot: {\n                                                    parser: new ItemSlotArgumentParser_1.ItemSlotArgumentParser(),\n                                                    executable: true,\n                                                    children: {\n                                                        modifier: {\n                                                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$item_modifier'),\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                modify: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                                    children: {\n                                        modifier: {\n                                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$item_modifier'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                replace: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('replace'),\n                                    children: {\n                                        item: {\n                                            parser: new ItemArgumentParser_1.ItemArgumentParser(false),\n                                            executable: true,\n                                            children: {\n                                                count: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 64),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        kick: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kick'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        reason: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        kill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kill'),\n            executable: true,\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    executable: true\n                }\n            }\n        },\n        list: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n            permission: 0,\n            executable: true,\n            children: {\n                uuids: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('uuids'),\n                    executable: true\n                }\n            }\n        },\n        locatebiome: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('locatebiome'),\n            children: {\n                type: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$worldgen/biome'),\n                    executable: true\n                }\n            }\n        },\n        locate: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('locate'),\n            children: {\n                type: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('bastion_remnant', 'buried_treasure', 'desert_pyramid', 'endcity', 'fortress', 'igloo', 'jungle_pyramid', 'mansion', 'mineshaft', 'monument', 'nether_fossil', 'ocean_ruin', 'pillager_outpost', 'ruined_portal', 'shipwreck', 'stronghold', 'swamp_hut', 'village'),\n                    executable: true\n                }\n            }\n        },\n        loot: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('loot'),\n            children: {\n                replace: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('replace'),\n                    children: {\n                        target: {\n                            template: 'item_holder',\n                            children: {\n                                slot: {\n                                    parser: new ItemSlotArgumentParser_1.ItemSlotArgumentParser(),\n                                    children: {\n                                        count: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            children: {\n                                                source: {\n                                                    template: 'loot_source',\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        source: {\n                                            template: 'loot_source',\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                target: {\n                    template: 'loot_target_without_replace',\n                    children: {\n                        source: {\n                            template: 'loot_source',\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        me: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('me'),\n            permission: 0,\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        msg: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('msg', 'tell', 'w'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        message: {\n                            parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        op: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('op'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        'pardon-ip': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('pardon-ip'),\n            permission: 3,\n            children: {\n                address: {\n                    parser: new StringArgumentParser_1.StringArgumentParser(0 /* Unquoted */),\n                    executable: true\n                }\n            }\n        },\n        pardon: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('pardon'),\n            permission: 3,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true\n                }\n            }\n        },\n        particle: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('particle'),\n            children: {\n                name: {\n                    parser: new ParticleArgumentParser_1.ParticleArgumentParser(),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                delta: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                    children: {\n                                        speed: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                            children: {\n                                                count: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                                    executable: true,\n                                                    children: {\n                                                        mode: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('force', 'normal'),\n                                                            executable: true,\n                                                            children: {\n                                                                player: {\n                                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        playsound: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('playsound'),\n            children: {\n                sound: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:sound_event'),\n                    children: {\n                        source: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('master', 'music', 'record', 'weather', 'block', 'hostile', 'neutral', 'player', 'ambient', 'voice'),\n                            children: {\n                                player: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                                    executable: true,\n                                    children: {\n                                        pos: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                            executable: true,\n                                            children: {\n                                                volume: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                    executable: true,\n                                                    children: {\n                                                        pitch: {\n                                                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                            executable: true,\n                                                            children: {\n                                                                minimumVolume: {\n                                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        publish: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('publish'),\n            permission: 4,\n            executable: true,\n            children: {\n                port: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 65535),\n                    executable: true\n                }\n            }\n        },\n        recipe: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('recipe'),\n            children: {\n                give_take: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('give', 'take'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            children: {\n                                '*': {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('*'),\n                                    executable: true\n                                },\n                                name: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$recipe'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        reload: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('reload'),\n            executable: true\n        },\n        replaceitem: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('replaceitem'),\n            children: {\n                target: {\n                    template: 'item_holder',\n                    children: {\n                        slot: {\n                            parser: new ItemSlotArgumentParser_1.ItemSlotArgumentParser(),\n                            children: {\n                                item: {\n                                    parser: new ItemArgumentParser_1.ItemArgumentParser(false),\n                                    executable: true,\n                                    run: ({ data, errors }) => {\n                                        if (errors.length === 0) {\n                                            errors.push(new types_1.ParsingError({ start: CommandTree_1.getArgData(data, 5).range.start, end: CommandTree_1.getArgData(data, 1).range.end }, locales_1.locale('datafix.error.command-replaceitem'), undefined, undefined, 1 /* CommandReplaceitem */));\n                                        }\n                                    },\n                                    children: {\n                                        count: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 64),\n                                            executable: true,\n                                            run: ({ data, errors }) => {\n                                                if (errors.length === 0) {\n                                                    errors.push(new types_1.ParsingError({ start: CommandTree_1.getArgData(data, 6).range.start, end: CommandTree_1.getArgData(data, 1).range.end }, locales_1.locale('datafix.error.command-replaceitem'), undefined, undefined, 1 /* CommandReplaceitem */));\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        'save-all': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('save-all'),\n            permission: 4,\n            executable: true,\n            children: {\n                flush: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('flush'),\n                    executable: true\n                }\n            }\n        },\n        'save-off': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('save-off'),\n            permission: 4,\n            executable: true\n        },\n        'save-on': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('save-on'),\n            permission: 4,\n            executable: true\n        },\n        say: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('say'),\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        schedule: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('schedule'),\n            children: {\n                [types_1.Switchable]: true,\n                function: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('function'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                            children: {\n                                time: {\n                                    parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                                    executable: true,\n                                    children: {\n                                        append_replace: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('append', 'replace'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                clear: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$function', true),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        scoreboard: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('scoreboard'),\n            children: {\n                [types_1.Switchable]: true,\n                objectives: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('objectives'),\n                    children: {\n                        [types_1.Switchable]: true,\n                        add: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(true),\n                                    children: {\n                                        criterion: {\n                                            parser: new ObjectiveCriterionArgumentParser_1.ObjectiveCriterionArgumentParser(),\n                                            executable: true,\n                                            children: {\n                                                displayName: {\n                                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true\n                        },\n                        modify: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                    children: {\n                                        displayname: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('displayname'),\n                                            children: {\n                                                displayName: {\n                                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                                    executable: true\n                                                }\n                                            }\n                                        },\n                                        rendertype: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('rendertype'),\n                                            children: {\n                                                displayName: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('hearts', 'integer'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                            children: {\n                                objective: {\n                                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        setdisplay: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setdisplay'),\n                            children: {\n                                slot: {\n                                    parser: new ScoreboardSlotArgumentParser_1.ScoreboardSlotArgumentParser(),\n                                    executable: true,\n                                    children: {\n                                        objective: {\n                                            parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                players: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('players'),\n                    children: {\n                        [types_1.Switchable]: true,\n                        add: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        score: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        set: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        score: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        enable: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('enable'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    executable: true\n                                }\n                            }\n                        },\n                        get: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                            children: {\n                                target: {\n                                    template: 'templates.single_score',\n                                    executable: true\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true,\n                            children: {\n                                target: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                                    executable: true\n                                }\n                            }\n                        },\n                        operation: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('operation'),\n                            children: {\n                                target: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        operation: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('+=', '-=', '*=', '/=', '%=', '=', '>', '<', '><'),\n                                            run: parsedLine => {\n                                                parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                            },\n                                            children: {\n                                                source: {\n                                                    template: 'templates.multiple_score',\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                            children: {\n                                targets: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        score: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        reset: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('reset'),\n                            children: {\n                                targets: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                                    executable: true,\n                                    children: {\n                                        objective: {\n                                            parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        seed: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('seed'),\n            executable: true\n        },\n        setblock: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setblock'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    children: {\n                        block: {\n                            parser: new BlockArgumentParser_1.BlockArgumentParser(false),\n                            executable: true,\n                            children: {\n                                mode: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('destroy', 'keep', 'replace'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        setidletimeout: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setidletimeout'),\n            permission: 3,\n            children: {\n                minutes: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 35000),\n                    executable: true\n                }\n            }\n        },\n        setworldspawn: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('setworldspawn'),\n            executable: true,\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    executable: true\n                }\n            }\n        },\n        spawnpoint: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spawnpoint'),\n            executable: true,\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            executable: true,\n                            children: {\n                                angle: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(1, 'float', false),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        spectate: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spectate'),\n            executable: true,\n            children: {\n                target: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                    executable: true,\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'players'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        spreadplayers: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spreadplayers'),\n            children: {\n                center: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(2),\n                    children: {\n                        spreadDistance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                            children: {\n                                maxRange: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 1),\n                                    children: {\n                                        under: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('under'),\n                                            children: {\n                                                maxHeight: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                                    children: {\n                                                        respectTeams: {\n                                                            template: 'templates.boolean',\n                                                            children: {\n                                                                entity: {\n                                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                                                                    executable: true\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        respectTeams: {\n                                            template: 'templates.boolean',\n                                            children: {\n                                                entity: {\n                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        stopsound: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('stopsound'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    executable: true,\n                    children: {\n                        source: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('*', 'master', 'music', 'record', 'weather', 'block', 'hostile', 'neutral', 'player', 'ambient', 'voice'),\n                            executable: true,\n                            children: {\n                                sound: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:sound_event'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        stop: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('stop'),\n            permission: 4,\n            executable: true\n        },\n        summon: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('summon'),\n            children: {\n                name: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('minecraft:entity_type'),\n                    executable: true,\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                nbt: {\n                                    parser: ({ data }) => new NbtArgumentParser_1.NbtArgumentParser('Compound', 'minecraft:entity', CommandTree_1.getArgOrDefault(data, 2, new IdentityNode_1.IdentityNode()).toString()),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        tag: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('tag'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        add_remove: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'remove'),\n                            children: {\n                                tag: {\n                                    parser: new TagArgumentParser_1.TagArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        list: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        teammsg: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('teammsg', 'tm'),\n            permission: 0,\n            children: {\n                message: {\n                    parser: new MessageArgumentParser_1.MessageArgumentParser(),\n                    executable: true\n                }\n            }\n        },\n        team: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('team'),\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(true),\n                            executable: true,\n                            children: {\n                                displayName: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                empty: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('empty'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                join: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('join'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true,\n                            children: {\n                                members: {\n                                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                leave: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('leave'),\n                    children: {\n                        members: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n                            executable: true\n                        }\n                    }\n                },\n                list: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list'),\n                    executable: true,\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                modify: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('modify'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            children: {\n                                color: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('color'),\n                                    children: {\n                                        value: {\n                                            template: 'templates.color',\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                friendlyFire_seeFriendlyInvisibles: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('friendlyFire', 'seeFriendlyInvisibles'),\n                                    children: {\n                                        value: {\n                                            template: 'templates.boolean',\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                nametagVisibility_deathMessageVisibility: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('nametagVisibility', 'deathMessageVisibility'),\n                                    children: {\n                                        value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('never', 'hideForOtherTeams', 'hideForOwnTeam', 'always'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                collisionRule: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('collisionRule'),\n                                    children: {\n                                        value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('never', 'pushOtherTeams', 'pushOwnTeam', 'always'),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                displayName_prefix_suffix: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('displayName', 'prefix', 'suffix'),\n                                    children: {\n                                        value: {\n                                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                            executable: true\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('remove'),\n                    children: {\n                        team: {\n                            parser: new TeamArgumentParser_1.TeamArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        teleport: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('teleport', 'tp'),\n            children: {\n                destination: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    executable: true\n                },\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    executable: true,\n                    children: {\n                        destination: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                            executable: true,\n                            children: {\n                                facing: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('facing'),\n                                    children: {\n                                        entity: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                                            children: {\n                                                facingEntity: {\n                                                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                                                    executable: true,\n                                                    children: {\n                                                        facingAnchor: {\n                                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('feet', 'eyes'),\n                                                            executable: true\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        pos: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                                            executable: true\n                                        }\n                                    }\n                                },\n                                rotation: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'float', false),\n                                    executable: true\n                                }\n                            }\n                        },\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        tell: {\n            redirect: 'commands.msg'\n        },\n        tellraw: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('tellraw'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        message: {\n                            parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        time: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('time'),\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        value: {\n                            parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        literals: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('day', 'night', 'noon', 'midnight'),\n                            executable: true\n                        },\n                        value: {\n                            parser: new TimeArgumentParser_1.TimeArgumentParser(),\n                            executable: true\n                        }\n                    }\n                },\n                query: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('query'),\n                    children: {\n                        value: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('day', 'daytime', 'gametime'),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        title: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('title'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                    children: {\n                        clear_reset: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear', 'reset'),\n                            executable: true\n                        },\n                        title_subtitle_actionbar: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('title', 'subtitle', 'actionbar'),\n                            children: {\n                                text: {\n                                    parser: new TextComponentArgumentParser_1.TextComponentArgumentParser(),\n                                    executable: true\n                                }\n                            }\n                        },\n                        times: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('times'),\n                            children: {\n                                fadeIn: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    children: {\n                                        stay: {\n                                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                            children: {\n                                                fadeOut: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                                    executable: true\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        tm: {\n            redirect: 'commands.teammsg'\n        },\n        tp: {\n            redirect: 'commands.teleport'\n        },\n        trigger: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('trigger'),\n            permission: 0,\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser(),\n                    executable: true,\n                    children: {\n                        add_set: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'set'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer'),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        weather: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('weather'),\n            children: {\n                clear_rain_thunder: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('clear', 'rain', 'thunder'),\n                    executable: true,\n                    children: {\n                        duration: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0, 1000000),\n                            executable: true\n                        }\n                    }\n                }\n            }\n        },\n        whitelist: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('whitelist'),\n            permission: 3,\n            children: {\n                add_remove: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add', 'remove'),\n                    children: {\n                        player: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players'),\n                            executable: true\n                        }\n                    }\n                },\n                list_off_on_reload: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('list', 'off', 'on', 'reload'),\n                    executable: true\n                }\n            }\n        },\n        worldborder: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('worldborder'),\n            children: {\n                [types_1.Switchable]: true,\n                add: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('add'),\n                    children: {\n                        distance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', -60000000, 60000000),\n                            executable: true,\n                            children: {\n                                time: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                set: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('set'),\n                    children: {\n                        distance: {\n                            parser: new NumberArgumentParser_1.NumberArgumentParser('float', 1, 60000000),\n                            executable: true,\n                            children: {\n                                time: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                center: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('center'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(2),\n                            executable: true\n                        }\n                    }\n                },\n                damage: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('damage'),\n                    children: {\n                        amount_buffer: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('amount', 'buffer'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                },\n                get: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('get'),\n                    executable: true\n                },\n                warning: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('warning'),\n                    children: {\n                        distance_time: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('distance', 'time'),\n                            children: {\n                                value: {\n                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float', 0),\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        w: {\n            redirect: 'commands.msg'\n        },\n        xp: {\n            redirect: 'commands.experience'\n        }\n    },\n    comments: {\n        [types_1.Switchable]: true,\n        // #declare <type: string> <id: string>\n        '#declare': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('#declare', '#define'),\n            description: 'Declares a resource for completions.',\n            children: {\n                type: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser(...ClientCache_1.DeclarableTypes),\n                    description: 'Type of the declaration',\n                    children: {\n                        id: {\n                            parser: ({ data }) => new DeclarationIDArgumentParser_1.DeclarationIDArgumentParser(CommandTree_1.getArgOrDefault(data, 1, '')),\n                            description: 'ID',\n                            executable: true,\n                            children: {\n                                description: {\n                                    parser: ({ data }) => new DeclarationDescriptionArgumentParser_1.DeclarationDescriptionArgumentParser(CommandTree_1.getArgOrDefault(data, 2, ''), CommandTree_1.getArgOrDefault(data, 1, '')),\n                                    description: 'Description for the declaration',\n                                    executable: true\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        '#define': {\n            redirect: 'comments.#declare'\n        },\n        // #alias <parser: string> <alias: string> <value: string>\n        '#alias': {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('#alias'),\n            children: {\n                parser: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity', 'uuid', 'vector'),\n                    children: {\n                        alias: {\n                            parser: new StringArgumentParser_1.StringArgumentParser(),\n                            run: ({ tokens }) => {\n                                const lastToken = tokens[tokens.length - 1];\n                                if (lastToken) {\n                                    lastToken.type = Token_1.TokenType.identity;\n                                }\n                            },\n                            children: {\n                                value: {\n                                    parser: new StringArgumentParser_1.StringArgumentParser(2 /* Greedy */),\n                                    executable: true,\n                                    run: parsedLine => {\n                                        if (parsedLine.errors.length === 0) {\n                                            const parser = CommandTree_1.getArgOrDefault(parsedLine.data, 3, '');\n                                            const alias = CommandTree_1.getArgOrDefault(parsedLine.data, 2, null);\n                                            const value = CommandTree_1.getArgOrDefault(parsedLine.data, 1, null);\n                                            if (parser && alias && value) {\n                                                const key = `alias/${parser}`;\n                                                parsedLine.cache = {\n                                                    [key]: {\n                                                        [alias.valueOf()]: { foo: value.valueOf(), def: [alias[nodes_1.NodeRange]], ref: [] }\n                                                    }\n                                                };\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    templates: {\n        boolean: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('false', 'true'),\n            run: ({ tokens, data }) => {\n                const lastToken = tokens[tokens.length - 1];\n                lastToken.type = Token_1.TokenType.boolean;\n            }\n        },\n        color: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('black', 'dark_blue', 'dark_green', 'dark_aqua', 'dark_red', 'dark_purple', 'gold', 'gray', 'dark_gray', 'blue', 'green', 'aqua', 'red', 'light_purple', 'yellow', 'white')\n        },\n        execute_if_unless: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('if', 'unless'),\n            children: {\n                [types_1.Switchable]: true,\n                blocks: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('blocks'),\n                    children: {\n                        start: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            children: {\n                                end: {\n                                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                                    run: ({ data, errors }) => {\n                                        const v1 = CommandTree_1.getArgOrDefault(data, 2, new nodes_1.VectorNode());\n                                        const v2 = CommandTree_1.getArgOrDefault(data, 1, new nodes_1.VectorNode());\n                                        const volume = v1.volumeTo(v2);\n                                        if (volume && volume > 32768) {\n                                            errors.push(new types_1.ParsingError({ start: v1[nodes_1.NodeRange].start, end: v2[nodes_1.NodeRange].end }, locales_1.locale('too-many-block-affected', 32768, volume), undefined, vscode_languageserver_1.DiagnosticSeverity.Error));\n                                        }\n                                    },\n                                    children: {\n                                        destination: {\n                                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                                            children: {\n                                                all_masked: {\n                                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('all', 'masked'),\n                                                    executable: true,\n                                                    children: {\n                                                        subcommand: {\n                                                            redirect: 'execute_subcommand'\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                block: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n                    children: {\n                        pos: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            children: {\n                                block: {\n                                    parser: new BlockArgumentParser_1.BlockArgumentParser(true, true),\n                                    executable: true,\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                data: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('data'),\n                    children: {\n                        nbt_holder: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    executable: true,\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                entity: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                    children: {\n                        entities: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            executable: true,\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                predicate: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('predicate'),\n                    children: {\n                        id: {\n                            parser: new IdentityArgumentParser_1.IdentityArgumentParser('$predicate'),\n                            executable: true,\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                score: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('score'),\n                    children: {\n                        target: {\n                            template: 'templates.single_score',\n                            children: {\n                                operation: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('<', '<=', '=', '>', '>='),\n                                    run: parsedLine => {\n                                        parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                    },\n                                    children: {\n                                        source: {\n                                            template: 'templates.single_score',\n                                            executable: true,\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                matches: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('matches'),\n                                    run: parsedLine => {\n                                        parsedLine.tokens[parsedLine.tokens.length - 1].type = Token_1.TokenType.operator;\n                                    },\n                                    children: {\n                                        range: {\n                                            parser: new NumberRangeArgumentParser_1.NumberRangeArgumentParser('integer'),\n                                            executable: true,\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        multiple_score: {\n            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities', true),\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser()\n                }\n            }\n        },\n        single_score: {\n            parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities', true),\n            children: {\n                objective: {\n                    parser: new ObjectiveArgumentParser_1.ObjectiveArgumentParser()\n                }\n            }\n        }\n    },\n    data_modification: {\n        simple: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('append', 'merge', 'prepend', 'set')\n        },\n        insert: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('insert'),\n            children: {\n                index: {\n                    parser: new NumberArgumentParser_1.NumberArgumentParser('integer')\n                }\n            }\n        }\n    },\n    item_holder: {\n        [types_1.Switchable]: true,\n        block: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer')\n                }\n            }\n        },\n        entity: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities')\n                }\n            }\n        }\n    },\n    nbt_holder: {\n        [types_1.Switchable]: true,\n        block: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('block'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer')\n                }\n            }\n        },\n        entity: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities')\n                }\n            }\n        },\n        storage: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('storage'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$storage')\n                }\n            }\n        }\n    },\n    loot_target_without_replace: {\n        [types_1.Switchable]: true,\n        spawn: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('spawn'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3)\n                }\n            }\n        },\n        give: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('give'),\n            children: {\n                player: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'players')\n                }\n            }\n        },\n        insert: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('insert'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3)\n                }\n            }\n        }\n    },\n    loot_source: {\n        [types_1.Switchable]: true,\n        fish: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('fish'),\n            children: {\n                id: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$loot_table'),\n                    children: {\n                        location: {\n                            parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                            executable: true,\n                            children: {\n                                mainhand_offhand: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('mainhand', 'offhand')\n                                },\n                                item: {\n                                    parser: new ItemArgumentParser_1.ItemArgumentParser(false)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        loot: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('loot'),\n            children: {\n                lootTable: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$loot_table')\n                }\n            }\n        },\n        kill: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('kill'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('single', 'entities')\n                }\n            }\n        },\n        mine: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('mine'),\n            children: {\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3, 'integer'),\n                    executable: true,\n                    children: {\n                        mainhand_offhand: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('mainhand', 'offhand')\n                        },\n                        item: {\n                            parser: new ItemArgumentParser_1.ItemArgumentParser(false)\n                        }\n                    }\n                }\n            }\n        }\n    },\n    execute_subcommand: {\n        [types_1.Switchable]: true,\n        align: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('align'),\n            children: {\n                axes: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('x', 'xy', 'xyz', 'xz', 'xzy', 'y', 'yx', 'yxz', 'yz', 'yzx', 'z', 'zx', 'zxy', 'zy', 'zyx'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        anchored: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('anchored'),\n            children: {\n                eyes_feet: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('eyes', 'feet'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        as: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        at: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('at'),\n            children: {\n                entity: {\n                    parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        facing: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('facing'),\n            children: {\n                entity: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('entity'),\n                    children: {\n                        target: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                eyes_feet: {\n                                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('eyes', 'feet'),\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        if: {\n            redirect: 'templates.execute_if_unless'\n        },\n        in: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('in'),\n            children: {\n                dimension: {\n                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$dimension'),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        positioned: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('positioned'),\n            children: {\n                as: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                pos: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(3),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        rotated: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('rotated'),\n            children: {\n                as: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('as'),\n                    children: {\n                        entity: {\n                            parser: new EntityArgumentParser_1.EntityArgumentParser('multiple', 'entities'),\n                            children: {\n                                subcommand: {\n                                    redirect: 'execute_subcommand'\n                                }\n                            }\n                        }\n                    }\n                },\n                rot: {\n                    parser: new VectorArgumentParser_1.VectorArgumentParser(2, 'float', false),\n                    children: {\n                        subcommand: {\n                            redirect: 'execute_subcommand'\n                        }\n                    }\n                }\n            }\n        },\n        run: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('run'),\n            children: {\n                command: {\n                    redirect: 'commands'\n                }\n            }\n        },\n        store: {\n            parser: new LiteralArgumentParser_1.LiteralArgumentParser('store'),\n            children: {\n                result_success: {\n                    parser: new LiteralArgumentParser_1.LiteralArgumentParser('result', 'success'),\n                    children: {\n                        bossbar: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('bossbar'),\n                            children: {\n                                id: {\n                                    parser: new IdentityArgumentParser_1.IdentityArgumentParser('$bossbar'),\n                                    children: {\n                                        max_value: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('max', 'value'),\n                                            children: {\n                                                subcommand: {\n                                                    redirect: 'execute_subcommand'\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        score: {\n                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('score'),\n                            children: {\n                                score: {\n                                    template: 'templates.multiple_score',\n                                    children: {\n                                        subcommand: {\n                                            redirect: 'execute_subcommand'\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        nbt_holder: {\n                            template: 'nbt_holder',\n                            children: {\n                                path: {\n                                    parser: ({ data }) => {\n                                        const type = CommandTree_1.getArgOrDefault(data, 2, 'block');\n                                        if (type === 'entity') {\n                                            const entity = CommandTree_1.getArgOrDefault(data, 1, new EntityNode_1.EntityNode());\n                                            const id = utils_1.getNbtdocRegistryId(entity);\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:entity', id);\n                                        }\n                                        else if (type === 'block') {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block', null);\n                                        }\n                                        else {\n                                            return new NbtPathArgumentParser_1.NbtPathArgumentParser('minecraft:block');\n                                        }\n                                    },\n                                    children: {\n                                        type: {\n                                            parser: new LiteralArgumentParser_1.LiteralArgumentParser('byte', 'short', 'int', 'long', 'float', 'double'),\n                                            children: {\n                                                scale: {\n                                                    parser: new NumberArgumentParser_1.NumberArgumentParser('float'),\n                                                    children: {\n                                                        subcommand: {\n                                                            redirect: 'execute_subcommand'\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        unless: {\n            redirect: 'templates.execute_if_unless'\n        }\n    }\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FallbackJsonSchemas = exports.getJsonSchemas = exports.getJsonSchemaType = exports.FallbackJsonSchemaRegistry = void 0;\nconst java_1_17_1 = require(\"@mcschema/java-1.17\");\nconst minimatch_1 = __importDefault(require(\"minimatch\"));\nconst PathPatterns_1 = require(\"../utils/PathPatterns\");\nconst VanillaData_1 = require(\"./VanillaData\");\nexports.FallbackJsonSchemaRegistry = java_1_17_1.getSchemas(setUpJsonCollections(java_1_17_1.getCollections(), VanillaData_1.FallbackRegistry));\nconst globPatterns = {\n    advancement: PathPatterns_1.PathPatterns.advancement,\n    dimension: PathPatterns_1.PathPatterns.dimension,\n    dimension_type: PathPatterns_1.PathPatterns.dimension_type,\n    item_modifier: PathPatterns_1.PathPatterns.item_modifier,\n    loot_table: PathPatterns_1.PathPatterns.loot_table,\n    predicate: PathPatterns_1.PathPatterns.predicate,\n    recipe: PathPatterns_1.PathPatterns.recipe,\n    /* tag */\n    block_tag: PathPatterns_1.PathPatterns['tag/block'],\n    entity_type_tag: PathPatterns_1.PathPatterns['tag/entity_type'],\n    fluid_tag: PathPatterns_1.PathPatterns['tag/fluid'],\n    function_tag: PathPatterns_1.PathPatterns['tag/function'],\n    game_event_tag: PathPatterns_1.PathPatterns['tag/game_event'],\n    item_tag: PathPatterns_1.PathPatterns['tag/item'],\n    /* worldgen */\n    biome: PathPatterns_1.PathPatterns['worldgen/biome'],\n    configured_carver: PathPatterns_1.PathPatterns['worldgen/configured_carver'],\n    configured_decorator: PathPatterns_1.PathPatterns['worldgen/configured_decorator'],\n    configured_feature: PathPatterns_1.PathPatterns['worldgen/configured_feature'],\n    configured_structure_feature: PathPatterns_1.PathPatterns['worldgen/configured_structure_feature'],\n    configured_surface_builder: PathPatterns_1.PathPatterns['worldgen/configured_surface_builder'],\n    noise_settings: PathPatterns_1.PathPatterns['worldgen/noise_settings'],\n    processor_list: PathPatterns_1.PathPatterns['worldgen/processor_list'],\n    template_pool: PathPatterns_1.PathPatterns['worldgen/template_pool'],\n    /* misc */\n    pack_mcmeta: 'pack.mcmeta',\n    text_component: 'text_component.json'\n};\nfunction getJsonSchemaType(rel) {\n    for (const type of Object.keys(globPatterns)) {\n        const glob = globPatterns[type];\n        if (minimatch_1.default(rel, glob)) {\n            return type;\n        }\n    }\n    return null;\n}\nexports.getJsonSchemaType = getJsonSchemaType;\nfunction setUpJsonCollections(collections, registry) {\n    for (const key of Object.keys(registry)) {\n        collections.register(key.replace(/^minecraft:/, ''), Object.keys(registry[key].entries));\n    }\n    return collections;\n}\n/* istanbul ignore next */\nfunction getJsonSchemas(version, registry) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const id = `java-${version}`;\n        // Note: The stupid Webpack can't load the entry point of a scoped package correctly.\n        const { getSchemas, getCollections } = yield Promise.resolve().then(() => __importStar(require(`@mcschema/${id}/lib/index.js`)));\n        const collections = getCollections();\n        const schemas = getSchemas(setUpJsonCollections(collections, registry));\n        return schemas;\n    });\n}\nexports.getJsonSchemas = getJsonSchemas;\nexports.FallbackJsonSchemas = getJsonSchemas('1.16', VanillaData_1.FallbackRegistry);\n","\"use strict\";\n/* istanbul ignore file */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getVanillaData = exports.VanillaDataCache = exports.getVanillaDataCache = exports.FallbackVanillaData = exports.FallbackRegistry = exports.FallbackNbtdoc = exports.FallbackNamespaceSummary = exports.FallbackBlockDefinition = void 0;\nconst clone_1 = __importDefault(require(\"clone\"));\nconst fs_1 = require(\"fs\");\nconst path_1 = __importDefault(require(\"path\"));\nconst utils_1 = require(\"../utils\");\nlet faildTimes = 0;\nconst MaxFaildTimes = 3;\nexports.FallbackBlockDefinition = require('./BlockDefinition.json');\nexports.FallbackNamespaceSummary = require('./NamespaceSummary.json');\nexports.FallbackNbtdoc = require('./Nbtdoc.json');\nexports.FallbackRegistry = require('./Registry.json');\nexports.FallbackVanillaData = {\n    BlockDefinition: exports.FallbackBlockDefinition,\n    NamespaceSummary: exports.FallbackNamespaceSummary,\n    Nbtdoc: exports.FallbackNbtdoc,\n    Registry: exports.FallbackRegistry\n};\nfunction getVanillaDataCache() {\n    return clone_1.default({\n        BlockDefinition: { '20w45a': Promise.resolve(exports.FallbackBlockDefinition) },\n        NamespaceSummary: { '20w45a': Promise.resolve(exports.FallbackNamespaceSummary) },\n        Nbtdoc: { '1.16.2': Promise.resolve(exports.FallbackNbtdoc) },\n        Registry: { '20w45a': Promise.resolve(exports.FallbackRegistry) }\n    });\n}\nexports.getVanillaDataCache = getVanillaDataCache;\nexports.VanillaDataCache = getVanillaDataCache();\nfunction getUri(_source, maintainer, name, path) {\n    // if (source === 'GitHub') {\n    return `https://raw.githubusercontent.com/${maintainer}/${name}/${path}`;\n    // } else {\n    //     return `https://gitee.com/SPGoding/${name}/raw/${path}`\n    // }\n}\nfunction getReportUri(type, source, version, processedVersions, isLatestSnapshot) {\n    switch (type) {\n        case 'BlockDefinition':\n            if (processedVersions.includes(version)) {\n                return getUri(source, 'Arcensoth', 'mcdata', `${isLatestSnapshot ? 'master' : version}/processed/reports/blocks/data.min.json`);\n            }\n            else {\n                return getUri(source, 'Arcensoth', 'mcdata', `${version}/generated/reports/blocks.json`);\n            }\n        case 'NamespaceSummary':\n            if (processedVersions.includes(version)) {\n                return getUri(source, 'SPGoding', 'vanilla-datapack', `${isLatestSnapshot ? 'summary' : `${version}-summary`}/summary/flattened.min.json`);\n            }\n            else {\n                return getUri(source, 'SPGoding', 'vanilla-datapack', 'summary/summary/flattened.min.json');\n            }\n        case 'Nbtdoc':\n            return getUri(source, 'Yurihaia', 'mc-nbtdoc', `${isLatestSnapshot ? 'generated' : `${version}-gen`}/build/generated.json`);\n        case 'Registry':\n        default:\n            if (processedVersions.includes(version)) {\n                return getUri(source, 'Arcensoth', 'mcdata', `${isLatestSnapshot ? 'master' : version}/processed/reports/registries/data.min.json`);\n            }\n            else {\n                return getUri(source, 'Arcensoth', 'mcdata', `${version}/generated/reports/registries.json`);\n            }\n    }\n}\nfunction getSingleVanillaData(type, source, version, globalStoragePath, processedVersions, latestSnapshot) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const cache = exports.VanillaDataCache[type];\n        cache[version] = (_a = cache[version]) !== null && _a !== void 0 ? _a : new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            if (faildTimes < MaxFaildTimes) {\n                let ans;\n                const versionPath = globalStoragePath ? path_1.default.join(globalStoragePath, version) : undefined;\n                const filePath = versionPath ? path_1.default.join(versionPath, `${type}.json`) : undefined;\n                try {\n                    if (filePath && (yield utils_1.pathAccessible(filePath))) {\n                        console.info(`[VanillaData: ${type} for ${version}] Loading from local file ${filePath.replace(globalStoragePath, '${globalStoragePath}')}...`);\n                        const json = JSON.parse(yield utils_1.readFile(filePath));\n                        console.info(`[VanillaData: ${type} for ${version}] Loaded from local file.`);\n                        ans = json;\n                    }\n                    else {\n                        const isLatestSnapshot = version === latestSnapshot;\n                        const uri = getReportUri(type, source, version, processedVersions, isLatestSnapshot);\n                        console.info(`[VanillaData: ${type} for ${version}] Fetching from ${source} ${uri}...`);\n                        const str = yield Promise.race([\n                            utils_1.requestText(uri),\n                            new Promise((_, reject) => {\n                                setTimeout(() => { reject(new Error('Time out!')); }, 7000);\n                            })\n                        ]);\n                        const json = JSON.parse(str);\n                        console.info(`[VanillaData: ${type} for ${version}] Fetched from ${source}.`);\n                        if (versionPath && filePath) {\n                            yield fs_1.promises.mkdir(versionPath, { recursive: true });\n                            fs_1.promises.writeFile(filePath, str, { encoding: 'utf8' });\n                            console.info(`[VanillaData: ${type} for ${version}] Saved at ${filePath.replace(globalStoragePath, '${globalStoragePath}')}.`);\n                        }\n                        ans = json;\n                    }\n                    resolve(ans);\n                }\n                catch (e) {\n                    console.warn(`[VanillaData: ${type} for ${version}] ${e} (${++faildTimes}/${MaxFaildTimes})`);\n                    console.info(`[VanillaData: ${type} for ${version}] Used the fallback.`);\n                    resolve(exports.FallbackVanillaData[type]);\n                }\n            }\n            else {\n                resolve(exports.FallbackVanillaData[type]);\n            }\n        }));\n        return cache[version];\n    });\n}\nfunction getVanillaData(versionOrLiteral, source, versionInformation, globalStoragePath) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!versionInformation || !versionOrLiteral) {\n            return exports.FallbackVanillaData;\n        }\n        const ans = Object.assign({}, exports.FallbackVanillaData);\n        const types = ['BlockDefinition', 'NamespaceSummary', 'Nbtdoc', 'Registry'];\n        let version;\n        switch (versionOrLiteral.toLowerCase()) {\n            case 'latest snapshot':\n                version = versionInformation.latestSnapshot;\n                break;\n            case 'latest release':\n                version = versionInformation.latestRelease;\n                break;\n            default:\n                version = versionOrLiteral;\n                break;\n        }\n        for (const type of types) {\n            ans[type] = (yield getSingleVanillaData(type, source, version, globalStoragePath, versionInformation.processedVersions, versionInformation.latestSnapshot));\n        }\n        return ans;\n    });\n}\nexports.getVanillaData = getVanillaData;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatapackLanguageService = exports.plugins = exports.ReleaseNotesVersion = void 0;\nexports.ReleaseNotesVersion = '3.1.0';\n/**\n * The plugin API for the Data-pack Language Server.\n */\nexports.plugins = __importStar(require(\"./plugins\"));\nvar DatapackLanguageService_1 = require(\"./services/DatapackLanguageService\");\nObject.defineProperty(exports, \"DatapackLanguageService\", { enumerable: true, get: function () { return DatapackLanguageService_1.DatapackLanguageService; } });\n__exportStar(require(\"./utils\"), exports);\n","var map = {\n\t\"./de.json\": \"../datapack-language-server/lib/locales/de.json\",\n\t\"./en.json\": \"../datapack-language-server/lib/locales/en.json\",\n\t\"./fr.json\": \"../datapack-language-server/lib/locales/fr.json\",\n\t\"./it.json\": \"../datapack-language-server/lib/locales/it.json\",\n\t\"./ja.json\": \"../datapack-language-server/lib/locales/ja.json\",\n\t\"./zh-cn.json\": \"../datapack-language-server/lib/locales/zh-cn.json\",\n\t\"./zh-tw.json\": \"../datapack-language-server/lib/locales/zh-tw.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../datapack-language-server/lib/locales sync recursive ^\\\\.\\\\/.*\\\\.json$\";","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadLocale = exports.segmentedLocale = exports.resolveLocalePlaceholders = exports.locale = void 0;\nconst en_json_1 = __importDefault(require(\"./en.json\"));\nconst en_json_2 = __importDefault(require(\"@mcschema/locales/src/en.json\"));\nconst Locales = {\n    en: Object.assign(Object.assign({}, addJsonPrefix(en_json_2.default)), en_json_1.default)\n};\nlet language = '';\nLocales[language] = Locales.en;\n/* istanbul ignore next */\nfunction locale(key, ...params) {\n    var _a, _b;\n    const value = (_a = Locales[language][key]) !== null && _a !== void 0 ? _a : Locales.en[key];\n    return (_b = resolveLocalePlaceholders(value, params)) !== null && _b !== void 0 ? _b : (console.error(new Error(`Unknown locale key “${key}”`)),\n        '');\n}\nexports.locale = locale;\nfunction resolveLocalePlaceholders(val, params) {\n    return val === null || val === void 0 ? void 0 : val.replace(/%\\d+%/g, match => {\n        const index = parseInt(match.slice(1, -1));\n        return (params === null || params === void 0 ? void 0 : params[index]) !== undefined ? params[index] : match;\n    });\n}\nexports.resolveLocalePlaceholders = resolveLocalePlaceholders;\nfunction segmentedLocale(segments, params, depth = 5, minDepth = 1) {\n    return [language, 'en'].reduce((prev, code) => {\n        if (prev !== undefined)\n            return prev;\n        const array = segments.slice(-depth);\n        while (array.length >= minDepth) {\n            const locale = resolveLocalePlaceholders(Locales[code][array.join('.')], params);\n            if (locale !== undefined)\n                return locale;\n            array.shift();\n        }\n        return undefined;\n    }, undefined);\n}\nexports.segmentedLocale = segmentedLocale;\nfunction setupLanguage(code) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const locale = yield Promise.resolve().then(() => __importStar(require(`./${code}.json`)));\n        const jsonLocale = yield Promise.resolve().then(() => __importStar(require(`@mcschema/locales/src/${code}.json`)));\n        Locales[code] = Object.assign(Object.assign({}, addJsonPrefix(jsonLocale)), locale);\n        language = code;\n        console.info(`[I18N] Set to “${code}”.`);\n    });\n}\nfunction addJsonPrefix(jsonLocale) {\n    const ans = {};\n    for (const key of Object.keys(jsonLocale)) {\n        ans[`json.${key}`] = jsonLocale[key];\n    }\n    return ans;\n}\n/* istanbul ignore next */\nfunction loadLocale(setting, defaultLocaleCode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const specifiedLanguage = setting.toLowerCase() === 'default' ? defaultLocaleCode : setting;\n        if (language !== specifiedLanguage) {\n            return setupLanguage(specifiedLanguage);\n        }\n    });\n}\nexports.loadLocale = loadLocale;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArgumentNode = exports.GetPlainKeys = exports.GetHover = exports.FilterDiagnostics = exports.GetCodeActions = exports.NodeDescription = exports.NodeRange = exports.NodeType = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst TextRange_1 = require(\"../types/TextRange\");\nexports.NodeType = Symbol('NodeType');\nexports.NodeRange = Symbol('NodeRange');\nexports.NodeDescription = Symbol('NbtNodeDescription');\nexports.GetCodeActions = Symbol('GetCodeActions');\nexports.FilterDiagnostics = Symbol('FilterDiagnostics');\nexports.GetHover = Symbol('GetHover');\nexports.GetPlainKeys = Symbol('GetPlainKeys');\nconst Triage = Symbol('Triage');\nclass ArgumentNode {\n    constructor() {\n        this[_a] = TextRange_1.EmptyRange;\n        this[_b] = '';\n    }\n    [(_a = exports.NodeRange, _b = exports.NodeDescription, Formattable_1.GetFormattedString)](_lint) {\n        return this.toString();\n    }\n    [exports.GetPlainKeys]() {\n        return Object.keys(this);\n    }\n    /* istanbul ignore next: simple triage */\n    [Triage](func) {\n        for (const key of this[exports.GetPlainKeys]()) {\n            func(key);\n        }\n    }\n    [exports.FilterDiagnostics](ctx, diagnosticMap, nodeRange = this[exports.NodeRange]) {\n        var _c;\n        const ans = {};\n        for (const codeString of Object.keys(diagnosticMap)) {\n            const code = codeString;\n            const diagnostics = diagnosticMap[code];\n            for (const diag of diagnostics) {\n                const diagRange = {\n                    start: ctx.textDoc.offsetAt(diag.range.start),\n                    end: ctx.textDoc.offsetAt(diag.range.end)\n                };\n                if (TextRange_1.areOverlapped(diagRange, nodeRange)) {\n                    ans[code] = (_c = ans[code]) !== null && _c !== void 0 ? _c : [];\n                    ans[code].push(diag);\n                }\n            }\n        }\n        return ans;\n    }\n    /* istanbul ignore next: simple triage */\n    [exports.GetCodeActions](uri, ctx, range, diagnostics) {\n        const ans = [];\n        this[Triage](key => {\n            const value = this[key];\n            const arr = value instanceof Array ? value : [value];\n            for (const item of arr) {\n                if (item instanceof ArgumentNode && TextRange_1.areOverlapped(range, item[exports.NodeRange])) {\n                    ans.push(...item[exports.GetCodeActions](uri, ctx, range, this[exports.FilterDiagnostics](ctx, diagnostics, item[exports.NodeRange])));\n                }\n            }\n        });\n        return ans;\n    }\n    /* istanbul ignore next: simple triage */\n    [exports.GetHover](ctx) {\n        let ans = null;\n        if (this[exports.NodeDescription]) {\n            ans = {\n                contents: { kind: 'markdown', value: this[exports.NodeDescription] },\n                range: TextRange_1.TextRange.toLspRange(this[exports.NodeRange], ctx.textDoc)\n            };\n        }\n        else {\n            this[Triage](key => {\n                if (ans) {\n                    return;\n                }\n                const value = this[key];\n                const arr = value instanceof Array ? value : [value];\n                for (const item of arr) {\n                    if (item instanceof ArgumentNode && TextRange_1.isInRange(ctx.cursor, item[exports.NodeRange])) {\n                        ans = item[exports.GetHover](ctx);\n                        if (ans) {\n                            break;\n                        }\n                    }\n                }\n            });\n        }\n        return ans;\n    }\n}\nexports.ArgumentNode = ArgumentNode;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst BlockStateNode_1 = require(\"./BlockStateNode\");\nconst IdentityNode_1 = require(\"./IdentityNode\");\nconst NbtCompoundNode_1 = require(\"./NbtCompoundNode\");\nclass BlockNode extends ArgumentNode_1.ArgumentNode {\n    constructor(id = new IdentityNode_1.IdentityNode(), states = new BlockStateNode_1.BlockStateNode(), tag = new NbtCompoundNode_1.NbtCompoundNode(null)) {\n        super();\n        this.id = id;\n        this.states = states;\n        this.tag = tag;\n        this[_a] = 'block';\n    }\n    [(_a = ArgumentNode_1.NodeType, Formattable_1.GetFormattedString)](lint) {\n        const id = this.id[Formattable_1.GetFormattedString](lint);\n        const states = Object.keys(this.states).length > 0 ? this.states[Formattable_1.GetFormattedString](lint) : '';\n        const tag = Object.keys(this.tag).length > 0 ? this.tag[Formattable_1.GetFormattedString](lint) : '';\n        return `${id}${states}${tag}`;\n    }\n}\nexports.BlockNode = BlockNode;\n","\"use strict\";\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockStateNode = exports.BlockStateNodeChars = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst MapNode_1 = require(\"./MapNode\");\nexports.BlockStateNodeChars = {\n    openBracket: '[', sep: '=', pairSep: ',', closeBracket: ']'\n};\n/**\n * The `[Keys]` property is not used in this node.\n */\nclass BlockStateNode extends MapNode_1.MapNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'BlockState';\n        this[_b] = {\n            bracketSpacing: 'blockStateBracketSpacing',\n            pairSepSpacing: 'blockStateCommaSpacing',\n            sepSpacing: 'blockStateEqualSpacing',\n            trailingPairSep: 'blockStateTrailingComma'\n        };\n        this[_c] = exports.BlockStateNodeChars;\n    }\n    [(_a = ArgumentNode_1.NodeType, _b = MapNode_1.ConfigKeys, _c = MapNode_1.Chars, ArgumentNode_1.GetCodeActions)](uri, ctx, range, diagnostics) {\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        const relevantDiagnostics = diagnostics[0 /* BlockStateSortKeys */];\n        if (relevantDiagnostics && ctx.config.lint.blockStateSortKeys) {\n            /* istanbul ignore next */\n            const keys = ctx.config.lint.blockStateSortKeys[1] === 'alphabetically' ?\n                this[MapNode_1.UnsortedKeys].sort() : this[MapNode_1.UnsortedKeys];\n            ans.push(utils_1.getCodeAction('block-state-sort-keys', relevantDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], this[Formattable_1.GetFormattedString](ctx.config.lint, keys)));\n        }\n        return ans;\n    }\n}\nexports.BlockStateNode = BlockStateNode;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntityNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst SelectorArgumentsNode_1 = require(\"./SelectorArgumentsNode\");\n/**\n * Represent an entity.\n */\nclass EntityNode extends ArgumentNode_1.ArgumentNode {\n    constructor(\n    /**\n     * Used for player names or entity UUIDs.\n     */\n    plain = undefined, \n    /**\n     * Variable of this entity selector.\n     */\n    variable = undefined, \n    /**\n     * Arguments of this entity selector.\n     */\n    argument = new SelectorArgumentsNode_1.SelectorArgumentsNode()) {\n        super();\n        this.plain = plain;\n        this.variable = variable;\n        this.argument = argument;\n        this[_a] = 'Entity';\n    }\n    [(_a = ArgumentNode_1.NodeType, Formattable_1.GetFormattedString)](lint) {\n        if (this.plain) {\n            return this.plain;\n        }\n        else if (Object.keys(this.argument).length > 0) {\n            return `@${this.variable}${this.argument[Formattable_1.GetFormattedString](lint)}`;\n        }\n        else {\n            return `@${this.variable}`;\n        }\n    }\n}\nexports.EntityNode = EntityNode;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityNode = void 0;\nconst minimatch_1 = __importDefault(require(\"minimatch\"));\nconst path_1 = __importStar(require(\"path\"));\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Formattable_1 = require(\"../types/Formattable\");\nconst TextRange_1 = require(\"../types/TextRange\");\nconst utils_1 = require(\"../utils\");\nconst PathPatterns_1 = require(\"../utils/PathPatterns\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nclass IdentityNode extends ArgumentNode_1.ArgumentNode {\n    constructor(namespace = undefined, path = [], isTag = false, \n    /**\n     * A type in the registry, or a type in cache if beginning with the dolar sign (`$`).\n     */\n    type = undefined) {\n        super();\n        this.namespace = namespace;\n        this.path = path;\n        this.isTag = isTag;\n        this.type = type;\n        this[_a] = 'Identity';\n    }\n    getTagSymbolPart() {\n        return this.isTag ? IdentityNode.TagSymbol : '';\n    }\n    getLongestNamespacePart() {\n        return `${this.getNamespace()}${IdentityNode.NamespaceDelimiter}`;\n    }\n    getShortestNamespacePart() {\n        /* istanbul ignore next */\n        return this.isDefaultNamespace() ? '' : this.getLongestNamespacePart();\n    }\n    getPathPart() {\n        return this.path.join(IdentityNode.PathSep);\n    }\n    isDefaultNamespace() {\n        return this.getNamespace() === IdentityNode.DefaultNamespace;\n    }\n    /**\n     * Return the standardized namespace of this identity.\n     */\n    getNamespace() {\n        return this.namespace || IdentityNode.DefaultNamespace;\n    }\n    /**\n     * Convert the ID to a stringified ID. Will NOT begin with TagSymbol (`#`) even if the ID is a tag.\n     */\n    toString() {\n        return `${this.getLongestNamespacePart()}${this.getPathPart()}`;\n    }\n    /**\n     * Convert the ID to the shortest stringified ID. WILL NOT begin with TagSymbol (`#`) if the ID is a tag. WILL omit the namespace if it is the default namespace.\n     */\n    toShortestString() {\n        return `${this.getShortestNamespacePart()}${this.getPathPart()}`;\n    }\n    /**\n     * Convert the ID to a stringified tag ID. WILL begin with TagSymbol (`#`) if the ID is a tag.\n     */\n    toTagString() {\n        return `${this.getTagSymbolPart()}${this.getLongestNamespacePart()}${this.getPathPart()}`;\n    }\n    /**\n     * Convert the ID to the shortest stringified tag ID. WILL begin with TagSymbol (`#`) if the ID is a tag. WILL omit the namespace if it is the default namespace.\n     */\n    toShortestTagString() {\n        return `${this.getTagSymbolPart()}${this.getShortestNamespacePart()}${this.getPathPart()}`;\n    }\n    [(_a = ArgumentNode_1.NodeType, Formattable_1.GetFormattedString)](_lint) {\n        let id;\n        if (this.namespace !== undefined) {\n            id = `${this.namespace}${IdentityNode.NamespaceDelimiter}${this.path.join(IdentityNode.PathSep)}`;\n        }\n        else {\n            id = this.path.join(IdentityNode.PathSep);\n        }\n        return `${this.getTagSymbolPart()}${id}`;\n    }\n    [ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics) {\n        var _b;\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        const completeDiagnostics = diagnostics[2 /* IdentityCompleteDefaultNamespace */];\n        const omitDiagnostics = diagnostics[3 /* IdentityOmitDefaultNamespace */];\n        const unknownDiagnostics = diagnostics[4 /* IdentityUnknown */];\n        if (completeDiagnostics === null || completeDiagnostics === void 0 ? void 0 : completeDiagnostics.length) {\n            ans.push(utils_1.getCodeAction('id-complete-default-namespace', completeDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], this.toTagString()));\n        }\n        if (omitDiagnostics === null || omitDiagnostics === void 0 ? void 0 : omitDiagnostics.length) {\n            ans.push(utils_1.getCodeAction('id-omit-default-namespace', omitDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], this.toShortestTagString()));\n        }\n        if (unknownDiagnostics === null || unknownDiagnostics === void 0 ? void 0 : unknownDiagnostics.length) {\n            let cacheType;\n            if (this.isTag) {\n                cacheType = this.type ? IdentityNode.getTagType(this.type) : undefined;\n            }\n            if (!cacheType && ((_b = this.type) === null || _b === void 0 ? void 0 : _b.startsWith('$'))) {\n                cacheType = this.type.slice(1);\n            }\n            if (cacheType && ClientCache_1.isFileType(cacheType) && ctx.rootIndex !== null) {\n                const title = locales_1.locale('code-action.id-create-file', locales_1.locale('punc.quote', this.toTagString()));\n                ans.push({\n                    title: title,\n                    kind: vscode_languageserver_1.CodeActionKind.QuickFix,\n                    diagnostics: unknownDiagnostics,\n                    command: {\n                        command: 'datapack.createFile',\n                        title: title,\n                        arguments: [cacheType, this.toString(), ctx.roots[ctx.rootIndex].toString()]\n                    }\n                });\n            }\n            //#region Zombified Piglin datafix: #508\n            if (this.toTagString() === 'minecraft:zombie_pigman') {\n                ans.push(utils_1.getCodeAction('id-zombified-piglin-datafix', unknownDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], new IdentityNode(this.namespace, ['zombified_piglin'])[Formattable_1.GetFormattedString]()));\n            }\n            //#endregion\n        }\n        return ans;\n    }\n    [ArgumentNode_1.GetHover](ctx) {\n        var _b, _c, _d;\n        if ((_b = this.type) === null || _b === void 0 ? void 0 : _b.startsWith('$')) {\n            const type = this.type.slice(1);\n            const value = (_d = (_c = ctx.cache[type]) === null || _c === void 0 ? void 0 : _c[this.toString()]) === null || _d === void 0 ? void 0 : _d.doc;\n            if (value) {\n                const ans = {\n                    contents: { kind: 'markdown', value },\n                    range: TextRange_1.TextRange.toLspRange(this[ArgumentNode_1.NodeRange], ctx.textDoc)\n                };\n                return ans;\n            }\n        }\n        return super[ArgumentNode_1.GetHover](ctx);\n    }\n    /**\n     * Convert the ID to a file path.\n     * @param category The category of this namespaced ID. e.g. `function`, `advancement`, etc.\n     * @param ext The extension of the file. Defaults to `.json`.\n     * @param side Is the ID serverside or clientside. Values: `assets` and `data`. Defaults to `data`.\n     */\n    toRel(category, side = 'data') {\n        const datapackCategory = category.split('/').map(v => `${v}s`).join(path_1.sep);\n        let ext;\n        if (category === 'function') {\n            ext = '.mcfunction';\n        }\n        else if (category === 'structure') {\n            ext = '.nbt';\n        }\n        else {\n            ext = '.json';\n        }\n        return `${side}${path_1.sep}${this.getNamespace()}${path_1.sep}${datapackCategory}${path_1.sep}${this.path.join(path_1.sep)}${ext}`;\n    }\n    /**\n     *\n     * @param rel The relative path from the workspace. Returns `undefined` if the path is in an invalid\n     * datapack category.\n     */\n    /* istanbul ignore next */\n    static fromRel(rel) {\n        if (!rel) {\n            return undefined;\n        }\n        rel = path_1.default.normalize(rel);\n        const segs = rel.split(/[/\\\\]/);\n        const side = segs[0];\n        if (side === 'data') {\n            for (const type of Object.keys(PathPatterns_1.PathPatterns)) {\n                const fileType = type;\n                const pattern = PathPatterns_1.PathPatterns[fileType];\n                if (minimatch_1.default(rel, pattern, { dot: true })) {\n                    const namespace = segs[1];\n                    let minimumSegsLength;\n                    let category;\n                    if (ClientCache_1.isTagFileType(fileType)) {\n                        // data/<namespace>/tags/<tag type>/**/*.json\n                        minimumSegsLength = 5;\n                        category = `tag/${segs[3].slice(0, -1)}`;\n                    }\n                    else if (ClientCache_1.isWorldgenRegistryFileType(fileType)) {\n                        // data/<namespace>/worldgen/<worldgen type>/**/*.json\n                        minimumSegsLength = 5;\n                        category = `worldgen/${segs[3]}`;\n                    }\n                    else {\n                        // data/<namespace>/<regular file type>/**/*.json\n                        minimumSegsLength = 4;\n                        category = ClientCache_1.getFileTypeFromCategory(segs[2]);\n                    }\n                    if (segs.length < minimumSegsLength) {\n                        return undefined;\n                    }\n                    const paths = segs.slice(minimumSegsLength - 1);\n                    const lastPath = paths[paths.length - 1];\n                    paths[paths.length - 1] = lastPath.slice(0, lastPath.lastIndexOf('.'));\n                    const id = new IdentityNode(namespace, paths, undefined, `$${category}`);\n                    return { category, id, side };\n                }\n            }\n        }\n        return undefined;\n    }\n    static fromString(str) {\n        const isTag = str[0] === IdentityNode.TagSymbol;\n        if (isTag) {\n            str = str.slice(1);\n        }\n        const parts = str.split(IdentityNode.NamespaceDelimiter);\n        if (parts.length === 1) {\n            return new IdentityNode(undefined, parts[0].split(IdentityNode.PathSep), isTag);\n        }\n        else {\n            return new IdentityNode(parts[0], parts[1].split(IdentityNode.PathSep), isTag);\n        }\n    }\n    /**\n     * Get the tag cache type.\n     * @param type A type in the registry, or a type in cache if beginning with the dolar sign (`$`).\n     */\n    static getTagType(type) {\n        /* istanbul ignore next */\n        switch (type) {\n            case 'minecraft:block':\n                return 'tag/block';\n            case 'minecraft:entity_type':\n                return 'tag/entity_type';\n            case 'minecraft:fluid':\n                return 'tag/fluid';\n            case 'minecraft:item':\n                return 'tag/item';\n            case '$function':\n                return 'tag/function';\n            default:\n                return undefined;\n        }\n    }\n}\nexports.IdentityNode = IdentityNode;\nIdentityNode.DefaultNamespace = 'minecraft';\nIdentityNode.NamespaceDelimiter = ':';\nIdentityNode.PathSep = '/';\nIdentityNode.TagSymbol = '#';\n/**\n * - `$1`: Namespace.\n * - `$2`\n */\nIdentityNode.RelativePathPatterns = {\n    File: 'data/*/*'\n};\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ItemNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst IdentityNode_1 = require(\"./IdentityNode\");\nconst NbtCompoundNode_1 = require(\"./NbtCompoundNode\");\nclass ItemNode extends ArgumentNode_1.ArgumentNode {\n    /* istanbul ignore next */\n    constructor(id = new IdentityNode_1.IdentityNode(), tag = new NbtCompoundNode_1.NbtCompoundNode(null)) {\n        super();\n        this.id = id;\n        this.tag = tag;\n        this[_a] = 'Item';\n    }\n    [(_a = ArgumentNode_1.NodeType, Formattable_1.GetFormattedString)](lint) {\n        const id = this.id[Formattable_1.GetFormattedString](lint);\n        const tag = Object.keys(this.tag).length > 0 ? this.tag[Formattable_1.GetFormattedString](lint) : '';\n        return `${id}${tag}`;\n    }\n}\nexports.ItemNode = ItemNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapNode = exports.GetFormattedClose = exports.GetFormattedOpen = exports.UnsortedKeys = exports.Keys = exports.Chars = exports.ConfigKeys = exports.IsMapSorted = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst TextRange_1 = require(\"../types/TextRange\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nexports.IsMapSorted = Symbol('IsMapSorted');\nexports.ConfigKeys = Symbol('ConfigKeys');\nexports.Chars = Symbol('Chars');\nexports.Keys = Symbol('KeysData');\nexports.UnsortedKeys = Symbol('UnsortedKeys');\nexports.GetFormattedOpen = Symbol('GetFormattedOpen');\nexports.GetFormattedClose = Symbol('GetFormattedClose');\nclass MapNode extends ArgumentNode_1.ArgumentNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'Map';\n        this[_b] = {};\n        this[_c] = [];\n    }\n    static getBracketSpacingAmount(length, config) {\n        if (length === 0 && config.zeroValue !== undefined) {\n            return config.zeroValue;\n        }\n        else if (length === 1 && config.oneValue !== undefined) {\n            return config.oneValue;\n        }\n        else {\n            return config.inside;\n        }\n    }\n    static getFormattedBracket(length, char, type, config) {\n        const amount = MapNode.getBracketSpacingAmount(length, config);\n        const spacing = ' '.repeat(amount);\n        if (type === 0 /* open */) {\n            return `${char}${spacing}`;\n        }\n        else {\n            return `${spacing}${char}`;\n        }\n    }\n    static getFormattedSep(char, config, trimmingEnd = false) {\n        const before = ' '.repeat(config.before);\n        const after = trimmingEnd ? '' : ' '.repeat(config.after);\n        return `${before}${char}${after}`;\n    }\n    [(_a = ArgumentNode_1.NodeType, _b = exports.Keys, _c = exports.UnsortedKeys, ArgumentNode_1.GetPlainKeys)]() {\n        return this[exports.UnsortedKeys].length > 0 ? this[exports.UnsortedKeys] : super[ArgumentNode_1.GetPlainKeys]();\n    }\n    [exports.IsMapSorted](..._params) {\n        const keys = this[ArgumentNode_1.GetPlainKeys]();\n        return keys.slice(1).every((v, i) => v.toLowerCase() >= keys[i].toLowerCase());\n    }\n    [exports.GetFormattedOpen](lint) {\n        const bracketSpacingConfig = lint[this[exports.ConfigKeys].bracketSpacing];\n        return MapNode.getFormattedBracket(this[ArgumentNode_1.GetPlainKeys]().length, this[exports.Chars].openBracket, 0 /* open */, bracketSpacingConfig);\n    }\n    [exports.GetFormattedClose](lint) {\n        const bracketSpacingConfig = lint[this[exports.ConfigKeys].bracketSpacing];\n        return MapNode.getFormattedBracket(this[ArgumentNode_1.GetPlainKeys]().length, this[exports.Chars].closeBracket, 1 /* close */, bracketSpacingConfig);\n    }\n    [Formattable_1.GetFormattedString](lint, keys = this[ArgumentNode_1.GetPlainKeys](), kvPair = (lint, key, sep, value) => `${key}${sep}${utils_1.toFormattedString(value, lint)}`) {\n        const sepSpacingConfig = lint[this[exports.ConfigKeys].sepSpacing];\n        const pairSepSpacingConfig = lint[this[exports.ConfigKeys].pairSepSpacing];\n        const trailingPairSepConfig = lint[this[exports.ConfigKeys].trailingPairSep];\n        const open = this[exports.GetFormattedOpen](lint);\n        const close = this[exports.GetFormattedClose](lint);\n        const sep = MapNode.getFormattedSep(this[exports.Chars].sep, sepSpacingConfig);\n        const pairSep = MapNode.getFormattedSep(this[exports.Chars].pairSep, pairSepSpacingConfig);\n        const content = [];\n        const arrayValueCursor = {};\n        for (const key of keys) {\n            /* istanbul ignore else */\n            if (this.hasOwnProperty(key)) {\n                let value = this[key];\n                if (value instanceof Array) {\n                    if (arrayValueCursor[key] === undefined) {\n                        arrayValueCursor[key] = 0;\n                    }\n                    value = value[arrayValueCursor[key]++];\n                }\n                content.push(kvPair(lint, key, sep, value));\n            }\n        }\n        let contentString = content.join(pairSep);\n        if (trailingPairSepConfig) {\n            contentString += MapNode.getFormattedSep(this[exports.Chars].pairSep, pairSepSpacingConfig, true);\n        }\n        return `${open}${contentString}${close}`;\n    }\n    /* istanbul ignore next: simple triage */\n    [ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics) {\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        for (const key of this[ArgumentNode_1.GetPlainKeys]()) {\n            if (this[exports.Keys] && this[exports.Keys].hasOwnProperty(key)) {\n                const keyInfo = this[exports.Keys][key];\n                if (keyInfo instanceof ArgumentNode_1.ArgumentNode) {\n                    if (TextRange_1.areOverlapped(keyInfo[ArgumentNode_1.NodeRange], range)) {\n                        ans.push(...keyInfo[ArgumentNode_1.GetCodeActions](uri, ctx, range, this[ArgumentNode_1.FilterDiagnostics](ctx, diagnostics, keyInfo[ArgumentNode_1.NodeRange])));\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n    /* istanbul ignore next: simple triage */\n    [ArgumentNode_1.GetHover](ctx) {\n        const ans = super[ArgumentNode_1.GetHover](ctx);\n        if (!ans) {\n            for (const key of this[ArgumentNode_1.GetPlainKeys]()) {\n                /* istanbul ignore else */\n                if (this[exports.Keys] && this[exports.Keys].hasOwnProperty(key)) {\n                    const keyInfo = this[exports.Keys][key];\n                    if (keyInfo instanceof ArgumentNode_1.ArgumentNode) {\n                        if (TextRange_1.isInRange(ctx.cursor, keyInfo[ArgumentNode_1.NodeRange])) {\n                            return keyInfo[ArgumentNode_1.GetHover](ctx);\n                        }\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n}\nexports.MapNode = MapNode;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageNode = void 0;\nconst utils_1 = require(\"../utils\");\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nclass MessageNode extends ArgumentNode_1.ArgumentNode {\n    constructor() {\n        super();\n        this[_a] = 'Message';\n        this.length = 0;\n    }\n    push(...values) {\n        for (const value of values) {\n            this[this.length++] = value;\n        }\n    }\n    /* istanbul ignore next */\n    *[(_a = ArgumentNode_1.NodeType, Symbol.iterator)]() {\n        // You want me to call myself for iterating? Stupid!\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < this.length; i++) {\n            yield this[i];\n        }\n    }\n    [Formattable_1.GetFormattedString](lint) {\n        return Array.prototype.map.call(this, (v) => utils_1.toFormattedString(v, lint)).join('');\n    }\n}\nexports.MessageNode = MessageNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtArrayNode = void 0;\nconst MapNode_1 = require(\"./MapNode\");\nconst NbtCollectionNode_1 = require(\"./NbtCollectionNode\");\nclass NbtArrayNode extends NbtCollectionNode_1.NbtCollectionNode {\n    constructor() {\n        super(...arguments);\n        this.configKeys = {\n            bracketSpacing: 'nbtArrayBracketSpacing',\n            semicolonSpacing: 'nbtArraySemicolonSpacing',\n            sepSpacing: 'nbtArrayCommaSpacing',\n            trailingPairSep: 'nbtArrayTrailingComma'\n        };\n    }\n    [MapNode_1.GetFormattedOpen](lint) {\n        const { after } = lint[this.configKeys.semicolonSpacing];\n        return `${this.chars.openBracket}${this.chars.type}${this.length > 0 ? `;${' '.repeat(after)}` : ';'}`;\n    }\n}\nexports.NbtArrayNode = NbtArrayNode;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtByteArrayNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtArrayNode_1 = require(\"./NbtArrayNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtByteArrayChars = { openBracket: '[', type: 'B', sep: ',', closeBracket: ']' };\nclass NbtByteArrayNode extends NbtArrayNode_1.NbtArrayNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtByteArray';\n        this[_b] = 'ByteArray';\n        this.chars = NbtByteArrayChars;\n    }\n}\nexports.NbtByteArrayNode = NbtByteArrayNode;\n_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNbtByteNode = exports.NbtByteNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtNumberNode_1 = require(\"./NbtNumberNode\");\nclass NbtByteNode extends NbtNumberNode_1.NbtNumberNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtByte';\n        this[_b] = 'Byte';\n        this.suffixConfigKey = 'nbtByteSuffix';\n    }\n    [(_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType, Formattable_1.GetFormattedString)](lint) {\n        const lowerCasedString = this.toString().toLowerCase();\n        if (lowerCasedString === 'false' || lowerCasedString === 'true') {\n            return lowerCasedString;\n        }\n        return super[Formattable_1.GetFormattedString](lint);\n    }\n}\nexports.NbtByteNode = NbtByteNode;\n/* istanbul ignore next */\n(function (NbtByteNode) {\n    NbtNumberNode_1.NbtNumberNode.actionProviders.push([9 /* NbtTypeToByte */, 'byte', (s, v, r) => new NbtByteNode(s, Number(v), r)]);\n})(NbtByteNode = exports.NbtByteNode || (exports.NbtByteNode = {}));\nfunction isNbtByteNode(node) {\n    return node[NbtNode_1.NbtNodeType] === 'Byte';\n}\nexports.isNbtByteNode = isNbtByteNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtCollectionNode = void 0;\nconst utils_1 = require(\"../utils\");\nconst Formattable_1 = require(\"../types/Formattable\");\nconst MapNode_1 = require(\"./MapNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nclass NbtCollectionNode extends NbtNode_1.NbtNode {\n    constructor() {\n        super(...arguments);\n        this.length = 0;\n    }\n    push(...values) {\n        for (const value of values) {\n            this[this.length++] = value;\n        }\n    }\n    *[Symbol.iterator]() {\n        // You want me to call myself for iterating? Stupid!\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < this.length; i++) {\n            yield this[i];\n        }\n    }\n    [MapNode_1.GetFormattedOpen](lint) {\n        const bracketSpacingConfig = lint[this.configKeys.bracketSpacing];\n        return MapNode_1.MapNode.getFormattedBracket(this.length, this.chars.openBracket, 0 /* open */, bracketSpacingConfig);\n    }\n    [MapNode_1.GetFormattedClose](lint) {\n        const bracketSpacingConfig = lint[this.configKeys.bracketSpacing];\n        return MapNode_1.MapNode.getFormattedBracket(this.length, this.chars.closeBracket, 1 /* close */, bracketSpacingConfig);\n    }\n    [Formattable_1.GetFormattedString](lint) {\n        const sepSpacingConfig = lint[this.configKeys.sepSpacing];\n        const trailingPairSepConfig = lint[this.configKeys.trailingPairSep];\n        const open = this[MapNode_1.GetFormattedOpen](lint);\n        const close = this[MapNode_1.GetFormattedClose](lint);\n        const sep = MapNode_1.MapNode.getFormattedSep(this.chars.sep, sepSpacingConfig);\n        const content = [];\n        for (const value of this) {\n            content.push(utils_1.toFormattedString(value, lint));\n        }\n        let contentString = content.join(sep);\n        if (trailingPairSepConfig) {\n            contentString += MapNode_1.MapNode.getFormattedSep(this.chars.sep, sepSpacingConfig, true);\n        }\n        return `${open}${contentString}${close}`;\n    }\n}\nexports.NbtCollectionNode = NbtCollectionNode;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtCompoundKeyNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst utils_1 = require(\"../utils\");\nconst nbtUuid_1 = require(\"../utils/datafixers/nbtUuid\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst MapNode_1 = require(\"./MapNode\");\nconst NbtCompoundNode_1 = require(\"./NbtCompoundNode\");\nconst NbtListNode_1 = require(\"./NbtListNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtStringNode_1 = require(\"./NbtStringNode\");\nclass NbtCompoundKeyNode extends NbtStringNode_1.NbtStringNode {\n    /**\n     * @param superNbt The compound node that contains this key.\n     */\n    constructor(superNbt, value, raw, mapping) {\n        super(superNbt, value, raw, mapping);\n        this[_a] = 'NbtCompoundKey';\n        this[_b] = 'String';\n    }\n    /* istanbul ignore next: datafix */\n    [(_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType, ArgumentNode_1.GetCodeActions)](uri, ctx, range, diagnostics) {\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        //#region UUID datafix: #377\n        const uuidDiagnostics = diagnostics[21 /* NbtUuidDatafixUnknownKey */];\n        if (uuidDiagnostics === null || uuidDiagnostics === void 0 ? void 0 : uuidDiagnostics.length) {\n            const oldSuper = this[NbtNode_1.SuperNode];\n            if (oldSuper) {\n                const newSuper = new NbtCompoundNode_1.NbtCompoundNode(oldSuper[NbtNode_1.SuperNode]);\n                for (const key of oldSuper[MapNode_1.UnsortedKeys]) {\n                    try {\n                        if (key === 'ConversionPlayerLeast' || key === 'ConversionPlayerMost') {\n                            newSuper['ConversionPlayer'] = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtLongs(oldSuper, 'ConversionPlayer'));\n                        }\n                        else if (key === 'UUIDLeast' || key === 'UUIDMost') {\n                            newSuper['UUID'] = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtLongs(oldSuper, 'UUID'));\n                        }\n                        else if (key === 'LoveCauseLeast' || key === 'LoveCauseMost') {\n                            newSuper['LoveCause'] = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtLongs(oldSuper, 'LoveCause'));\n                        }\n                        else if (key === 'owner') {\n                            newSuper['Owner'] = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtCompound(oldSuper, 'owner'));\n                        }\n                        else if (key === 'OwnerUUID') {\n                            newSuper['Owner'] = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtString(oldSuper, 'OwnerUUID'));\n                        }\n                        else if (key === 'OwnerUUIDLeast' || key === 'OwnerUUIDMost') {\n                            newSuper['Owner'] = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtLongs(oldSuper, 'OwnerUUID'));\n                        }\n                        else if (key === 'target_uuid') {\n                            newSuper['Target'] = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtCompound(oldSuper, 'target_uuid'));\n                        }\n                        else if (key === 'TrustedUUIDs') {\n                            const oldList = oldSuper['TrustedUUIDs'];\n                            if (oldList instanceof NbtListNode_1.NbtListNode) {\n                                const newList = new NbtListNode_1.NbtListNode(newSuper);\n                                for (const oldElement of oldList) {\n                                    newList.push(nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtLongs(oldElement, 'M', 'L')));\n                                }\n                            }\n                            else {\n                                throw new Error('Expected a list node for “TrustedUUIDs”');\n                            }\n                            newSuper['Owner'] = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtLongs(oldSuper, 'OwnerUUID'));\n                        }\n                        else {\n                            newSuper[key] = oldSuper[key];\n                        }\n                    }\n                    catch (ignored) {\n                        newSuper[key] = oldSuper[key];\n                    }\n                }\n                ans.push(utils_1.getCodeAction('nbt-uuid-datafix', uuidDiagnostics, ctx.textDoc, oldSuper[ArgumentNode_1.NodeRange], newSuper[Formattable_1.GetFormattedString](ctx.config.lint)));\n            }\n        }\n        //#endregion\n        return ans;\n    }\n}\nexports.NbtCompoundKeyNode = NbtCompoundKeyNode;\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtCompoundNode = exports.NbtCompoundNodeChars = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst utils_1 = require(\"../utils\");\nconst nbtUuid_1 = require(\"../utils/datafixers/nbtUuid\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst MapNode_1 = require(\"./MapNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nexports.NbtCompoundNodeChars = {\n    openBracket: '{', sep: ':', pairSep: ',', closeBracket: '}'\n};\nclass NbtCompoundNode extends MapNode_1.MapNode {\n    constructor(superNbt) {\n        super();\n        this[_a] = 'NbtCompound';\n        this[_b] = 'Compound';\n        this[_c] = {\n            bracketSpacing: 'nbtCompoundBracketSpacing',\n            pairSepSpacing: 'nbtCompoundCommaSpacing',\n            sepSpacing: 'nbtCompoundColonSpacing',\n            trailingPairSep: 'nbtCompoundTrailingComma'\n        };\n        this[_d] = exports.NbtCompoundNodeChars;\n        this[NbtNode_1.SuperNode] = superNbt;\n    }\n    [(_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType, _c = MapNode_1.ConfigKeys, _d = MapNode_1.Chars, ArgumentNode_1.GetCodeActions)](uri, ctx, range, diagnostics) {\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        const sortKeysDiagnostics = diagnostics[7 /* NbtCompoundSortKeys */];\n        if (sortKeysDiagnostics && ctx.config.lint.nbtCompoundSortKeys) {\n            /* istanbul ignore next */\n            const keys = ctx.config.lint.nbtCompoundSortKeys[1] === 'alphabetically' ?\n                this[MapNode_1.UnsortedKeys].sort() : this[MapNode_1.UnsortedKeys];\n            ans.push(utils_1.getCodeAction('nbt-compound-sort-keys', sortKeysDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], this[Formattable_1.GetFormattedString](ctx.config.lint, keys)));\n        }\n        //#region UUID datafix: #377\n        const uuidDiagnostics = diagnostics[19 /* NbtUuidDatafixCompound */];\n        if (uuidDiagnostics) {\n            try {\n                const newArrayNode = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromNbtLongs(this, this[MapNode_1.UnsortedKeys].includes('OwnerUUIDMost') ? 'OwnerUUIDMost' : 'M', this[MapNode_1.UnsortedKeys].includes('OwnerUUIDLeast') ? 'OwnerUUIDLeast' : 'L'));\n                ans.push(utils_1.getCodeAction('nbt-uuid-datafix', uuidDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], newArrayNode[Formattable_1.GetFormattedString](ctx.config.lint)));\n            }\n            catch (ignored) {\n                // Ignored.\n            }\n        }\n        //#endregion\n        return ans;\n    }\n}\nexports.NbtCompoundNode = NbtCompoundNode;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtDoubleNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtNumberNode_1 = require(\"./NbtNumberNode\");\nclass NbtDoubleNode extends NbtNumberNode_1.NbtNumberNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtDouble';\n        this[_b] = 'Double';\n        this.suffixConfigKey = 'nbtDoubleSuffix';\n    }\n    [(_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType, Formattable_1.GetFormattedString)](lint) {\n        if (lint.nbtDoubleOmitSuffix && this.toString().includes('.')) {\n            return this.toString();\n        }\n        return super[Formattable_1.GetFormattedString](lint);\n    }\n}\nexports.NbtDoubleNode = NbtDoubleNode;\n/* istanbul ignore next */\n(function (NbtDoubleNode) {\n    NbtNumberNode_1.NbtNumberNode.actionProviders.push([18 /* NbtTypeToDouble */, 'double', (s, v, r) => new NbtDoubleNode(s, Number(v), r)]);\n})(NbtDoubleNode = exports.NbtDoubleNode || (exports.NbtDoubleNode = {}));\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtFloatNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtNumberNode_1 = require(\"./NbtNumberNode\");\nclass NbtFloatNode extends NbtNumberNode_1.NbtNumberNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtFloat';\n        this[_b] = 'Float';\n        this.suffixConfigKey = 'nbtFloatSuffix';\n    }\n}\nexports.NbtFloatNode = NbtFloatNode;\n_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType;\n/* istanbul ignore next */\n(function (NbtFloatNode) {\n    NbtNumberNode_1.NbtNumberNode.actionProviders.push([17 /* NbtTypeToFloat */, 'float', (s, v, r) => new NbtFloatNode(s, Number(v), r)]);\n})(NbtFloatNode = exports.NbtFloatNode || (exports.NbtFloatNode = {}));\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtIntArrayNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtArrayNode_1 = require(\"./NbtArrayNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtIntArrayChars = { openBracket: '[', type: 'I', sep: ',', closeBracket: ']' };\nclass NbtIntArrayNode extends NbtArrayNode_1.NbtArrayNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtIntArray';\n        this[_b] = 'IntArray';\n        this.chars = NbtIntArrayChars;\n    }\n}\nexports.NbtIntArrayNode = NbtIntArrayNode;\n_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNbtIntNode = exports.NbtIntNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtNumberNode_1 = require(\"./NbtNumberNode\");\nclass NbtIntNode extends NbtNumberNode_1.NbtNumberNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtInt';\n        this[_b] = 'Int';\n        this.suffixConfigKey = undefined;\n    }\n}\nexports.NbtIntNode = NbtIntNode;\n_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType;\n/* istanbul ignore next */\n(function (NbtIntNode) {\n    NbtNumberNode_1.NbtNumberNode.actionProviders.push([12 /* NbtTypeToInt */, 'int', (s, v, r) => new NbtIntNode(s, Number(v), r)]);\n})(NbtIntNode = exports.NbtIntNode || (exports.NbtIntNode = {}));\nfunction isNbtIntNode(node) {\n    return node[NbtNode_1.NbtNodeType] === 'Int';\n}\nexports.isNbtIntNode = isNbtIntNode;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtListNode = exports.ChildNbtNodeType = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtCollectionNode_1 = require(\"./NbtCollectionNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nexports.ChildNbtNodeType = Symbol('ChildNbtNodeType');\nconst NbtListChars = { openBracket: '[', sep: ',', closeBracket: ']' };\nclass NbtListNode extends NbtCollectionNode_1.NbtCollectionNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtList';\n        this[_b] = 'List';\n        this.chars = NbtListChars;\n        this.configKeys = {\n            bracketSpacing: 'nbtListBracketSpacing',\n            sepSpacing: 'nbtListCommaSpacing',\n            trailingPairSep: 'nbtListTrailingComma'\n        };\n    }\n}\nexports.NbtListNode = NbtListNode;\n_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtLongArrayNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtArrayNode_1 = require(\"./NbtArrayNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtLongArrayChars = { openBracket: '[', type: 'L', sep: ',', closeBracket: ']' };\nclass NbtLongArrayNode extends NbtArrayNode_1.NbtArrayNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtLongArray';\n        this[_b] = 'LongArray';\n        this.chars = NbtLongArrayChars;\n    }\n}\nexports.NbtLongArrayNode = NbtLongArrayNode;\n_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNbtLongNode = exports.NbtLongNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtNumberNode_1 = require(\"./NbtNumberNode\");\nclass NbtLongNode extends NbtNumberNode_1.NbtNumberNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtLong';\n        this[_b] = 'Long';\n        this.suffixConfigKey = 'nbtLongSuffix';\n    }\n}\nexports.NbtLongNode = NbtLongNode;\n_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType;\n/* istanbul ignore next */\n(function (NbtLongNode) {\n    NbtNumberNode_1.NbtNumberNode.actionProviders.push([15 /* NbtTypeToLong */, 'long', (s, v, r) => new NbtLongNode(s, BigInt(v), r)]);\n})(NbtLongNode = exports.NbtLongNode || (exports.NbtLongNode = {}));\nfunction isNbtLongNode(node) {\n    return node[NbtNode_1.NbtNodeType] === 'Long';\n}\nexports.isNbtLongNode = isNbtLongNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNbtNodeTypeLooselyMatched = exports.isNbtNodeTypeStrictlyMatched = exports.NbtNode = exports.SuperNode = exports.NbtNodeType = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nexports.NbtNodeType = Symbol('NbtNodeType');\nexports.SuperNode = Symbol('SuperNode');\nclass NbtNode extends ArgumentNode_1.ArgumentNode {\n    constructor(superNbt) {\n        super();\n        this[exports.SuperNode] = superNbt;\n    }\n}\nexports.NbtNode = NbtNode;\nfunction isNbtNodeTypeStrictlyMatched(actual, expected) {\n    return expected === actual;\n}\nexports.isNbtNodeTypeStrictlyMatched = isNbtNodeTypeStrictlyMatched;\nfunction isNbtNodeTypeLooselyMatched(actual, expected) {\n    return isNbtNodeTypeStrictlyMatched(actual, expected) || (actual === 'Int' &&\n        (expected === 'Byte' || expected === 'Short' || expected === 'Long' || expected === 'Float' || expected === 'Double'));\n}\nexports.isNbtNodeTypeLooselyMatched = isNbtNodeTypeLooselyMatched;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtNumberNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtPrimitiveNode_1 = require(\"./NbtPrimitiveNode\");\nclass NbtNumberNode extends NbtPrimitiveNode_1.NbtPrimitiveNode {\n    [Formattable_1.GetFormattedString](lint) {\n        const suffix = this.suffixConfigKey ? lint[this.suffixConfigKey] : '';\n        return `${this}${suffix}`;\n    }\n    [ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics) {\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        const pushActions = (code, actionId, getNode) => {\n            const relevantDiagnostics = diagnostics[code];\n            if (relevantDiagnostics) {\n                const newNode = getNode();\n                ans.push(utils_1.getCodeAction(`nbt-type-to-${actionId}`, relevantDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], newNode[Formattable_1.GetFormattedString](ctx.config.lint)));\n            }\n        };\n        for (const [code, id, getNode] of NbtNumberNode.actionProviders) {\n            pushActions(code, id, getNode.bind(this, this[NbtNode_1.SuperNode], this.valueOf(), this.toString()));\n        }\n        return ans;\n    }\n}\nexports.NbtNumberNode = NbtNumberNode;\nNbtNumberNode.actionProviders = [];\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtPathNode = void 0;\nconst utils_1 = require(\"../utils\");\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nclass NbtPathNode extends ArgumentNode_1.ArgumentNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtPath';\n        this.length = 0;\n    }\n    push(...values) {\n        for (const value of values) {\n            this[this.length++] = value;\n        }\n    }\n    /* istanbul ignore next */\n    *[(_a = ArgumentNode_1.NodeType, Symbol.iterator)]() {\n        // You want me to call myself for iterating? Stupid!\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < this.length; i++) {\n            yield this[i];\n        }\n    }\n    [Formattable_1.GetFormattedString](lint) {\n        return Array.prototype.map.call(this, (ele) => utils_1.toFormattedString(ele, lint)).join('');\n    }\n}\nexports.NbtPathNode = NbtPathNode;\nNbtPathNode.IndexBegin = '[';\nNbtPathNode.IndexEnd = ']';\nNbtPathNode.Sep = '.';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtPrimitiveNode = void 0;\nconst NbtNode_1 = require(\"./NbtNode\");\nclass NbtPrimitiveNode extends NbtNode_1.NbtNode {\n    /**\n     *\n     * @param superNbt\n     * @param value\n     * @param raw The raw string representation of the primitive value. This\n     * should _not_ contain suffixes for number tags, but _should_ contain\n     * quotation marks for strings.\n     */\n    constructor(superNbt, value, raw) {\n        super(superNbt);\n        this.value = value;\n        this.raw = raw;\n    }\n    toString() {\n        return this.raw;\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.NbtPrimitiveNode = NbtPrimitiveNode;\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtShortNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtNumberNode_1 = require(\"./NbtNumberNode\");\nclass NbtShortNode extends NbtNumberNode_1.NbtNumberNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'NbtShort';\n        this[_b] = 'Short';\n        this.suffixConfigKey = 'nbtShortSuffix';\n    }\n}\nexports.NbtShortNode = NbtShortNode;\n_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType;\n/* istanbul ignore next */\n(function (NbtShortNode) {\n    NbtNumberNode_1.NbtNumberNode.actionProviders.push([11 /* NbtTypeToShort */, 'short', (s, v, r) => new NbtShortNode(s, Number(v), r)]);\n})(NbtShortNode = exports.NbtShortNode || (exports.NbtShortNode = {}));\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtStringNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst utils_1 = require(\"../utils\");\nconst attributeName_1 = require(\"../utils/datafixers/attributeName\");\nconst nbtUuid_1 = require(\"../utils/datafixers/nbtUuid\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NbtNode_1 = require(\"./NbtNode\");\nconst NbtPrimitiveNode_1 = require(\"./NbtPrimitiveNode\");\nconst StringNode_1 = require(\"./StringNode\");\nclass NbtStringNode extends NbtPrimitiveNode_1.NbtPrimitiveNode {\n    constructor(superNbt, value, raw, mapping) {\n        super(superNbt, value, raw);\n        this.mapping = mapping;\n        this[_a] = 'NbtString';\n        this[_b] = 'String';\n    }\n    /* istanbul ignore next: datafix */\n    [(_a = ArgumentNode_1.NodeType, _b = NbtNode_1.NbtNodeType, ArgumentNode_1.GetCodeActions)](uri, ctx, range, diagnostics) {\n        const node = new StringNode_1.StringNode(this.value, this.raw, this.mapping);\n        node[ArgumentNode_1.NodeRange] = this[ArgumentNode_1.NodeRange];\n        const ans = node[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        //#region UUID datafix: #377\n        const uuidDiagnostics = diagnostics[19 /* NbtUuidDatafixCompound */];\n        if (uuidDiagnostics) {\n            try {\n                const newNode = nbtUuid_1.nbtIntArrayFromBuffer(nbtUuid_1.bufferFromString(this.valueOf()));\n                ans.push(utils_1.getCodeAction('nbt-uuid-datafix', uuidDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], newNode[Formattable_1.GetFormattedString](ctx.config.lint)));\n            }\n            catch (ignored) {\n                // Ignored.\n            }\n        }\n        //#endregion\n        //#region Attribute name datafix: #381\n        const attributeDiagnostics = diagnostics[8 /* NbtStringAttributeDatafix */];\n        if (attributeDiagnostics) {\n            ans.push(utils_1.getCodeAction('id-attribute-datafix', attributeDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], `\"${attributeName_1.attributeNameToIdentity(this.valueOf())}\"`));\n        }\n        //#endregion\n        return ans;\n    }\n}\nexports.NbtStringNode = NbtStringNode;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nclass NumberNode extends ArgumentNode_1.ArgumentNode {\n    constructor(value, raw) {\n        super();\n        this.value = value;\n        this.raw = raw;\n        this[_a] = 'Number';\n    }\n    toString() {\n        return this.raw;\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.NumberNode = NumberNode;\n_a = ArgumentNode_1.NodeType;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberRangeNode = void 0;\nconst utils_1 = require(\"../utils\");\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nclass NumberRangeNode extends ArgumentNode_1.ArgumentNode {\n    constructor(type, min, max) {\n        super();\n        this.type = type;\n        this.min = min;\n        this.max = max;\n        this[_a] = 'NumberRange';\n    }\n    [(_a = ArgumentNode_1.NodeType, Formattable_1.GetFormattedString)](lint) {\n        if (this.min && this.max && this.min.valueOf() === this.max.valueOf()) {\n            return this.min[Formattable_1.GetFormattedString](lint);\n        }\n        else {\n            return `${utils_1.toFormattedString(this.min, lint)}..${utils_1.toFormattedString(this.max, lint)}`;\n        }\n    }\n}\nexports.NumberRangeNode = NumberRangeNode;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticleNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nclass ParticleNode extends ArgumentNode_1.ArgumentNode {\n    constructor(id, param) {\n        super();\n        this.id = id;\n        this.param = param;\n        this[_a] = 'Particle';\n    }\n    [(_a = ArgumentNode_1.NodeType, Formattable_1.GetFormattedString)](lint) {\n        return `${this.id[Formattable_1.GetFormattedString](lint)}${this.param ? ` ${this.param[Formattable_1.GetFormattedString](lint)}` : ''}`;\n    }\n}\nexports.ParticleNode = ParticleNode;\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectorCriteriaNode = exports.SelectorAdvancementsNode = exports.SelectorScoresNode = exports.SelectorArgumentNodeChars = exports.SelectorArgumentsNode = exports.SelectorArgumentKeys = exports.EntitySelectorNodeChars = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst MapNode_1 = require(\"./MapNode\");\nexports.EntitySelectorNodeChars = {\n    openBracket: '[', sep: '=', pairSep: ',', closeBracket: ']'\n};\nexports.SelectorArgumentKeys = [\n    'advancements', 'distance', 'dx', 'dy', 'dz', 'gamemode', 'level', 'limit', 'name', 'nbt',\n    'predicate', 'scores', 'sort', 'tag', 'team', 'type', 'x', 'x_rotation', 'y', 'y_rotation', 'z'\n];\nclass SelectorArgumentsNode extends MapNode_1.MapNode {\n    constructor() {\n        super(...arguments);\n        this[_a] = 'SelectorArgument';\n        this[_b] = {\n            bracketSpacing: 'selectorBracketSpacing',\n            pairSepSpacing: 'selectorCommaSpacing',\n            sepSpacing: 'selectorEqualSpacing',\n            trailingPairSep: 'selectorTrailingComma'\n        };\n        this[_c] = exports.EntitySelectorNodeChars;\n    }\n    kvPair(lint, key, sep, value) {\n        if (key.endsWith('Neg')) {\n            return `${key.slice(0, -3)}${sep}!${utils_1.toFormattedString(value, lint)}`;\n        }\n        return `${key}${sep}${utils_1.toFormattedString(value, lint)}`;\n    }\n    [(_a = ArgumentNode_1.NodeType, _b = MapNode_1.ConfigKeys, _c = MapNode_1.Chars, MapNode_1.IsMapSorted)](lint) {\n        /* istanbul ignore else */\n        if (lint.selectorSortKeys) {\n            const expected = lint.selectorSortKeys[1];\n            let i = 0;\n            for (const actualKey of this[MapNode_1.UnsortedKeys]) {\n                while (actualKey !== expected[i]) {\n                    i++;\n                    if (i >= expected.length) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    [Formattable_1.GetFormattedString](lint, keys = this[MapNode_1.UnsortedKeys]) {\n        return super[Formattable_1.GetFormattedString](lint, keys, this.kvPair);\n    }\n    getSortedKeys(config) {\n        const ans = [];\n        const pool = [...this[MapNode_1.UnsortedKeys]];\n        for (const key of config) {\n            while (pool.includes(key)) {\n                ans.push(pool.splice(pool.indexOf(key), 1)[0]);\n            }\n        }\n        return ans;\n    }\n    [ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics) {\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        const relevantDiagnostics = diagnostics[22 /* SelectorSortKeys */];\n        if (relevantDiagnostics && ctx.config.lint.selectorSortKeys) {\n            ans.push(utils_1.getCodeAction('selector-sort-keys', relevantDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], this[Formattable_1.GetFormattedString](ctx.config.lint, this.getSortedKeys(ctx.config.lint.selectorSortKeys[1]))));\n        }\n        return ans;\n    }\n}\nexports.SelectorArgumentsNode = SelectorArgumentsNode;\nexports.SelectorArgumentNodeChars = {\n    openBracket: '{', sep: '=', pairSep: ',', closeBracket: '}'\n};\nclass SelectorScoresNode extends MapNode_1.MapNode {\n    constructor() {\n        super(...arguments);\n        this[_d] = 'SelectorScoresArgument';\n        this[_e] = {\n            bracketSpacing: 'selectorBracketSpacing',\n            pairSepSpacing: 'selectorCommaSpacing',\n            sepSpacing: 'selectorEqualSpacing',\n            trailingPairSep: 'selectorTrailingComma'\n        };\n        this[_f] = exports.SelectorArgumentNodeChars;\n    }\n}\nexports.SelectorScoresNode = SelectorScoresNode;\n_d = ArgumentNode_1.NodeType, _e = MapNode_1.ConfigKeys, _f = MapNode_1.Chars;\nclass SelectorAdvancementsNode extends MapNode_1.MapNode {\n    constructor() {\n        super(...arguments);\n        this[_g] = 'SelectorAdvancementsArgument';\n        this[_h] = {\n            bracketSpacing: 'selectorBracketSpacing',\n            pairSepSpacing: 'selectorCommaSpacing',\n            sepSpacing: 'selectorEqualSpacing',\n            trailingPairSep: 'selectorTrailingComma'\n        };\n        this[_j] = exports.SelectorArgumentNodeChars;\n    }\n}\nexports.SelectorAdvancementsNode = SelectorAdvancementsNode;\n_g = ArgumentNode_1.NodeType, _h = MapNode_1.ConfigKeys, _j = MapNode_1.Chars;\nclass SelectorCriteriaNode extends MapNode_1.MapNode {\n    constructor() {\n        super(...arguments);\n        this[_k] = 'SelectorCriteriaArgument';\n        this[_l] = {\n            bracketSpacing: 'selectorBracketSpacing',\n            pairSepSpacing: 'selectorCommaSpacing',\n            sepSpacing: 'selectorEqualSpacing',\n            trailingPairSep: 'selectorTrailingComma'\n        };\n        this[_m] = exports.SelectorArgumentNodeChars;\n    }\n}\nexports.SelectorCriteriaNode = SelectorCriteriaNode;\n_k = ArgumentNode_1.NodeType, _l = MapNode_1.ConfigKeys, _m = MapNode_1.Chars;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringNode = void 0;\nconst utils_1 = require(\"../utils\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nclass StringNode extends ArgumentNode_1.ArgumentNode {\n    constructor(value, raw, mapping) {\n        super();\n        this.value = value;\n        this.raw = raw;\n        this.mapping = mapping;\n        this[_a] = 'String';\n    }\n    toString() {\n        return this.raw;\n    }\n    valueOf() {\n        return this.value;\n    }\n    /**\n     * Return code actions for changing quotation marks when relevant diagnostics exist.\n     */\n    [(_a = ArgumentNode_1.NodeType, ArgumentNode_1.GetCodeActions)](uri, ctx, range, diagnostics) {\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        const unquoteDiagnostics = diagnostics[25 /* StringUnquote */];\n        const doubleQuoteDiagnostics = diagnostics[24 /* StringDoubleQuote */];\n        const singleQuoteDiagnostics = diagnostics[23 /* StringSingleQuote */];\n        if (unquoteDiagnostics === null || unquoteDiagnostics === void 0 ? void 0 : unquoteDiagnostics.length) {\n            ans.push(utils_1.getCodeAction('string-unquote', unquoteDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], this.value));\n        }\n        if (doubleQuoteDiagnostics === null || doubleQuoteDiagnostics === void 0 ? void 0 : doubleQuoteDiagnostics.length) {\n            ans.push(utils_1.getCodeAction('string-double-quote', doubleQuoteDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], utils_1.quoteString(this.value, 'always double', true)));\n        }\n        if (singleQuoteDiagnostics === null || singleQuoteDiagnostics === void 0 ? void 0 : singleQuoteDiagnostics.length) {\n            ans.push(utils_1.getCodeAction('string-single-quote', singleQuoteDiagnostics, ctx.textDoc, this[ArgumentNode_1.NodeRange], utils_1.quoteString(this.value, 'always single', true)));\n        }\n        return ans;\n    }\n}\nexports.StringNode = StringNode;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextComponentNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nclass TextComponentNode extends ArgumentNode_1.ArgumentNode {\n    constructor(raw, document, jsonDocument) {\n        super();\n        this.raw = raw;\n        this.document = document;\n        this.jsonDocument = jsonDocument;\n        this[_a] = 'TextComponent';\n    }\n    [(_a = ArgumentNode_1.NodeType, Formattable_1.GetFormattedString)]() {\n        return this.raw;\n    }\n}\nexports.TextComponentNode = TextComponentNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TimeNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst NumberNode_1 = require(\"./NumberNode\");\nclass TimeNode extends NumberNode_1.NumberNode {\n    constructor(value, raw, unit) {\n        super(value, raw);\n        this.value = value;\n        this.raw = raw;\n        this.unit = unit;\n    }\n    [Formattable_1.GetFormattedString](lint) {\n        if (this.unit === 't' && lint.timeOmitTickUnit) {\n            return this.raw;\n        }\n        else {\n            return `${this.raw}${this.unit}`;\n        }\n    }\n}\nexports.TimeNode = TimeNode;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VectorNode = exports.VectorElementNode = void 0;\nconst Formattable_1 = require(\"../types/Formattable\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\nconst NumberNode_1 = require(\"./NumberNode\");\nclass VectorElementNode extends NumberNode_1.NumberNode {\n    constructor(type, value, raw, allowsFloat = true) {\n        super(value, raw);\n        this.type = type;\n        this.allowsFloat = allowsFloat;\n    }\n    /**\n     * Return the raw representation of this vector, including prefix.\n     */\n    toString() {\n        return this.type + this.raw;\n    }\n}\nexports.VectorElementNode = VectorElementNode;\nclass VectorNode extends ArgumentNode_1.ArgumentNode {\n    constructor() {\n        super();\n        this[_a] = 'Vector';\n        this.length = 0;\n    }\n    volumeTo(other) {\n        if (this.length !== other.length) {\n            return undefined;\n        }\n        if (this.length === 0) {\n            return 0;\n        }\n        let ans = 1;\n        let type;\n        for (let i = 0; i < this.length; i++) {\n            const e1 = this[i], e2 = other[i];\n            type = type !== null && type !== void 0 ? type : e1.type;\n            if (e1.type !== type || e2.type !== type) {\n                return undefined;\n            }\n            ans *= Math.abs(this[i].valueOf() - other[i].valueOf()) + 1;\n        }\n        return ans;\n    }\n    getChunk() {\n        if (this.length !== 2 && this.length !== 3) {\n            return undefined;\n        }\n        const vexX = this[0];\n        const vexZ = this.length === 3 ? this[2] : this[1];\n        // TODO: support VectorElementType.Relative\n        if (vexX.type !== \"\" /* Absolute */ || vexZ.type !== \"\" /* Absolute */) {\n            return undefined;\n        }\n        const ans = new VectorNode();\n        ans.push(new VectorElementNode(\"\" /* Absolute */, Math.floor(vexX.valueOf() / 16), '', false), new VectorElementNode(\"\" /* Absolute */, Math.floor(vexZ.valueOf() / 16), '', false));\n        ans[ArgumentNode_1.NodeRange] = this[ArgumentNode_1.NodeRange];\n        return ans;\n    }\n    distanceTo(other) {\n        if (this.length !== other.length) {\n            return undefined;\n        }\n        let distSquared = 0;\n        let type;\n        for (let i = 0; i < this.length; i++) {\n            const e1 = this[i], e2 = other[i];\n            type = type !== null && type !== void 0 ? type : e1.type;\n            if (e1.type !== type || e2.type !== type) {\n                return undefined;\n            }\n            distSquared += Math.pow((this[i].valueOf() - other[i].valueOf()), 2);\n        }\n        return Math.sqrt(distSquared);\n    }\n    push(...values) {\n        for (const value of values) {\n            this[this.length++] = value;\n        }\n    }\n    /* istanbul ignore next */\n    *[(_a = ArgumentNode_1.NodeType, Symbol.iterator)]() {\n        // You want me to call myself for iterating? Stupid!\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < this.length; i++) {\n            yield this[i];\n        }\n    }\n    [ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics) {\n        const ans = super[ArgumentNode_1.GetCodeActions](uri, ctx, range, diagnostics);\n        if (Array.prototype.some.call(this, (v) => v.type === \"\" /* Absolute */ && !v.raw.includes('.') && v.allowsFloat === true)) {\n            ans.push(utils_1.getCodeAction('vector-align-0.0', [], ctx.textDoc, this[ArgumentNode_1.NodeRange], Array.prototype.map.call(this, (v) => {\n                if (v.type === \"\" /* Absolute */) {\n                    return v.raw.includes('.') ? v.raw : `${v.raw}.0`;\n                }\n                return v.toString();\n            }).join(' '), undefined, false), utils_1.getCodeAction('vector-align-0.5', [], ctx.textDoc, this[ArgumentNode_1.NodeRange], Array.prototype.map.call(this, (v) => {\n                if (v.type === \"\" /* Absolute */) {\n                    return v.raw.includes('.') ? v.raw : `${v.raw}.5`;\n                }\n                return v.toString();\n            }).join(' '), undefined, false));\n        }\n        return ans;\n    }\n    [Formattable_1.GetFormattedString](lint) {\n        return Array.prototype.map.call(this, (v) => v[Formattable_1.GetFormattedString](lint)).join(' ');\n    }\n}\nexports.VectorNode = VectorNode;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSelectedNode = void 0;\nconst ArgumentNode_1 = require(\"./ArgumentNode\");\n__exportStar(require(\"./ArgumentNode\"), exports);\n__exportStar(require(\"./BlockNode\"), exports);\n__exportStar(require(\"./BlockStateNode\"), exports);\n__exportStar(require(\"./EntityNode\"), exports);\n__exportStar(require(\"./IdentityNode\"), exports);\n__exportStar(require(\"./ItemNode\"), exports);\n__exportStar(require(\"./JsonDocument\"), exports);\n__exportStar(require(\"./JsonNode\"), exports);\n__exportStar(require(\"./MapNode\"), exports);\n__exportStar(require(\"./MessageNode\"), exports);\n__exportStar(require(\"./NbtArrayNode\"), exports);\n__exportStar(require(\"./NbtByteArrayNode\"), exports);\n__exportStar(require(\"./NbtByteNode\"), exports);\n__exportStar(require(\"./NbtCollectionNode\"), exports);\n__exportStar(require(\"./NbtCompoundKeyNode\"), exports);\n__exportStar(require(\"./NbtCompoundNode\"), exports);\n__exportStar(require(\"./NbtDoubleNode\"), exports);\n__exportStar(require(\"./NbtFloatNode\"), exports);\n__exportStar(require(\"./NbtIntArrayNode\"), exports);\n__exportStar(require(\"./NbtIntNode\"), exports);\n__exportStar(require(\"./NbtListNode\"), exports);\n__exportStar(require(\"./NbtLongArrayNode\"), exports);\n__exportStar(require(\"./NbtLongNode\"), exports);\n__exportStar(require(\"./NbtNode\"), exports);\n__exportStar(require(\"./NbtNumberNode\"), exports);\n__exportStar(require(\"./NbtPathNode\"), exports);\n__exportStar(require(\"./NbtPrimitiveNode\"), exports);\n__exportStar(require(\"./NbtShortNode\"), exports);\n__exportStar(require(\"./NbtStringNode\"), exports);\n__exportStar(require(\"./NumberNode\"), exports);\n__exportStar(require(\"./NumberRangeNode\"), exports);\n__exportStar(require(\"./ParticleNode\"), exports);\n__exportStar(require(\"./SelectorArgumentsNode\"), exports);\n__exportStar(require(\"./StringNode\"), exports);\n__exportStar(require(\"./TextComponent\"), exports);\n__exportStar(require(\"./TimeNode\"), exports);\n__exportStar(require(\"./VectorNode\"), exports);\nfunction getSelectedNode(nodes, offset) {\n    var _a;\n    let left = 0;\n    let right = nodes.length - 1;\n    while (left <= right) {\n        const middle = Math.floor(left + (right - left) / 2);\n        const node = nodes[middle];\n        const range = ((_a = node[ArgumentNode_1.NodeRange]) !== null && _a !== void 0 ? _a : node.range);\n        if (range.start <= offset && offset <= range.end) {\n            // [ | )\n            return { node, index: middle };\n        }\n        else if (range.end < offset) {\n            // [   ) |\n            left = middle + 1;\n        }\n        else if (offset < range.start) {\n            // | [   )\n            right = middle - 1;\n        }\n        else {\n            break;\n        }\n    }\n    return { node: null, index: -1 };\n}\nexports.getSelectedNode = getSelectedNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\n/**\n * Base class of argument parsers.\n */\nclass ArgumentParser {\n    /**\n     * Default implements to return something like `<id: string>`\n     */\n    toHint(name, optional) {\n        const prefix = optional ? '[<' : '<';\n        const suffix = optional ? '>]' : '>';\n        return `${prefix}${name}: ${locales_1.locale(`argument-type.${this.identity}`)}${suffix}`;\n    }\n    /**\n     * Get examples of this argument.\n     *\n     * @example\n     * return ['true', 'false']\n     */\n    getExamples() {\n        return [];\n    }\n}\nexports.ArgumentParser = ArgumentParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst BlockNode_1 = require(\"../nodes/BlockNode\");\nconst BlockStateNode_1 = require(\"../nodes/BlockStateNode\");\nconst MapNode_1 = require(\"../nodes/MapNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst StylisticConfig_1 = require(\"../types/StylisticConfig\");\nconst Token_1 = require(\"../types/Token\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nconst MapParser_1 = require(\"./MapParser\");\nclass BlockArgumentParser extends ArgumentParser_1.ArgumentParser {\n    /* istanbul ignore next */\n    constructor(allowTag = false, isPredicate = false) {\n        super();\n        this.allowTag = allowTag;\n        this.isPredicate = isPredicate;\n        this.identity = 'block';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new BlockNode_1.BlockNode());\n        const start = reader.cursor;\n        const idResult = new ctx.parsers.Identity('minecraft:block', this.allowTag).parse(reader, ctx);\n        const id = idResult.data;\n        Parser_1.combineArgumentParserResult(ans, idResult);\n        ans.data.id = id;\n        this.parseStates(reader, ctx, ans, id);\n        this.parseTag(reader, ctx, ans, id);\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    parseStates(reader, ctx, ans, id) {\n        if (reader.peek() === '[') {\n            const start = reader.cursor;\n            const definition = id.isTag ? undefined : ctx.blockDefinition[id.toString()];\n            const properties = definition ? (definition.properties || {}) : {};\n            const statesResult = Parser_1.ArgumentParserResult.create(new BlockStateNode_1.BlockStateNode());\n            new MapParser_1.MapParser(BlockStateNode_1.BlockStateNodeChars, (ans, reader, ctx) => {\n                const existingKeys = Object.keys(ans.data);\n                const keys = Object.keys(properties).filter(v => !existingKeys.includes(v));\n                const start = reader.cursor;\n                const result = new ctx.parsers.Literal(...keys).parse(reader, ctx);\n                result.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.property)];\n                if (id.isTag) {\n                    result.errors = [];\n                }\n                return result;\n            }, (ans, reader, ctx, key, range) => {\n                var _a;\n                if (Object.keys(ans.data).filter(v => v === key).length > 0) {\n                    ans.errors.push(new ParsingError_1.ParsingError(range, locales_1.locale('duplicate-key', locales_1.locale('punc.quote', key))));\n                }\n                const start = reader.cursor;\n                const result = new ctx.parsers.Literal(...(_a = properties[key]) !== null && _a !== void 0 ? _a : []).parse(reader, ctx);\n                result.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.string)];\n                ans.data[key] = result.data;\n                if (id.isTag) {\n                    result.errors = [];\n                }\n                Parser_1.combineArgumentParserResult(ans, result);\n            }).parse(statesResult, reader, ctx);\n            Parser_1.combineArgumentParserResult(ans, statesResult);\n            ans.data.states = statesResult.data;\n            ans.data.states[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n            if (ctx.config.lint.blockStateSortKeys && !ans.data.states[MapNode_1.IsMapSorted]()) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('diagnostic-rule', locales_1.locale('unsorted-keys'), locales_1.locale('punc.quote', 'blockStateSortKeys')), undefined, StylisticConfig_1.getDiagnosticSeverity(ctx.config.lint.blockStateSortKeys[0]), 0 /* BlockStateSortKeys */));\n            }\n        }\n    }\n    parseTag(reader, ctx, ans, id) {\n        if (reader.peek() === '{') {\n            const tagResult = new ctx.parsers.Nbt('Compound', 'minecraft:block', !id.isTag ? id.toString() : null, this.isPredicate).parse(reader, ctx);\n            const tag = tagResult.data;\n            Parser_1.combineArgumentParserResult(ans, tagResult);\n            ans.data.tag = tag;\n        }\n    }\n    getExamples() {\n        return ['stone', 'minecraft:stone', 'stone[foo=bar]', 'stone{bar:baz}'];\n    }\n}\nexports.BlockArgumentParser = BlockArgumentParser;\nBlockArgumentParser.identity = 'Block';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeSnippetArgumentParser = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass CodeSnippetArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super(...arguments);\n        this.identity = 'codeSnippet';\n    }\n    /* istanbul ignore next */\n    parse(reader, { cursor: cursor, config: { snippets } }) {\n        const ans = Parser_1.ArgumentParserResult.create('');\n        //#region Completions.\n        const start = reader.cursor;\n        ans.data = reader.readUntilOrEnd(' ');\n        const end = reader.cursor;\n        if (start <= cursor && cursor <= end) {\n            for (const label of Object.keys(snippets)) {\n                const insertText = snippets[label];\n                ans.completions.push({\n                    start, end,\n                    label, insertText,\n                    insertTextFormat: vscode_languageserver_1.InsertTextFormat.Snippet,\n                    kind: vscode_languageserver_1.CompletionItemKind.Snippet\n                });\n            }\n        }\n        //#endregion\n        return ans;\n    }\n    getExamples() {\n        return [];\n    }\n}\nexports.CodeSnippetArgumentParser = CodeSnippetArgumentParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandParser = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst CommandTree_1 = require(\"../CommandTree\");\nconst locales_1 = require(\"../locales\");\nconst CommandComponent_1 = require(\"../types/CommandComponent\");\nconst CommandTree_2 = require(\"../types/CommandTree\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nclass CommandParser {\n    /* istanbul ignore next */\n    constructor(\n    /**\n     * Whether the line should begin with a slash (`/`).\n     * `true` - Should. Will throw untolerable errors if the line doesn't match.\n     * `false` - Shouldn't. Will throw untolerable errors if the line doesn't match.\n     * `null` - Not care.\n     */\n    leadingSlash = false, \n    /**\n     * The entry point will be used to access `tree`.\n     */\n    entryPoint = 'line', \n    /**\n     * Allow the command not hitting executable nodes.\n     */\n    allowPartial = false) {\n        this.leadingSlash = leadingSlash;\n        this.entryPoint = entryPoint;\n        this.allowPartial = allowPartial;\n    }\n    static getParser(parserInNode, parsedLine, ctx) {\n        let ans;\n        if (parserInNode instanceof Function) {\n            ans = parserInNode(parsedLine, ctx);\n        }\n        else {\n            ans = parserInNode;\n        }\n        return ans;\n    }\n    parse(reader, ctx) {\n        const node = CommandComponent_1.CommandComponent.create();\n        const start = reader.cursor;\n        const backupReader = reader.clone();\n        let shouldContinue = true;\n        //#region Check leading slash.\n        if (reader.peek() === '/') {\n            // Find a leading slash...\n            if (this.leadingSlash === false) {\n                // ...which is unexpected\n                shouldContinue = false;\n                node.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('unexpected-leading-slash'), false));\n            }\n            reader.skip();\n        }\n        else {\n            // Don't find a leading slash...\n            if (this.leadingSlash === true) {\n                // ...which is unexpected\n                shouldContinue = false;\n                if (ctx.cursor === reader.cursor) {\n                    node.completions.push({ label: '/', start: ctx.cursor, end: ctx.cursor });\n                }\n                if (this.allowPartial) {\n                    reader.readRemaining();\n                }\n                else {\n                    node.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('expected-got', locales_1.locale('leading-slash'), locales_1.locale('punc.quote', reader.peek())), false));\n                }\n            }\n        }\n        //#endregion\n        if (shouldContinue) {\n            this.parseChildren(reader, ctx, ctx.commandTree[this.entryPoint], node, false, true);\n        }\n        node.range = { start, end: reader.cursor };\n        // Handle blanks/comments.\n        /* istanbul ignore next */\n        if ((backupReader.peek() === '#' || (shouldContinue && reader.cursor === start)) && node.errors.length) {\n            return {\n                data: CommandComponent_1.CommandComponent.create([{ data: backupReader.readRemaining(), parser: 'string', range: node.range }], {\n                    range: node.range,\n                    hint: node.hint,\n                    completions: node.completions\n                })\n            };\n        }\n        return { data: node };\n    }\n    parseSingle(reader, ctx, key, node, parsedLine, isTheSoleChild = false, optional = false) {\n        if (node.redirect) {\n            if (!node.redirect.includes('.')) {\n                // Redirect to children.\n                const redirect = ctx.commandTree[node.redirect];\n                this.parseChildren(reader, ctx, redirect, parsedLine, optional, node.redirect === 'commands');\n            }\n            else {\n                // Redirect to single.\n                const seg = node.redirect.split(/\\./g);\n                const redirect = ctx.commandTree[seg[0]][seg[1]];\n                this.parseSingle(reader, ctx, seg[1], redirect, parsedLine, isTheSoleChild, optional);\n            }\n        }\n        else if (node.template) {\n            if (!node.template.includes('.')) {\n                // Use `children` as the template.\n                const template = CommandTree_1.fillChildrenTemplate(node, ctx.commandTree[node.template]);\n                this.parseChildren(reader, ctx, template, parsedLine, optional, node.redirect === 'commands');\n            }\n            else {\n                // Use `single` as the template.\n                const seg = node.template.split('.');\n                const template = CommandTree_1.fillSingleTemplate(node, ctx.commandTree[seg[0]][seg[1]]);\n                this.parseSingle(reader, ctx, seg[1], template, parsedLine, isTheSoleChild, optional);\n            }\n        }\n        else if (node.parser) {\n            const start = reader.cursor;\n            const parser = CommandParser.getParser(node.parser, parsedLine, ctx);\n            const { cache, completions, data, errors, tokens } = parser.parse(reader, ctx);\n            //#region Aliases.\n            if (start === reader.cursor) {\n                const category = ctx.cache[`alias/${parser.identity.split('.')[0]}`];\n                for (const alias of Object.keys(category !== null && category !== void 0 ? category : {})) {\n                    const unit = category[alias];\n                    completions.push({\n                        label: alias,\n                        insertText: unit.foo,\n                        start: reader.cursor, end: reader.cursor,\n                        detail: unit.foo,\n                        documentation: unit.doc,\n                        kind: vscode_languageserver_1.CompletionItemKind.Snippet\n                    });\n                }\n            }\n            //#endregion\n            CommandComponent_1.combineCommand(parsedLine, CommandComponent_1.CommandComponent.create([{ data, parser: parser.identity, range: { start, end: reader.cursor } }], { cache, completions, errors, tokens }));\n            if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n                parsedLine.hint.options.push([\n                    parser.toHint(key, optional),\n                    this.getHintsInChildren(ctx, node)\n                ]);\n            }\n            else {\n                parsedLine.hint.fix.push(parser.toHint(key, optional));\n            }\n            if (node.run) {\n                node.run(parsedLine);\n            }\n            //#region Handle trailing data or absent data.\n            if (!reader.canRead(2) && (!reader.canRead() || reader.peek() === ' ')) {\n                // The input line is all parsed.\n                if (!node.executable && !this.allowPartial) {\n                    parsedLine.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 2 }, locales_1.locale('expected-got', locales_1.locale('more-arguments'), locales_1.locale('nothing'))));\n                }\n                if (reader.peek() === ' ') {\n                    reader.skip();\n                    // The input line is end with a space.\n                    /* istanbul ignore else */\n                    if (node.children && ctx.cursor === reader.cursor) {\n                        // Compute completions.\n                        const shouldParseChildren = isTheSoleChild || parsedLine.errors.filter(v => !v.tolerable).length === 0;\n                        /* istanbul ignore else */\n                        if (shouldParseChildren) {\n                            const result = CommandComponent_1.CommandComponent.create(parsedLine.data);\n                            this.parseChildren(reader, ctx, node.children, result, optional, false);\n                            /* istanbul ignore else */\n                            if (result.completions && result.completions.length !== 0) {\n                                parsedLine.completions.push(...result.completions);\n                            }\n                            parsedLine.hint.fix.push(...result.hint.fix);\n                            parsedLine.hint.options.push(...result.hint.options);\n                        }\n                    }\n                }\n            }\n            else {\n                // There are trailing data.\n                if (!node.children) {\n                    parsedLine.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.end }, locales_1.locale('expected-got', locales_1.locale('nothing'), locales_1.locale('punc.quote', reader.remainingString))));\n                }\n                else {\n                    const shouldParseChildren = isTheSoleChild || parsedLine.errors.filter(v => !v.tolerable).length === 0;\n                    if (shouldParseChildren) {\n                        if (reader.peek() === ' ') {\n                            reader.skip();\n                            this.parseChildren(reader, ctx, node.children, parsedLine, optional, false);\n                            // Downgrade errors.\n                            parsedLine.errors = ParsingError_1.downgradeParsingError(parsedLine.errors);\n                        }\n                        else {\n                            parsedLine.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.end }, locales_1.locale('space-seperating-arguments')));\n                        }\n                    }\n                }\n            }\n            //#endregion\n            //#region Check permission level.\n            const level = node.permission !== undefined ? node.permission : 2;\n            const levelMax = ctx.config.env.permissionLevel;\n            if (level > levelMax) {\n                parsedLine.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('no-permission', level, levelMax)));\n            }\n            //#endregion\n        }\n        else {\n            throw new Error('unexpected error. Got none of “parser”, “redirect”, and “template” in node');\n        }\n    }\n    parseChildren(reader, ctx, children, parsedLine, optional = false, isFirstArgument = false) {\n        this.parseAlwaysValidates(reader, ctx, children[CommandTree_2.AlwaysValidates], parsedLine, optional, isFirstArgument);\n        if (children[CommandTree_2.Switchable]) {\n            this.parseSwitchableChildren(reader, ctx, children, parsedLine, optional, isFirstArgument);\n        }\n        else {\n            this.parseNormalChildren(reader, ctx, children, parsedLine, optional, isFirstArgument);\n        }\n    }\n    parseAlwaysValidates(reader, ctx, validates, parsedLine, optional, isFirstArgument) {\n        for (const key of Object.keys(validates !== null && validates !== void 0 ? validates : {})) {\n            this.tryParsingNodeInChildren(reader, ctx, key, validates[key], parsedLine, optional, isFirstArgument, false, true);\n        }\n    }\n    parseSwitchableChildren(reader, ctx, children, parsedLine, optional, isFirstArgument) {\n        const start = reader.cursor;\n        const options = Object.keys(children);\n        const newReader = reader.clone();\n        const literal = newReader.readUntilOrEnd(' ');\n        //#region Completions.\n        if (start <= ctx.cursor && ctx.cursor <= newReader.cursor) {\n            parsedLine.completions.push(...utils_1.arrayToCompletions(options, start, newReader.cursor));\n        }\n        //#endregion\n        const node = children[literal];\n        if (node) {\n            this.tryParsingNodeInChildren(reader, ctx, literal, node, parsedLine, optional, isFirstArgument, true);\n        }\n        else {\n            parsedLine.errors.push(new ParsingError_1.ParsingError({ start, end: start + literal.length }, locales_1.locale('expected-got', utils_1.arrayToMessage(options, true, 'or'), locales_1.locale('punc.quote', literal)), false));\n        }\n    }\n    parseNormalChildren(reader, ctx, children, parsedLine, optional, isFirstArgument) {\n        const start = reader.cursor;\n        const hasSoleChild = Object.keys(children).length === 1;\n        for (const key of Object.keys(children)) {\n            const result = this.tryParsingNodeInChildren(reader, ctx, key, children[key], parsedLine, optional, isFirstArgument, hasSoleChild);\n            if (result) {\n                return;\n            }\n        }\n        reader.readRemaining();\n        parsedLine.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('not-matching-any-child'), false));\n    }\n    /**\n     * @returns If parsed successfully.\n     */\n    tryParsingNodeInChildren(reader, ctx, key, node, parsedLine, optional, isFirstArgument, isSoleChild, mustRollBack = false) {\n        const hasUntolerableErrors = (errors) => errors.filter(v => !v.tolerable).length > 0;\n        const newReader = reader.clone();\n        const oldErrors = [...parsedLine.errors];\n        const oldTokens = [...parsedLine.tokens];\n        this.parseSingle(newReader, ctx, key, node, parsedLine, isSoleChild, optional);\n        //#region Add `firstArgument` token modifer.\n        if (isFirstArgument) {\n            const firstArgumentToken = parsedLine.tokens[oldTokens.length];\n            if (firstArgumentToken) {\n                firstArgumentToken.modifiers.add(Token_1.TokenModifier.firstArgument);\n            }\n        }\n        //#endregion\n        if (mustRollBack || (!isSoleChild && hasUntolerableErrors(parsedLine.errors))) {\n            parsedLine.data.pop();\n            parsedLine.hint.fix.pop();\n            parsedLine.errors = oldErrors;\n            parsedLine.tokens = oldTokens;\n            return false;\n        }\n        reader.cursor = newReader.cursor;\n        return true;\n    }\n    getHintsInChildren(ctx, node) {\n        var _a;\n        const ans = [];\n        const children = node.children || {};\n        for (const key of Object.keys(children)) {\n            const line = CommandComponent_1.CommandComponent.create();\n            const subNode = children[key];\n            this.parseSingle(new StringReader_1.StringReader(''), Object.assign(Object.assign({}, ctx), { cursor: -1 }), key, subNode, line, false, !!node.executable);\n            const option = (_a = line.hint.fix[0]) !== null && _a !== void 0 ? _a : '';\n            ans.push(option);\n        }\n        return ans;\n    }\n}\nexports.CommandParser = CommandParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationDescriptionArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass DeclarationDescriptionArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(type, id) {\n        super();\n        this.type = type;\n        this.id = id;\n        this.identity = 'string';\n    }\n    parse(reader) {\n        const start = reader.cursor;\n        const description = reader.readRemaining();\n        const ans = Parser_1.ArgumentParserResult.create(description, {\n            tokens: [Token_1.Token.from(start, reader, Token_1.TokenType.string, new Set([Token_1.TokenModifier.documentation]))]\n        });\n        if (description) {\n            if (ClientCache_1.isCacheType(this.type) && ClientCache_1.isDeclarableType(this.type) && this.id) {\n                const key = this.type;\n                ans.cache[key] = {};\n                const category = ans.cache[key];\n                category[this.id] = { doc: description };\n            }\n        }\n        else {\n            ans.errors = [\n                new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('string'), locales_1.locale('nothing')))\n            ];\n        }\n        return ans;\n    }\n    getExamples() {\n        return ['_Whatever description here_'];\n    }\n}\nexports.DeclarationDescriptionArgumentParser = DeclarationDescriptionArgumentParser;\nDeclarationDescriptionArgumentParser.identity = 'DeclarationDescription';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationIDArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass DeclarationIDArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(type) {\n        super();\n        this.type = type;\n        this.identity = 'string';\n    }\n    parse(reader) {\n        const start = reader.cursor;\n        const id = reader.readUntilOrEnd(' ');\n        let processsedID = id;\n        const ans = Parser_1.ArgumentParserResult.create(id);\n        let token = Token_1.TokenType.comment;\n        if (id) {\n            if (ClientCache_1.isCacheType(this.type) && ClientCache_1.isDeclarableType(this.type)) {\n                //#region Tokens\n                if (ClientCache_1.isNamespacedType(this.type)) {\n                    processsedID = IdentityNode_1.IdentityNode.fromString(id).toString();\n                    token = Token_1.TokenType.identity;\n                }\n                else if (this.type === 'entity' || this.type === 'score_holder') {\n                    token = Token_1.TokenType.entity;\n                }\n                else {\n                    token = Token_1.TokenType.variable;\n                }\n                //#endregion\n                ans.cache[this.type] = {\n                    [processsedID]: {\n                        dcl: [{ start, end: start + id.length }]\n                    }\n                };\n            }\n        }\n        else {\n            ans.errors = [\n                new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('string'), locales_1.locale('nothing')))\n            ];\n        }\n        //#region Tokens\n        ans.tokens.push(Token_1.Token.from(start, reader, token, new Set([Token_1.TokenModifier.declaration])));\n        //#endregion\n        return ans;\n    }\n    getExamples() {\n        return ['$foo'];\n    }\n}\nexports.DeclarationIDArgumentParser = DeclarationIDArgumentParser;\nDeclarationIDArgumentParser.identity = 'DeclarationID';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntityArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst EntityNode_1 = require(\"../nodes/EntityNode\");\nconst MapNode_1 = require(\"../nodes/MapNode\");\nconst SelectorArgumentsNode_1 = require(\"../nodes/SelectorArgumentsNode\");\nconst types_1 = require(\"../types\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst StylisticConfig_1 = require(\"../types/StylisticConfig\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nconst MapParser_1 = require(\"./MapParser\");\nclass EntityArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(amount, type, isScoreHolder = false) {\n        super();\n        this.amount = amount;\n        this.type = type;\n        this.isScoreHolder = isScoreHolder;\n        this.identity = 'entity';\n    }\n    parse(reader, ctx) {\n        if (reader.peek() === '@') {\n            return this.parseSelector(reader, ctx);\n        }\n        else {\n            return this.parsePlainOrUuid(reader, ctx);\n        }\n    }\n    parsePlainOrUuid(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new EntityNode_1.EntityNode());\n        const start = reader.cursor;\n        //#region Data.\n        let plain;\n        if (this.isScoreHolder) {\n            plain = reader.readUntilOrEnd(' ');\n        }\n        else {\n            plain = reader.readUnquotedString();\n        }\n        if (plain) {\n            ans.data.plain = plain;\n            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.entity));\n        }\n        //#endregion\n        //#region Completions.\n        if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n            ans.completions.push(...ClientCache_1.getCompletions(ctx.cache, 'entity', start, ctx.cursor));\n            if (this.isScoreHolder) {\n                ans.completions.push(...ClientCache_1.getCompletions(ctx.cache, 'score_holder', start, ctx.cursor));\n            }\n            ans.completions.push(...utils_1.arrayToCompletions(['@a', '@e', '@p', '@r', '@s'], start, ctx.cursor));\n        }\n        //#endregion\n        //#region Errors.\n        if (!plain) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('entity'), locales_1.locale('nothing')), false));\n        }\n        if (this.isScoreHolder && plain !== '*') {\n            if (plain.length > 40) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + plain.length }, locales_1.locale('too-long', locales_1.locale('punc.quote', plain), locales_1.locale('score-holder'), 40)));\n            }\n            if (ctx.config.lint.nameOfScoreHolders && !types_1.checkNamingConvention(plain, ctx.config.lint.nameOfScoreHolders)) {\n                const [severity, rule] = ctx.config.lint.nameOfScoreHolders;\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + plain.length }, locales_1.locale('scoreholder-not-following-convention', locales_1.locale('punc.quote', plain), utils_1.arrayToMessage(types_1.getConventionNames(rule), true, 'or')), true, StylisticConfig_1.getDiagnosticSeverity(severity)));\n            }\n            const category = ClientCache_1.getSafeCategory(ctx.cache, 'score_holder');\n            if (ctx.config.lint.strictScoreHolderCheck && ctx.config.lint.strictScoreHolderCheck[1] && !EntityArgumentParser.UuidPattern.test(plain) && !Object.keys(category).includes(plain)) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + plain.length }, locales_1.locale('undefined-scoreholder', locales_1.locale('punc.quote', plain)), undefined, StylisticConfig_1.getDiagnosticSeverity(ctx.config.lint.strictScoreHolderCheck[0])));\n            }\n        }\n        else if (!this.isScoreHolder && plain.length > 16 && !EntityArgumentParser.UuidPattern.test(plain)) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + plain.length }, locales_1.locale('too-long', locales_1.locale('punc.quote', plain), locales_1.locale('entity'), 16)));\n        }\n        //#endregion\n        //#region Cache\n        if (plain !== '*') {\n            if (this.isScoreHolder) {\n                const category = ClientCache_1.getSafeCategory(ctx.cache, 'score_holder');\n                if (Object.keys(category).includes(plain)) {\n                    ans.cache = {\n                        score_holder: {\n                            [plain]: {\n                                def: [],\n                                ref: [{ start, end: start + plain.length }]\n                            }\n                        }\n                    };\n                }\n            }\n            const category = ClientCache_1.getSafeCategory(ctx.cache, 'entity');\n            if (Object.keys(category).includes(plain)) {\n                ans.cache = {\n                    entity: {\n                        [plain]: {\n                            def: [],\n                            ref: [{ start, end: start + plain.length }]\n                        }\n                    }\n                };\n            }\n        }\n        //#endregion\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    parseSelector(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new EntityNode_1.EntityNode());\n        const start = reader.cursor;\n        let isMultiple = false;\n        let containsNonPlayer = false;\n        //#region Completions\n        if (ctx.cursor === start + 1) {\n            ans.completions.push(...utils_1.arrayToCompletions(['a', 'e', 'p', 'r', 's'], start + 1, start + 1));\n        }\n        //#endregion\n        //#region Data\n        const excludedArguments = [];\n        /// Variable\n        reader\n            .expect('@')\n            .skip();\n        const variable = reader.read();\n        if (EntityArgumentParser.isVariable(variable)) {\n            ans.data.variable = variable;\n            switch (variable) {\n                case 'a':\n                    excludedArguments.push('type');\n                    isMultiple = true;\n                    break;\n                case 'e':\n                    isMultiple = true;\n                    containsNonPlayer = true;\n                    break;\n                case 'p':\n                case 'r':\n                    excludedArguments.push('type');\n                    break;\n                case 's':\n                default:\n                    excludedArguments.push('limit', 'sort');\n                    break;\n            }\n        }\n        else {\n            ans.errors.push(new ParsingError_1.ParsingError({ start: start + 1, end: start + 2 }, locales_1.locale('unexpected-selector-variable', locales_1.locale('punc.quote', variable))));\n        }\n        //#region Tokens\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.entity));\n        //#endregion\n        /// Arguments\n        if (reader.peek() === '[') {\n            const pushSafely = (ans, key, result) => {\n                ans.data[key] = ans.data[key] || [];\n                ans.data[key].push(result.data);\n                ans.data[MapNode_1.UnsortedKeys].pop();\n                ans.data[MapNode_1.UnsortedKeys].push(key);\n            };\n            const dealWithNegativableArray = (ans, parser, key) => {\n                const keyNeg = `${key}Neg`;\n                if (ctx.cursor === reader.cursor) {\n                    ans.completions.push({ label: '!', start: reader.cursor, end: reader.cursor });\n                }\n                const isNegative = reader.peek() === '!';\n                if (isNegative) {\n                    reader\n                        .skip()\n                        .skipWhiteSpace();\n                }\n                let isValueEmpty = false;\n                if (reader.peek() === ',' || reader.peek() === ']') {\n                    isValueEmpty = true;\n                }\n                const result = parser.parse(reader, ctx);\n                if (isValueEmpty) {\n                    result.errors = [];\n                }\n                if (isNegative) {\n                    pushSafely(ans, keyNeg, result);\n                }\n                else {\n                    pushSafely(ans, key, result);\n                    if (key === 'type') {\n                        const id = result.data.toString();\n                        if (id === 'minecraft:player') {\n                            containsNonPlayer = false;\n                        }\n                        else {\n                            containsNonPlayer = true;\n                        }\n                    }\n                }\n                Parser_1.combineArgumentParserResult(ans, result);\n            };\n            const argumentAns = Parser_1.ArgumentParserResult.create(new SelectorArgumentsNode_1.SelectorArgumentsNode());\n            // We assign `argumentAns.data` to `ans.data.argument` first so that we can use\n            // `ans.data.argument` to access it while parsing.\n            ans.data.argument = argumentAns.data;\n            new MapParser_1.MapParser(SelectorArgumentsNode_1.EntitySelectorNodeChars, (argumentAns, reader, ctx) => {\n                const start = reader.cursor;\n                const result = new ctx.parsers.String(1 /* String */, SelectorArgumentsNode_1.SelectorArgumentKeys.filter(v => !excludedArguments.includes(v)), 'selectorKeyQuote', 'selectorKeyQuoteType').parse(reader, ctx);\n                const key = result.data.value;\n                /* istanbul ignore else */\n                if (key) {\n                    argumentAns.data[MapNode_1.Keys][key] = result.data;\n                }\n                result.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.property)];\n                return Object.assign(Object.assign({}, result), { data: key });\n            }, (argumentAns, reader, ctx, key) => {\n                if (key === 'sort') {\n                    const start = reader.cursor;\n                    const result = new ctx.parsers.Literal('arbitrary', 'furthest', 'nearest', 'random').parse(reader, ctx);\n                    if (result.data) {\n                        argumentAns.data.sort = result.data;\n                    }\n                    result.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.string)];\n                    Parser_1.combineArgumentParserResult(argumentAns, result);\n                }\n                else if (key === 'x' || key === 'y' || key === 'z' || key === 'dx' || key === 'dy' || key === 'dz') {\n                    const result = new ctx.parsers.Number('float').parse(reader, ctx);\n                    argumentAns.data[key] = result.data;\n                    Parser_1.combineArgumentParserResult(argumentAns, result);\n                }\n                else if (key === 'limit') {\n                    const result = new ctx.parsers.Number('integer', 1).parse(reader, ctx);\n                    argumentAns.data.limit = result.data;\n                    if (argumentAns.data.limit.valueOf() === 1) {\n                        isMultiple = false;\n                    }\n                    else {\n                        isMultiple = true;\n                    }\n                    Parser_1.combineArgumentParserResult(argumentAns, result);\n                }\n                else if (key === 'gamemode') {\n                    dealWithNegativableArray(argumentAns, new ctx.parsers.Literal('adventure', 'creative', 'spectator', 'survival'), key);\n                }\n                else if (key === 'name') {\n                    dealWithNegativableArray(argumentAns, new ctx.parsers.String(1 /* String */, null, 'stringQuote', 'stringQuoteType'), key);\n                }\n                else if (key === 'nbt') {\n                    dealWithNegativableArray(argumentAns, new ctx.parsers.Nbt('Compound', 'minecraft:entity', utils_1.getNbtdocRegistryId(ans.data), true), key);\n                }\n                else if (key === 'predicate') {\n                    dealWithNegativableArray(argumentAns, new ctx.parsers.Identity('$predicate'), key);\n                }\n                else if (key === 'tag') {\n                    dealWithNegativableArray(argumentAns, new ctx.parsers.Tag(), key);\n                }\n                else if (key === 'team') {\n                    dealWithNegativableArray(argumentAns, new ctx.parsers.Team(), key);\n                }\n                else if (key === 'type') {\n                    dealWithNegativableArray(argumentAns, new ctx.parsers.Identity('minecraft:entity_type', true), key);\n                }\n                else if (key === 'distance') {\n                    const result = new ctx.parsers.NumberRange('float').parse(reader, ctx);\n                    argumentAns.data[key] = result.data;\n                    Parser_1.combineArgumentParserResult(argumentAns, result);\n                }\n                else if (key === 'x_rotation' || key === 'y_rotation') {\n                    const result = new ctx.parsers.NumberRange('float', true).parse(reader, ctx);\n                    argumentAns.data[key] = result.data;\n                    Parser_1.combineArgumentParserResult(argumentAns, result);\n                }\n                else if (key === 'level') {\n                    const result = new ctx.parsers.NumberRange('integer').parse(reader, ctx);\n                    argumentAns.data[key] = result.data;\n                    Parser_1.combineArgumentParserResult(argumentAns, result);\n                }\n                else if (key === 'advancements') {\n                    const advancementsAns = Parser_1.ArgumentParserResult.create(new SelectorArgumentsNode_1.SelectorAdvancementsNode());\n                    new MapParser_1.MapParser(SelectorArgumentsNode_1.SelectorArgumentNodeChars, (ans, reader, ctx) => {\n                        const result = new ctx.parsers.Identity('$advancement').parse(reader, ctx);\n                        const adv = result.data.toString();\n                        /* istanbul ignore else */\n                        if (adv) {\n                            ans.data[MapNode_1.Keys][adv] = result.data;\n                        }\n                        return Object.assign(Object.assign({}, result), { data: adv });\n                    }, (ans, reader, ctx, adv) => {\n                        if (reader.peek() === '{') {\n                            const criteriaAns = Parser_1.ArgumentParserResult.create(new SelectorArgumentsNode_1.SelectorCriteriaNode());\n                            ans.data[adv] = criteriaAns.data;\n                            new MapParser_1.MapParser(SelectorArgumentsNode_1.SelectorArgumentNodeChars, (criteriaAns, reader, ctx) => {\n                                const start = reader.cursor;\n                                const result = new ctx.parsers.String(1 /* String */, null, 'selectorKeyQuote', 'selectorKeyQuoteType').parse(reader, ctx);\n                                result.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.property)];\n                                const crit = result.data.value;\n                                /* istanbul ignore else */\n                                if (crit) {\n                                    criteriaAns.data[MapNode_1.Keys][crit] = result.data;\n                                }\n                                return Object.assign(Object.assign({}, result), { data: crit });\n                            }, (criteriaAns, reader, ctx, crit) => {\n                                const start = reader.cursor;\n                                const boolResult = new ctx.parsers.Literal('false', 'true').parse(reader, ctx);\n                                const bool = boolResult.data.toLowerCase() === 'true';\n                                boolResult.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.boolean)];\n                                criteriaAns.data[crit] = bool;\n                                Parser_1.combineArgumentParserResult(criteriaAns, boolResult);\n                            }).parse(criteriaAns, reader, ctx);\n                            Parser_1.combineArgumentParserResult(ans, criteriaAns);\n                        }\n                        else {\n                            const start = reader.cursor;\n                            const boolResult = new ctx.parsers.Literal('false', 'true').parse(reader, ctx);\n                            const bool = boolResult.data.toLowerCase() === 'true';\n                            boolResult.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.boolean)];\n                            ans.data[adv] = bool;\n                            Parser_1.combineArgumentParserResult(ans, boolResult);\n                        }\n                    }).parse(advancementsAns, reader, ctx);\n                    argumentAns.data.advancements = advancementsAns.data;\n                    Parser_1.combineArgumentParserResult(argumentAns, advancementsAns);\n                }\n                else if (key === 'scores') {\n                    const scoresAns = Parser_1.ArgumentParserResult.create(new SelectorArgumentsNode_1.SelectorScoresNode());\n                    argumentAns.data.scores = scoresAns.data;\n                    new MapParser_1.MapParser(SelectorArgumentsNode_1.SelectorArgumentNodeChars, (_scoresAns, reader, ctx) => {\n                        return new ctx.parsers.Objective().parse(reader, ctx);\n                    }, (scoresAns, reader, ctx, objective) => {\n                        const rangeResult = new ctx.parsers.NumberRange('integer').parse(reader, ctx);\n                        scoresAns.data[objective] = rangeResult.data;\n                        Parser_1.combineArgumentParserResult(scoresAns, rangeResult);\n                    }).parse(scoresAns, reader, ctx);\n                    Parser_1.combineArgumentParserResult(argumentAns, scoresAns);\n                }\n            }).parse(argumentAns, reader, ctx);\n            Parser_1.combineArgumentParserResult(ans, argumentAns);\n            if (ctx.config.lint.selectorSortKeys && !ans.data.argument[MapNode_1.IsMapSorted](ctx.config.lint)) {\n                ans.errors.push(new ParsingError_1.ParsingError(ans.data.argument[ArgumentNode_1.NodeRange], locales_1.locale('diagnostic-rule', locales_1.locale('unsorted-keys'), locales_1.locale('punc.quote', 'selectorSortKeys')), undefined, StylisticConfig_1.getDiagnosticSeverity(ctx.config.lint.selectorSortKeys[0]), 22 /* SelectorSortKeys */));\n            }\n        }\n        //#endregion\n        if (this.amount === 'single' && isMultiple) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('unexpected-multiple-selector')));\n        }\n        if (this.type === 'players' && containsNonPlayer) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('unexpected-non-player-selector')));\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    static isVariable(value) {\n        return (value === 'p' || value === 'a' || value === 'r' || value === 's' || value === 'e');\n    }\n    getExamples() {\n        return ['Player', '0123', '@e', '@e[type=foo]', 'dd12be42-52a9-4a91-a8a1-11c01849e498'];\n    }\n}\nexports.EntityArgumentParser = EntityArgumentParser;\nEntityArgumentParser.identity = 'Entity';\nEntityArgumentParser.UuidPattern = /^[A-F0-9]{1,8}-[A-F0-9]{1,4}-[A-F0-9]{1,4}-[A-F0-9]{1,4}-[A-F0-9]{1,12}$/i;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityArgumentParser = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst StylisticConfig_1 = require(\"../types/StylisticConfig\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass IdentityArgumentParser extends ArgumentParser_1.ArgumentParser {\n    /**\n     * @param type A type in the registry, or a type in cache if beginning with the dolar sign (`$`).\n     * Alternatively, an array with all possible values.\n     * @param registries The registries.\n     */\n    /* istanbul ignore next */\n    constructor(type, allowTag = false, isPredicate = false, allowUnknown = false, isDefinition = false) {\n        super();\n        this.type = type;\n        this.allowTag = allowTag;\n        this.isPredicate = isPredicate;\n        this.allowUnknown = allowUnknown;\n        this.isDefinition = isDefinition;\n        this.identity = 'identity';\n        if (typeof this.type === 'string' && !this.type.startsWith('$')) {\n            this.type = IdentityNode_1.IdentityNode.fromString(this.type).toString();\n        }\n    }\n    parse(reader, ctx) {\n        var _a, _b;\n        const ans = Parser_1.ArgumentParserResult.create(new IdentityNode_1.IdentityNode());\n        const start = reader.cursor;\n        let stringID = '';\n        let isTag = false;\n        //#region Completions: prepare.\n        const { tagPool, idPool, complNamespaces, complFolders, complFiles } = this.setUpCompletion(ctx.cache, ctx.config, ctx.namespaceSummary, ctx.registry);\n        //#endregion\n        //#region Data.\n        let selectedRange = undefined;\n        let namespace = undefined;\n        ({ namespace, isTag, stringID, selectedRange } = this.parseData(reader, isTag, ans, start, tagPool, idPool, ctx.config, ctx.cursor, complNamespaces, complFolders, complFiles, stringID));\n        //#endregion\n        //#region Completions: apply.\n        this.applyCompletions(ans, start, ctx, complNamespaces, complFolders, complFiles, (_a = selectedRange === null || selectedRange === void 0 ? void 0 : selectedRange.start) !== null && _a !== void 0 ? _a : ctx.cursor, (_b = selectedRange === null || selectedRange === void 0 ? void 0 : selectedRange.end) !== null && _b !== void 0 ? _b : ctx.cursor);\n        //#endregion\n        //#region Errors.\n        if (reader.cursor - start && stringID) {\n            this.checkIfIdExist(isTag, ans, reader, namespace, stringID, start, ctx.config, ctx.cache, ctx.registry, ctx.namespaceSummary);\n        }\n        else {\n            this.addEmptyError(start, ans);\n        }\n        //#endregion\n        //#region Cache.\n        this.addDefinitionCache(ans, stringID, start, reader.cursor);\n        //#endregion\n        //#region Tokens.\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.identity));\n        //#endregion\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    parseData(reader, isTag, ans, start, tagPool, idPool, config, cursor, complNamespaces, complFolders, complFiles, stringID) {\n        var _a, _b;\n        let namespace = undefined;\n        const paths = [];\n        // Whether this is a tag ID.\n        if (reader.peek() === IdentityNode_1.IdentityNode.TagSymbol) {\n            reader.skip();\n            isTag = true;\n            if (!this.allowTag) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('unexpected-datapack-tag')));\n            }\n        }\n        let pool = isTag ? tagPool : idPool;\n        const shouldOmitNamespace = !this.isPredicate && config.lint.idOmitDefaultNamespace && config.lint.idOmitDefaultNamespace[1];\n        const namespaceSeverity = config.lint.idOmitDefaultNamespace ? StylisticConfig_1.getDiagnosticSeverity(config.lint.idOmitDefaultNamespace[0]) : vscode_languageserver_1.DiagnosticSeverity.Warning;\n        let path0 = this.readValidString(reader, ans);\n        let selectedRange = this.completeBeginning(shouldOmitNamespace, start, cursor, reader, isTag, tagPool, complNamespaces, complFolders, complFiles, pool);\n        const path0Result = this.parseNamespaceAndFirstPath(reader, shouldOmitNamespace, path0, ans, start, namespaceSeverity, namespace, pool, cursor, complFolders, complFiles, paths);\n        ({ path0, namespace, pool } = path0Result);\n        selectedRange = (_a = path0Result.selectedRange) !== null && _a !== void 0 ? _a : selectedRange;\n        selectedRange = (_b = this.parseRemaningPaths(reader, ans, pool, paths, cursor, complFolders, complFiles)) !== null && _b !== void 0 ? _b : selectedRange;\n        ans.data = new IdentityNode_1.IdentityNode(namespace, paths, isTag, typeof this.type === 'string' ? this.type : undefined);\n        stringID = ans.data.toString();\n        return { namespace, isTag, stringID, selectedRange };\n    }\n    addEmptyError(start, ans) {\n        ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('identity'), locales_1.locale('nothing')), false));\n    }\n    addDefinitionCache(ans, stringID, start, end) {\n        if (this.isDefinition && typeof this.type === 'string' && this.type.startsWith('$')) {\n            ans.cache = {\n                [this.type.slice(1)]: {\n                    [stringID]: { def: [{ start, end }], ref: [] }\n                }\n            };\n        }\n    }\n    applyCompletions(ans, idStart, ctx, complNamespaces, complFolders, complFiles, suggestionStart, suggestionEnd) {\n        // namespace -> CompletionItemKind.Module\n        // folder -> CompletionItemKind.Folder\n        // file -> CompletionItemKind.Field\n        /// advancement file -> CompletionItemKind.Event\n        /// function (tag) file -> CompletionItemKind.Function\n        let fileKind;\n        switch (this.type) {\n            case '$advancement':\n                fileKind = vscode_languageserver_1.CompletionItemKind.Event;\n                break;\n            case '$function':\n            case '$tag/function':\n                fileKind = vscode_languageserver_1.CompletionItemKind.Function;\n                break;\n            default:\n                fileKind = vscode_languageserver_1.CompletionItemKind.Field;\n                break;\n        }\n        complNamespaces.forEach(k => void ans.completions.push({\n            label: k,\n            start: suggestionStart, end: suggestionEnd,\n            kind: vscode_languageserver_1.CompletionItemKind.Module\n        }));\n        complFolders.forEach(k => void ans.completions.push({\n            label: k,\n            start: suggestionStart, end: suggestionEnd,\n            kind: vscode_languageserver_1.CompletionItemKind.Folder\n        }));\n        complFiles.forEach(k => void ans.completions.push({\n            label: k,\n            start: suggestionStart, end: suggestionEnd,\n            kind: fileKind\n        }));\n        // Add 'THIS' to completions\n        if (idStart === ctx.cursor && ctx.id &&\n            typeof this.type === 'string' && this.type.startsWith('$') && ClientCache_1.isFileType(this.type.slice(1))) {\n            ans.completions.push({\n                label: 'THIS',\n                insertText: ctx.id.toTagString(),\n                start: suggestionStart, end: suggestionEnd,\n                detail: ctx.id.toTagString(),\n                kind: vscode_languageserver_1.CompletionItemKind.Snippet\n            });\n        }\n    }\n    checkIfIdExist(isTag, ans, reader, namespace, stringID, start, config, cache, registries, namespaceSummary) {\n        if (isTag && this.allowTag) {\n            // For tags.\n            const tagType = IdentityNode_1.IdentityNode.getTagType(this.type);\n            this.checkIDInCache(ans, reader, tagType, namespace, stringID, start, config, cache, namespaceSummary);\n        }\n        else if (!isTag) {\n            if (this.type instanceof Array) {\n                // For array IDs.\n                //#region Errors\n                if (!this.allowUnknown && !this.type.includes(stringID)) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', utils_1.arrayToMessage(this.type, true, 'or'), locales_1.locale('punc.quote', stringID)), undefined, undefined, 4 /* IdentityUnknown */));\n                }\n                //#endregion\n            }\n            else if (this.type.startsWith('$')) {\n                // For cache IDs.\n                const type = this.type.slice(1);\n                this.checkIDInCache(ans, reader, type, namespace, stringID, start, config, cache, namespaceSummary);\n            }\n            else {\n                // For registry IDs.\n                const registry = registries[this.type];\n                const [shouldCheck, severity, ruleName] = this.shouldStrictCheck(this.type, config, namespace);\n                //#region Errors\n                if (registry && !Object.keys(registry.entries).concat(this.getVanillaPool(this.type, namespaceSummary)).includes(stringID)) {\n                    const innerMessage = locales_1.locale('failed-to-resolve-registry-id', locales_1.locale('punc.quote', this.type), locales_1.locale('punc.quote', stringID));\n                    const message = ruleName ? locales_1.locale('diagnostic-rule', innerMessage, locales_1.locale('punc.quote', ruleName)) : innerMessage;\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, message, undefined, shouldCheck ? severity : vscode_languageserver_1.DiagnosticSeverity.Hint, 4 /* IdentityUnknown */));\n                }\n                //#endregion\n            }\n        }\n    }\n    /**\n     * @returns The range of the selected path.\n     */\n    completeBeginning(shouldOmit, start, cursor, reader, isTag, tagPool, complNamespaces, complFolders, complFiles, pool) {\n        let selectedRange = undefined;\n        if (start <= cursor && cursor <= reader.cursor) {\n            this.completeBeginningFromTagPoolIfApplicable(isTag, tagPool, shouldOmit, complNamespaces, complFolders, complFiles);\n            this.completeBeginningFromCurrentPool(pool, shouldOmit, complNamespaces, complFolders, complFiles);\n            selectedRange = { start, end: reader.cursor };\n        }\n        return selectedRange;\n    }\n    /**\n     * @returns The range of the selected path.\n     */\n    parseNamespaceAndFirstPath(reader, shouldOmit, path0, ans, start, severity, namespace, pool, cursor, complFolders, complFiles, paths) {\n        let selectedRange = undefined;\n        if (reader.peek() === IdentityNode_1.IdentityNode.NamespaceDelimiter) {\n            // `path0` is the namespace.\n            if (shouldOmit === true && path0 === IdentityNode_1.IdentityNode.DefaultNamespace) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('unexpected-default-namespace'), undefined, severity, 3 /* IdentityOmitDefaultNamespace */));\n            }\n            reader.skip();\n            const pathStart = reader.cursor;\n            namespace = path0;\n            path0 = this.readValidString(reader, ans);\n            //#region Completions\n            pool = pool\n                .filter(v => v.startsWith(`${namespace}${IdentityNode_1.IdentityNode.NamespaceDelimiter}`))\n                .map(v => v.slice(namespace.length + 1));\n            if (pathStart <= cursor && cursor <= reader.cursor) {\n                for (const id of pool) {\n                    const complPaths = id.split(IdentityNode_1.IdentityNode.PathSep);\n                    this.completeFolderOrFile(complPaths, complFolders, complFiles);\n                }\n                selectedRange = { start: pathStart, end: reader.cursor };\n            }\n            //#endregion\n        }\n        else {\n            // `path0` is the first element of the paths.\n            pool = pool\n                .filter(v => v.startsWith(`${IdentityNode_1.IdentityNode.DefaultNamespace}:`))\n                .map(v => v.slice(IdentityNode_1.IdentityNode.DefaultNamespace.length + 1));\n            if (shouldOmit === false) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('unexpected-omitted-default-namespace'), undefined, severity, 2 /* IdentityCompleteDefaultNamespace */));\n            }\n        }\n        paths.push(path0);\n        return { path0, namespace, pool, selectedRange };\n    }\n    /**\n     * @returns The range of the selected path.\n     */\n    parseRemaningPaths(reader, ans, pool, paths, cursor, complFolders, complFiles) {\n        let selectedRange = undefined;\n        while (reader.peek() === IdentityNode_1.IdentityNode.PathSep) {\n            reader.skip();\n            const start = reader.cursor;\n            const path = this.readValidString(reader, ans);\n            //#region Completions\n            pool = pool.filter(v => v.startsWith(paths.join(IdentityNode_1.IdentityNode.PathSep)));\n            if (start <= cursor && cursor <= reader.cursor) {\n                for (const id of pool) {\n                    const complPaths = id.split(IdentityNode_1.IdentityNode.PathSep);\n                    this.completeFolderOrFile(complPaths, complFolders, complFiles, paths.length);\n                }\n                selectedRange = { start, end: reader.cursor };\n            }\n            //#endregion\n            paths.push(path);\n        }\n        return selectedRange;\n    }\n    completeBeginningFromCurrentPool(pool, shouldOmit, complNamespaces, complFolders, complFiles) {\n        for (const id of pool) {\n            const namespace = id.split(IdentityNode_1.IdentityNode.NamespaceDelimiter)[0];\n            const paths = id.split(IdentityNode_1.IdentityNode.NamespaceDelimiter)[1].split('/');\n            if (!(shouldOmit === true && namespace === IdentityNode_1.IdentityNode.DefaultNamespace)) {\n                complNamespaces.add(namespace);\n            }\n            if (shouldOmit !== false && namespace === IdentityNode_1.IdentityNode.DefaultNamespace) {\n                this.completeFolderOrFile(paths, complFolders, complFiles);\n            }\n        }\n    }\n    completeBeginningFromTagPoolIfApplicable(isTag, tagPool, shouldOmit, complNamespaces, complFolders, complFiles) {\n        if (!isTag && this.allowTag) {\n            for (const id of tagPool) {\n                const complNamespace = id.split(IdentityNode_1.IdentityNode.NamespaceDelimiter)[0];\n                const complPaths = id.split(IdentityNode_1.IdentityNode.NamespaceDelimiter)[1].split(IdentityNode_1.IdentityNode.PathSep);\n                if (!(shouldOmit === true && complNamespace === IdentityNode_1.IdentityNode.DefaultNamespace)) {\n                    complNamespaces.add(`${IdentityNode_1.IdentityNode.TagSymbol}${complNamespace}`);\n                }\n                if (shouldOmit !== false && complNamespace === IdentityNode_1.IdentityNode.DefaultNamespace) {\n                    this.completeFolderOrFile(\n                    // Only the first path and the length of paths matter. We don't care\n                    // if the remaning paths are also prefixed by `Identity.TagSymbol`.\n                    // Thus we add `IdentityNode.TagSymbol` to all paths to make the\n                    // code easier to write.\n                    complPaths.map(v => `${IdentityNode_1.IdentityNode.TagSymbol}${v}`), complFolders, complFiles);\n                }\n            }\n        }\n    }\n    setUpCompletion(cache, config, namespaceSummary, registries) {\n        const tagPool = [];\n        const idPool = [];\n        // Set `tagPool`.\n        if (this.allowTag) {\n            const type = IdentityNode_1.IdentityNode.getTagType(this.type);\n            const category = ClientCache_1.getSafeCategory(cache, type);\n            tagPool.push(...Object.keys(category));\n            if (config.env.dependsOnVanilla) {\n                tagPool.push(...this.getVanillaPool(type, namespaceSummary));\n            }\n        }\n        // Set `idPool`.\n        if (this.type instanceof Array) {\n            idPool.push(...this.type);\n        }\n        else if (this.type.startsWith('$')) {\n            const type = this.type.slice(1);\n            idPool.push(...Object.keys(ClientCache_1.getSafeCategory(cache, type)));\n            if (config.env.dependsOnVanilla) {\n                idPool.push(...this.getVanillaPool(type, namespaceSummary));\n            }\n        }\n        else {\n            const registry = registries[this.type];\n            if (registry) {\n                idPool.push(...Object.keys(registry.entries));\n            }\n            else {\n                console.error(`Identity registry “${this.type}” doesn't exist!`);\n            }\n        }\n        const complNamespaces = new Set();\n        const complFolders = new Set();\n        const complFiles = new Set();\n        return { tagPool, idPool, complNamespaces, complFolders, complFiles };\n    }\n    shouldCheck() {\n        return !this.allowUnknown && !this.isDefinition;\n    }\n    /* istanbul ignore next: tired of writing tests */\n    shouldStrictCheck(key, { lint: lint }, namespace = IdentityNode_1.IdentityNode.DefaultNamespace) {\n        if (!this.shouldCheck()) {\n            return [false, vscode_languageserver_1.DiagnosticSeverity.Warning, undefined];\n        }\n        const evalTrueConfig = (key) => {\n            const config = lint[key];\n            if (config === null) {\n                return [false, vscode_languageserver_1.DiagnosticSeverity.Warning, key];\n            }\n            const [severity, value] = config;\n            return [value, StylisticConfig_1.getDiagnosticSeverity(severity), key];\n        };\n        const evalStrictCheckConfig = (key) => {\n            const config = lint[key];\n            if (config === null) {\n                return [false, vscode_languageserver_1.DiagnosticSeverity.Warning, key];\n            }\n            const [severity, value] = config;\n            switch (value) {\n                case 'always':\n                    return [true, StylisticConfig_1.getDiagnosticSeverity(severity), key];\n                case 'only-default-namespace':\n                    return [namespace === IdentityNode_1.IdentityNode.DefaultNamespace, StylisticConfig_1.getDiagnosticSeverity(severity), key];\n                default:\n                    return [false, StylisticConfig_1.getDiagnosticSeverity(severity), key];\n            }\n        };\n        switch (key) {\n            case '$advancement':\n                return evalTrueConfig('strictAdvancementCheck');\n            case '$dimension_type':\n                return evalStrictCheckConfig('strictDimensionTypeCheck');\n            case '$function':\n                return evalTrueConfig('strictFunctionCheck');\n            case '$loot_table':\n                return evalTrueConfig('strictLootTableCheck');\n            case '$predicate':\n                return evalTrueConfig('strictPredicateCheck');\n            case '$recipe':\n                return evalTrueConfig('strictRecipeCheck');\n            case '$tag/block':\n                return evalTrueConfig('strictBlockTagCheck');\n            case '$tag/entity_type':\n                return evalTrueConfig('strictEntityTypeTagCheck');\n            case '$tag/fluid':\n                return evalTrueConfig('strictFluidTagCheck');\n            case '$tag/function':\n                return evalTrueConfig('strictFunctionTagCheck');\n            case '$tag/item':\n                return evalTrueConfig('strictItemTagCheck');\n            case '$bossbar':\n                return evalTrueConfig('strictBossbarCheck');\n            case '$storage':\n                return evalTrueConfig('strictStorageCheck');\n            case 'minecraft:mob_effect':\n                return evalStrictCheckConfig('strictMobEffectCheck');\n            case 'minecraft:enchantment':\n                return evalStrictCheckConfig('strictEnchantmentCheck');\n            case 'minecraft:sound_event':\n                return evalStrictCheckConfig('strictSoundEventCheck');\n            case 'minecraft:entity_type':\n                return evalStrictCheckConfig('strictEntityTypeCheck');\n            case 'minecraft:attribute':\n                return evalStrictCheckConfig('strictAttributeCheck');\n            case 'minecraft:block':\n                return evalStrictCheckConfig('strictBlockCheck');\n            case 'minecraft:item':\n                return evalStrictCheckConfig('strictItemCheck');\n            case 'minecraft:potion':\n                return evalStrictCheckConfig('strictPotionCheck');\n            case 'minecraft:motive':\n                return evalStrictCheckConfig('strictMotiveCheck');\n            case 'minecraft:fluid':\n                return evalStrictCheckConfig('strictFluidCheck');\n            case 'minecraft:particle_type':\n                return evalStrictCheckConfig('strictParticleTypeCheck');\n            default:\n                return [false, vscode_languageserver_1.DiagnosticSeverity.Warning, undefined];\n        }\n    }\n    /* istanbul ignore next: tired of writing tests */\n    getVanillaPool(type, vanilla) {\n        var _a;\n        const ans = (_a = vanilla[type]) !== null && _a !== void 0 ? _a : [];\n        // if (type === 'loot_table') {\n        //     ans.push('minecraft:empty')\n        // }\n        return ans;\n    }\n    /**\n     * Read an unquoted string and add errors if it contains non [a-z0-9/._-] character.\n     */\n    readValidString(reader, ans) {\n        const start = reader.cursor;\n        const value = reader.readUnquotedString();\n        const end = reader.cursor;\n        if (!value.match(/^[a-z0-9\\/\\.\\_\\-]*$/)) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end }, locales_1.locale('unexpected-character')));\n        }\n        return value;\n    }\n    /**\n     * Add the first element of the `paths` to `complFolders` or `complFiles`, accordingly.\n     * @param comlPaths The paths of the ID completion.\n     * @param complFolders Ans completion folders.\n     * @param complFiles Ans completion files.\n     */\n    completeFolderOrFile(comlPaths, complFolders, complFiles, parsedPathCount = 0) {\n        const diff = comlPaths.length - parsedPathCount;\n        if (diff > 1) {\n            complFolders.add(comlPaths[parsedPathCount]);\n        }\n        else if (diff === 1) {\n            complFiles.add(comlPaths[parsedPathCount]);\n        }\n    }\n    /**\n     * Check if a parsed ID is valid in the specific cache unit.\n     * @param type The type of the cache unit.\n     * @param stringID The stringified ID.\n     * @param start The start of the whole parsing process of this ID.\n     */\n    checkIDInCache(ans, reader, type, namespace = IdentityNode_1.IdentityNode.DefaultNamespace, stringID, start, config, cache, namespaceSummary) {\n        var _a, _b;\n        const category = ClientCache_1.getSafeCategory(cache, type);\n        const canResolve = Object.keys(category)\n            .concat(this.getVanillaPool(type, namespaceSummary))\n            .includes(stringID);\n        //#region Errors\n        const [shouldStrictCheck, severity, ruleName] = this.shouldStrictCheck(`$${type}`, config, namespace);\n        if (this.shouldCheck() && !canResolve) {\n            const innerMessage = locales_1.locale('failed-to-resolve-cache-id', locales_1.locale('punc.quote', type), locales_1.locale('punc.quote', stringID));\n            const message = ruleName ? locales_1.locale('diagnostic-rule', innerMessage, locales_1.locale('punc.quote', ruleName)) : innerMessage;\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, message, undefined, shouldStrictCheck ? severity : vscode_languageserver_1.DiagnosticSeverity.Hint, 4 /* IdentityUnknown */));\n        }\n        //#endregion\n        //#region Cache\n        ans.cache = {\n            [type]: {\n                [stringID]: {\n                    ref: [{ start, end: reader.cursor }]\n                }\n            }\n        };\n        //#endregion\n        ans.data[ArgumentNode_1.NodeDescription] = (_b = (_a = category[stringID]) === null || _a === void 0 ? void 0 : _a.doc) !== null && _b !== void 0 ? _b : '';\n    }\n    getExamples() {\n        return [`example${IdentityNode_1.IdentityNode.NamespaceDelimiter}foo${IdentityNode_1.IdentityNode.PathSep}bar`];\n    }\n}\nexports.IdentityArgumentParser = IdentityArgumentParser;\nIdentityArgumentParser.identity = 'Identity';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ItemArgumentParser = void 0;\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst ItemNode_1 = require(\"../nodes/ItemNode\");\nconst NbtCompoundNode_1 = require(\"../nodes/NbtCompoundNode\");\nconst NbtStringNode_1 = require(\"../nodes/NbtStringNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass ItemArgumentParser extends ArgumentParser_1.ArgumentParser {\n    /* istanbul ignore next */\n    constructor(allowTag = false, isPredicate = false) {\n        super();\n        this.allowTag = allowTag;\n        this.isPredicate = isPredicate;\n        this.identity = 'item';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new ItemNode_1.ItemNode(new IdentityNode_1.IdentityNode()));\n        const start = reader.cursor;\n        const idResult = new ctx.parsers.Identity('minecraft:item', this.allowTag).parse(reader, ctx);\n        const id = idResult.data;\n        Parser_1.combineArgumentParserResult(ans, idResult);\n        ans.data.id = id;\n        this.parseTag(reader, ctx, ans, id);\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    parseTag(reader, ctx, ans, id) {\n        if (reader.peek() === '{') {\n            const dummySuperNode = new NbtCompoundNode_1.NbtCompoundNode(null);\n            dummySuperNode.id = new NbtStringNode_1.NbtStringNode(dummySuperNode, ans.data.id.toString(), ans.data.id.toString(), {});\n            const tagResult = new ctx.parsers.Nbt('Compound', 'minecraft:item', !id.isTag ? id.toString() : null, this.isPredicate, dummySuperNode).parse(reader, ctx);\n            const tag = tagResult.data;\n            Parser_1.combineArgumentParserResult(ans, tagResult);\n            ans.data.tag = tag;\n        }\n    }\n    getExamples() {\n        return ['stick', 'minecraft:stick', 'stick{foo:bar}'];\n    }\n}\nexports.ItemArgumentParser = ItemArgumentParser;\nItemArgumentParser.identity = 'Item';\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ItemSlotArgumentParser = void 0;\n///<reference path=\"../typings/range.ts\" />\nconst python_range_1 = __importDefault(require(\"python-range\"));\nconst locales_1 = require(\"../locales\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass ItemSlotArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super(...arguments);\n        this.identity = 'itemSlot';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create('');\n        if (StringReader_1.StringReader.canInNumber(reader.peek())) {\n            const start = reader.cursor;\n            ans.data = reader.readInt().toString();\n            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.type));\n        }\n        else {\n            const start = reader.cursor;\n            const categoryResult = new ctx.parsers.Literal(...Object.keys(ItemSlotArgumentParser.Category)).parse(reader, ctx);\n            const category = categoryResult.data;\n            categoryResult.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.type)];\n            Parser_1.combineArgumentParserResult(ans, categoryResult);\n            if (category && reader.peek() === ItemSlotArgumentParser.Sep) {\n                reader.skip();\n                const start = reader.cursor;\n                const subResult = new ctx.parsers.Literal(...ItemSlotArgumentParser.Category[category]).parse(reader, ctx);\n                const sub = subResult.data;\n                subResult.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.type)];\n                Parser_1.combineArgumentParserResult(ans, subResult);\n                ans.data = `${category}${ItemSlotArgumentParser.Sep}${sub}`;\n            }\n            else {\n                ans.data = category;\n                if (category !== 'weapon') {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('expected-got', locales_1.locale('punc.quote', ItemSlotArgumentParser.Sep), locales_1.locale('punc.quote', reader.peek()))));\n                }\n            }\n        }\n        return ans;\n    }\n    getExamples() {\n        return ['container.5', '12', 'weapon'];\n    }\n}\nexports.ItemSlotArgumentParser = ItemSlotArgumentParser;\nItemSlotArgumentParser.identity = 'ItemSlot';\nItemSlotArgumentParser.Category = {\n    armor: ['chest', 'feet', 'head', 'legs'],\n    container: [...python_range_1.default(54)].map(String),\n    enderchest: [...python_range_1.default(27)].map(String),\n    horse: ['armor', 'chest', 'saddle', ...[...python_range_1.default(15)].map(String)],\n    hotbar: [...python_range_1.default(9)].map(String),\n    inventory: [...python_range_1.default(27)].map(String),\n    villager: [...python_range_1.default(8)].map(String),\n    weapon: ['mainhand', 'offhand']\n};\nItemSlotArgumentParser.Sep = '.';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiteralArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass LiteralArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(...literals) {\n        super();\n        this.identity = 'literal';\n        this.extraChars = [];\n        this.literals = literals;\n        for (const literal of literals) {\n            if (!StringReader_1.StringReader.canInUnquotedString(literal)) {\n                for (const char of literal) {\n                    if (!this.extraChars.includes(char) && !StringReader_1.StringReader.canInUnquotedString(char)) {\n                        this.extraChars.push(char);\n                    }\n                }\n            }\n        }\n    }\n    parse(reader, { cursor: cursor }) {\n        const ans = Parser_1.ArgumentParserResult.create('');\n        const start = reader.cursor;\n        //#region Data\n        let remaningLiterals = this.literals;\n        let value = '';\n        while (reader.canRead() && (StringReader_1.StringReader.canInUnquotedString(reader.peek()) || this.extraChars.includes(reader.peek()))) {\n            const nextValue = `${value}${reader.peek()}`;\n            const nextRemaningLiterals = remaningLiterals.filter(v => v.startsWith(nextValue));\n            if (remaningLiterals.includes(value) && nextRemaningLiterals.length === 0) {\n                break;\n            }\n            reader.skip();\n            value = nextValue;\n            remaningLiterals = nextRemaningLiterals;\n        }\n        ans.data = value;\n        //#endregion\n        //#region Completions.\n        if (start <= cursor && cursor <= reader.cursor) {\n            ans.completions.push(...utils_1.arrayToCompletions(this.literals, start, reader.cursor));\n        }\n        //#endregion\n        //#region Tokens.\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.literal));\n        //#endregion\n        //#region Get errors.\n        if (!this.literals.includes(value)) {\n            if (value.length > 0) {\n                ans.errors = [new ParsingError_1.ParsingError({ start: start, end: start + value.length }, locales_1.locale('expected-got', utils_1.arrayToMessage(this.literals, true, 'or'), locales_1.locale('punc.quote', value)), false)];\n            }\n            else {\n                ans.errors = [new ParsingError_1.ParsingError({ start: start, end: start + 1 }, locales_1.locale('expected-got', utils_1.arrayToMessage(this.literals, true, 'or'), locales_1.locale('nothing')), false)];\n            }\n        }\n        //#endregion\n        return ans;\n    }\n    toHint(_, optional) {\n        let ans;\n        if (optional) {\n            ans = `[${this.literals.join('|')}]`;\n        }\n        else {\n            if (this.literals.length === 1) {\n                ans = this.literals[0];\n            }\n            else {\n                ans = this.literals.join('|');\n            }\n        }\n        return ans;\n    }\n    getExamples() {\n        return this.literals;\n    }\n}\nexports.LiteralArgumentParser = LiteralArgumentParser;\nLiteralArgumentParser.identity = 'Literal';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapParser = void 0;\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst MapNode_1 = require(\"../nodes/MapNode\");\nconst Parser_1 = require(\"../types/Parser\");\nclass MapParser {\n    constructor(chars, parseKeyResult, parseValue) {\n        this.chars = chars;\n        this.parseKeyResult = parseKeyResult;\n        this.parseValue = parseValue;\n        this.identity = 'map';\n    }\n    /* istanbul ignore next */\n    parse(ans, reader, ctx) {\n        const start = reader.cursor;\n        /**\n         * Move cursor to the end of the white spaces, so that we can provide\n         * completions when the cursor is inside the white spaces.\n         */\n        const skipWhiteSpace = () => {\n            const whiteSpaceStart = reader.cursor;\n            reader.skipWhiteSpace();\n            if (whiteSpaceStart <= ctx.cursor && ctx.cursor < reader.cursor) {\n                ctx.cursor = reader.cursor;\n            }\n        };\n        try {\n            // Open BracketToken.\n            reader\n                .expect(this.chars.openBracket)\n                .skip();\n            while (true) {\n                skipWhiteSpace();\n                // Key StringToken.\n                const keyStart = reader.cursor;\n                const keyResult = this.parseKeyResult(ans, reader, ctx);\n                const key = keyResult.data;\n                const keyEnd = reader.cursor;\n                ans.completions.push(...keyResult.completions);\n                if (!(reader.canRead() && reader.peek() !== this.chars.closeBracket)) {\n                    break;\n                }\n                keyResult.completions = [];\n                Parser_1.combineArgumentParserResult(ans, keyResult);\n                // Key value SepToken.\n                reader\n                    .skipWhiteSpace()\n                    .expect(this.chars.sep)\n                    .skip();\n                skipWhiteSpace();\n                // Value Token.\n                ans.data[MapNode_1.UnsortedKeys].push(key);\n                this.parseValue(ans, reader, ctx, key, { start: keyStart, end: keyEnd });\n                reader.skipWhiteSpace();\n                // Key-value pair SepToken.\n                if (reader.peek() === this.chars.pairSep) {\n                    reader.skip();\n                    skipWhiteSpace();\n                    continue;\n                }\n                break;\n            }\n            // Close BracketToken.\n            reader\n                .skipWhiteSpace()\n                .expect(this.chars.closeBracket)\n                .skip();\n        }\n        catch (p) {\n            ans.errors.push(p);\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n}\nexports.MapParser = MapParser;\nMapParser.identity = 'Map';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageArgumentParser = void 0;\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst MessageNode_1 = require(\"../nodes/MessageNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst Token_1 = require(\"../types/Token\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass MessageArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super(...arguments);\n        this.identity = 'message';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new MessageNode_1.MessageNode());\n        const start = reader.cursor;\n        while (reader.canRead()) {\n            if (reader.peek() === '@' &&\n                (reader.peek(1) === 'p' || reader.peek(1) === 'a' || reader.peek(1) === 'r' || reader.peek(1) === 's' || reader.peek(1) === 'e')) {\n                const entityResult = new ctx.parsers.Entity('multiple', 'entities').parse(reader, ctx);\n                ans.data.push(entityResult.data);\n                Parser_1.combineArgumentParserResult(ans, entityResult);\n            }\n            else {\n                const start = reader.cursor;\n                if (typeof ans.data[ans.data.length - 1] === 'string') {\n                    ans.data[ans.data.length - 1] += reader.read();\n                }\n                else {\n                    ans.data.push(reader.read());\n                }\n                const lastToken = ans.tokens[ans.tokens.length - 1];\n                if (lastToken && lastToken.type === Token_1.TokenType.string) {\n                    lastToken.range.end = reader.cursor;\n                }\n                else {\n                    ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.string));\n                }\n            }\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    getExamples() {\n        return ['Hello world!', 'foo', '@e', 'Hello @p :)'];\n    }\n}\nexports.MessageArgumentParser = MessageArgumentParser;\nMessageArgumentParser.identity = 'Message';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtArgumentParser = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst MapNode_1 = require(\"../nodes/MapNode\");\nconst NbtByteArrayNode_1 = require(\"../nodes/NbtByteArrayNode\");\nconst NbtByteNode_1 = require(\"../nodes/NbtByteNode\");\nconst NbtCompoundKeyNode_1 = require(\"../nodes/NbtCompoundKeyNode\");\nconst NbtCompoundNode_1 = require(\"../nodes/NbtCompoundNode\");\nconst NbtDoubleNode_1 = require(\"../nodes/NbtDoubleNode\");\nconst NbtFloatNode_1 = require(\"../nodes/NbtFloatNode\");\nconst NbtIntArrayNode_1 = require(\"../nodes/NbtIntArrayNode\");\nconst NbtIntNode_1 = require(\"../nodes/NbtIntNode\");\nconst NbtListNode_1 = require(\"../nodes/NbtListNode\");\nconst NbtLongArrayNode_1 = require(\"../nodes/NbtLongArrayNode\");\nconst NbtLongNode_1 = require(\"../nodes/NbtLongNode\");\nconst NbtNode_1 = require(\"../nodes/NbtNode\");\nconst NbtShortNode_1 = require(\"../nodes/NbtShortNode\");\nconst NbtStringNode_1 = require(\"../nodes/NbtStringNode\");\nconst NamingConventionConfig_1 = require(\"../types/NamingConventionConfig\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst StylisticConfig_1 = require(\"../types/StylisticConfig\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst NbtdocHelper_1 = require(\"../utils/NbtdocHelper\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nconst MapParser_1 = require(\"./MapParser\");\nclass NbtArgumentParser extends ArgumentParser_1.ArgumentParser {\n    /* istanbul ignore next */\n    constructor(type = [\n        'Compound', 'List', 'ByteArray', 'IntArray', 'LongArray',\n        'Byte', 'Short', 'Int', 'Long', 'String', 'Float', 'Double'\n    ], category, \n    /**\n     * `null`: Use compiled fallback for the registry.\n     * `undefined`: No validations from registry.\n     */\n    id = undefined, isPredicate = false, superNode = null, \n    // TODO: JSON\n    module = null) {\n        super();\n        this.category = category;\n        this.id = id;\n        this.isPredicate = isPredicate;\n        this.superNode = superNode;\n        this.module = module;\n        this.identity = 'nbtTag';\n        if (type instanceof Array) {\n            this.expectedTypes = type;\n        }\n        else {\n            this.expectedTypes = [type];\n        }\n    }\n    /**\n     * @throws {string}\n     */\n    static parseNumber(str, range, getter, checker = _ => true) {\n        const value = getter(str);\n        if (!checker(value)) {\n            throw locales_1.locale('expected-got', locales_1.locale('number.between', range[0], range[1]), value);\n        }\n        return value;\n    }\n    getLocaleName(name) {\n        return locales_1.locale(`nbt-tag.${name}`);\n    }\n    parse(reader, ctx) {\n        const helper = new NbtdocHelper_1.NbtdocHelper(ctx.nbtdoc);\n        let index = null;\n        if (typeof this.id === 'number') {\n            index = this.id;\n        }\n        else if (this.id !== undefined) {\n            const registryDoc = helper.resolveRegistryCompound(this.category, this.id);\n            index = registryDoc ? registryDoc.Compound : null;\n        }\n        const doc = index !== null ? { Compound: index } : null;\n        const compoundDoc = helper.readCompound(index);\n        /* istanbul ignore next */\n        const description = compoundDoc ? compoundDoc.description : undefined;\n        const start = reader.cursor;\n        const ans = this.parseTag(reader, ctx, this.superNode, helper, helper && doc, description);\n        //#region Completions.\n        if (helper && ctx.cursor === start) {\n            helper.completeField(ans, ctx, doc, this.isPredicate, '', ctx.cursor, ctx.cursor);\n        }\n        //#endregion\n        if (!this.expectedTypes.includes(ans.data[NbtNode_1.NbtNodeType])) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', utils_1.arrayToMessage(this.expectedTypes.map(this.getLocaleName), false, 'or'), this.getLocaleName(ans.data[NbtNode_1.NbtNodeType]))));\n        }\n        if (helper && index !== null) {\n            helper.validateField(ans, ctx, ans.data, { Compound: index }, this.isPredicate, '');\n        }\n        return ans;\n    }\n    parseTag(reader, ctx, superNode, helper, doc, description) {\n        let ans;\n        switch (reader.peek()) {\n            case '{':\n                ans = this.parseCompoundTag(reader, ctx, superNode, helper, doc && NbtdocHelper_1.NbtdocHelper.isCompoundOrIndexDoc(doc) ? doc : undefined);\n                break;\n            case '[':\n                ans = this.parseListOrArray(reader, ctx, superNode, helper, doc && NbtdocHelper_1.NbtdocHelper.isListDoc(doc) ? doc : undefined, description);\n                break;\n            default:\n                ans = this.parsePrimitiveTag(reader, superNode, helper);\n                break;\n        }\n        return ans;\n    }\n    parseCompoundTag(reader, ctx, superNode, helper, doc = null) {\n        const ans = Parser_1.ArgumentParserResult.create(new NbtCompoundNode_1.NbtCompoundNode(superNode));\n        const start = reader.cursor;\n        new MapParser_1.MapParser(NbtCompoundNode_1.NbtCompoundNodeChars, (ans, reader, ctx) => {\n            const result = Parser_1.ArgumentParserResult.create('');\n            const start = reader.cursor;\n            try {\n                const out = { mapping: {} };\n                const firstChar = reader.peek();\n                const key = reader.readString(out);\n                const end = reader.cursor;\n                const raw = reader.string.slice(start, end);\n                result.data = key;\n                //#region Errors.\n                ans.errors.push(...utils_1.validateStringQuote(raw, key, { start, end }, ctx.config.lint.nbtCompoundKeyQuote, ctx.config.lint.nbtCompoundKeyQuoteType, 'nbtCompoundKeyQuote', 'nbtCompoundKeyQuoteType'));\n                //#endregion\n                //#region Completions.\n                if (helper && doc) {\n                    if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n                        if (StringReader_1.StringReader.isQuote(firstChar)) {\n                            const quoteType = firstChar === \"'\" ? 'always single' : 'always double';\n                            helper.completeCompoundKeys(result, ctx, ans.data, doc, quoteType, start + 1, reader.cursor - 1);\n                        }\n                        else {\n                            helper.completeCompoundKeys(result, ctx, ans.data, doc, null, start, reader.cursor);\n                        }\n                    }\n                }\n                //#endregion\n                //#region Tokens\n                result.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.property));\n                //#endregion\n                if (!key) {\n                    result.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('key'), locales_1.locale('nothing'))));\n                }\n                else {\n                    // Check whether the current key follows the naming convention.\n                    const isCustomKey = !(helper && doc) ||\n                        (helper.readField(helper.readCompound(helper.resolveCompoundOrIndexDoc(doc, superNode, ctx)), key, ans.data) === null);\n                    if (isCustomKey && ctx.config.lint.nameOfNbtCompoundTagKeys &&\n                        !NamingConventionConfig_1.checkNamingConvention(key, ctx.config.lint.nameOfNbtCompoundTagKeys)) {\n                        const [severity, value] = ctx.config.lint.nameOfNbtCompoundTagKeys;\n                        result.errors.push(new ParsingError_1.ParsingError({ start, end }, locales_1.locale('key-not-following-convention', locales_1.locale('punc.quote', key), utils_1.arrayToMessage(NamingConventionConfig_1.getConventionNames(value), true, 'or')), true, StylisticConfig_1.getDiagnosticSeverity(severity)));\n                    }\n                    // Check duplicate key.\n                    if (ans.data[key] !== undefined) {\n                        result.errors.push(new ParsingError_1.ParsingError({ start, end }, locales_1.locale('duplicate-key', locales_1.locale('punc.quote', key)), true, vscode_languageserver_1.DiagnosticSeverity.Warning));\n                    }\n                    ans.data[MapNode_1.Keys][key] = new NbtCompoundKeyNode_1.NbtCompoundKeyNode(ans.data, key, raw, out.mapping);\n                    ans.data[MapNode_1.Keys][key][ArgumentNode_1.NodeRange] = { start, end };\n                }\n            }\n            catch (p) {\n                /* istanbul ignore next */\n                result.errors.push(p);\n            }\n            return result;\n        }, (ans, reader, ctx, key) => {\n            // Check whether the schema for the key is available.\n            let fieldDoc = null;\n            if (helper && doc) {\n                fieldDoc = helper.readField(helper.readCompound(helper.resolveCompoundOrIndexDoc(doc, superNode, ctx)), key, ans.data);\n            }\n            //#region Completions.\n            if (helper && ctx.cursor === reader.cursor) {\n                helper.completeField(ans, ctx, fieldDoc ? fieldDoc.nbttype : null, this.isPredicate, '', ctx.cursor, ctx.cursor);\n            }\n            //#endregion\n            const result = this.parseTag(reader, ctx, ans.data, helper, fieldDoc ? fieldDoc.nbttype : undefined, fieldDoc ? fieldDoc.description : undefined);\n            if (key) {\n                ans.data[key] = result.data;\n            }\n            Parser_1.combineArgumentParserResult(ans, result);\n        }).parse(ans, reader, ctx);\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        if (ctx.config.lint.nbtCompoundSortKeys && !ans.data[MapNode_1.IsMapSorted]()) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('diagnostic-rule', locales_1.locale('unsorted-keys'), locales_1.locale('punc.quote', 'nbtCompoundSortKeys')), undefined, StylisticConfig_1.getDiagnosticSeverity(ctx.config.lint.nbtCompoundSortKeys[0]), 7 /* NbtCompoundSortKeys */));\n        }\n        return ans;\n    }\n    parseListOrArray(reader, ctx, superNode, helper, doc, description) {\n        const ans = Parser_1.ArgumentParserResult.create(new NbtListNode_1.NbtListNode(superNode));\n        const start = reader.cursor;\n        try {\n            reader.expect('[');\n            let result;\n            if (reader.canRead(3) && !StringReader_1.StringReader.isQuote(reader.peek(1)) && reader.peek(2) === ';') {\n                // Parse as an array.\n                result = this.parsePrimitiveArray(reader, ctx, superNode, helper);\n            }\n            else {\n                // Parse as a list.\n                result = this.parseList(reader, ctx, superNode, helper, doc, description);\n            }\n            ans.data = result.data;\n            Parser_1.combineArgumentParserResult(ans, result);\n        }\n        catch (p) {\n            /* istanbul ignore next */\n            ans.errors.push(p);\n        }\n        finally {\n            ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n            return ans;\n        }\n    }\n    parsePrimitiveArray(reader, _ctx, superNode, helper) {\n        const ans = Parser_1.ArgumentParserResult.create(new NbtByteArrayNode_1.NbtByteArrayNode(superNode));\n        const start = reader.cursor;\n        try {\n            reader\n                .expect('[')\n                .skip();\n            const start = reader.cursor;\n            const type = reader.read();\n            //#region Tokens\n            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.keyword));\n            //#endregion\n            switch (type) {\n                case 'B':\n                    ans.data = new NbtByteArrayNode_1.NbtByteArrayNode(superNode);\n                    break;\n                case 'I':\n                    ans.data = new NbtIntArrayNode_1.NbtIntArrayNode(superNode);\n                    break;\n                case 'L':\n                    ans.data = new NbtLongArrayNode_1.NbtLongArrayNode(superNode);\n                    break;\n                default:\n                    throw new ParsingError_1.ParsingError({ start: reader.cursor - 1, end: reader.cursor }, locales_1.locale('unexpected-nbt-array-type', locales_1.locale('punc.quote', type)));\n            }\n            reader\n                .expect(';')\n                .skip()\n                .skipWhiteSpace();\n            while (reader.canRead() && reader.peek() !== ']') {\n                const start = reader.cursor;\n                const result = this.parsePrimitiveTag(reader, superNode, helper);\n                Parser_1.combineArgumentParserResult(ans, result);\n                reader.skipWhiteSpace();\n                if (ans.data[NbtNode_1.NbtNodeType] === 'ByteArray') {\n                    ans.data.push(result.data);\n                    if (!NbtByteNode_1.isNbtByteNode(result.data)) {\n                        ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', this.getLocaleName('Byte'), this.getLocaleName(result.data[NbtNode_1.NbtNodeType]))));\n                    }\n                }\n                else if (ans.data[NbtNode_1.NbtNodeType] === 'IntArray') {\n                    ans.data.push(result.data);\n                    if (!NbtIntNode_1.isNbtIntNode(result.data)) {\n                        ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', this.getLocaleName('Int'), this.getLocaleName(result.data[NbtNode_1.NbtNodeType]))));\n                    }\n                }\n                else {\n                    ans.data.push(result.data);\n                    if (!NbtLongNode_1.isNbtLongNode(result.data)) {\n                        ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', this.getLocaleName('Long'), this.getLocaleName(result.data[NbtNode_1.NbtNodeType]))));\n                    }\n                }\n                if (reader.peek() === ',') {\n                    reader\n                        .skip()\n                        .skipWhiteSpace();\n                    continue;\n                }\n                break;\n            }\n            reader\n                .expect(']')\n                .skip();\n        }\n        catch (p) {\n            /* istanbul ignore next */\n            ans.errors.push(p);\n        }\n        finally {\n            ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n            return ans;\n        }\n    }\n    parseList(reader, ctx, superNode, helper, doc, description) {\n        const ans = Parser_1.ArgumentParserResult.create(new NbtListNode_1.NbtListNode(superNode));\n        const start = reader.cursor;\n        try {\n            /**\n             * Move cursor to the end of the white spaces, so that we can provide\n             * completions when the cursor is inside the white spaces.\n             */\n            const skipWhiteSpace = () => {\n                const whiteSpaceStart = reader.cursor;\n                reader.skipWhiteSpace();\n                /* istanbul ignore next */\n                if (whiteSpaceStart <= ctx.cursor && ctx.cursor < reader.cursor) {\n                    ctx.cursor = reader.cursor;\n                }\n            };\n            reader\n                .expect('[')\n                .skip();\n            skipWhiteSpace();\n            while (true) {\n                const start = reader.cursor;\n                //#region Completions.\n                if (helper && ctx.cursor === start) {\n                    /* istanbul ignore next */\n                    helper.completeField(ans, ctx, doc ? doc.List.value_type : null, this.isPredicate, description || '', ctx.cursor, ctx.cursor);\n                }\n                //#endregion\n                if (!(reader.canRead() && reader.peek() !== ']')) {\n                    break;\n                }\n                /* istanbul ignore next */\n                const result = this.parseTag(reader, ctx, superNode, helper, doc ? doc.List.value_type : undefined, description);\n                const end = reader.cursor;\n                Parser_1.combineArgumentParserResult(ans, result);\n                ans.data.push(result.data);\n                if (!ans.data[NbtListNode_1.ChildNbtNodeType]) {\n                    ans.data[NbtListNode_1.ChildNbtNodeType] = result.data[NbtNode_1.NbtNodeType];\n                }\n                else if (ans.data[NbtListNode_1.ChildNbtNodeType] !== result.data[NbtNode_1.NbtNodeType]) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', this.getLocaleName(ans.data[NbtListNode_1.ChildNbtNodeType]), this.getLocaleName(result.data[NbtNode_1.NbtNodeType]))));\n                }\n                reader.skipWhiteSpace();\n                if (reader.peek() === ',') {\n                    reader.skip();\n                    skipWhiteSpace();\n                    continue;\n                }\n                break;\n            }\n            reader\n                .expect(']')\n                .skip();\n        }\n        catch (p) {\n            /* istanbul ignore next */\n            ans.errors.push(p);\n        }\n        finally {\n            ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n            return ans;\n        }\n    }\n    parsePrimitiveTag(reader, superNode, _helper) {\n        const ans = Parser_1.ArgumentParserResult.create(new NbtStringNode_1.NbtStringNode(superNode, '', '', {}));\n        const start = reader.cursor;\n        const out = { mapping: {} };\n        if (StringReader_1.StringReader.isQuote(reader.peek())) {\n            // Parse as a quoted string.\n            try {\n                const value = reader.readQuotedString(out);\n                ans.data = new NbtStringNode_1.NbtStringNode(superNode, value, reader.string.slice(start, reader.cursor), out.mapping);\n            }\n            catch (p) {\n                /* istanbul ignore next */\n                ans.errors.push(p);\n            }\n            //#region Tokens\n            // ans.tokens.push(Token.from(start, reader, TokenType.string))\n            //#endregion\n        }\n        else {\n            // Parse as an unquoted string or a number.\n            const value = reader.readUnquotedString(out);\n            if (value.length === 0) {\n                ans.data = new NbtStringNode_1.NbtStringNode(superNode, '', '', {});\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('nbt-tag'), locales_1.locale('nothing'))));\n            }\n            else {\n                const failedToMatchAllPatterns = Symbol('failed to match all patterns');\n                try {\n                    // Try parsing as a number.\n                    for (const type of Object.keys(NbtArgumentParser.Patterns)) {\n                        const [pattern, func] = NbtArgumentParser.Patterns[type];\n                        if (pattern.test(value)) {\n                            const rawValue = pattern.exec(value)[1];\n                            ans.data = func(superNode, rawValue);\n                            //#region Tokens\n                            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.number));\n                            //#endregion\n                            ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n                            return ans;\n                        }\n                    }\n                    throw failedToMatchAllPatterns;\n                }\n                catch (s) {\n                    // Parse as an unquoted string.\n                    //#region Tokens\n                    ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.string));\n                    //#endregion\n                    ans.data = new NbtStringNode_1.NbtStringNode(superNode, value, value, out.mapping);\n                    if (s !== failedToMatchAllPatterns) {\n                        ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, s, undefined, vscode_languageserver_1.DiagnosticSeverity.Warning));\n                    }\n                }\n            }\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    getExamples() {\n        const ans = [];\n        const examplesOfNames = {\n            Byte: ['0b'],\n            ByteArray: ['[B; 0b],'],\n            Compound: ['{}', '{foo: bar}'],\n            Double: ['0.0d'],\n            Float: ['0.0f'],\n            Int: ['0'],\n            IntArray: ['[I; 0]'],\n            List: ['[]', '[foo, \"bar\"]'],\n            Long: ['0L'],\n            LongArray: ['[L; 0L]'],\n            Short: ['0s'],\n            String: ['\"foo\"', 'foo', \"'foo'\"]\n        };\n        for (const name of this.expectedTypes) {\n            const examples = examplesOfNames[name];\n            ans.push(...examples);\n        }\n        return ans;\n    }\n}\nexports.NbtArgumentParser = NbtArgumentParser;\nNbtArgumentParser.identity = 'Nbt';\nNbtArgumentParser.Patterns = {\n    byte: [\n        /^([-+]?(?:0|[1-9][0-9]*))b$/i,\n        (superNode, value) => new NbtByteNode_1.NbtByteNode(superNode, NbtArgumentParser.parseNumber(value, ['-128', '127'], Number, value => -128 <= value && value <= 127), value)\n    ],\n    short: [\n        /^([-+]?(?:0|[1-9][0-9]*))s$/i,\n        (superNode, value) => new NbtShortNode_1.NbtShortNode(superNode, NbtArgumentParser.parseNumber(value, ['-32,768', '32,767'], Number, value => -32768 <= value && value <= 32767), value)\n    ],\n    int: [\n        /^([-+]?(?:0|[1-9][0-9]*))$/i,\n        (superNode, value) => new NbtIntNode_1.NbtIntNode(superNode, NbtArgumentParser.parseNumber(value, ['-2,147,483,648', '2,147,483,647'], Number, value => -2147483648 <= value && value <= 2147483647), value)\n    ],\n    long: [\n        /^([-+]?(?:0|[1-9][0-9]*))l$/i,\n        (superNode, value) => new NbtLongNode_1.NbtLongNode(superNode, NbtArgumentParser.parseNumber(value, ['-9,223,372,036,854,775,808', '9,223,372,036,854,775,807'], str => BigInt(str), value => value >= BigInt('-9223372036854775808') && value <= BigInt('9223372036854775807')), value)\n    ],\n    float: [\n        /^([-+]?(?:[0-9]+[.]?|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?)f$/i,\n        (superNode, value) => new NbtFloatNode_1.NbtFloatNode(superNode, NbtArgumentParser.parseNumber(value, [], Number), value)\n    ],\n    double: [\n        /^([-+]?(?:[0-9]+[.]?|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?)d$/i,\n        (superNode, value) => new NbtDoubleNode_1.NbtDoubleNode(superNode, NbtArgumentParser.parseNumber(value, [], Number), value)\n    ],\n    doubleImplicit: [\n        /^([-+]?(?:[0-9]+[.]|[0-9]*[.][0-9]+)(?:e[-+]?[0-9]+)?)$/i,\n        (superNode, value) => new NbtDoubleNode_1.NbtDoubleNode(superNode, NbtArgumentParser.parseNumber(value, [], Number), value)\n    ],\n    false: [/^(false)$/i, (superNode, value) => new NbtByteNode_1.NbtByteNode(superNode, 0, value)],\n    true: [/^(true)$/i, (superNode, value) => new NbtByteNode_1.NbtByteNode(superNode, 1, value)]\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtPathArgumentParser = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst NbtCompoundKeyNode_1 = require(\"../nodes/NbtCompoundKeyNode\");\nconst NbtCompoundNode_1 = require(\"../nodes/NbtCompoundNode\");\nconst NbtPathNode_1 = require(\"../nodes/NbtPathNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst TextRange_1 = require(\"../types/TextRange\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst NbtdocHelper_1 = require(\"../utils/NbtdocHelper\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass NbtPathArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(category, id = undefined) {\n        super();\n        this.category = category;\n        this.id = id;\n        this.identity = 'nbtPath';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new NbtPathNode_1.NbtPathNode());\n        const start = reader.cursor;\n        let helper;\n        if (this.id !== undefined) {\n            helper = new NbtdocHelper_1.NbtdocHelper(ctx.nbtdoc);\n        }\n        this.parseSpecifiedTypes(ans, reader, ctx, helper, helper ? helper.resolveRegistryCompound(this.category, this.id) : null, ['filter', 'key', 'index'], false);\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    parseSpecifiedTypes(ans, reader, ctx, helper, doc, types, allowEmpty) {\n        let isKey = false;\n        if (NbtdocHelper_1.NbtdocHelper.isOrDoc(doc)) {\n            return NbtdocHelper_1.NbtdocHelper.forEachOrDoc(ans, reader, doc, (ans, reader, doc) => this.parseSpecifiedTypes(ans, reader, ctx, helper, doc, types, allowEmpty));\n        }\n        if (types.includes('key')) {\n            const firstChar = reader.peek();\n            let range = { start: reader.cursor, end: reader.cursor };\n            if (this.canParseKey(reader)) {\n                isKey = true;\n                range = this.parseKey(ans, reader, ctx, helper, NbtdocHelper_1.NbtdocHelper.isCompoundOrIndexDoc(doc) ? doc : null)[ArgumentNode_1.NodeRange];\n                //#region Schema errors.\n                if (helper && doc && !NbtdocHelper_1.NbtdocHelper.isCompoundOrIndexDoc(doc)) {\n                    ans.errors.push(new ParsingError_1.ParsingError(range, locales_1.locale('unexpected-nbt-path-key'), true, vscode_languageserver_1.DiagnosticSeverity.Warning));\n                }\n                //#endregion\n            }\n            //#region Completions.\n            if (helper && doc && NbtdocHelper_1.NbtdocHelper.isCompoundOrIndexDoc(doc)) {\n                if (TextRange_1.isInRange(ctx.cursor, range)) {\n                    if (StringReader_1.StringReader.isQuote(firstChar)) {\n                        // FIXME: after MC-175504 is fixed.\n                        /* istanbul ignore next */\n                        const quoteType = firstChar === '\"' ? 'always double' : 'always single';\n                        helper.completeCompoundKeys(ans, ctx, new NbtCompoundNode_1.NbtCompoundNode(null), doc, quoteType, range.start + 1, range.end - 1);\n                    }\n                    else {\n                        helper.completeCompoundKeys(ans, ctx, new NbtCompoundNode_1.NbtCompoundNode(null), doc, null, range.start, range.end);\n                    }\n                }\n            }\n            //#endregion\n        }\n        if (!isKey) {\n            if (types.includes('filter') && this.canParseCompoundFilter(reader)) {\n                if (helper && doc) {\n                    if (!NbtdocHelper_1.NbtdocHelper.isCompoundOrIndexDoc(doc)) {\n                        ans.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('unexpected-nbt-path-filter'), true, vscode_languageserver_1.DiagnosticSeverity.Warning));\n                    }\n                }\n                this.parseCompoundFilter(ans, reader, ctx, helper, doc && NbtdocHelper_1.NbtdocHelper.isCompoundOrIndexDoc(doc) ? doc : null);\n            }\n            else if (types.includes('index') && this.canParseIndex(reader)) {\n                if (helper && doc) {\n                    if (!(NbtdocHelper_1.NbtdocHelper.isListDoc(doc) ||\n                        NbtdocHelper_1.NbtdocHelper.isByteArrayDoc(doc) ||\n                        NbtdocHelper_1.NbtdocHelper.isIntArrayDoc(doc) ||\n                        NbtdocHelper_1.NbtdocHelper.isLongArrayDoc(doc))) {\n                        ans.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('unexpected-nbt-path-index'), true, vscode_languageserver_1.DiagnosticSeverity.Warning));\n                    }\n                }\n                this.parseIndex(ans, reader, ctx, helper, doc);\n            }\n            else {\n                if (!allowEmpty) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('expected-got', utils_1.arrayToMessage(types.map(v => locales_1.locale(`nbt-path.${v}`)), false, 'or'), locales_1.locale('nothing'))));\n                }\n            }\n        }\n    }\n    parseKey(ans, reader, ctx, helper, doc) {\n        const start = reader.cursor;\n        let key = '';\n        const out = { mapping: {} };\n        try {\n            if (reader.peek() === '\"') {\n                key = reader.readQuotedString(out);\n            }\n            else {\n                out.mapping.start = reader.cursor;\n                while (reader.canRead() && StringReader_1.StringReader.canInUnquotedString(reader.peek()) && reader.peek() !== '.') {\n                    key += reader.read();\n                }\n            }\n        }\n        catch (p) {\n            /* istanbul ignore next */\n            ans.errors.push(p);\n        }\n        const keyNode = new NbtCompoundKeyNode_1.NbtCompoundKeyNode(null, key, reader.string.slice(start, reader.cursor), out.mapping);\n        keyNode[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        ans.data.push(keyNode);\n        //#region Errors.\n        ans.errors.push(...utils_1.validateStringQuote(reader.string.slice(start, reader.cursor), key, { start, end: reader.cursor }, ctx.config.lint.nbtPathQuote, ctx.config.lint.nbtPathQuoteType, 'nbtPathQuote', 'nbtPathQuoteType'));\n        //#endregion\n        //#region Tokens\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.property));\n        //#endregion\n        let childDoc = null;\n        if (helper && doc) {\n            const compoundDoc = helper.readCompound(helper.resolveCompoundOrIndexDoc(doc, null, ctx));\n            const field = helper.readField(compoundDoc, key, null);\n            if (!field && !helper.isInheritFromItemBase(compoundDoc, null)) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('unknown-key', locales_1.locale('punc.quote', key)), true, vscode_languageserver_1.DiagnosticSeverity.Warning));\n            }\n            else if (field) {\n                keyNode[ArgumentNode_1.NodeDescription] = NbtdocHelper_1.NbtdocHelper.getKeyDescription(field.nbttype, field.description);\n                childDoc = field.nbttype;\n            }\n        }\n        if (this.canParseSep(reader)) {\n            this.parseSep(ans, reader);\n            this.parseSpecifiedTypes(ans, reader, ctx, helper, childDoc, ['key', 'index'], false);\n        }\n        else {\n            this.parseSpecifiedTypes(ans, reader, ctx, helper, childDoc, ['filter', 'index'], true);\n        }\n        return keyNode;\n    }\n    parseCompoundFilter(ans, reader, ctx, helper, doc) {\n        if (NbtdocHelper_1.NbtdocHelper.isOrDoc(doc)) {\n            NbtdocHelper_1.NbtdocHelper.forEachOrDoc(ans, reader, doc, (ans, reader, doc) => this.parseCompoundFilter(ans, reader, ctx, helper, doc && NbtdocHelper_1.NbtdocHelper.isCompoundOrIndexDoc(doc) ? doc : null));\n        }\n        else {\n            const result = new ctx.parsers.Nbt('Compound', this.category, helper === null || helper === void 0 ? void 0 : helper.resolveCompoundOrIndexDoc(doc, null, ctx), true).parse(reader, ctx);\n            ans.data.push(result.data);\n            Parser_1.combineArgumentParserResult(ans, result);\n        }\n        if (this.canParseSep(reader)) {\n            this.parseSep(ans, reader);\n            this.parseSpecifiedTypes(ans, reader, ctx, helper, doc, ['key'], false);\n        }\n    }\n    parseIndex(ans, reader, ctx, helper, doc) {\n        this.parseIndexBegin(ans, reader);\n        reader.skipWhiteSpace();\n        const isListDoc = (doc) => !!(helper && doc && NbtdocHelper_1.NbtdocHelper.isListDoc(doc));\n        const checkSchema = () => {\n            if (helper && doc && !NbtdocHelper_1.NbtdocHelper.isListDoc(doc)) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('unexpected-nbt-path-sub'), true, vscode_languageserver_1.DiagnosticSeverity.Warning));\n            }\n        };\n        if (this.canParseCompoundFilter(reader)) {\n            checkSchema();\n            this.parseCompoundFilter(ans, reader, ctx, helper, \n            /* istanbul ignore next */\n            isListDoc(doc) && NbtdocHelper_1.NbtdocHelper.isCompoundDoc(doc.List.value_type) ? doc.List.value_type : null);\n        }\n        else if (this.canParseIndexNumber(reader)) {\n            this.parseIndexNumber(ans, reader, ctx);\n        }\n        reader.skipWhiteSpace();\n        this.parseIndexEnd(ans, reader);\n        if (this.canParseSep(reader)) {\n            checkSchema();\n            this.parseSep(ans, reader);\n            this.parseSpecifiedTypes(ans, reader, ctx, helper, \n            /* istanbul ignore next */\n            isListDoc(doc) ? doc.List.value_type : null, ['key', 'index'], false);\n        }\n        else {\n            this.parseSpecifiedTypes(ans, reader, ctx, helper, \n            /* istanbul ignore next */\n            isListDoc(doc) ? doc.List.value_type : null, ['index'], true);\n        }\n    }\n    canParseKey(reader) {\n        // FIXME: after MC-175504 is fixed.\n        return reader.peek() === '\"' || (StringReader_1.StringReader.canInUnquotedString(reader.peek()) && reader.peek() !== '.');\n    }\n    canParseCompoundFilter(reader) {\n        return reader.peek() === '{';\n    }\n    canParseSep(reader) {\n        return reader.peek() === '.';\n    }\n    parseSep(ans, reader) {\n        reader.skip();\n        ans.data.push(NbtPathNode_1.NbtPathNode.Sep);\n    }\n    canParseIndex(reader) {\n        return reader.peek() === '[';\n    }\n    canParseIndexNumber(reader) {\n        return StringReader_1.StringReader.canInNumber(reader.peek());\n    }\n    parseIndexBegin(ans, reader) {\n        try {\n            reader\n                .expect('[')\n                .skip();\n            ans.data.push(NbtPathNode_1.NbtPathNode.IndexBegin);\n        }\n        catch (p) {\n            /* istanbul ignore next */\n            ans.errors.push(p);\n        }\n    }\n    parseIndexNumber(ans, reader, ctx) {\n        const result = new ctx.parsers.Number('integer').parse(reader, ctx);\n        ans.data.push(result.data);\n        Parser_1.combineArgumentParserResult(ans, result);\n    }\n    parseIndexEnd(ans, reader) {\n        try {\n            reader\n                .expect(']')\n                .skip();\n            ans.data.push(NbtPathNode_1.NbtPathNode.IndexEnd);\n        }\n        catch (p) {\n            /* istanbul ignore next */\n            ans.errors.push(p);\n        }\n    }\n    getExamples() {\n        return ['foo', 'foo.bar', 'foo[0]', '[0]', '[]', '{foo:bar}'];\n    }\n}\nexports.NbtPathArgumentParser = NbtPathArgumentParser;\nNbtPathArgumentParser.identity = 'NbtPath';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst NumberNode_1 = require(\"../nodes/NumberNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass NumberArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(type, min, max) {\n        super();\n        this.type = type;\n        this.min = min;\n        this.max = max;\n        this.identity = 'number';\n        this.identity = `number.${type}`;\n    }\n    parse(reader, _ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new NumberNode_1.NumberNode(NaN, ''));\n        const start = reader.cursor;\n        try {\n            const value = this.type === 'integer' ? reader.readInt() : reader.readFloat();\n            ans.data.value = value;\n            ans.data.raw = reader.string.slice(start, reader.cursor);\n        }\n        catch (p) {\n            ans.errors.push(p);\n        }\n        //#region Tokens\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.number));\n        //#endregion\n        if (this.min !== undefined && !(ans.data.valueOf() >= this.min)) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', locales_1.locale('number.>=', this.min), ans.data)));\n        }\n        if (this.max !== undefined && !(ans.data.valueOf() <= this.max)) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', locales_1.locale('number.<=', this.max), ans.data)));\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    getExamples() {\n        if (this.type === 'integer') {\n            return ['0', '-123', '123'];\n        }\n        else {\n            return ['0', '1.2', '.5', '-1', '-.5', '-1234.56'];\n        }\n    }\n}\nexports.NumberArgumentParser = NumberArgumentParser;\nNumberArgumentParser.identity = 'Number';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberRangeArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst NumberRangeNode_1 = require(\"../nodes/NumberRangeNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass NumberRangeArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(type, isCycle = false) {\n        super();\n        this.type = type;\n        this.isCycle = isCycle;\n        this.identity = 'numberRange';\n        this.identity = `numberRange.${type}`;\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new NumberRangeNode_1.NumberRangeNode(this.type));\n        const isDoublePeriods = () => reader.peek() === '.' && reader.peek(1) === '.';\n        const start = reader.cursor;\n        if (!reader.canRead()) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('expected-got', locales_1.locale('number-range'), locales_1.locale('nothing')), false));\n        }\n        else {\n            let min;\n            let max;\n            if (!isDoublePeriods()) {\n                const result = new ctx.parsers.Number(this.type).parse(reader, ctx);\n                min = result.data;\n                Parser_1.combineArgumentParserResult(ans, result);\n            }\n            if (isDoublePeriods()) {\n                ans.tokens.push(new Token_1.Token({ start: reader.cursor, end: reader.cursor + 2 }, Token_1.TokenType.keyword));\n                reader.skip(2);\n                if (StringReader_1.StringReader.canInNumber(reader.peek())) {\n                    const result = new ctx.parsers.Number(this.type).parse(reader, ctx);\n                    max = result.data;\n                    Parser_1.combineArgumentParserResult(ans, result);\n                }\n            }\n            else {\n                max = min;\n            }\n            // Check values.\n            if (!this.isCycle && min !== undefined && max !== undefined && min > max) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('number-range.min>max', min, max)));\n            }\n            else if (min === undefined && max === undefined) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('number-range.missing-min-and-max')));\n            }\n            ans.data = new NumberRangeNode_1.NumberRangeNode(this.type, min, max);\n        }\n        if (start <= ctx.cursor && ctx.cursor <= reader.cursor && this.type === 'integer') {\n            ans.completions.push({ label: '-2147483648..2147483647', start, end: reader.cursor });\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    getExamples() {\n        return ['0..5', '0', '-5', '-100..', '..100'];\n    }\n}\nexports.NumberRangeArgumentParser = NumberRangeArgumentParser;\nNumberRangeArgumentParser.identity = 'NumberRange';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectiveArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst types_1 = require(\"../types\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass ObjectiveArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(isDefinition = false) {\n        super();\n        this.isDefinition = isDefinition;\n        this.identity = 'objective';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create('');\n        const category = ClientCache_1.getSafeCategory(ctx.cache, 'objective');\n        //#region Data\n        const start = reader.cursor;\n        const value = reader.readUnquotedString();\n        ans.data = value;\n        //#endregion\n        //#region Completions\n        if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n            ans.completions.push(...ClientCache_1.getCompletions(ctx.cache, 'objective', start, reader.cursor));\n        }\n        //#endregion\n        //#region Tokens\n        if (this.isDefinition) {\n            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.variable, new Set([Token_1.TokenModifier.declaration])));\n        }\n        else {\n            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.variable));\n        }\n        //#endregion\n        //#region Errors & Cache\n        if (!value) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('objective'), locales_1.locale('nothing')), false));\n        }\n        else {\n            if (this.isDefinition) {\n                ans.cache = {\n                    objective: {\n                        [value]: {\n                            def: [{ start, end: reader.cursor }],\n                            ref: []\n                        }\n                    }\n                };\n            }\n            else {\n                if (Object.keys(category).includes(value)) {\n                    ans.cache = {\n                        objective: {\n                            [value]: {\n                                def: [],\n                                ref: [{ start, end: start + value.length }]\n                            }\n                        }\n                    };\n                }\n                else if (ctx.config.lint.strictObjectiveCheck) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + value.length }, locales_1.locale('undefined-objective', locales_1.locale('punc.quote', value)), undefined, types_1.getDiagnosticSeverity(ctx.config.lint.strictObjectiveCheck[0])));\n                }\n            }\n            if (ctx.config.lint.nameOfObjectives && !types_1.checkNamingConvention(value, ctx.config.lint.nameOfObjectives)) {\n                const [severity, rule] = ctx.config.lint.nameOfObjectives;\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + value.length }, locales_1.locale('objective-not-following-convention', locales_1.locale('punc.quote', value), utils_1.arrayToMessage(types_1.getConventionNames(rule), true, 'or')), true, types_1.getDiagnosticSeverity(severity)));\n            }\n            if (value.length > 16) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + value.length }, locales_1.locale('too-long', locales_1.locale('punc.quote', value), locales_1.locale('objective'), 16)));\n            }\n        }\n        //#endregion\n        return ans;\n    }\n    getExamples() {\n        return ['objective'];\n    }\n}\nexports.ObjectiveArgumentParser = ObjectiveArgumentParser;\nObjectiveArgumentParser.identity = 'Objective';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectiveCriterionArgumentParser = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst scoreboard_1 = require(\"../types/scoreboard\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass ObjectiveCriterionArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super(...arguments);\n        this.identity = 'objectiveCriterion';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create('');\n        const start = reader.cursor;\n        let category = reader.readUntilOrEnd(' ', scoreboard_1.scoreboard.CriteriaRegularSep, scoreboard_1.scoreboard.CriteriaStatsSep);\n        const pool = ['', 'minecraft', ...Object.keys(scoreboard_1.scoreboard.CriteriaCategory)];\n        //#region Completions.\n        if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n            ans.completions.push({ label: 'minecraft', start, end: reader.cursor, kind: vscode_languageserver_1.CompletionItemKind.Module });\n            ans.completions.push(...utils_1.arrayToCompletions(Object.keys(scoreboard_1.scoreboard.CriteriaCategory), start, reader.cursor, c => typeof scoreboard_1.scoreboard.CriteriaCategory[c.label] === 'string' ? Object.assign(Object.assign({}, c), { kind: vscode_languageserver_1.CompletionItemKind.Field }) : c));\n        }\n        //#endregion\n        //#region Errors.\n        if (!pool.includes(category)) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', utils_1.arrayToMessage(pool, true, 'or'), locales_1.locale('punc.quote', category))));\n        }\n        //#endregion\n        if (category === 'minecraft' || category === '') {\n            try {\n                reader\n                    .expect(scoreboard_1.scoreboard.CriteriaRegularSep)\n                    .skip();\n                const start = reader.cursor;\n                const statsPool = Object.keys(scoreboard_1.scoreboard.CriteriaStatsCategory);\n                category = reader.readUntilOrEnd(' ', scoreboard_1.scoreboard.CriteriaStatsSep);\n                //#region Completions.\n                if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n                    ans.completions.push(...utils_1.arrayToCompletions(statsPool, start, reader.cursor, c => (Object.assign(Object.assign({}, c), { kind: vscode_languageserver_1.CompletionItemKind.Field }))));\n                }\n                //#endregion\n                //#region Errors.\n                if (!statsPool.includes(category)) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', utils_1.arrayToMessage(statsPool, true, 'or'), locales_1.locale('punc.quote', category))));\n                }\n                //#endregion\n            }\n            catch (p) {\n                ans.errors.push(p);\n            }\n        }\n        const subCriteria = scoreboard_1.scoreboard.CriteriaCategory[category];\n        if (subCriteria) {\n            try {\n                reader\n                    .expect(typeof subCriteria === 'string' ? scoreboard_1.scoreboard.CriteriaStatsSep : scoreboard_1.scoreboard.CriteriaRegularSep)\n                    .skip();\n                let subResult;\n                if (subCriteria instanceof Array) {\n                    subResult = new ctx.parsers.Literal(...subCriteria).parse(reader, ctx);\n                }\n                else {\n                    const newReader = reader.clone();\n                    newReader.string = newReader.string.replace(new RegExp(`\\\\${scoreboard_1.scoreboard.CriteriaRegularSep}`, 'g'), IdentityNode_1.IdentityNode.NamespaceDelimiter);\n                    subResult = new ctx.parsers.Identity(subCriteria).parse(newReader, ctx);\n                    reader.cursor = newReader.cursor;\n                }\n                subResult.tokens = [];\n                Parser_1.combineArgumentParserResult(ans, subResult);\n            }\n            catch (p) {\n                ans.errors.push(p);\n            }\n        }\n        ans.data = reader.string.slice(start, reader.cursor);\n        ans.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.type)];\n        return ans;\n    }\n    getExamples() {\n        return ['dummy', 'minecraft.used:minecraft.carrot_on_a_stick'];\n    }\n}\nexports.ObjectiveCriterionArgumentParser = ObjectiveCriterionArgumentParser;\nObjectiveCriterionArgumentParser.identity = 'ObjectiveCriterion';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParserCollection = void 0;\nconst BlockArgumentParser_1 = require(\"./BlockArgumentParser\");\nconst DeclarationDescriptionArgumentParser_1 = require(\"./DeclarationDescriptionArgumentParser\");\nconst DeclarationIDArgumentParser_1 = require(\"./DeclarationIDArgumentParser\");\nconst EntityArgumentParser_1 = require(\"./EntityArgumentParser\");\nconst IdentityArgumentParser_1 = require(\"./IdentityArgumentParser\");\nconst ItemArgumentParser_1 = require(\"./ItemArgumentParser\");\nconst ItemSlotArgumentParser_1 = require(\"./ItemSlotArgumentParser\");\nconst LiteralArgumentParser_1 = require(\"./LiteralArgumentParser\");\nconst MessageArgumentParser_1 = require(\"./MessageArgumentParser\");\nconst NbtArgumentParser_1 = require(\"./NbtArgumentParser\");\nconst NbtPathArgumentParser_1 = require(\"./NbtPathArgumentParser\");\nconst NumberArgumentParser_1 = require(\"./NumberArgumentParser\");\nconst NumberRangeArgumentParser_1 = require(\"./NumberRangeArgumentParser\");\nconst ObjectiveArgumentParser_1 = require(\"./ObjectiveArgumentParser\");\nconst ObjectiveCriterionArgumentParser_1 = require(\"./ObjectiveCriterionArgumentParser\");\nconst ParticleArgumentParser_1 = require(\"./ParticleArgumentParser\");\nconst ScoreboardSlotArgumentParser_1 = require(\"./ScoreboardSlotArgumentParser\");\nconst StringArgumentParser_1 = require(\"./StringArgumentParser\");\nconst TagArgumentParser_1 = require(\"./TagArgumentParser\");\nconst TeamArgumentParser_1 = require(\"./TeamArgumentParser\");\nconst TextComponentArgumentParser_1 = require(\"./TextComponentArgumentParser\");\nconst TimeArgumentParser_1 = require(\"./TimeArgumentParser\");\nconst UuidArgumentParser_1 = require(\"./UuidArgumentParser\");\nconst VectorArgumentParser_1 = require(\"./VectorArgumentParser\");\nconst CodeSnippetArgumentParser_1 = require(\"./CodeSnippetArgumentParser\");\nclass ParserCollection {\n    constructor() {\n        this.Block = BlockArgumentParser_1.BlockArgumentParser;\n        this.CodeSnippet = CodeSnippetArgumentParser_1.CodeSnippetArgumentParser;\n        this.DeclarationDescription = DeclarationDescriptionArgumentParser_1.DeclarationDescriptionArgumentParser;\n        this.DeclarationID = DeclarationIDArgumentParser_1.DeclarationIDArgumentParser;\n        this.Entity = EntityArgumentParser_1.EntityArgumentParser;\n        this.Item = ItemArgumentParser_1.ItemArgumentParser;\n        this.ItemSlot = ItemSlotArgumentParser_1.ItemSlotArgumentParser;\n        this.Literal = LiteralArgumentParser_1.LiteralArgumentParser;\n        this.Message = MessageArgumentParser_1.MessageArgumentParser;\n        this.Identity = IdentityArgumentParser_1.IdentityArgumentParser;\n        this.NbtPath = NbtPathArgumentParser_1.NbtPathArgumentParser;\n        this.Nbt = NbtArgumentParser_1.NbtArgumentParser;\n        this.Number = NumberArgumentParser_1.NumberArgumentParser;\n        this.NumberRange = NumberRangeArgumentParser_1.NumberRangeArgumentParser;\n        this.Objective = ObjectiveArgumentParser_1.ObjectiveArgumentParser;\n        this.ObjectiveCriterion = ObjectiveCriterionArgumentParser_1.ObjectiveCriterionArgumentParser;\n        this.Particle = ParticleArgumentParser_1.ParticleArgumentParser;\n        this.ScoreboardSlot = ScoreboardSlotArgumentParser_1.ScoreboardSlotArgumentParser;\n        this.String = StringArgumentParser_1.StringArgumentParser;\n        this.Tag = TagArgumentParser_1.TagArgumentParser;\n        this.Team = TeamArgumentParser_1.TeamArgumentParser;\n        this.TextComponent = TextComponentArgumentParser_1.TextComponentArgumentParser;\n        this.Time = TimeArgumentParser_1.TimeArgumentParser;\n        this.Uuid = UuidArgumentParser_1.UuidArgumentParser;\n        this.Vector = VectorArgumentParser_1.VectorArgumentParser;\n    }\n}\nexports.ParserCollection = ParserCollection;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticleArgumentParser = void 0;\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst ParticleNode_1 = require(\"../nodes/ParticleNode\");\nconst VectorNode_1 = require(\"../nodes/VectorNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass ParticleArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super(...arguments);\n        this.identity = 'particle';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new ParticleNode_1.ParticleNode(new IdentityNode_1.IdentityNode()));\n        const start = reader.cursor;\n        const typeResult = new ctx.parsers.Identity('minecraft:particle_type').parse(reader, ctx);\n        const type = typeResult.data;\n        Parser_1.combineArgumentParserResult(ans, typeResult);\n        ans.data.id = type;\n        try {\n            switch (type.toString()) {\n                case 'minecraft:dust':\n                    reader\n                        .expect(' ')\n                        .skip();\n                    const colorResult = new ctx.parsers.Vector(3, 'float', false, false).parse(reader, ctx);\n                    const color = colorResult.data;\n                    Parser_1.combineArgumentParserResult(ans, colorResult);\n                    /* istanbul ignore else */\n                    if (ans.errors.length === 0) {\n                        const key = `${color[0].value} ${color[1].value} ${color[2].value}`;\n                        ans.cache = {\n                            color: {\n                                [key]: {\n                                    def: [],\n                                    ref: [{ start, end: reader.cursor }]\n                                }\n                            }\n                        };\n                    }\n                    reader\n                        .expect(' ')\n                        .skip();\n                    const sizeStart = reader.cursor;\n                    const sizeResult = new ctx.parsers.Number('float').parse(reader, ctx);\n                    const sizeNode = new VectorNode_1.VectorElementNode(\"\" /* Absolute */, sizeResult.data.valueOf(), sizeResult.data.toString());\n                    sizeNode[ArgumentNode_1.NodeRange] = { start: sizeStart, end: reader.cursor };\n                    Parser_1.combineArgumentParserResult(ans, colorResult);\n                    color.push(sizeNode);\n                    color[ArgumentNode_1.NodeRange].end = reader.cursor;\n                    ans.data.param = color;\n                    break;\n                case 'minecraft:block':\n                case 'minecraft:falling_dust':\n                    reader\n                        .expect(' ')\n                        .skip();\n                    const blockResult = new ctx.parsers.Block().parse(reader, ctx);\n                    const block = blockResult.data;\n                    Parser_1.combineArgumentParserResult(ans, blockResult);\n                    ans.data.param = block;\n                    break;\n                case 'minecraft:item':\n                    reader\n                        .expect(' ')\n                        .skip();\n                    const itemResult = new ctx.parsers.Item().parse(reader, ctx);\n                    const item = itemResult.data;\n                    Parser_1.combineArgumentParserResult(ans, itemResult);\n                    ans.data.param = item;\n                    break;\n                default:\n                    break;\n            }\n        }\n        catch (p) {\n            ans.errors.push(p);\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    getExamples() {\n        return ['minecraft:cloud', 'minecraft:dust 1.0 1.0 1.0 1.0'];\n    }\n}\nexports.ParticleArgumentParser = ParticleArgumentParser;\nParticleArgumentParser.identity = 'Particle';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScoreboardSlotArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst scoreboard_1 = require(\"../types/scoreboard\");\nconst Token_1 = require(\"../types/Token\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass ScoreboardSlotArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super();\n        this.identity = 'scoreboardSlot';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create('');\n        const start = reader.cursor;\n        const categoryResult = new ctx.parsers.Literal(...scoreboard_1.scoreboard.SlotCategory).parse(reader, ctx);\n        const category = categoryResult.data;\n        categoryResult.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.type)];\n        Parser_1.combineArgumentParserResult(ans, categoryResult);\n        if (category && reader.peek() === scoreboard_1.scoreboard.SlotSep) {\n            if (category !== 'sidebar') {\n                ans.errors.push(new ParsingError_1.ParsingError({ start: reader.cursor, end: reader.cursor + 1 }, locales_1.locale('unexpected-scoreboard-sub-slot')));\n                ans.data = category;\n            }\n            else {\n                reader.skip();\n                const start = reader.cursor;\n                const teamResult = new ctx.parsers.Literal(...scoreboard_1.scoreboard.SlotColors.map(v => `team${scoreboard_1.scoreboard.SlotSep}${v}`)).parse(reader, ctx);\n                const team = teamResult.data;\n                teamResult.tokens = [Token_1.Token.from(start, reader, Token_1.TokenType.type)];\n                Parser_1.combineArgumentParserResult(ans, teamResult);\n                ans.data = `${category}${scoreboard_1.scoreboard.SlotSep}${team}`;\n            }\n        }\n        else {\n            ans.data = category;\n        }\n        return ans;\n    }\n    getExamples() {\n        return ['belowName', 'sidebar.team.red'];\n    }\n}\nexports.ScoreboardSlotArgumentParser = ScoreboardSlotArgumentParser;\nScoreboardSlotArgumentParser.identity = 'ScoreboardSlot';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst StringNode_1 = require(\"../nodes/StringNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass StringArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(type = 1 /* String */, options = null, quote = null, quoteType = null) {\n        super();\n        this.type = type;\n        this.options = options;\n        this.quote = quote;\n        this.quoteType = quoteType;\n        this.identity = 'string';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new StringNode_1.StringNode('', '', {}));\n        const start = reader.cursor;\n        //#region Data.\n        try {\n            switch (this.type) {\n                case 2 /* Greedy */:\n                    ans.data.value = reader.readRemaining();\n                    break;\n                case 1 /* String */:\n                    ans.data.value = reader.readString({ mapping: ans.data.mapping });\n                    break;\n                case 0 /* Unquoted */:\n                default:\n                    ans.data.value = reader.readUnquotedString({ mapping: ans.data.mapping });\n                    break;\n            }\n        }\n        catch (e) {\n            /* istanbul ignore next */\n            ans.errors = [e];\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        ans.data.raw = reader.string.slice(start, reader.cursor);\n        //#endregion\n        //#region Errors.\n        /// Quotation marks.\n        /* istanbul ignore next */\n        const quote = typeof this.quote === 'string' ? ctx.config.lint[this.quote] : this.quote;\n        /* istanbul ignore next */\n        const quoteType = typeof this.quoteType === 'string' ? ctx.config.lint[this.quoteType] : this.quoteType;\n        /* istanbul ignore next */\n        ans.errors.push(...utils_1.validateStringQuote(ans.data.raw, ans.data.value, ans.data[ArgumentNode_1.NodeRange], quote, quoteType, typeof this.quote === 'string' ? this.quote : undefined, typeof this.quoteType === 'string' ? this.quoteType : undefined));\n        /// Unknown values.\n        if (this.options && !this.options.includes(ans.data.value)) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', utils_1.arrayToMessage(this.options, true, 'or'), locales_1.locale('punc.quote', ans.data.value))));\n        }\n        //#endregion\n        //#region Completions.\n        if (this.options && start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n            const firstChar = reader.string.charAt(start);\n            const currentType = StringReader_1.StringReader.isQuote(firstChar) ?\n                (firstChar === '\"' ? 'always double' : 'always single') :\n                null;\n            for (const option of this.options) {\n                let insertText;\n                if (currentType) {\n                    insertText = utils_1.quoteString(option, currentType, true).slice(1, -1);\n                    ans.completions.push({ label: option, insertText, start: start + 1, end: reader.cursor - 1 });\n                }\n                else {\n                    insertText = utils_1.quoteString(option, quoteType ? quoteType[1] : 'prefer double', quote ? quote[1] : false);\n                    ans.completions.push({ label: option, insertText, start, end: reader.cursor });\n                }\n            }\n        }\n        //#endregion\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.string));\n        return ans;\n    }\n}\nexports.StringArgumentParser = StringArgumentParser;\nStringArgumentParser.identity = 'String';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst types_1 = require(\"../types\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass TagArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super(...arguments);\n        this.identity = 'tag';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create('');\n        const category = ClientCache_1.getSafeCategory(ctx.cache, 'tag');\n        //#region Data\n        const start = reader.cursor;\n        const value = reader.readUnquotedString();\n        ans.data = value;\n        //#endregion\n        //#region Completions\n        if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n            ans.completions.push(...ClientCache_1.getCompletions(ctx.cache, 'tag', start, reader.cursor));\n        }\n        //#endregion\n        //#region Tokens\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.variable));\n        //#endregion\n        //#region Errors\n        if (!value) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('tag'), locales_1.locale('nothing')), false));\n        }\n        else {\n            if (ctx.config.lint.nameOfTags && !types_1.checkNamingConvention(value, ctx.config.lint.nameOfTags)) {\n                const [severity, rule] = ctx.config.lint.nameOfTags;\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + value.length }, locales_1.locale('tag-not-following-convention', locales_1.locale('punc.quote', value), utils_1.arrayToMessage(types_1.getConventionNames(rule), true, 'or')), true, types_1.getDiagnosticSeverity(severity)));\n            }\n            if (ctx.config.lint.strictTagCheck && ctx.config.lint.strictTagCheck[1] && !Object.keys(category).includes(value)) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + value.length }, locales_1.locale('undefined-tag', locales_1.locale('punc.quote', value)), undefined, types_1.getDiagnosticSeverity(ctx.config.lint.strictTagCheck[0])));\n            }\n        }\n        //#endregion\n        //#region Cache\n        if (Object.keys(category).includes(value)) {\n            ans.cache = {\n                tag: {\n                    [value]: {\n                        def: [],\n                        ref: [{ start, end: start + value.length }]\n                    }\n                }\n            };\n        }\n        //#endregion\n        return ans;\n    }\n    getExamples() {\n        return ['foo'];\n    }\n}\nexports.TagArgumentParser = TagArgumentParser;\nTagArgumentParser.identity = 'Tag';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TeamArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst types_1 = require(\"../types\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass TeamArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(isDefinition = false) {\n        super();\n        this.isDefinition = isDefinition;\n        this.identity = 'team';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create('');\n        const category = ClientCache_1.getSafeCategory(ctx.cache, 'team');\n        //#region Data\n        const start = reader.cursor;\n        const value = reader.readUnquotedString();\n        ans.data = value;\n        //#endregion\n        //#region Completions\n        if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n            ans.completions.push(...ClientCache_1.getCompletions(ctx.cache, 'team', start, reader.cursor));\n        }\n        //#endregion\n        //#region Tokens\n        if (this.isDefinition) {\n            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.variable, new Set([Token_1.TokenModifier.declaration])));\n        }\n        else {\n            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.variable));\n        }\n        //#endregion\n        //#region Errors & Cache\n        if (!value) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('team'), locales_1.locale('nothing')), false));\n        }\n        else {\n            if (this.isDefinition) {\n                ans.cache = {\n                    team: {\n                        [value]: {\n                            def: [{ start, end: start + value.length }],\n                            ref: []\n                        }\n                    }\n                };\n            }\n            else {\n                if (Object.keys(category).includes(value)) {\n                    ans.cache = {\n                        team: {\n                            [value]: {\n                                def: [],\n                                ref: [{ start, end: start + value.length }]\n                            }\n                        }\n                    };\n                }\n                else if (ctx.config.lint.strictTeamCheck) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + value.length }, locales_1.locale('undefined-team', locales_1.locale('punc.quote', value)), undefined, types_1.getDiagnosticSeverity(ctx.config.lint.strictTeamCheck[0])));\n                }\n            }\n            if (ctx.config.lint.nameOfTeams && !types_1.checkNamingConvention(value, ctx.config.lint.nameOfTeams)) {\n                const [severity, rule] = ctx.config.lint.nameOfTeams;\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + value.length }, locales_1.locale('team-not-following-convention', locales_1.locale('punc.quote', value), utils_1.arrayToMessage(types_1.getConventionNames(rule), true, 'or')), true, types_1.getDiagnosticSeverity(severity)));\n            }\n        }\n        //#endregion\n        return ans;\n    }\n    getExamples() {\n        return ['foo'];\n    }\n}\nexports.TeamArgumentParser = TeamArgumentParser;\nTeamArgumentParser.identity = 'Team';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TextComponentArgumentParser = void 0;\nconst vscode_json_languageservice_1 = require(\"vscode-json-languageservice\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst TextComponent_1 = require(\"../nodes/TextComponent\");\nconst common_1 = require(\"../services/common\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst JsonSchemaHelper_1 = require(\"../utils/JsonSchemaHelper\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass TextComponentArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super(...arguments);\n        this.identity = 'textComponent';\n    }\n    /* istanbul ignore next */\n    parse(reader, ctx) {\n        const start = reader.cursor;\n        const raw = reader.readRemaining();\n        const end = reader.cursor;\n        const ans = Parser_1.ArgumentParserResult.create(new TextComponent_1.TextComponentNode(raw));\n        const text = ' '.repeat(start) + raw;\n        const textDoc = vscode_json_languageservice_1.TextDocument.create('dhp:///text_component.json', 'json', 0, text);\n        const schema = ctx.jsonSchemas.get('text_component');\n        const jsonDocument = common_1.parseJsonNode({\n            config: ctx.config,\n            textDoc,\n            commandTree: ctx.commandTree,\n            jsonSchemas: ctx.jsonSchemas,\n            schema,\n            schemaType: 'text_component',\n            service: ctx.service,\n            uri: ctx.service.parseUri(ctx.textDoc.uri),\n            vanillaData: {\n                BlockDefinition: ctx.blockDefinition,\n                NamespaceSummary: ctx.namespaceSummary,\n                Nbtdoc: ctx.nbtdoc,\n                Registry: ctx.registry\n            }\n        });\n        //#region Data.\n        ans.data.document = textDoc;\n        // ans.data.jsonDocument = jsonDocument\n        ans.data[ArgumentNode_1.NodeRange] = { start, end };\n        //#endregion\n        //#region Errors.\n        ctx.service.jsonService.doValidation(textDoc, jsonDocument.json).then(diagnostics => {\n            for (const diag of diagnostics) {\n                ans.errors.push(new ParsingError_1.ParsingError({ start: diag.range.start.character, end: diag.range.end.character }, diag.message.endsWith('.') ? diag.message.slice(0, -1) : diag.message, undefined, diag.severity));\n            }\n        });\n        Parser_1.combineArgumentParserResult(ans, jsonDocument);\n        //#endregion\n        //#region Completions.\n        JsonSchemaHelper_1.JsonSchemaHelper.suggest(ans.completions, jsonDocument.json.root, schema, ctx);\n        //#endregion\n        return ans;\n    }\n    /* istanbul ignore next */\n    getExamples() {\n        return ['\"hello world\"', '\"\"', '{\"text\":\"hello world\"}', '[\"\"]'];\n    }\n}\nexports.TextComponentArgumentParser = TextComponentArgumentParser;\nTextComponentArgumentParser.identity = 'TextComponent';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TimeArgumentParser = void 0;\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst TimeNode_1 = require(\"../nodes/TimeNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst utils_1 = require(\"../utils\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass TimeArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super();\n        this.identity = 'time';\n    }\n    parse(reader, ctx) {\n        const ans = Parser_1.ArgumentParserResult.create(new TimeNode_1.TimeNode(NaN, '', 't'));\n        const start = reader.cursor;\n        const numberResult = new ctx.parsers.Number('float', 0).parse(reader, ctx);\n        Parser_1.combineArgumentParserResult(ans, numberResult);\n        ans.data.value = numberResult.data.valueOf();\n        ans.data.raw = numberResult.data.toString();\n        if (ctx.cursor === reader.cursor) {\n            ans.completions.push(...utils_1.arrayToCompletions(TimeArgumentParser.Units, ctx.cursor, ctx.cursor));\n        }\n        if (StringReader_1.StringReader.canInUnquotedString(reader.peek())) {\n            const start = reader.cursor;\n            const unit = reader.read();\n            ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.keyword));\n            if (unit === 'd' || unit === 's' || unit === 't') {\n                ans.data.unit = unit;\n            }\n            else {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', locales_1.locale('time-unit'), locales_1.locale('punc.quote', unit))));\n            }\n        }\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    getExamples() {\n        return ['0d', '0s', '0t', '0'];\n    }\n}\nexports.TimeArgumentParser = TimeArgumentParser;\nTimeArgumentParser.identity = 'Time';\nTimeArgumentParser.Units = ['d', 's', 't'];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UuidArgumentParser = void 0;\nconst uuid_1 = require(\"uuid\");\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass UuidArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor() {\n        super(...arguments);\n        this.identity = 'uuid';\n    }\n    parse(reader, ctx) {\n        const start = reader.cursor;\n        const ans = Parser_1.ArgumentParserResult.create(reader.readUntilOrEnd(' '));\n        //#region Errors.\n        if (!UuidArgumentParser.Pattern.test(ans.data)) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', locales_1.locale('uuid'), locales_1.locale('punc.quote', ans.data))));\n        }\n        //#endregion\n        //#region Completions.\n        if (start <= ctx.cursor && ctx.cursor <= reader.cursor) {\n            const randomUuid = uuid_1.v4();\n            ans.completions.push({\n                label: 'RANDOM',\n                start, end: reader.cursor,\n                insertText: randomUuid,\n                detail: randomUuid,\n                filterText: ans.data,\n                kind: vscode_languageserver_1.CompletionItemKind.Snippet\n            });\n        }\n        //#endregion\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.number));\n        return ans;\n    }\n}\nexports.UuidArgumentParser = UuidArgumentParser;\nUuidArgumentParser.identity = 'Uuid';\nUuidArgumentParser.Pattern = /^[0-9a-f]{1,8}-[0-9a-f]{1,4}-[0-9a-f]{1,4}-[0-9a-f]{1,4}-[0-9a-f]{1,12}$/i;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VectorArgumentParser = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst VectorNode_1 = require(\"../nodes/VectorNode\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst Token_1 = require(\"../types/Token\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst ArgumentParser_1 = require(\"./ArgumentParser\");\nclass VectorArgumentParser extends ArgumentParser_1.ArgumentParser {\n    constructor(dimension, type = 'float', allowLocal = true, allowRelative = true, min = undefined, max = undefined) {\n        super();\n        this.dimension = dimension;\n        this.type = type;\n        this.allowLocal = allowLocal;\n        this.allowRelative = allowRelative;\n        this.min = min;\n        this.max = max;\n        this.identity = 'vector';\n        this.identity = `vector.${dimension}D`;\n    }\n    getVectorCompletion(type, cursor) {\n        const ans = {\n            label: type, insertText: `${type}$1`,\n            start: cursor, end: cursor,\n            insertTextFormat: vscode_languageserver_1.InsertTextFormat.Snippet,\n            kind: vscode_languageserver_1.CompletionItemKind.Snippet,\n            preselect: true,\n            sortText: type === \"~\" /* Relative */ ? VectorArgumentParser.RelativeSortText : VectorArgumentParser.LocalSortText\n        };\n        for (let i = 2; i <= this.dimension; i++) {\n            ans.label += ` ${type}`;\n            ans.insertText += ` ${type}$${i}`;\n        }\n        return ans;\n    }\n    parse(reader, { cursor: cursor }) {\n        const ans = Parser_1.ArgumentParserResult.create(new VectorNode_1.VectorNode());\n        const start = reader.cursor;\n        //#region Completions.\n        if (start === cursor) {\n            if (this.allowLocal) {\n                ans.completions.push(this.getVectorCompletion(\"^\" /* Local */, cursor));\n            }\n            if (this.allowRelative) {\n                ans.completions.push(this.getVectorCompletion(\"~\" /* Relative */, cursor));\n            }\n        }\n        //#endregion\n        if (reader.canRead()) {\n            if (StringReader_1.StringReader.canInNumber(reader.peek()) ||\n                reader.peek() === \"^\" /* Local */ ||\n                reader.peek() === \"~\" /* Relative */) {\n                let dimension = this.dimension;\n                let hasLocal = false;\n                let hasNonLocal = false;\n                try {\n                    while (dimension) {\n                        const result = this.parseElement(ans, reader, cursor, this.dimension - dimension, hasLocal, hasNonLocal);\n                        hasLocal = hasLocal || result.type === \"^\" /* Local */;\n                        hasNonLocal = hasNonLocal || result.type !== \"^\" /* Local */;\n                        if (--dimension) {\n                            reader\n                                .expect(VectorArgumentParser.Sep)\n                                .skipWhiteSpace();\n                        }\n                    }\n                }\n                catch (p) {\n                    ans.errors.push(new ParsingError_1.ParsingError(p.range, p.message, false));\n                }\n                if (hasLocal && hasNonLocal) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('mixed-coordinates')));\n                }\n            }\n            else {\n                ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('vector'), locales_1.locale('punc.quote', reader.peek())), false));\n            }\n        }\n        else {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: start + 1 }, locales_1.locale('expected-got', locales_1.locale('vector'), locales_1.locale('nothing')), false));\n            if (cursor === start) {\n                this.getCompletionsForSymbols(ans, false, false, cursor);\n            }\n        }\n        //#region Tokens\n        ans.tokens.push(Token_1.Token.from(start, reader, Token_1.TokenType.vector));\n        //#endregion\n        ans.data[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        return ans;\n    }\n    /**\n     * Add next element to `ans`, and also return it.\n     */\n    parseElement(ans, reader, cursor, index, hasLocal, hasNonLocal) {\n        const ansElement = new VectorNode_1.VectorElementNode(\"\" /* Absolute */, 0, '', this.type === 'float');\n        const start = reader.cursor;\n        if (cursor === reader.cursor) {\n            this.getCompletionsForSymbols(ans, hasLocal, hasNonLocal, cursor);\n        }\n        const firstChar = reader.peek();\n        if (firstChar === \"^\" /* Local */ || firstChar === \"~\" /* Relative */) {\n            ansElement.type = firstChar;\n            reader.skip();\n        }\n        if (StringReader_1.StringReader.canInNumber(reader.peek())) {\n            try {\n                const start = reader.cursor;\n                let num;\n                if (this.type === 'integer' && ansElement.type === \"\" /* Absolute */) {\n                    num = reader.readInt();\n                }\n                else {\n                    num = reader.readFloat();\n                }\n                const str = reader.string.slice(start, reader.cursor);\n                ansElement.raw = str;\n                ansElement.value = num;\n                const min = this.min instanceof Array ? this.min[index] : this.min;\n                const max = this.max instanceof Array ? this.max[index] : this.max;\n                if (min !== undefined && !(num >= min)) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', locales_1.locale('number.>=', min), num)));\n                }\n                if (max !== undefined && !(num <= max)) {\n                    ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('expected-got', locales_1.locale('number.<=', max), num)));\n                }\n            }\n            catch (p) {\n                ans.errors.push(p);\n            }\n        }\n        if (!this.allowLocal && ansElement.type === \"^\" /* Local */) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('unexpected-local-coordinate', locales_1.locale('punc.quote', ansElement.toString()))));\n        }\n        else if (!this.allowRelative && ansElement.type === \"~\" /* Relative */) {\n            ans.errors.push(new ParsingError_1.ParsingError({ start, end: reader.cursor }, locales_1.locale('unexpected-relative-coordinate', locales_1.locale('punc.quote', ansElement.toString()))));\n        }\n        ansElement[ArgumentNode_1.NodeRange] = { start, end: reader.cursor };\n        ans.data.push(ansElement);\n        return ansElement;\n    }\n    getCompletionsForSymbols(ans, hasLocal, hasNonLocal, cursor) {\n        if (this.allowRelative && !hasLocal) {\n            ans.completions.push({\n                start: cursor, end: cursor,\n                label: \"~\" /* Relative */,\n                sortText: VectorArgumentParser.RelativeSortText\n            });\n        }\n        if (this.allowLocal && !hasNonLocal) {\n            ans.completions.push({\n                start: cursor, end: cursor,\n                label: \"^\" /* Local */,\n                sortText: VectorArgumentParser.LocalSortText\n            });\n        }\n    }\n    getExamples() {\n        if (this.dimension === 1) {\n            return ['0', '~', '0.1', '~1'];\n        }\n        else if (this.dimension === 2) {\n            return ['0 0', '~ ~', '0.1 -0.5', '~1 ~-2'];\n        }\n        else if (this.dimension === 3) {\n            return ['0 0 0', '~ ~ ~', '^ ^ ^', '^1 ^ ^-5', '0.1 -0.5 .9', '~0.5 ~1 ~-5'];\n        }\n        else {\n            return ['0 0 0 0', '~ ~ ~ ~', '^ ^ ^ ^'];\n        }\n    }\n}\nexports.VectorArgumentParser = VectorArgumentParser;\nVectorArgumentParser.identity = 'Vector';\nVectorArgumentParser.LocalSortText = '2';\nVectorArgumentParser.RelativeSortText = '1';\nVectorArgumentParser.Sep = ' ';\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ParserCollection\"), exports);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../datapack-language-server/lib/plugins sync recursive\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContributorImpl = void 0;\nclass ContributorImpl {\n    constructor() {\n        this.values = new Map();\n    }\n    add(id, value) {\n        if (this.values.has(id)) {\n            throw new Error(`Value with ID “${id}” already exists.`);\n        }\n        this.values.set(id, value);\n    }\n}\nexports.ContributorImpl = ContributorImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LanguageConfigBuilderFactoryImpl = exports.LanguageConfigBuilderImpl = void 0;\nclass LanguageConfigBuilderImpl {\n    constructor(contributions) {\n        this.contributions = contributions;\n        this.result = {};\n        this.build = () => this.result;\n        this.syntaxComponent = (id) => {\n            var _a;\n            if (!this.contributions.syntaxComponentParsers) {\n                throw new Error('No syntax component has been contributed.');\n            }\n            const value = this.contributions.syntaxComponentParsers.get(id);\n            if (!value) {\n                throw new Error(`No syntax component has the ID “${id}”.`);\n            }\n            (this.result.syntaxComponentParsers = (_a = this.result.syntaxComponentParsers) !== null && _a !== void 0 ? _a : []).push(value);\n            return this;\n        };\n    }\n}\nexports.LanguageConfigBuilderImpl = LanguageConfigBuilderImpl;\nclass LanguageConfigBuilderFactoryImpl {\n    constructor(contributions) {\n        this.contributions = contributions;\n        this.builders = new Map();\n    }\n    configure(id) {\n        var _a;\n        const builder = (_a = this.builders.get(id)) !== null && _a !== void 0 ? _a : new LanguageConfigBuilderImpl(this.contributions);\n        this.builders.set(id, builder);\n        return builder;\n    }\n    build() {\n        const ans = new Map();\n        for (const [id, builder] of this.builders) {\n            ans.set(id, builder.build());\n        }\n        return ans;\n    }\n}\nexports.LanguageConfigBuilderFactoryImpl = LanguageConfigBuilderFactoryImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plugin = exports.PluginID = void 0;\n/**\n * The symbol for storing the ID of this plugin. There's no technical regulations to\n * the format of this ID, but conventionally we use the same format as an namespaced ID.\n * Unless explicitly stated, this also applies to other \"ID\"s used in the plugin.\n */\nexports.PluginID = Symbol('PluginID');\nvar Plugin;\n(function (Plugin) {\n    function is(value) {\n        return typeof value[exports.PluginID] === 'string';\n    }\n    Plugin.is = is;\n})(Plugin = exports.Plugin || (exports.Plugin = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluginLoader = void 0;\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst _1 = require(\".\");\nconst utils_1 = require(\"../utils\");\nconst ContributorImpl_1 = require(\"./ContributorImpl\");\nconst LanguageConfigImpl_1 = require(\"./LanguageConfigImpl\");\nconst Plugin_1 = require(\"./Plugin\");\nclass PluginLoader {\n    static load(directory) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const startTime = new Date().getTime();\n            const map = new Map();\n            const imports = [];\n            try {\n                imports.push(yield Promise.resolve().then(() => __importStar(require('./builtin/DocCommentPlugin'))));\n                imports.push(yield Promise.resolve().then(() => __importStar(require('./builtin/McfunctionPlugin'))));\n                if (directory && (yield utils_1.pathAccessible(directory))) {\n                    const names = yield fs_1.promises.readdir(directory);\n                    imports.push(...yield Promise.all(names\n                        .filter(v => v.endsWith('.js'))\n                        .map((v) => __awaiter(this, void 0, void 0, function* () { return Promise.resolve().then(() => __importStar(require(/* webpackIgnore: true */ path_1.join(directory, v)))); }))));\n                }\n                for (const file of imports) {\n                    for (const key of Object.keys(file)) {\n                        const variable = file[key];\n                        let instance;\n                        try {\n                            instance = new variable();\n                        }\n                        catch (ignored) {\n                            continue;\n                        }\n                        if (_1.Plugin.is(instance)) {\n                            if (!map.has(instance[Plugin_1.PluginID])) {\n                                map.set(instance[Plugin_1.PluginID], instance);\n                                console.info(`[PluginLoader] Registered “${instance[Plugin_1.PluginID]}”`);\n                            }\n                            else {\n                                throw new Error(`Plugin ID “${instance[Plugin_1.PluginID]}” has conflicts.`);\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                console.error('[PluginLoader] ', e);\n            }\n            console.info(`[PluginLoader] ${new Date().getTime() - startTime} ms`);\n            return map;\n        });\n    }\n    static getContributions(plugins) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const languageDefinitionContributor = new ContributorImpl_1.ContributorImpl();\n            const syntaxComponentContributor = new ContributorImpl_1.ContributorImpl();\n            for (const plugin of plugins.values()) {\n                yield ((_a = plugin.contributeLanguages) === null || _a === void 0 ? void 0 : _a.call(plugin, languageDefinitionContributor));\n                yield ((_b = plugin.contributeSyntaxComponentParsers) === null || _b === void 0 ? void 0 : _b.call(plugin, syntaxComponentContributor));\n            }\n            return {\n                languageDefinitions: languageDefinitionContributor.values,\n                syntaxComponentParsers: syntaxComponentContributor.values\n            };\n        });\n    }\n    static getLanguageConfigs(plugins, contributions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const factory = new LanguageConfigImpl_1.LanguageConfigBuilderFactoryImpl(contributions);\n            for (const plugin of plugins.values()) {\n                yield ((_a = plugin.configureLanguages) === null || _a === void 0 ? void 0 : _a.call(plugin, factory));\n            }\n            return factory.build();\n        });\n    }\n}\nexports.PluginLoader = PluginLoader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyntaxComponent = void 0;\nconst types_1 = require(\"../types\");\nvar SyntaxComponent;\n(function (SyntaxComponent) {\n    function create(type, data, partial = {}) {\n        var _a;\n        return Object.assign({ type, range: (_a = partial.range) !== null && _a !== void 0 ? _a : { start: NaN, end: NaN } }, types_1.ArgumentParserResult.create(data, partial));\n    }\n    SyntaxComponent.create = create;\n})(SyntaxComponent = exports.SyntaxComponent || (exports.SyntaxComponent = {}));\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocCommentPlugin = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst __1 = require(\"../..\");\nconst locales_1 = require(\"../../locales\");\nconst nodes_1 = require(\"../../nodes\");\nconst types_1 = require(\"../../types\");\nconst StringReader_1 = require(\"../../utils/StringReader\");\nconst McfunctionPlugin_1 = require(\"./McfunctionPlugin\");\nclass DocCommentPlugin {\n    constructor() {\n        this[_a] = 'spgoding:doc_comment';\n    }\n    contributeSyntaxComponentParsers(contributor) {\n        contributor.add('spgoding:doc_comment/doc_comment', new DocCommentSyntaxComponentParser());\n    }\n    configureLanguages(factory) {\n        factory\n            .configure('mcfunction')\n            .syntaxComponent('spgoding:doc_comment/doc_comment');\n    }\n}\nexports.DocCommentPlugin = DocCommentPlugin;\n_a = __1.plugins.PluginID;\nclass DocCommentSyntaxComponentParser {\n    constructor() {\n        this.identity = 'spgoding:doc_comment/doc_comment';\n    }\n    test(reader) {\n        const boolean = reader\n            .skipSpace()\n            .remainingString.slice(0, 2) === '#>';\n        return [boolean, 1];\n    }\n    parse(reader, ctx) {\n        const ans = __1.plugins.SyntaxComponent.create(this.identity, { doc: new DocCommentNode() });\n        reader.skipSpace();\n        const start = reader.cursor;\n        this.parseComment(ans, reader, ctx);\n        ans.range = { start, end: reader.cursor };\n        return ans;\n    }\n    parseComment(ans, reader, ctx) {\n        var _c;\n        const start = reader.cursor;\n        const isFunctionDoc = /^[ \\t]*$/.test(reader.passedString);\n        const docComment = ans.data.doc;\n        const currentID = (_c = ctx.id) === null || _c === void 0 ? void 0 : _c.toString();\n        try {\n            reader\n                .expect('#')\n                .skip()\n                .expect('>')\n                .skip()\n                .skipSpace();\n            if (isFunctionDoc) {\n                const idStart = reader.cursor;\n                const idResult = new ctx.parsers\n                    .Identity('$function', undefined, undefined, undefined, true)\n                    .parse(reader, ctx);\n                docComment.functionID = idResult.data;\n                types_1.combineArgumentParserResult(ans, idResult);\n                const actualID = docComment.functionID.toString();\n                if (currentID && actualID !== currentID) {\n                    ans.errors.push(new types_1.ParsingError({ start: idStart, end: reader.cursor }, locales_1.locale('expected-got', locales_1.locale('punc.quote', currentID), locales_1.locale('punc.quote', actualID))));\n                }\n            }\n            else {\n                docComment.plainText += reader.readLine() + '\\n';\n            }\n            let indentBeforeLastHash = 0;\n            let endOfDocComment = reader.cursor;\n            while (reader.nextLine(ctx.textDoc), reader.canRead()) {\n                const lineStart = reader.cursor;\n                reader.skipSpace();\n                if (reader.peek() === '#' && (StringReader_1.StringReader.isWhiteSpace(reader.peek(1)) || reader.peek(1) === '@')) {\n                    indentBeforeLastHash = reader.cursor - lineStart;\n                    reader.skip();\n                    // Still in the range of doc comment.\n                    const indentStart = reader.cursor;\n                    reader.skipSpace();\n                    if (reader.peek() === '@') {\n                        this.parseAnnotations(docComment.annotations, reader, ctx, reader.cursor - indentStart);\n                    }\n                    else {\n                        docComment.plainText += reader.readLine() + '\\n';\n                    }\n                }\n                else {\n                    endOfDocComment = reader\n                        .clone()\n                        .lastLine(ctx.textDoc)\n                        .skipLine()\n                        .cursor;\n                    if (!isFunctionDoc) {\n                        // Attach the next command to this doc comment component.\n                        const commandIndent = reader.cursor - lineStart;\n                        this.parseCommand(ans, reader, ctx, indentBeforeLastHash, commandIndent, reader.string.slice(lineStart, reader.cursor));\n                    }\n                    else {\n                        reader\n                            .lastLine(ctx.textDoc)\n                            .readLine();\n                    }\n                    break;\n                }\n            }\n            docComment[nodes_1.NodeRange] = { start, end: endOfDocComment };\n            docComment.raw = reader.string.slice(start, endOfDocComment);\n        }\n        catch (p) {\n            ans.errors.push(p);\n        }\n        //#region Annotation completions.\n        const flattenedAnnotations = docComment.flattenedAnnotations;\n        for (const anno of flattenedAnnotations) {\n            if (anno.length > 0 && types_1.isInRange(ctx.cursor, anno[0].range)) {\n                const pool = isFunctionDoc ? DocCommentSyntaxComponentParser.FunctionAnnotations : DocCommentSyntaxComponentParser.GeneralAnnotations;\n                ans.completions.push(...__1.arrayToCompletions(pool, anno[0].range.start, anno[0].range.end, v => (Object.assign(Object.assign({}, v), { kind: vscode_languageserver_1.CompletionItemKind.Keyword }))));\n                break;\n            }\n        }\n        //#endregion\n        const visibility = this.getVisibility(ans, flattenedAnnotations, currentID, ctx);\n        this.setCache(ans, visibility, docComment);\n    }\n    parseAnnotations(annotations, reader, ctx, indent) {\n        var _c, _d;\n        const start = reader.cursor;\n        const value = reader.readUntilOrEnd(' ', '\\r', '\\n');\n        const anno = { value: { range: { start, end: reader.cursor }, raw: value } };\n        if (reader.peek() === ' ') {\n            reader.skipSpace();\n            this.parseAnnotations(anno.children = (_c = anno.children) !== null && _c !== void 0 ? _c : [], reader, ctx, indent);\n        }\n        else {\n            while (true) {\n                const clonedReader = reader\n                    .clone()\n                    .nextLine(ctx.textDoc)\n                    .skipSpace();\n                if (clonedReader.peek() === '#') {\n                    clonedReader.skip();\n                    const indentStart = clonedReader.cursor;\n                    clonedReader.skipSpace();\n                    const indentEnd = clonedReader.cursor;\n                    const nextIndent = indentEnd - indentStart;\n                    const skippedAdditionalSpaces = clonedReader.string.slice(indentStart + indent, indentEnd);\n                    if (skippedAdditionalSpaces.replace(/\\t/g, '  ').length >= 2) {\n                        reader.cursor = clonedReader.cursor;\n                        this.parseAnnotations(anno.children = (_d = anno.children) !== null && _d !== void 0 ? _d : [], reader, ctx, nextIndent);\n                        continue;\n                    }\n                }\n                break;\n            }\n        }\n        annotations.push(anno);\n    }\n    getVisibility(ans, flattenedAnnotations, currentID, ctx) {\n        const visibilities = [];\n        for (const anno of flattenedAnnotations) {\n            if (anno.length > 0) {\n                switch (anno[0].raw) {\n                    case '@private':\n                        if (currentID) {\n                            visibilities.push(...types_1.getCacheVisibilities('private', 'function', ctx.id));\n                        }\n                        break;\n                    case '@within':\n                        const sandboxPattern = (index) => __1.escapeIdentityPattern(anno[index].raw);\n                        if (anno.length === 2) {\n                            visibilities.push({ type: '*', pattern: sandboxPattern(1) });\n                        }\n                        else if (anno.length >= 3) {\n                            if (types_1.isFileType(anno[1].raw) || anno[1].raw === '*') {\n                                visibilities.push({ type: anno[1].raw, pattern: sandboxPattern(2) });\n                            }\n                            else {\n                                ans.errors.push(new types_1.ParsingError(anno[1].range, locales_1.locale('expected-got', __1.arrayToMessage([...types_1.FileTypes, '*'], true, 'or'), locales_1.locale('punc.quote', anno[1].raw))));\n                            }\n                        }\n                        else {\n                            ans.errors.push(new types_1.ParsingError(anno[0].range, locales_1.locale('expected-got', locales_1.locale('more-arguments'), locales_1.locale('nothing'))));\n                        }\n                        break;\n                    case '@internal':\n                        if (currentID) {\n                            visibilities.push(...types_1.getCacheVisibilities('internal', 'function', ctx.id));\n                        }\n                        break;\n                    case '@public':\n                    case '@api':\n                        visibilities.push(...types_1.getCacheVisibilities('public', 'function', ctx.id));\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        return visibilities;\n    }\n    parseCommand(ans, reader, ctx, indentBeforeLastHash, commandIndent, indent) {\n        var _c;\n        const parser = new McfunctionPlugin_1.CommandSyntaxComponentParser();\n        const cmdResult = parser.parse(reader, ctx);\n        (ans.data.commands = (_c = ans.data.commands) !== null && _c !== void 0 ? _c : []).push({ component: cmdResult, indent });\n        types_1.combineArgumentParserResult(ans, cmdResult);\n        if (commandIndent - indentBeforeLastHash >= 1) {\n            const clonedReader = reader\n                .clone()\n                .nextLine(ctx.textDoc);\n            const nextLineStart = clonedReader.cursor;\n            const nextSkippedSpaces = clonedReader.readSpace();\n            const nextCommandIndent = clonedReader.cursor - nextLineStart;\n            if (nextCommandIndent - indentBeforeLastHash >= 1) {\n                reader.cursor = clonedReader.cursor;\n                this.parseCommand(ans, reader, ctx, indentBeforeLastHash, nextCommandIndent, nextSkippedSpaces);\n            }\n        }\n    }\n    setCache(ans, visibility, docComment) {\n        var _c, _d;\n        for (const type of Object.keys(ans.cache)) {\n            for (const id of Object.keys(ans.cache[type])) {\n                const unit = ans.cache[type][id];\n                docComment[nodes_1.NodeDescription] = docComment.valueOf();\n                unit.doc = docComment[nodes_1.NodeDescription];\n                for (const pos of [...(_c = unit.dcl) !== null && _c !== void 0 ? _c : [], ...(_d = unit.def) !== null && _d !== void 0 ? _d : []]) {\n                    pos.visibility = visibility;\n                }\n            }\n        }\n    }\n}\nDocCommentSyntaxComponentParser.GeneralAnnotations = [\n    '@internal',\n    '@private',\n    '@public',\n    '@within'\n];\nDocCommentSyntaxComponentParser.FunctionAnnotations = [\n    ...DocCommentSyntaxComponentParser.GeneralAnnotations,\n    '@api',\n    '@context',\n    '@deprecated',\n    '@handles',\n    '@input',\n    '@output',\n    '@override',\n    '@patch',\n    '@reads',\n    '@user',\n    '@writes'\n];\nclass DocCommentNode extends nodes_1.ArgumentNode {\n    constructor() {\n        super(...arguments);\n        this[_b] = 'builtin:doc_comment';\n        this.raw = '';\n        this.plainText = '';\n        this.annotations = [];\n        this.functionID = undefined;\n    }\n    get flattenedAnnotations() {\n        return DocCommentNode.flattenAnnotations(this.annotations);\n    }\n    toString() {\n        return this.raw;\n    }\n    valueOf() {\n        return this.plainText + '\\n\\n' +\n            this.flattenedAnnotations\n                .map(values => values.map(v => v.raw).join(' '))\n                .join('\\n\\n');\n    }\n    static flattenAnnotations(annotations, prefix = []) {\n        const ans = [];\n        for (const anno of annotations) {\n            if (anno.children) {\n                ans.push(...this.flattenAnnotations(anno.children, [...prefix, anno.value]));\n            }\n            else {\n                ans.push([...prefix, anno.value]);\n            }\n        }\n        return ans;\n    }\n}\n_b = nodes_1.NodeType;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandSyntaxComponentParser = exports.McfunctionPlugin = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst __1 = require(\"../..\");\nconst CommandParser_1 = require(\"../../parsers/CommandParser\");\nconst StringReader_1 = require(\"../../utils/StringReader\");\nclass McfunctionPlugin {\n    constructor() {\n        this[_a] = 'spgoding:mcfunction';\n    }\n    contributeLanguages(contributor) {\n        contributor.add('mcfunction', { extensions: ['.mcfunction'] });\n    }\n    contributeSyntaxComponentParsers(contributor) {\n        contributor.add('spgoding:mcfunction/command', new CommandSyntaxComponentParser());\n    }\n    configureLanguages(factory) {\n        factory\n            .configure('mcfunction')\n            .syntaxComponent('spgoding:mcfunction/command');\n    }\n}\nexports.McfunctionPlugin = McfunctionPlugin;\n_a = __1.plugins.PluginID;\nclass CommandSyntaxComponentParser {\n    constructor() {\n        this.identity = 'spgoding:mcfunction/command';\n    }\n    test() {\n        return [true, 0];\n    }\n    parse(reader, ctx) {\n        const start = reader.cursor;\n        const end = ctx.textDoc.offsetAt(vscode_languageserver_1.Position.create(ctx.textDoc.positionAt(start).line, Infinity));\n        const commandReader = new StringReader_1.StringReader(reader.string, start, end);\n        commandReader.skipSpace();\n        while (true) {\n            const lastChar = commandReader.string.charAt(commandReader.end - 1);\n            if (StringReader_1.StringReader.isLineSeparator(lastChar) && commandReader.end > start) {\n                commandReader.end--;\n            }\n            else {\n                break;\n            }\n        }\n        const parser = new CommandParser_1.CommandParser();\n        const { data } = parser.parse(commandReader, ctx);\n        reader.cursor = commandReader.cursor;\n        return data;\n    }\n}\nexports.CommandSyntaxComponentParser = CommandSyntaxComponentParser;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Contributor\"), exports);\n__exportStar(require(\"./LanguageConfig\"), exports);\n__exportStar(require(\"./LanguageDefinition\"), exports);\n__exportStar(require(\"./Plugin\"), exports);\n__exportStar(require(\"./SyntaxComponent\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst appdata_path_1 = __importDefault(require(\"appdata-path\"));\nconst fs = __importStar(require(\"fs\"));\nconst fs_1 = require(\"fs\");\nconst path_1 = __importDefault(require(\"path\"));\nconst rfdc_1 = __importDefault(require(\"rfdc\"));\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst vscode_uri_1 = require(\"vscode-uri\");\nconst _1 = require(\".\");\nconst locales_1 = require(\"./locales\");\nconst nodes_1 = require(\"./nodes\");\nconst PluginLoader_1 = require(\"./plugins/PluginLoader\");\nconst common_1 = require(\"./services/common\");\nconst DatapackLanguageService_1 = require(\"./services/DatapackLanguageService\");\nconst types_1 = require(\"./types\");\nconst ClientCache_1 = require(\"./types/ClientCache\");\nconst Config_1 = require(\"./types/Config\");\nconst utils_1 = require(\"./utils\");\nif (process.argv.length === 2) {\n    // When the server is launched from the cmd script, the process arguments\n    // are wiped. I don't know why it happens, but this is what it is.\n    // Therefore, we push a '--stdio' if the argument list is too short.\n    // See also my bug report at https://github.com/npm/cli/issues/1633.\n    process.argv.push('--stdio');\n}\nconst connection = vscode_languageserver_1.createConnection(vscode_languageserver_1.ProposedFeatures.all);\nlet cachePath;\nlet capabilities;\nlet defaultLocaleCode;\nlet workspaceRootUriStrings = [];\nlet service;\nconnection.onInitialize(({ workspaceFolders, initializationOptions: { storagePath, globalStoragePath, localeCode, customCapabilities }, capabilities: lspCapabilities }) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    capabilities = types_1.getClientCapabilities(lspCapabilities, customCapabilities);\n    defaultLocaleCode = localeCode !== null && localeCode !== void 0 ? localeCode : 'en';\n    globalStoragePath = globalStoragePath !== null && globalStoragePath !== void 0 ? globalStoragePath : appdata_path_1.default('spgoding.datapack-language-server');\n    if (globalStoragePath && !(yield utils_1.pathAccessible(globalStoragePath))) {\n        yield fs_1.promises.mkdir(globalStoragePath, { recursive: true });\n    }\n    if (storagePath && !(yield utils_1.pathAccessible(storagePath))) {\n        yield fs_1.promises.mkdir(storagePath, { recursive: true });\n    }\n    const pluginsPath = path_1.default.join(globalStoragePath, 'plugins');\n    if (pluginsPath && !(yield utils_1.pathAccessible(pluginsPath))) {\n        yield fs_1.promises.mkdir(pluginsPath, { recursive: true });\n    }\n    let cacheFile;\n    cachePath = storagePath ? path_1.default.join(storagePath, './cache.json') : undefined;\n    if (cachePath && (yield utils_1.pathAccessible(cachePath))) {\n        try {\n            cacheFile = JSON.parse(yield utils_1.readFile(cachePath));\n        }\n        catch (e) {\n            console.error('[onInitialize] Reading cache', e);\n        }\n    }\n    cacheFile = cacheFile !== null && cacheFile !== void 0 ? cacheFile : rfdc_1.default()(ClientCache_1.DefaultCacheFile);\n    console.info(`[onInitialize] CacheVersion = ${ClientCache_1.CacheVersion}`);\n    console.info(`[onInitialize] ReleaseNotesVersion = ${_1.ReleaseNotesVersion}`);\n    console.info(`[onInitialize] globalStoragePath = ${globalStoragePath}`);\n    console.info(`[onInitialize] cachePath = ${cachePath}`);\n    console.info(`[onInitialize] pluginsPath = ${pluginsPath}`);\n    service = new DatapackLanguageService_1.DatapackLanguageService({\n        applyEdit: connection.workspace.applyEdit.bind(connection.workspace),\n        cacheFile,\n        capabilities,\n        createWorkDoneProgress: connection.window.createWorkDoneProgress.bind(connection.window),\n        fetchConfig,\n        globalStoragePath,\n        plugins: yield PluginLoader_1.PluginLoader.load(pluginsPath),\n        publishDiagnostics: connection.sendDiagnostics.bind(connection),\n        showInformationMessage: connection.window.showInformationMessage.bind(connection.window),\n        versionInformation: yield getLatestVersions()\n    });\n    yield service.init();\n    workspaceRootUriStrings = (_a = workspaceFolders === null || workspaceFolders === void 0 ? void 0 : workspaceFolders.map(v => v.uri)) !== null && _a !== void 0 ? _a : [];\n    const result = {\n        capabilities: {\n            callHierarchyProvider: true,\n            colorProvider: true,\n            completionProvider: !capabilities.dynamicRegistration.competion ? {\n                triggerCharacters: DatapackLanguageService_1.DatapackLanguageService.AllTriggerCharacters,\n                allCommitCharacters: DatapackLanguageService_1.DatapackLanguageService.AllCommitCharacters\n            } : undefined,\n            declarationProvider: true,\n            definitionProvider: true,\n            documentFormattingProvider: !capabilities.dynamicRegistration.documentFormatting,\n            documentHighlightProvider: !capabilities.dynamicRegistration.documentHighlight,\n            documentLinkProvider: {},\n            executeCommandProvider: {\n                commands: [\n                    'datapack.createFile',\n                    'datapack.evaludateJavaScript',\n                    'datapack.fixFile',\n                    'datapack.fixWorkspace',\n                    'datapack.redownloadData',\n                    'datapack.regenerateCache'\n                ]\n            },\n            foldingRangeProvider: !capabilities.dynamicRegistration.foldingRange,\n            hoverProvider: true,\n            codeActionProvider: {\n                codeActionKinds: [vscode_languageserver_1.CodeActionKind.QuickFix, vscode_languageserver_1.CodeActionKind.SourceFixAll]\n            },\n            referencesProvider: true,\n            renameProvider: {\n                prepareProvider: true\n            },\n            selectionRangeProvider: !capabilities.dynamicRegistration.selectionRange,\n            semanticTokensProvider: {\n                legend: common_1.getSemanticTokensLegend(),\n                documentProvider: {\n                    edits: true\n                }\n            },\n            signatureHelpProvider: !capabilities.dynamicRegistration.signatureHelp ? {\n                triggerCharacters: [' ']\n            } : undefined,\n            textDocumentSync: {\n                change: vscode_languageserver_1.TextDocumentSyncKind.Incremental,\n                openClose: true\n            },\n            workspace: {\n                workspaceFolders: {\n                    supported: true,\n                    changeNotifications: true\n                }\n            }\n        }\n    };\n    return result;\n}));\nconnection.onInitialized(() => __awaiter(void 0, void 0, void 0, function* () {\n    var _b;\n    if (capabilities.dynamicRegistration.competion) {\n        connection.client.register(vscode_languageserver_1.CompletionRequest.type, {\n            documentSelector: [{ language: 'mcfunction' }],\n            allCommitCharacters: DatapackLanguageService_1.DatapackLanguageService.AllCommitCharacters,\n            triggerCharacters: DatapackLanguageService_1.DatapackLanguageService.AllTriggerCharacters\n        });\n        connection.client.register(vscode_languageserver_1.CompletionRequest.type, {\n            documentSelector: [{ scheme: 'file', pattern: '**/*.{json,mcmeta}' }],\n            allCommitCharacters: DatapackLanguageService_1.DatapackLanguageService.AllCommitCharacters,\n            triggerCharacters: DatapackLanguageService_1.DatapackLanguageService.GeneralTriggerCharacters\n        });\n    }\n    if (capabilities.dynamicRegistration.didChangeConfiguration) {\n        connection.client.register(vscode_languageserver_1.DidChangeConfigurationNotification.type, { section: 'datapack' });\n    }\n    if (capabilities.dynamicRegistration.documentFormatting) {\n        connection.client.register(vscode_languageserver_1.DocumentFormattingRequest.type, { documentSelector: [{ language: 'mcfunction' }] });\n    }\n    if (capabilities.dynamicRegistration.documentHighlight) {\n        connection.client.register(vscode_languageserver_1.DocumentHighlightRequest.type, { documentSelector: [{ language: 'mcfunction' }] });\n    }\n    if (capabilities.dynamicRegistration.foldingRange) {\n        connection.client.register(vscode_languageserver_1.FoldingRangeRequest.type, { documentSelector: [{ language: 'mcfunction' }] });\n    }\n    if (capabilities.dynamicRegistration.selectionRange) {\n        connection.client.register(vscode_languageserver_1.SelectionRangeRequest.type, { documentSelector: [{ language: 'mcfunction' }] });\n    }\n    if (capabilities.dynamicRegistration.signatureHelp) {\n        connection.client.register(vscode_languageserver_1.SignatureHelpRequest.type, {\n            documentSelector: [{ language: 'mcfunction' }],\n            triggerCharacters: [' ']\n        });\n    }\n    if (service.capabilities.checkServerVersion) {\n        connection.sendNotification('spgoding/datapack/checkServerVersion', {\n            currentVersion: _1.ReleaseNotesVersion,\n            title: locales_1.locale('server.new-version', _1.ReleaseNotesVersion),\n            action: locales_1.locale('server.show-release-notes'),\n            url: `https://github.com/SPGoding/datapack-language-server/wiki/Release-Notes-${_1.ReleaseNotesVersion}`\n        });\n    }\n    connection.workspace.onDidChangeWorkspaceFolders(() => __awaiter(void 0, void 0, void 0, function* () {\n        if (capabilities.workspaceFolders) {\n            const folders = yield connection.workspace.getWorkspaceFolders();\n            service.onDidChangeWorkspaceFolders();\n            workspaceRootUriStrings.splice(0);\n            if (folders) {\n                for (let i = folders.length - 1; i >= 0; i--) {\n                    const { uri: uriString } = folders[i];\n                    workspaceRootUriStrings.push(uriString);\n                }\n            }\n            yield updateRoots(service.roots);\n        }\n    }));\n    yield updateRoots(service.roots);\n    const progress = yield ((_b = service.createWorkDoneProgress) === null || _b === void 0 ? void 0 : _b.call(service));\n    yield updateCacheFile(service.cacheFile, service.roots, progress);\n    return saveCacheFile();\n}));\nconnection.onDidOpenTextDocument(({ textDocument: { text, uri: uriString, version, languageId: langID } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    if (langID === 'mcfunction' || langID === 'json') {\n        yield service.parseDocument(yield common_1.getTextDocument({ uri, langID, version, getText: () => __awaiter(void 0, void 0, void 0, function* () { return text; }) }), true);\n        return service.publishDiagnostics(uri);\n    }\n}));\nconnection.onDidChangeTextDocument(({ contentChanges, textDocument: { uri: uriString, version } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    yield service.onDidChangeTextDocument(uri, contentChanges, version);\n    return service.publishDiagnostics(uri);\n}));\nconnection.onDidCloseTextDocument(({ textDocument: { uri: uriString } }) => {\n    const uri = service.parseUri(uriString);\n    service.onDidCloseTextDocument(uri);\n});\nconnection.onDidChangeConfiguration(() => __awaiter(void 0, void 0, void 0, function* () { return service.refetchConfigs(); }));\nconnection.onDidChangeWatchedFiles(({ changes }) => __awaiter(void 0, void 0, void 0, function* () {\n    // console.info(`BW: ${JSON.stringify(cacheFile)}`)\n    // console.info(`WC: ${JSON.stringify(changes)}`)\n    for (const { uri: uriString, type } of changes) {\n        const uri = service.parseUri(uriString);\n        // console.info(JSON.stringify({ uri, type }))\n        if (uriString.endsWith('data') || uriString.endsWith('data/') || uriString.endsWith('pack.mcmeta')) {\n            yield updateRoots(service.roots);\n        }\n        switch (type) {\n            case vscode_languageserver_1.FileChangeType.Created: {\n                const stat = yield fs_1.promises.stat(uri.fsPath);\n                if (stat.isDirectory()) {\n                    for (const root of service.roots) {\n                        if (uri.fsPath.startsWith(root.fsPath)) {\n                            yield common_1.walkFile(root.fsPath, uri.fsPath, (abs, _rel, stat) => __awaiter(void 0, void 0, void 0, function* () {\n                                const uri = service.parseUri(vscode_uri_1.URI.file(abs).toString());\n                                const uriString = uri.toString();\n                                yield service.onAddedFile(uri);\n                                service.cacheFile.files[uriString] = stat.mtimeMs;\n                            }));\n                        }\n                    }\n                }\n                else {\n                    yield service.onAddedFile(uri);\n                    service.cacheFile.files[uriString] = stat.mtimeMs;\n                }\n                break;\n            }\n            case vscode_languageserver_1.FileChangeType.Changed: {\n                const stat = yield fs_1.promises.stat(uri.fsPath);\n                if (stat.isFile()) {\n                    service.cacheFile.files[uriString] = stat.mtimeMs;\n                    yield service.onModifiedFile(uri);\n                }\n                break;\n            }\n            case vscode_languageserver_1.FileChangeType.Deleted:\n            default: {\n                // console.info(`FileChangeType.Deleted ${rel}`)\n                for (const fileUriString of Object.keys(service.cacheFile.files)) {\n                    if (fileUriString === uriString || fileUriString.startsWith(`${uriString}/`)) {\n                        const fileUri = service.parseUri(fileUriString);\n                        // console.info(`result = ${JSON.stringify(result)}`)\n                        service.onDeletedFile(fileUri);\n                    }\n                }\n                break;\n            }\n        }\n    }\n    ClientCache_1.trimCache(service.cacheFile.cache);\n    // console.info(`AW: ${JSON.stringify(cacheFile)}`)\n}));\nconnection.onCompletion(({ textDocument: { uri: uriString }, position, context }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    const ans = service.onCompletion(uri, position, context);\n    return ans;\n}));\nconnection.onSignatureHelp(({ textDocument: { uri: uriString }, position }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onSignatureHelp(uri, position);\n}));\nconnection.onFoldingRanges(({ textDocument: { uri: uriString } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onFoldingRanges(uri);\n}));\nconnection.onHover(({ textDocument: { uri: uriString }, position }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onHover(uri, position);\n}));\nconnection.onDocumentFormatting(({ textDocument: { uri: uriString } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onDocumentFormatting(uri);\n}));\nconnection.onDeclaration(({ textDocument: { uri: uriString }, position }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onDeclaration(uri, position);\n}));\nconnection.onDefinition(({ textDocument: { uri: uriString }, position }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onDefinition(uri, position);\n}));\nconnection.onReferences(({ textDocument: { uri: uriString }, position }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onReferences(uri, position);\n}));\nconnection.onDocumentHighlight(({ textDocument: { uri: uriString }, position }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onDocumentHighlight(uri, position);\n}));\nconnection.onSelectionRanges(({ textDocument: { uri: uriString }, positions }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onSelectionRanges(uri, positions);\n}));\nconnection.onCodeAction(({ textDocument: { uri: uriString }, range, context: { diagnostics } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onCodeAction(uri, range, diagnostics);\n}));\nconnection.languages.callHierarchy.onPrepare(({ position, textDocument: { uri: uriString } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onCallHierarchyPrepare(uri, position);\n}));\nconnection.languages.callHierarchy.onIncomingCalls(({ item }) => __awaiter(void 0, void 0, void 0, function* () {\n    return service.onCallHierarchyIncomingCalls(item);\n}));\nconnection.languages.callHierarchy.onOutgoingCalls(({ item }) => __awaiter(void 0, void 0, void 0, function* () {\n    return service.onCallHierarchyOutgoingCalls(item);\n}));\nconnection.onPrepareRename(({ textDocument: { uri: uriString }, position }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onPrepareRename(uri, position);\n}));\nconnection.onRenameRequest(({ textDocument: { uri: uriString }, position, newName }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onRename(uri, position, newName);\n}));\nconnection.onDocumentLinks(({ textDocument: { uri: uriString } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onDocumentLinks(uri);\n}));\nconnection.onDocumentColor(({ textDocument: { uri: uriString } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onDocumentColor(uri);\n}));\nconnection.onColorPresentation(({ textDocument: { uri: uriString }, color, range }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onColorPresentation(uri, range, color);\n}));\nconnection.languages.semanticTokens.on(({ textDocument: { uri: uriString } }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onSemanticTokens(uri);\n}));\nconnection.languages.semanticTokens.onEdits(({ textDocument: { uri: uriString }, previousResultId }) => __awaiter(void 0, void 0, void 0, function* () {\n    const uri = service.parseUri(uriString);\n    return service.onSemanticTokensEdits(uri, previousResultId);\n}));\nconnection.onExecuteCommand(({ command, arguments: args }) => __awaiter(void 0, void 0, void 0, function* () {\n    var _c, _d, _e;\n    let progress = undefined;\n    try {\n        switch (command) {\n            case 'datapack.createFile': {\n                const [rawType, rawID, rawRoot] = args;\n                const id = nodes_1.IdentityNode.fromString(rawID);\n                const type = id.isTag ? ((_c = nodes_1.IdentityNode.getTagType(`$${rawType}`)) !== null && _c !== void 0 ? _c : rawType) : rawType;\n                const root = service.parseUri(rawRoot);\n                yield service.createFile(root, type, id);\n                break;\n            }\n            case 'datapack.fixFile': {\n                const uri = service.parseUri(args[0]);\n                yield service.onAutoFixingFile(uri);\n                break;\n            }\n            case 'datapack.fixWorkspace': {\n                progress = yield ((_d = service.createWorkDoneProgress) === null || _d === void 0 ? void 0 : _d.call(service));\n                progress === null || progress === void 0 ? void 0 : progress.begin(locales_1.locale('server.progress.fixing-workspace.begin'));\n                for (const root of service.roots) {\n                    const dataPath = path_1.default.join(root.fsPath, 'data');\n                    const namespaces = (yield utils_1.pathAccessible(dataPath)) ? yield fs_1.promises.readdir(dataPath) : [];\n                    for (const namespace of namespaces) {\n                        const namespacePath = path_1.default.join(dataPath, namespace);\n                        const functionsPath = path_1.default.join(namespacePath, 'functions');\n                        if (yield utils_1.pathAccessible(functionsPath)) {\n                            yield common_1.walkFile(root.fsPath, functionsPath, (abs) => __awaiter(void 0, void 0, void 0, function* () {\n                                try {\n                                    progress === null || progress === void 0 ? void 0 : progress.report(locales_1.locale('server.progress.fixing-workspace.report', locales_1.locale('punc.quote', abs)));\n                                    const uri = service.parseUri(vscode_uri_1.URI.file(abs).toString());\n                                    service.onAutoFixingFile(uri);\n                                }\n                                catch (e) {\n                                    console.error(`datapack.fixWorkspace failed for “${abs}”`, e);\n                                }\n                            }));\n                        }\n                    }\n                }\n                break;\n            }\n            case 'datapack.regenerateCache': {\n                progress = yield ((_e = service.createWorkDoneProgress) === null || _e === void 0 ? void 0 : _e.call(service));\n                service.cacheFile = rfdc_1.default()(ClientCache_1.DefaultCacheFile);\n                yield updateCacheFile(service.cacheFile, service.roots, progress);\n                break;\n            }\n            default:\n                throw new Error(`Unknown “workspace/executeCommand” request for “${command}”.`);\n        }\n    }\n    catch (e) {\n        console.error('[onExecuteCommand]', e);\n    }\n    finally {\n        progress === null || progress === void 0 ? void 0 : progress.done();\n    }\n}));\nfunction updateRoots(roots) {\n    return __awaiter(this, void 0, void 0, function* () {\n        roots.splice(0);\n        const rootCandidatePaths = new Set();\n        for (let i = workspaceRootUriStrings.length - 1; i >= 0; i--) {\n            const uriString = workspaceRootUriStrings[i];\n            const uri = service.parseRootUri(uriString);\n            const path = uri.fsPath;\n            rootCandidatePaths.add(path);\n            const config = yield service.getConfig(uri);\n            yield common_1.walkRoot(uri, path, abs => rootCandidatePaths.add(abs), config.env.detectionDepth);\n        }\n        for (const candidatePath of rootCandidatePaths) {\n            const dataPath = path_1.default.join(candidatePath, 'data');\n            const packMcmetaPath = path_1.default.join(candidatePath, 'pack.mcmeta');\n            if ((yield utils_1.pathAccessible(dataPath)) && (yield utils_1.pathAccessible(packMcmetaPath))) {\n                const uri = service.parseRootUri(vscode_uri_1.URI.file(candidatePath).toString());\n                roots.push(uri);\n                console.info(`[updateRoots] Data pack ${roots.length} = “${uri.toString()}”`);\n                // Show messages for legacy cache file which was saved in the root of your workspace. \n                const legacyDotPath = path_1.default.join(candidatePath, '.datapack');\n                if (yield utils_1.pathAccessible(legacyDotPath)) {\n                    connection.window.showInformationMessage(locales_1.locale('server.remove-cache-file'));\n                }\n            }\n        }\n    });\n}\nfunction getLatestVersions() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let ans;\n        try {\n            console.info('[LatestVersions] Fetching the latest versions...');\n            const str = yield Promise.race([\n                utils_1.requestText('https://launchermeta.mojang.com/mc/game/version_manifest.json'),\n                new Promise((_, reject) => {\n                    setTimeout(() => { reject(new Error('Time out!')); }, 7000);\n                })\n            ]);\n            const { latest: { release, snapshot }, versions } = JSON.parse(str);\n            const processedVersion = '1.16.2';\n            const processedVersionIndex = versions.findIndex(v => v.id === processedVersion);\n            const processedVersions = processedVersionIndex >= 0 ? versions.slice(0, processedVersionIndex + 1).map(v => v.id) : [];\n            ans = (release && snapshot) ? { latestRelease: release, latestSnapshot: snapshot, processedVersions } : undefined;\n        }\n        catch (e) {\n            console.warn(`[LatestVersions] ${e}`);\n        }\n        console.info(`[LatestVersions] versionInformation = ${JSON.stringify(ans)}`);\n        return ans;\n    });\n}\nfunction fetchConfig(uri) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const config = yield connection.workspace.getConfiguration({\n                scopeUri: uri.toString(),\n                section: 'datapack'\n            });\n            locales_1.loadLocale(config.env.language, defaultLocaleCode);\n            return config;\n        }\n        catch (e) {\n            console.warn(`[fetchConfig for “${uri.toString()}”] `, e);\n            return Config_1.VanillaConfig;\n        }\n    });\n}\nfunction saveCacheFile() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (cachePath) {\n            return fs_1.promises.writeFile(cachePath, JSON.stringify(service.cacheFile), { encoding: 'utf8' });\n        }\n    });\n}\nfunction saveCacheFileSync() {\n    if (cachePath) {\n        fs.writeFileSync(cachePath, JSON.stringify(service.cacheFile), { encoding: 'utf8' });\n    }\n}\nfunction updateCacheFile(cacheFile, roots, progress) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            // Check the files saved in the cache file.\n            progress === null || progress === void 0 ? void 0 : progress.begin(locales_1.locale('server.progress.updating-cache.begin'));\n            const time1 = new Date().getTime();\n            yield checkFilesInCache(cacheFile, roots, progress);\n            const time2 = new Date().getTime();\n            yield addNewFilesToCache(cacheFile, roots, progress);\n            ClientCache_1.trimCache(cacheFile.cache);\n            const time3 = new Date().getTime();\n            console.info(`[updateCacheFile] [1] ${time2 - time1} ms`);\n            console.info(`[updateCacheFile] [2] ${time3 - time2} ms`);\n            console.info(`[updateCacheFile] [T] ${time3 - time1} ms`);\n            progress === null || progress === void 0 ? void 0 : progress.done();\n        }\n        catch (e) {\n            console.error('[updateCacheFile] ', e);\n        }\n    });\n}\nfunction checkFilesInCache(cacheFile, roots, progress) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const uriStrings = Object.keys(cacheFile.files).values();\n        return common_1.partitionedIteration(uriStrings, (uriString) => __awaiter(this, void 0, void 0, function* () {\n            progress === null || progress === void 0 ? void 0 : progress.report(locales_1.locale('server.progress.updating-cache.report', locales_1.locale('punc.quote', uriString)));\n            const uri = service.parseUri(uriString);\n            const result = common_1.getRelAndRootIndex(uri, roots);\n            if (!(result === null || result === void 0 ? void 0 : result.rel) || !Config_1.isRelIncluded(result.rel, yield service.getConfig(roots[result.index]))) {\n                delete cacheFile.files[uriString];\n            }\n            else {\n                if (!(yield utils_1.pathAccessible(uri.fsPath))) {\n                    service.onDeletedFile(uri);\n                }\n                else {\n                    const stat = yield fs_1.promises.stat(uri.fsPath);\n                    const lastModified = stat.mtimeMs;\n                    const lastUpdated = cacheFile.files[uriString];\n                    if (lastModified > lastUpdated) {\n                        cacheFile.files[uriString] = lastModified;\n                        yield service.onModifiedFile(uri);\n                    }\n                }\n            }\n        }));\n    });\n}\nfunction addNewFilesToCache(cacheFile, roots, progress) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.all(roots.map(root => {\n            const dataPath = path_1.default.join(root.fsPath, 'data');\n            return common_1.walkFile(root.fsPath, dataPath, (abs, _rel, stat) => __awaiter(this, void 0, void 0, function* () {\n                const uri = service.parseUri(vscode_uri_1.URI.file(abs).toString());\n                const uriString = uri.toString();\n                progress === null || progress === void 0 ? void 0 : progress.report(locales_1.locale('server.progress.updating-cache.report', locales_1.locale('punc.quote', abs)));\n                if (cacheFile.files[uriString] === undefined) {\n                    yield service.onAddedFile(uri);\n                    cacheFile.files[uriString] = stat.mtimeMs;\n                }\n            }), (_abs, rel) => __awaiter(this, void 0, void 0, function* () {\n                const config = yield service.getConfig(root);\n                return Config_1.isRelIncluded(rel, config);\n            }));\n        }));\n    });\n}\nconnection.listen();\nlet isUp = true;\nfunction exit() {\n    if (!isUp) {\n        return;\n    }\n    isUp = false;\n    saveCacheFileSync();\n    process.exit();\n}\nfor (const sig of ['exit', 'SIGHUP', 'SIGINT', 'SIGQUIT', 'SIGILL', 'SIGTRAP', 'SIGABRT', 'SIGBUS', 'SIGFPE', 'SIGUSR1', 'SIGSEGV', 'SIGUSR2', 'SIGTERM']) {\n    process.on(sig, exit);\n}\nprocess.on('uncaughtException', e => {\n    console.error('[uncaughtException] the language server will be terminated: ', e.stack);\n    exit();\n});\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatapackLanguageService = void 0;\nconst rfdc_1 = __importDefault(require(\"rfdc\"));\nconst synchronous_promise_1 = require(\"synchronous-promise\");\nconst vscode_json_languageservice_1 = require(\"vscode-json-languageservice\");\nconst lsp = __importStar(require(\"vscode-languageserver\"));\nconst vscode_languageserver_textdocument_1 = require(\"vscode-languageserver-textdocument\");\nconst _1 = require(\".\");\nconst CommandTree_1 = require(\"../data/CommandTree\");\nconst JsonSchema_1 = require(\"../data/JsonSchema\");\nconst VanillaData_1 = require(\"../data/VanillaData\");\nconst nodes_1 = require(\"../nodes\");\nconst parsers_1 = require(\"../parsers\");\nconst PluginLoader_1 = require(\"../plugins/PluginLoader\");\nconst types_1 = require(\"../types\");\nconst utils_1 = require(\"../utils\");\nconst JsonSchemaHelper_1 = require(\"../utils/JsonSchemaHelper\");\nconst common_1 = require(\"./common\");\nclass DatapackLanguageService {\n    constructor(options = {}) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        /**\n         * Sorted by priority. If you want to read something in the same order as Minecraft does,\n         * iterate from the last element of this array to the first element.\n         */\n        this.roots = [];\n        this.builders = new Map();\n        /**\n         * Key: `${type}|${ID}`\n         */\n        this.caches = new Map();\n        this.configs = new Map();\n        this.textDocs = new Map();\n        this.docs = new Map();\n        this.urisOfIds = new Map();\n        this.capabilities = Object.freeze((_a = options === null || options === void 0 ? void 0 : options.capabilities) !== null && _a !== void 0 ? _a : types_1.getClientCapabilities());\n        this.applyEdit = this.capabilities.applyEdit ? options.applyEdit : undefined;\n        this.cacheFile = (_b = options.cacheFile) !== null && _b !== void 0 ? _b : rfdc_1.default()(types_1.DefaultCacheFile);\n        this.createWorkDoneProgress = this.capabilities.workDoneProgress ? options.createWorkDoneProgress : undefined;\n        this.defaultLocaleCode = (_c = options.defaultLocaleCode) !== null && _c !== void 0 ? _c : 'en';\n        this.globalStoragePath = options.globalStoragePath;\n        this.jsonService = (_d = options.jsonService) !== null && _d !== void 0 ? _d : vscode_json_languageservice_1.getLanguageService({ promiseConstructor: synchronous_promise_1.SynchronousPromise });\n        this.pathAccessible = (_e = options.pathAccessible) !== null && _e !== void 0 ? _e : utils_1.pathAccessible;\n        this.plugins = (_f = options.plugins) !== null && _f !== void 0 ? _f : new Map();\n        this.rawFetchConfig = (_g = (this.capabilities.configuration ? options.fetchConfig : undefined)) !== null && _g !== void 0 ? _g : (() => __awaiter(this, void 0, void 0, function* () { return types_1.VanillaConfig; }));\n        this.rawPublishDiagnostics = this.capabilities.diagnostics ? options.publishDiagnostics : undefined;\n        this.readFile = (_h = options.readFile) !== null && _h !== void 0 ? _h : utils_1.readFile;\n        this.roots = (_j = options.roots) !== null && _j !== void 0 ? _j : [];\n        this.showInformationMessage = options.showInformationMessage;\n        this.versionInformation = options.versionInformation;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.contributions = yield PluginLoader_1.PluginLoader.getContributions(this.plugins);\n            this.languageConfigs = yield PluginLoader_1.PluginLoader.getLanguageConfigs(this.plugins, this.contributions);\n        });\n    }\n    /**\n     * Fetches the configuration for the specific URI and stores it in the cache.\n     *\n     * If the `configuration` request isn't supported by the client, the built-in fallback config is used.\n     * @param uri A file URI.\n     */\n    fetchConfig(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = yield this.rawFetchConfig(uri);\n            this.configs.set(uri.toString(), config);\n            if (this.configs.size > DatapackLanguageService.ConfigCacheSize) {\n                this.configs.clear();\n            }\n            return config;\n        });\n    }\n    /**\n     * Gets the cached configuration for the specific URI. If no config has been cached for this\n     * URI, the function `fetchConfig` is called.\n     *\n     * It's the developer's responsibility to call the `refetchConfigs` function after received the\n     * `didChangeConfiguration` notification to refresh all the cached configs.\n     *\n     * If the `didChangeConfiguration` notification can't be dynamically registered on the client,\n     * the function `fetchConfig` is called everytime internally.\n     * @param uri A file URI.\n     */\n    getConfig(uri) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.capabilities.dynamicRegistration.didChangeConfiguration) {\n                // Cached configs won't be refetched, so fetch everytime.\n                return this.fetchConfig(uri);\n            }\n            return (_a = this.configs.get(uri.toString())) !== null && _a !== void 0 ? _a : this.fetchConfig(uri);\n        });\n    }\n    /**\n     * Get the cache that can be accessed for the specified ID.\n     */\n    getCache(type, id, config) {\n        var _a;\n        return (_a = this.caches.get(`${type}|${id}`)) !== null && _a !== void 0 ? _a : this.rawGetCache(type, id, config);\n    }\n    rawGetCache(type, id, config) {\n        const cache = types_1.getCacheForID(this, type, id, config);\n        this.caches.set(`${type}|${id}`, cache);\n        return cache;\n    }\n    /**\n     * Updates all cached configs with the latest config by calling `fetchConfig` internally.\n     */\n    refetchConfigs() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.all(Array\n                .from(this.configs.entries())\n                .map(([uri]) => __awaiter(this, void 0, void 0, function* () { return this.fetchConfig(this.parseUri(uri)); })));\n        });\n    }\n    /**\n     * Returns the command syntax tree for the specific config.\n     * @param config A config object.\n     */\n    getCommandTree(config = types_1.VanillaConfig) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return CommandTree_1.getCommandTree(config.env.cmdVersion);\n        });\n    }\n    /**\n     * Returns the JSON schemas for the specific config.\n     * @param config A config object.\n     */\n    getJsonSchemas(config = types_1.VanillaConfig, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return JsonSchema_1.getJsonSchemas(config.env.jsonVersion, data.Registry);\n        });\n    }\n    /**\n     * Returns the vanilla data.\n     * @param config A config object.\n     */\n    getVanillaData(config = types_1.VanillaConfig) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return VanillaData_1.getVanillaData(config.env.dataVersion, config.env.dataSource, this.versionInformation, this.globalStoragePath);\n        });\n    }\n    /**\n     * Parses a stringified URI to a `vscode-uri`'s `URI` object.\n     * URIs parsed by the same language service instance with the same string will\n     * be always the same reference to the same object.\n     * @param uri\n     */\n    parseUri(uri) {\n        return common_1.getUri(uri);\n    }\n    /**\n     * Parses a stringified URI to a `vscode-uri`'s `URI` object. A slash (`/`) will\n     * be appended at the end of the `URI` object's paths if no slashes exist there yet.\n     * URIs parsed by the same language service instance with the same string will\n     * be always the same reference to the same object.\n     * @param uri\n     */\n    parseRootUri(uri) {\n        return common_1.getRootUri(uri);\n    }\n    /**\n     * Returns the relative file path of a URI from the corresponding data pack root folder.\n     * @param uri A URI object.\n     */\n    getRel(uri) {\n        return common_1.getRel(uri, this.roots);\n    }\n    /**\n     * Returns the identity of a URI.\n     * @param uri A URI object.\n     */\n    getId(uri) {\n        return common_1.getId(uri, this.roots);\n    }\n    getUriFromId(id, type, preferredRoot) {\n        return common_1.getUriFromId(this.pathAccessible, this.roots, this.urisOfIds, id, type, preferredRoot);\n    }\n    /**\n     * Returns all the diagnostics within a certain file.\n     * @param uri A URI object.\n     */\n    getDiagnostics(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ans = [];\n            const textDoc = this.textDocs.get(uri.toString());\n            const doc = yield this.docs.get(uri.toString());\n            if (doc && textDoc) {\n                const pusher = (err) => {\n                    try {\n                        ans.push(err.toDiagnostic(textDoc));\n                    }\n                    catch (e) {\n                        console.error('[publishDiagnostics]', e, err);\n                    }\n                };\n                doc === null || doc === void 0 ? void 0 : doc.nodes.forEach((node) => {\n                    var _a;\n                    (_a = node.errors) === null || _a === void 0 ? void 0 : _a.forEach(pusher);\n                });\n            }\n            return ans;\n        });\n    }\n    /**\n     * Returns if the documents for the specific URI are cached, i.e. have been parsed by\n     * the `parseDocument` function and have not received any close notification.\n     * @param uri A URI object.\n     */\n    isOpen(uri) {\n        return this.docs.has(uri.toString()) && this.textDocs.has(uri.toString());\n    }\n    /**\n     * Publishes all the diagnostics within a certain file to the language client.\n     * @param uri A URI object.\n     */\n    publishDiagnostics(uri) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = this.rawPublishDiagnostics) === null || _a === void 0 ? void 0 : _a.call(this, { uri: uri.toString(), diagnostics: yield this.getDiagnostics(uri) });\n        });\n    }\n    /**\n     * Returns a `DatapackDocument` from the specific `TextDocument`.\n     * @param isReal The text content is the real one as shown in the editor, which is not outdated\n     * and could be updated by relevant notifications. If set to `true`, the result of this function will\n     * be cached for use in the `getDocuments` function.\n     */\n    parseDocument(textDoc, isReal = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const uri = this.parseUri(textDoc.uri);\n            const ans = this.rawParseDocument(textDoc, uri);\n            if (isReal) {\n                this.textDocs.set(uri.toString(), textDoc);\n                this.docs.set(uri.toString(), ans);\n            }\n            return ans;\n        });\n    }\n    /**\n     * Re-parse an open document. Have no effects if the specified document isn't open.\n     */\n    reparseOpenDocument(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!textDoc) {\n                return;\n            }\n            this.onDidCloseTextDocument(uri);\n            yield this.parseDocument(textDoc, true);\n            return this.publishDiagnostics(uri);\n        });\n    }\n    /**\n     * Re-parse all open documents.\n     */\n    reparseAllOpenDocuments() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.all(Array\n                .from(this.docs.keys())\n                .map(this.reparseOpenDocument.bind(this)));\n        });\n    }\n    /**\n     * Get the documents for the specific URI. Will read the text document from the file system when\n     * no parsed document has been cached. The one read from the file system will never be cached as\n     * it is possible for it to be changed without any notifications from the client and therefore\n     * leads to de-sync.\n     * @param uri A URI object.\n     */\n    getDocuments(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.docs.has(uri.toString()) && this.textDocs.has(uri.toString())) {\n                    return { doc: yield this.docs.get(uri.toString()), textDoc: this.textDocs.get(uri.toString()) };\n                }\n                else {\n                    const langID = this.getLangID(uri);\n                    if (langID === 'nbt') {\n                        return { doc: undefined, textDoc: undefined };\n                    }\n                    const getText = () => __awaiter(this, void 0, void 0, function* () { return this.readFile(uri.fsPath); });\n                    const textDoc = yield common_1.getTextDocument({ uri, langID, version: null, getText });\n                    return { doc: yield this.parseDocument(textDoc, false), textDoc };\n                }\n            }\n            catch (e) {\n                console.error(`[getDocuments] for ${uri} `, e);\n            }\n            return { doc: undefined, textDoc: undefined };\n        });\n    }\n    getLangID(uri) {\n        if (uri.fsPath.endsWith('.json') || uri.fsPath.endsWith('.mcmeta')) {\n            return 'json';\n        }\n        else if (uri.fsPath.endsWith('.nbt')) {\n            return 'nbt';\n        }\n        else {\n            return 'mcfunction';\n        }\n    }\n    /**\n     * Set the documents for the specific URI.\n     * @param uri A URI object.\n     * @param doc A datapack document.\n     * @param textDoc A text document.\n     */\n    setDocuments(uri, doc, textDoc) {\n        this.docs.set(uri.toString(), Promise.resolve(doc));\n        this.textDocs.set(uri.toString(), textDoc);\n    }\n    rawParseDocument(textDoc, uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ans;\n            const config = yield this.getConfig(uri);\n            const rel = common_1.getRel(uri, this.roots);\n            if (types_1.isRelIncluded(rel, config)) {\n                const vanillaData = yield this.getVanillaData(config);\n                const jsonSchemas = yield this.getJsonSchemas(config, vanillaData);\n                const commandTree = yield this.getCommandTree(config);\n                if (textDoc.languageId === 'json') {\n                    if (rel) {\n                        const schemaType = JsonSchema_1.getJsonSchemaType(rel);\n                        if (schemaType) {\n                            const schema = jsonSchemas.get(schemaType);\n                            ans = {\n                                type: 'json',\n                                nodes: this.parseJsonDocument({ textDoc, config, uri, vanillaData, schema, jsonSchemas, schemaType, commandTree })\n                            };\n                        }\n                    }\n                }\n                else if (textDoc.languageId === 'mcfunction') {\n                    ans = {\n                        type: 'mcfunction',\n                        nodes: this.parseMcfunctionDocument({ textDoc, commandTree, config, uri, vanillaData, jsonSchemas })\n                    };\n                }\n            }\n            return ans;\n        });\n    }\n    parseJsonDocument({ textDoc, config, uri, vanillaData, schema, jsonSchemas, schemaType, commandTree }) {\n        return [common_1.parseJsonNode({ service: this, uri, textDoc, config, schema, jsonSchemas, schemaType, vanillaData, commandTree })];\n    }\n    parseMcfunctionDocument({ textDoc, commandTree, config, uri, vanillaData, jsonSchemas }) {\n        return common_1.parseSyntaxComponents(this, textDoc, undefined, undefined, config, uri, undefined, commandTree, vanillaData, jsonSchemas, this.languageConfigs);\n    }\n    getParsingContextSync({ cursor, uri, textDoc, config, commandTree, jsonSchemas, vanillaData }) {\n        const idResult = this.getId(uri);\n        return types_1.constructContext({\n            blockDefinition: vanillaData === null || vanillaData === void 0 ? void 0 : vanillaData.BlockDefinition,\n            cache: idResult ? this.getCache(idResult.category, idResult.id, config) : this.cacheFile.cache,\n            commandTree,\n            config,\n            cursor,\n            id: idResult === null || idResult === void 0 ? void 0 : idResult.id,\n            jsonSchemas,\n            namespaceSummary: vanillaData === null || vanillaData === void 0 ? void 0 : vanillaData.NamespaceSummary,\n            nbtdoc: vanillaData === null || vanillaData === void 0 ? void 0 : vanillaData.Nbtdoc,\n            parsers: new parsers_1.ParserCollection(),\n            registry: vanillaData === null || vanillaData === void 0 ? void 0 : vanillaData.Registry,\n            rootIndex: common_1.getRootIndex(uri, this.roots),\n            roots: this.roots,\n            service: this,\n            textDoc\n        });\n    }\n    getParsingContext({ cursor, uri, textDoc }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const config = yield this.getConfig(uri);\n            const vanillaData = yield this.getVanillaData(config);\n            const commandTree = yield this.getCommandTree(config);\n            const jsonSchemas = yield this.getJsonSchemas(config, vanillaData);\n            return this.getParsingContextSync({ commandTree, config, jsonSchemas, textDoc, uri, vanillaData, cursor });\n        });\n    }\n    onDidChangeTextDocument(uri, contentChanges, version) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc)) {\n                return;\n            }\n            if (types_1.isMcfunctionDocument(doc)) {\n                yield _1.onDidChangeTextDocument({ uri, service: this, doc, version: version, contentChanges, config, textDoc, languageConfigs: this.languageConfigs });\n            }\n            else {\n                const vanillaData = yield this.getVanillaData(config);\n                const jsonSchemas = yield this.getJsonSchemas(config, vanillaData);\n                const commandTree = yield CommandTree_1.getCommandTree(config.env.cmdVersion);\n                const schema = jsonSchemas.get(doc.nodes[0].schemaType);\n                vscode_languageserver_textdocument_1.TextDocument.update(textDoc, contentChanges, version);\n                doc.nodes[0] = common_1.parseJsonNode({ service: this, uri, config, schema, jsonSchemas, vanillaData, textDoc, commandTree, schemaType: doc.nodes[0].schemaType });\n            }\n            yield this.mergeFileCacheIntoGlobalCache(uri);\n            types_1.trimCache(this.cacheFile.cache);\n        });\n    }\n    onDidCloseTextDocument(uri) {\n        this.builders.delete(uri.toString());\n        this.configs.delete(uri.toString());\n        this.textDocs.delete(uri.toString());\n        this.docs.delete(uri.toString());\n    }\n    onDidChangeWorkspaceFolders() {\n        this.urisOfIds.clear();\n    }\n    onCompletion(uri, position, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.completions)) {\n                return null;\n            }\n            const offset = textDoc.offsetAt(position);\n            const vanillaData = yield this.getVanillaData(config);\n            const jsonSchemas = yield this.getJsonSchemas(config, vanillaData);\n            if (types_1.isMcfunctionDocument(doc)) {\n                const { node } = nodes_1.getSelectedNode(doc.nodes, offset);\n                if (!node) {\n                    return null;\n                }\n                return _1.onCompletion({ uri, offset, textDoc, node, service: this, languageConfigs: this.languageConfigs });\n            }\n            else {\n                if (!this.capabilities.dynamicRegistration.competion && this.capabilities.completionContext && (context === null || context === void 0 ? void 0 : context.triggerCharacter) && !DatapackLanguageService.GeneralTriggerCharacters.includes(context.triggerCharacter)) {\n                    return null;\n                }\n                const ans = [];\n                const schema = jsonSchemas.get(doc.nodes[0].schemaType);\n                const ctx = yield this.getParsingContext({ cursor: offset, textDoc, uri });\n                JsonSchemaHelper_1.JsonSchemaHelper.suggest(ans, doc.nodes[0].json.root, schema, ctx);\n                return ans.map(v => {\n                    var _a, _b;\n                    const ans = rfdc_1.default()(v);\n                    ans.textEdit = (_a = ans.textEdit) !== null && _a !== void 0 ? _a : { newText: (_b = ans.insertText) !== null && _b !== void 0 ? _b : ans.label, range: { start: textDoc.positionAt(ans.start), end: textDoc.positionAt(ans.end) } };\n                    delete ans.start;\n                    delete ans.end;\n                    return ans;\n                });\n            }\n        });\n    }\n    onSignatureHelp(uri, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.signatures && types_1.isMcfunctionDocument(doc))) {\n                return null;\n            }\n            const offset = textDoc.offsetAt(position);\n            const { node } = nodes_1.getSelectedNode(doc.nodes, offset);\n            if (!node) {\n                return null;\n            }\n            return _1.onSignatureHelp({ uri, offset, textDoc, node, service: this, languageConfigs: this.languageConfigs });\n        });\n    }\n    onFoldingRanges(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.foldingRanges && types_1.isMcfunctionDocument(doc))) {\n                return null;\n            }\n            return _1.onFoldingRanges({ textDoc });\n        });\n    }\n    onHover(uri, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.hover)) {\n                return null;\n            }\n            const offset = textDoc.offsetAt(position);\n            if (types_1.isMcfunctionDocument(doc)) {\n                const { node } = nodes_1.getSelectedNode(doc.nodes, offset);\n                if (!node) {\n                    return null;\n                }\n                const ctx = yield this.getParsingContext({ cursor: offset, textDoc, uri });\n                return _1.onHover({ com: node, ctx });\n            }\n            else {\n                const vanillaData = yield this.getVanillaData(config);\n                const jsonSchemas = yield this.getJsonSchemas(config, vanillaData);\n                const schema = jsonSchemas.get(doc.nodes[0].schemaType);\n                const ctx = yield this.getParsingContext({ textDoc, uri });\n                return JsonSchemaHelper_1.JsonSchemaHelper.onHover(doc.nodes[0].json.root, schema, ctx, offset);\n            }\n        });\n    }\n    onDocumentFormatting(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.formatting && types_1.isMcfunctionDocument(doc))) {\n                return null;\n            }\n            return _1.onDocumentFormatting({ config, textDoc, doc });\n        });\n    }\n    onNavigation(uri, position, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc)) {\n                return null;\n            }\n            const offset = textDoc.offsetAt(position);\n            const { node } = common_1.getSelectedNodeFromInfo(doc, offset);\n            if (!node) {\n                return null;\n            }\n            return _1.onNavigation({ node, cacheFile: this.cacheFile, offset, type });\n        });\n    }\n    onDeclaration(uri, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.onNavigation(uri, position, 'dcl');\n        });\n    }\n    onDefinition(uri, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.onNavigation(uri, position, 'def');\n        });\n    }\n    onReferences(uri, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.onNavigation(uri, position, 'ref');\n        });\n    }\n    onDocumentHighlight(uri, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.documentHighlighting && types_1.isMcfunctionDocument(doc))) {\n                return null;\n            }\n            const offset = textDoc.offsetAt(position);\n            const { node } = nodes_1.getSelectedNode(doc.nodes, offset);\n            if (!node) {\n                return null;\n            }\n            return _1.onDocumentHighlight({ textDoc, doc, node, position, offset });\n        });\n    }\n    onSelectionRanges(uri, positions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const textDoc = this.textDocs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            if (!(doc && textDoc && config.features.selectionRanges && types_1.isMcfunctionDocument(doc))) {\n                return null;\n            }\n            return _1.onSelectionRanges({ positions, doc, textDoc });\n        });\n    }\n    onCodeAction(uri, range, diagnostics) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.codeActions)) {\n                return null;\n            }\n            if (types_1.isMcfunctionDocument(doc)) {\n                return _1.onCodeAction({ service: this, uri, doc, textDoc, diagnostics, range, cacheFile: this.cacheFile });\n            }\n            else {\n                // TODO: JSON\n                return null;\n            }\n        });\n    }\n    onCallHierarchyPrepare(uri, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && types_1.isMcfunctionDocument(doc))) {\n                return null;\n            }\n            const offset = textDoc.offsetAt(position);\n            const { node } = nodes_1.getSelectedNode(doc.nodes, offset);\n            if (!node) {\n                return null;\n            }\n            return _1.onCallHierarchyPrepare({ service: this, textDoc, offset, node });\n        });\n    }\n    onCallHierarchyIncomingCalls({ kind, name: id }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _1.onCallHierarchyIncomingCalls({ kind, id, service: this });\n        });\n    }\n    onCallHierarchyOutgoingCalls({ name: id }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _1.onCallHierarchyOutgoingCalls({ id, service: this });\n        });\n    }\n    onPrepareRename(uri, position) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && types_1.isMcfunctionDocument(doc))) {\n                return null;\n            }\n            const offset = textDoc.offsetAt(position);\n            const { node } = nodes_1.getSelectedNode(doc.nodes, offset);\n            if (!node) {\n                return null;\n            }\n            return _1.onPrepareRename({ textDoc, node, offset });\n        });\n    }\n    onRename(uri, position, newName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && types_1.isMcfunctionDocument(doc))) {\n                return null;\n            }\n            const offset = textDoc.offsetAt(position);\n            const { node } = nodes_1.getSelectedNode(doc.nodes, offset);\n            if (!node) {\n                return null;\n            }\n            const ans = yield _1.onRenameRequest({ node, offset, newName, service: this });\n            this.onDidUpdateCache();\n            return ans;\n        });\n    }\n    onDocumentLinks(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.documentLinks)) {\n                return null;\n            }\n            return _1.onDocumentLinks({ doc, textDoc, service: this });\n        });\n    }\n    onDocumentColor(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.colors)) {\n                return null;\n            }\n            return _1.onDocumentColor({ doc, textDoc });\n        });\n    }\n    onColorPresentation(uri, range, { red: r, green: g, blue: b, alpha: a }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.colors)) {\n                return null;\n            }\n            const start = textDoc.offsetAt(range.start);\n            const end = textDoc.offsetAt(range.end);\n            return _1.onColorPresentation({ textDoc, r, g, b, a, start, end });\n        });\n    }\n    onSemanticTokens(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.semanticColoring)) {\n                return { data: [] };\n            }\n            const builder = this.getBuilder(uri);\n            return _1.onSemanticTokens({ doc, builder, textDoc });\n        });\n    }\n    onSemanticTokensEdits(uri, previousResultId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doc = yield this.docs.get(uri.toString());\n            const config = yield this.getConfig(uri);\n            const textDoc = this.textDocs.get(uri.toString());\n            if (!(doc && textDoc && config.features.semanticColoring)) {\n                return { data: [] };\n            }\n            const builder = this.getBuilder(uri);\n            return _1.onSemanticTokensEdits({ doc, builder, previousResultId, textDoc });\n        });\n    }\n    onAutoFixingFile(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.applyEdit) {\n                return null;\n            }\n            return _1.fixFileCommandHandler({ uri, service: this });\n        });\n    }\n    onJSEvaluation(uri, range) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    onClearVanillaData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const newCache = VanillaData_1.getVanillaDataCache();\n            VanillaData_1.VanillaDataCache.BlockDefinition = newCache.BlockDefinition;\n            VanillaData_1.VanillaDataCache.NamespaceSummary = newCache.NamespaceSummary;\n            VanillaData_1.VanillaDataCache.Nbtdoc = newCache.Nbtdoc;\n            VanillaData_1.VanillaDataCache.Registry = newCache.Registry;\n            // TODO: remove files in globalStoragePath\n        });\n    }\n    createFile(root, type, id) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const fileUri = this.getUriFromId(id, type, root);\n            const newText = type === 'function' ? '' : yield (() => __awaiter(this, void 0, void 0, function* () {\n                const config = yield this.getConfig(fileUri);\n                const vanillaData = yield this.getVanillaData(config);\n                const jsonSchemas = yield this.getJsonSchemas(config, vanillaData);\n                const rel = this.getRel(fileUri);\n                if (!rel) {\n                    return '';\n                }\n                const schemaType = JsonSchema_1.getJsonSchemaType(rel);\n                if (!schemaType) {\n                    return '';\n                }\n                const schema = jsonSchemas.get(schemaType);\n                return JSON.stringify(schema.default(), undefined, 4);\n            }))();\n            return (_a = this.applyEdit) === null || _a === void 0 ? void 0 : _a.call(this, {\n                edit: {\n                    documentChanges: [\n                        {\n                            kind: 'create',\n                            uri: fileUri.toString(),\n                            options: { ignoreIfExists: true }\n                        },\n                        {\n                            textDocument: { uri: fileUri.toString(), version: null },\n                            edits: [{\n                                    range: { start: { line: 0, character: 0 }, end: { line: 0, character: 0 } },\n                                    newText\n                                }]\n                        }\n                    ]\n                }\n            });\n        });\n    }\n    onDidUpdateCache() {\n        this.caches.clear();\n        if (this.onDidUpdateCacheTimeout) {\n            clearTimeout(this.onDidUpdateCacheTimeout);\n        }\n        this.onDidUpdateCacheTimeout = setTimeout(this.reparseAllOpenDocuments.bind(this), DatapackLanguageService.OnDidUpdateCacheEventDelay);\n    }\n    onDidIDUpdate(type, id) {\n        this.urisOfIds.delete(`${type}|${id}`);\n    }\n    removeCachePositionsWith(uri) {\n        types_1.removeCachePosition(this.cacheFile.cache, uri);\n    }\n    combineCacheOfNodes(uri, type, id) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { doc, textDoc } = yield this.getDocuments(uri);\n            if (doc && textDoc) {\n                const cacheOfNodes = {};\n                for (const node of doc.nodes) {\n                    types_1.combineCache(cacheOfNodes, node.cache, { uri, getPosition: offset => textDoc.positionAt(offset) });\n                }\n                types_1.combineCache(this.cacheFile.cache, cacheOfNodes);\n            }\n            const unit = types_1.setUpUnit(this.cacheFile.cache, type, id);\n            if (!(unit.def = (_a = unit.def) !== null && _a !== void 0 ? _a : []).find(p => p.uri === uri.toString())) {\n                (unit.def = (_b = unit.def) !== null && _b !== void 0 ? _b : []).push({ uri: uri.toString(), start: 0, end: 0, startLine: 0, startChar: 0, endLine: 0, endChar: 0 });\n            }\n        });\n    }\n    /**\n     * Notifies a file addition in the file system. The ID of this file will be added to the\n     * cache for completion usage, and the content of this file will also be analysed to\n     * accelerate the process of renaming, etc.\n     *\n     * Nothing will happen if the URI can't be resolved to an identity.\n     * @param uri A URI object.\n     */\n    onAddedFile(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.mergeFileCacheIntoGlobalCache(uri);\n        });\n    }\n    /**\n     * Notifies a file modification in the file system. The content of this file will be\n     * re-analysed to accelerate the process of renaming, etc.\n     *\n     * Nothing will happen if the URI can't be resolved to an identity.\n     * @param uri A URI object.\n     */\n    onModifiedFile(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isOpen(uri)) {\n                return this.mergeFileCacheIntoGlobalCache(uri);\n            }\n            return;\n        });\n    }\n    mergeFileCacheIntoGlobalCache(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const rel = this.getRel(uri);\n            const result = nodes_1.IdentityNode.fromRel(rel);\n            if (!result) {\n                return;\n            }\n            const { category, id } = result;\n            this.onDidIDUpdate(category, id);\n            const config = yield this.getConfig(uri);\n            if (!types_1.isRelIncluded(rel, config)) {\n                return;\n            }\n            this.removeCachePositionsWith(uri);\n            this.onDidUpdateCache();\n            yield this.combineCacheOfNodes(uri, category, id);\n        });\n    }\n    /**\n     * Notifies a file removal from the file system. The ID of this file will be removed from the cache\n     * for completions, and all the references of this URI will also be deleted.\n     *\n     * Nothing will happen if the URI can't be resolved to an identity.\n     * @param uri A URI object.\n     */\n    onDeletedFile(uri) {\n        this.onDidCloseTextDocument(uri);\n        this.removeCachePositionsWith(uri);\n        this.onDidUpdateCache();\n        delete this.cacheFile.files[uri.toString()];\n        const rel = this.getRel(uri);\n        const result = nodes_1.IdentityNode.fromRel(rel);\n        if (!result) {\n            return;\n        }\n        const { category, id } = result;\n        this.onDidIDUpdate(category, id);\n        types_1.removeCacheUnit(this.cacheFile.cache, category, id.toString());\n    }\n    createBuilder(uri) {\n        const builder = new lsp.ProposedFeatures.SemanticTokensBuilder();\n        this.builders.set(uri.toString(), builder);\n        return builder;\n    }\n    getBuilder(uri) {\n        var _a;\n        return (_a = this.builders.get(uri.toString())) !== null && _a !== void 0 ? _a : this.createBuilder(uri);\n    }\n}\nexports.DatapackLanguageService = DatapackLanguageService;\nDatapackLanguageService.ConfigCacheSize = 100;\nDatapackLanguageService.OnDidUpdateCacheEventDelay = 1500;\nDatapackLanguageService.GeneralTriggerCharacters = [' ', '=', ':', '/', '!', \"'\", '\"', '.', '@'];\nDatapackLanguageService.McfunctionTriggerCharacters = [',', '{', '['];\nDatapackLanguageService.AllTriggerCharacters = DatapackLanguageService.GeneralTriggerCharacters.concat(DatapackLanguageService.McfunctionTriggerCharacters);\nDatapackLanguageService.AllCommitCharacters = [' ', ',', '{', '[', '=', ':', '/', \"'\", '\"', '.', '}', ']'];\nDatapackLanguageService.FullRange = { start: { line: 0, character: 0 }, end: { line: Infinity, character: Infinity } };\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixFileCommandHandler = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst nodes_1 = require(\"../../nodes\");\nconst types_1 = require(\"../../types\");\nconst common_1 = require(\"../common\");\nconst onCodeAction_1 = require(\"../onCodeAction\");\nfunction fixFileCommandHandler({ uri, service }) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const { doc, textDoc } = yield service.getDocuments(uri);\n        /* istanbul ignore else */\n        if (doc && textDoc) {\n            if (types_1.isMcfunctionDocument(doc)) {\n                const config = yield service.getConfig(uri);\n                const edit = yield getMergedPreferredEdit(service, doc, textDoc, config, uri);\n                if (edit) {\n                    (_a = service.applyEdit) === null || _a === void 0 ? void 0 : _a.call(service, edit);\n                }\n                // TODO: Finish command part when we have any quick fixes using it}\n            }\n            else {\n                // TODO: JSON\n            }\n        }\n    });\n}\nexports.fixFileCommandHandler = fixFileCommandHandler;\nfunction getMergedPreferredEdit(service, doc, textDoc, config, uri) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const preferredActions = (yield getActions(service, doc, textDoc, config, uri))\n            .filter(v => v.isPreferred);\n        return mergeActionEdit(doc, textDoc, preferredActions);\n    });\n}\nfunction getActions(service, doc, textDoc, config, uri) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const ans = [];\n        for (const node of doc.nodes) {\n            const diagnostics = [];\n            (_a = node.errors) === null || _a === void 0 ? void 0 : _a.forEach(err => diagnostics.push(err.toDiagnostic(textDoc)));\n            const diagnosticsMap = common_1.getDiagnosticMap(diagnostics);\n            const selectedRange = { start: 0, end: Infinity };\n            const ctx = yield service.getParsingContext({ textDoc, uri });\n            if (node.data instanceof Array) {\n                for (const { data } of node.data) {\n                    /* istanbul ignore else */\n                    if (data instanceof nodes_1.ArgumentNode) {\n                        ans.push(...data[nodes_1.GetCodeActions](uri.toString(), ctx, selectedRange, diagnosticsMap));\n                    }\n                }\n            }\n            onCodeAction_1.fixCommandComponent(ans, ctx, node, diagnosticsMap);\n        }\n        return ans;\n    });\n}\nfunction mergeActionEdit(doc, textDoc, actions) {\n    var _a, _b, _c, _d;\n    let ans;\n    if (actions.length > 0) {\n        ans = actions[0];\n        for (let i = 1; i < actions.length; i++) {\n            const action = actions[i];\n            ans.edit = (_a = ans.edit) !== null && _a !== void 0 ? _a : {};\n            ans.edit.documentChanges = (_b = ans.edit.documentChanges) !== null && _b !== void 0 ? _b : [];\n            const upcommingChanges = (_d = (_c = action.edit) === null || _c === void 0 ? void 0 : _c.documentChanges) !== null && _d !== void 0 ? _d : [];\n            for (const upChange of upcommingChanges) {\n                if (vscode_languageserver_1.TextDocumentEdit.is(upChange)) {\n                    let existingChange = ans.edit.documentChanges.find(v => vscode_languageserver_1.TextDocumentEdit.is(v) &&\n                        v.textDocument.uri === upChange.textDocument.uri &&\n                        v.textDocument.version === upChange.textDocument.version);\n                    if (!existingChange) {\n                        existingChange = { textDocument: upChange.textDocument, edits: [] };\n                        ans.edit.documentChanges.push(existingChange);\n                    }\n                    for (const upEdit of upChange.edits) {\n                        const upStart = textDoc.offsetAt(upEdit.range.start);\n                        const upEnd = textDoc.offsetAt(upEdit.range.end);\n                        const overlappedExistingEdit = existingChange.edits.find(v => {\n                            const existingStart = textDoc.offsetAt(v.range.start);\n                            const existingEnd = textDoc.offsetAt(v.range.end);\n                            return types_1.areOverlapped({ start: upStart, end: upEnd }, { start: existingStart, end: existingEnd });\n                        });\n                        if (!overlappedExistingEdit) {\n                            existingChange.edits.push(upEdit);\n                        }\n                    }\n                }\n                else {\n                    ans.edit.documentChanges.push(upChange);\n                }\n            }\n        }\n    }\n    return ans === null || ans === void 0 ? void 0 : ans.edit;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./fixFileCommandHandler\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.walkRoot = exports.walkFile = exports.partitionedIteration = exports.getSelectedNodeFromInfo = exports.getStringLines = exports.getLspRange = exports.getSemanticTokensLegend = exports.getDiagnosticMap = exports.getTextDocument = exports.getRootIndex = exports.getId = exports.getRel = exports.getRelAndRootIndex = exports.parseSyntaxComponents = exports.parseJsonNode = exports.getUriFromId = exports.getRootUri = exports.getUri = void 0;\nconst fs_1 = require(\"fs\");\nconst minimatch_1 = __importDefault(require(\"minimatch\"));\nconst path_1 = __importDefault(require(\"path\"));\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst vscode_languageserver_textdocument_1 = require(\"vscode-languageserver-textdocument\");\nconst vscode_uri_1 = require(\"vscode-uri\");\nconst locales_1 = require(\"../locales\");\nconst nodes_1 = require(\"../nodes\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst types_1 = require(\"../types\");\nconst Token_1 = require(\"../types/Token\");\nconst JsonSchemaHelper_1 = require(\"../utils/JsonSchemaHelper\");\nconst PathPatterns_1 = require(\"../utils/PathPatterns\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nfunction getUri(str) {\n    return vscode_uri_1.URI.parse(str);\n}\nexports.getUri = getUri;\nfunction getRootUri(str) {\n    if (str[str.length - 1] !== '/') {\n        str = `${str}/`;\n    }\n    return getUri(str);\n}\nexports.getRootUri = getRootUri;\nfunction getUriFromId(pathExists, roots, urisOfIds, id, category, preferredRoot) {\n    const idString = id.toString();\n    const key = `${category}|${idString}`;\n    if (preferredRoot) {\n        const rel = id.toRel(category, 'data');\n        const uri = getUri(vscode_uri_1.URI.file(path_1.default.join(preferredRoot.fsPath, rel)).toString());\n        return uri;\n    }\n    const value = urisOfIds.get(key);\n    if (value !== undefined) {\n        return Promise.resolve(value);\n    }\n    return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n        const rel = id.toRel(category, 'data');\n        for (const root of roots) {\n            const abs = path_1.default.join(root.fsPath, rel);\n            if (yield pathExists(abs)) {\n                const uri = getUri(vscode_uri_1.URI.file(abs).toString());\n                urisOfIds.set(key, uri);\n                resolve(uri);\n            }\n        }\n        resolve(null);\n    }));\n}\nexports.getUriFromId = getUriFromId;\nfunction checkFilePath(errors, service, uri) {\n    const rel = service.getRel(uri);\n    if (rel && errors && minimatch_1.default(rel, PathPatterns_1.GeneralPathPattern, { dot: true })) {\n        for (const type of Object.keys(PathPatterns_1.PathPatterns)) {\n            if (minimatch_1.default(rel, PathPatterns_1.PathPatterns[type], { dot: true })) {\n                return;\n            }\n        }\n        errors.push(new types_1.ParsingError({ start: 0, end: 1 }, locales_1.locale('incorrect-file-path')));\n    }\n}\nfunction parseJsonNode({ service, textDoc, config, uri, schema, commandTree, vanillaData, jsonSchemas, schemaType }) {\n    const ans = Object.assign({ json: service.jsonService.parseJSONDocument(textDoc), schemaType }, types_1.ValidateResult.create());\n    const ctx = service.getParsingContextSync({ textDoc, uri, commandTree, config, jsonSchemas, vanillaData });\n    JsonSchemaHelper_1.JsonSchemaHelper.validate(ans, ans.json.root, schema, ctx);\n    checkFilePath(ans.errors, service, uri);\n    return ans;\n}\nexports.parseJsonNode = parseJsonNode;\nfunction parseSyntaxComponents(service, textDoc, start = 0, end = textDoc.getText().length, config, uri, cursor = -1, commandTree, vanillaData, jsonSchemas, languageConfigs) {\n    var _a, _b, _c;\n    const ans = [];\n    const string = textDoc.getText();\n    const reader = new StringReader_1.StringReader(string, start, end);\n    const ctx = service.getParsingContextSync({ textDoc, uri, cursor, commandTree, config, jsonSchemas, vanillaData });\n    const componentParsers = (_b = (_a = languageConfigs === null || languageConfigs === void 0 ? void 0 : languageConfigs.get(textDoc.languageId)) === null || _a === void 0 ? void 0 : _a.syntaxComponentParsers) !== null && _b !== void 0 ? _b : [];\n    const currentLine = () => textDoc.positionAt(reader.cursor).line;\n    const finalLine = textDoc.positionAt(end).line;\n    let lastLine = -1;\n    while (lastLine < currentLine() && currentLine() <= finalLine) {\n        const matchedParsers = componentParsers\n            .map(v => ({ parser: v, testResult: v.test(reader.clone(), ctx) }))\n            .filter(v => v.testResult[0])\n            .sort((a, b) => b.testResult[1] - a.testResult[1]);\n        if (matchedParsers.length > 0) {\n            // TODO: Handle correctly when there are multiple matched components.\n            const result = matchedParsers[0].parser.parse(reader, ctx);\n            ans.push(result);\n        }\n        else {\n            console.error(`[parseSyntaxComponents] No matched parser at [${reader.cursor}] with “${reader.remainingString}”.`);\n            break;\n        }\n        lastLine = currentLine();\n        reader.nextLine(textDoc);\n    }\n    checkFilePath((_c = ans === null || ans === void 0 ? void 0 : ans[0]) === null || _c === void 0 ? void 0 : _c.errors, service, uri);\n    return ans;\n}\nexports.parseSyntaxComponents = parseSyntaxComponents;\nfunction getRelAndRootIndex(uri, roots) {\n    for (const [i, root] of roots.entries()) {\n        if (uri.toString().startsWith(root.toString())) {\n            return {\n                rel: path_1.default.relative(root.fsPath, uri.fsPath),\n                index: i\n            };\n        }\n    }\n    return null;\n}\nexports.getRelAndRootIndex = getRelAndRootIndex;\nfunction getRel(uri, roots) {\n    var _a;\n    return (_a = getRelAndRootIndex(uri, roots)) === null || _a === void 0 ? void 0 : _a.rel;\n}\nexports.getRel = getRel;\nfunction getId(uri, roots) {\n    return IdentityNode_1.IdentityNode.fromRel(getRel(uri, roots));\n}\nexports.getId = getId;\nfunction getRootIndex(uri, roots) {\n    var _a, _b;\n    return (_b = (_a = getRelAndRootIndex(uri, roots)) === null || _a === void 0 ? void 0 : _a.index) !== null && _b !== void 0 ? _b : null;\n}\nexports.getRootIndex = getRootIndex;\nfunction getTextDocument({ uri, langID, getText, version }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return vscode_languageserver_textdocument_1.TextDocument.create(uri.toString(), langID, version, yield getText());\n    });\n}\nexports.getTextDocument = getTextDocument;\nfunction getDiagnosticMap(diagnostics) {\n    const diagnosticsMap = {};\n    for (const diag of diagnostics) {\n        if (diag.code !== undefined) {\n            const code = diag.code;\n            diagnosticsMap[code] = diagnosticsMap[code] || [];\n            diagnosticsMap[code].push(diag);\n        }\n    }\n    return diagnosticsMap;\n}\nexports.getDiagnosticMap = getDiagnosticMap;\n/* istanbul ignore next */\nfunction getSemanticTokensLegend() {\n    const tokenTypes = [];\n    for (let i = 0; i < Token_1.TokenType._; i++) {\n        const str = Token_1.TokenType[i];\n        tokenTypes.push(str);\n    }\n    const tokenModifiers = [];\n    for (let i = 0; i < Token_1.TokenModifier._; i++) {\n        const str = Token_1.TokenModifier[i];\n        tokenModifiers.push(str);\n    }\n    return { tokenTypes, tokenModifiers };\n}\nexports.getSemanticTokensLegend = getSemanticTokensLegend;\nfunction getLspRange(textDoc, { start, end }) {\n    return vscode_languageserver_1.Range.create(textDoc.positionAt(start), textDoc.positionAt(end));\n}\nexports.getLspRange = getLspRange;\nfunction getStringLines(string) {\n    return string.split(/\\r\\n|\\r|\\n/);\n}\nexports.getStringLines = getStringLines;\nfunction getSelectedNodeFromInfo(info, offset) {\n    return types_1.isMcfunctionDocument(info) ? nodes_1.getSelectedNode(info.nodes, offset) : { index: 0, node: info.nodes[0] };\n}\nexports.getSelectedNodeFromInfo = getSelectedNodeFromInfo;\nfunction partitionedIteration(iterator, onEachItem) {\n    return new Promise((resolve, reject) => {\n        try {\n            const help = () => __awaiter(this, void 0, void 0, function* () {\n                const { done, value: item } = iterator.next();\n                if (!done) {\n                    yield onEachItem(item);\n                    setImmediate(help);\n                }\n                else {\n                    resolve();\n                }\n            });\n            help();\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\nexports.partitionedIteration = partitionedIteration;\n/* istanbul ignore next */\nfunction walkFile(workspaceRootPath, abs, onFile, pathFilter = () => Promise.resolve(true)) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const names = (yield fs_1.promises.readdir(abs)).values();\n        return partitionedIteration(names, (name) => __awaiter(this, void 0, void 0, function* () {\n            const newAbs = path_1.default.join(abs, name);\n            const stat = yield fs_1.promises.stat(newAbs);\n            const rel = path_1.default.relative(workspaceRootPath, newAbs);\n            if (!(yield pathFilter(newAbs, rel, stat))) {\n                return;\n            }\n            if (stat.isDirectory()) {\n                return walkFile(workspaceRootPath, newAbs, onFile);\n            }\n            else {\n                return onFile(newAbs, rel, stat);\n            }\n        }));\n    });\n}\nexports.walkFile = walkFile;\n/* istanbul ignore next */\nfunction walkRoot(workspaceRoot, abs, cb, depth = Infinity) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (depth <= 0) {\n            return;\n        }\n        const names = yield fs_1.promises.readdir(abs);\n        const promises = [];\n        for (const name of names) {\n            const newAbs = path_1.default.join(abs, name);\n            const stat = yield fs_1.promises.stat(newAbs);\n            if (stat.isDirectory()) {\n                cb(newAbs, stat);\n                promises.push(walkRoot(workspaceRoot, newAbs, cb, depth - 1));\n            }\n        }\n        return Promise.all(promises);\n    });\n}\nexports.walkRoot = walkRoot;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./commands\"), exports);\n__exportStar(require(\"./onCallHierarchyIncomingCalls\"), exports);\n__exportStar(require(\"./onCallHierarchyOutgoingCalls\"), exports);\n__exportStar(require(\"./onCallHierarchyPrepare\"), exports);\n__exportStar(require(\"./onCodeAction\"), exports);\n__exportStar(require(\"./onColorPresentation\"), exports);\n__exportStar(require(\"./onCompletion\"), exports);\n__exportStar(require(\"./onNavigation\"), exports);\n__exportStar(require(\"./onDidChangeTextDocument\"), exports);\n__exportStar(require(\"./onDidCloseTextDocument\"), exports);\n__exportStar(require(\"./onDocumentColor\"), exports);\n__exportStar(require(\"./onDocumentFormatting\"), exports);\n__exportStar(require(\"./onDocumentHighlight\"), exports);\n__exportStar(require(\"./onDocumentLinks\"), exports);\n__exportStar(require(\"./onFoldingRanges\"), exports);\n__exportStar(require(\"./onHover\"), exports);\n__exportStar(require(\"./onPrepareRename\"), exports);\n__exportStar(require(\"./onRenameRequest\"), exports);\n__exportStar(require(\"./onSelectionRanges\"), exports);\n__exportStar(require(\"./onSemanticTokens\"), exports);\n__exportStar(require(\"./onSemanticTokensEdits\"), exports);\n__exportStar(require(\"./onSignatureHelp\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onCallHierarchyIncomingCalls = void 0;\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst onCallHierarchyPrepare_1 = require(\"./onCallHierarchyPrepare\");\nfunction onCallHierarchyIncomingCalls({ service, kind, id }) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function* () {\n        const ans = [];\n        let unit;\n        switch (kind) {\n            case onCallHierarchyPrepare_1.IdentityKind.Advancement:\n                return null;\n            case onCallHierarchyPrepare_1.IdentityKind.Function:\n                unit = ClientCache_1.getSafeCategory(service.cacheFile.cache, 'function')[id];\n                break;\n            case onCallHierarchyPrepare_1.IdentityKind.FunctionTag:\n            default:\n                unit = ClientCache_1.getSafeCategory(service.cacheFile.cache, 'tag/function')[id.slice(1)];\n                break;\n        }\n        /* istanbul ignore else */\n        if (unit && ((_a = unit.ref) === null || _a === void 0 ? void 0 : _a.length)) {\n            for (const ref of unit.ref) {\n                try {\n                    ans.push({\n                        from: onCallHierarchyPrepare_1.getCallHierarchyItem((_c = (_b = service.getId(service.parseUri(ref.uri))) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 ? void 0 : _c.toString(), ref.uri, ref.startLine, ref.endLine, ref.startChar, ref.endChar, onCallHierarchyPrepare_1.IdentityKind.Function),\n                        fromRanges: [{\n                                start: { line: ref.startLine, character: ref.startChar },\n                                end: { line: ref.endLine, character: ref.endChar }\n                            }]\n                    });\n                }\n                catch (ignored) {\n                    /* istanbul ignore next */\n                    unit.ref.splice(unit.ref.indexOf(ref), 1);\n                }\n            }\n        }\n        return ans;\n    });\n}\nexports.onCallHierarchyIncomingCalls = onCallHierarchyIncomingCalls;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onCallHierarchyOutgoingCalls = void 0;\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst onCallHierarchyPrepare_1 = require(\"./onCallHierarchyPrepare\");\nfunction onCallHierarchyOutgoingCalls({ service, id }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const ans = [];\n        const addCalleesFrom = (type) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const category = ClientCache_1.getSafeCategory(service.cacheFile.cache, type);\n            for (const calleeIdString of Object.keys(category)) {\n                const calleeUnit = category[calleeIdString];\n                for (const ref of (_a = calleeUnit === null || calleeUnit === void 0 ? void 0 : calleeUnit.ref) !== null && _a !== void 0 ? _a : []) {\n                    const refId = (_b = service.getId(service.parseUri(ref.uri))) === null || _b === void 0 ? void 0 : _b.id;\n                    /* istanbul ignore else */\n                    if (id === (refId === null || refId === void 0 ? void 0 : refId.toString())) {\n                        const calleeId = IdentityNode_1.IdentityNode.fromString(calleeIdString);\n                        const calleeUri = yield service.getUriFromId(calleeId, type);\n                        /* istanbul ignore else */\n                        if (calleeUri) {\n                            ans.push({\n                                to: onCallHierarchyPrepare_1.getCallHierarchyItem((ClientCache_1.isTagFileType(type) ? IdentityNode_1.IdentityNode.TagSymbol : '') + calleeId.toString(), calleeUri.toString(), 0, 0, 0, 0, type === 'advancement' ? onCallHierarchyPrepare_1.IdentityKind.Advancement :\n                                    type === 'function' ? onCallHierarchyPrepare_1.IdentityKind.Function :\n                                        onCallHierarchyPrepare_1.IdentityKind.FunctionTag),\n                                fromRanges: [{\n                                        start: { line: ref.startLine, character: ref.startChar },\n                                        end: { line: ref.endLine, character: ref.endChar }\n                                    }]\n                            });\n                        }\n                    }\n                }\n            }\n        });\n        yield addCalleesFrom('advancement');\n        yield addCalleesFrom('function');\n        yield addCalleesFrom('tag/function');\n        return ans;\n    });\n}\nexports.onCallHierarchyOutgoingCalls = onCallHierarchyOutgoingCalls;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCallHierarchyItem = exports.IdentityKind = exports.onCallHierarchyPrepare = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nfunction onCallHierarchyPrepare({ offset, node, service, textDoc }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        /* istanbul ignore next */\n        const result = ClientCache_1.getCacheFromOffset(node.cache || {}, offset);\n        /* istanbul ignore next */\n        if (result && (result.type === 'advancement' || result.type === 'function' || result.type === 'tag/function')) {\n            const uri = yield service.getUriFromId(IdentityNode_1.IdentityNode.fromString(result.id), result.type);\n            /* istanbul ignore next */\n            if (!uri) {\n                return null;\n            }\n            const startPos = textDoc.positionAt(result.start);\n            const endPos = textDoc.positionAt(result.end);\n            return [\n                getCallHierarchyItem((result.type === 'tag/function' ? IdentityNode_1.IdentityNode.TagSymbol : '') + result.id, uri.toString(), startPos.line, endPos.line, startPos.character, endPos.character, result.type === 'advancement' ? IdentityKind.Advancement :\n                    result.type === 'function' ? IdentityKind.Function :\n                        IdentityKind.FunctionTag)\n            ];\n        }\n        return null;\n    });\n}\nexports.onCallHierarchyPrepare = onCallHierarchyPrepare;\nvar IdentityKind;\n(function (IdentityKind) {\n    IdentityKind[IdentityKind[\"Advancement\"] = vscode_languageserver_1.SymbolKind.Event] = \"Advancement\";\n    IdentityKind[IdentityKind[\"Function\"] = vscode_languageserver_1.SymbolKind.Function] = \"Function\";\n    IdentityKind[IdentityKind[\"FunctionTag\"] = vscode_languageserver_1.SymbolKind.Class] = \"FunctionTag\";\n})(IdentityKind = exports.IdentityKind || (exports.IdentityKind = {}));\nfunction getCallHierarchyItem(id = '', uri, startLine, endLine, start, end, kind) {\n    return {\n        name: id,\n        range: {\n            start: { line: startLine, character: start },\n            end: { line: endLine, character: end }\n        },\n        selectionRange: {\n            start: { line: startLine, character: start },\n            end: { line: endLine, character: end }\n        },\n        kind: kind,\n        uri\n    };\n}\nexports.getCallHierarchyItem = getCallHierarchyItem;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixCommandComponent = exports.onCodeAction = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst __1 = require(\"..\");\nconst locales_1 = require(\"../locales\");\nconst nodes_1 = require(\"../nodes\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst types_1 = require(\"../types\");\nconst TextRange_1 = require(\"../types/TextRange\");\nconst common_1 = require(\"./common\");\nfunction onCodeAction({ uri, doc, diagnostics, textDoc, range, service }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const ans = [];\n            const diagnosticMap = common_1.getDiagnosticMap(diagnostics);\n            const start = textDoc.offsetAt(range.start);\n            const end = textDoc.offsetAt(range.end);\n            const selectedRange = { start, end };\n            const { index: startNodeIndex } = nodes_1.getSelectedNode(doc.nodes, start);\n            const { index: endNodeIndex } = nodes_1.getSelectedNode(doc.nodes, end);\n            const ctx = yield service.getParsingContext({ textDoc, uri });\n            for (let i = startNodeIndex; i <= endNodeIndex; i++) {\n                const node = doc.nodes[i];\n                /* istanbul ignore else */\n                if (node && node.data instanceof Array) {\n                    if (TextRange_1.areOverlapped(selectedRange, node.range)) {\n                        for (const { data } of node.data) {\n                            /* istanbul ignore else */\n                            if (data instanceof ArgumentNode_1.ArgumentNode) {\n                                const nodeRange = data[ArgumentNode_1.NodeRange];\n                                if (TextRange_1.areOverlapped(selectedRange, nodeRange)) {\n                                    ans.push(...data[ArgumentNode_1.GetCodeActions](uri.toString(), ctx, selectedRange, diagnosticMap));\n                                }\n                            }\n                        }\n                        fixCommandComponent(ans, ctx, node, diagnosticMap);\n                    }\n                }\n            }\n            if (ans.length > 0) {\n                addFixAllActions(ans, vscode_languageserver_1.CodeActionKind.QuickFix, { uri });\n            }\n            addFixAllActions(ans, vscode_languageserver_1.CodeActionKind.SourceFixAll, { uri });\n            return ans;\n        }\n        catch (e) {\n            console.error('[onCodeAction]', e);\n        }\n        return null;\n    });\n}\nexports.onCodeAction = onCodeAction;\nfunction addFixAllActions(ans, kind, args) {\n    ans.push(vscode_languageserver_1.CodeAction.create(locales_1.locale('code-action.fix-file'), vscode_languageserver_1.Command.create(locales_1.locale('code-action.fix-file'), 'datapack.fixFile', [args.uri.toString()]), kind), vscode_languageserver_1.CodeAction.create(locales_1.locale('code-action.fix-workspace'), vscode_languageserver_1.Command.create(locales_1.locale('code-action.fix-workspace'), 'datapack.fixWorkspace'), kind));\n}\nfunction fixCommandComponent(ans, ctx, node, diagnosticMap) {\n    const commandReplaceitem = diagnosticMap[1 /* CommandReplaceitem */];\n    if (commandReplaceitem === null || commandReplaceitem === void 0 ? void 0 : commandReplaceitem.length) {\n        const startIndex = node.data.findIndex(({ data: d, parser: p }) => p === 'literal' && d === 'replaceitem');\n        if (startIndex >= 0) {\n            const startLiteral = node.data[startIndex];\n            const target1 = node.data[startIndex + 1];\n            const target2 = node.data[startIndex + 2];\n            const slot = node.data[startIndex + 3];\n            const item = node.data[startIndex + 4];\n            const count = node.data[startIndex + 5];\n            ans.push(__1.getCodeAction('command-replaceitem', commandReplaceitem, ctx.textDoc, { start: startLiteral.range.start, end: count ? count.range.end : item.range.end }, `item ${target1.data} ${target2.data[types_1.GetFormattedString](ctx.config.lint)} ${slot.data} replace ${item.data[types_1.GetFormattedString](ctx.config.lint)}${count ? ` ${count.data}` : ''}`));\n        }\n    }\n}\nexports.fixCommandComponent = fixCommandComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onColorPresentation = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst utils_1 = require(\"../utils\");\nfunction onColorPresentation({ textDoc, start, end, r, g, b }) {\n    try {\n        const ans = [];\n        const range = vscode_languageserver_1.Range.create(textDoc.positionAt(start), textDoc.positionAt(end));\n        const string = textDoc.getText(range);\n        if (string.startsWith('dust')) {\n            ans.push({ label: `dust ${utils_1.round(r, 3)} ${utils_1.round(g, 3)} ${utils_1.round(b, 3)}` });\n        }\n        else if (string.startsWith('minecraft:dust')) {\n            ans.push({ label: `minecraft:dust ${utils_1.round(r, 3)} ${utils_1.round(g, 3)} ${utils_1.round(b, 3)}` });\n        }\n        else if (string.startsWith('#')) {\n            const toHex = (v) => {\n                const hex = v.toString(16);\n                return hex.length === 1 ? `0${hex}` : hex;\n            };\n            ans.push({ label: `#${toHex(r)}${toHex(g)}${toHex(b)}` });\n        }\n        else {\n            ans.push({ label: `${(Math.round(r * 255) << 16) + (Math.round(g * 255) << 8) + Math.round(b * 255)}` });\n        }\n        return ans;\n    }\n    catch (e) {\n        console.error('[onColorPresentation]', e);\n    }\n    return null;\n}\nexports.onColorPresentation = onColorPresentation;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onCompletion = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst utils_1 = require(\"../utils\");\nconst common_1 = require(\"./common\");\nfunction onCompletion({ offset, service, node, textDoc, uri, languageConfigs }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const config = yield service.getConfig(uri);\n            const commandTree = yield service.getCommandTree(config);\n            const vanillaData = yield service.getVanillaData(config);\n            const jsonSchemas = yield service.getJsonSchemas(config, vanillaData);\n            const nodes = common_1.parseSyntaxComponents(service, textDoc, node.range.start, node.range.end, config, uri, offset, commandTree, vanillaData, jsonSchemas, languageConfigs);\n            let completions = [];\n            for (const node of nodes) {\n                completions.push(...node.completions);\n            }\n            // Escape for TextMate: #431\n            /* istanbul ignore else */\n            if (completions) {\n                completions = completions.map(comp => {\n                    var _a, _b;\n                    /* istanbul ignore next */\n                    if (comp.insertTextFormat === vscode_languageserver_1.InsertTextFormat.Snippet) {\n                        return utils_1.handleCompletionText(comp, str => utils_1.escapeString(str, null));\n                    }\n                    comp.textEdit = (_a = comp.textEdit) !== null && _a !== void 0 ? _a : { newText: (_b = comp.insertText) !== null && _b !== void 0 ? _b : comp.label, range: { start: textDoc.positionAt(comp.start), end: textDoc.positionAt(comp.end) } };\n                    delete comp.start;\n                    delete comp.end;\n                    return comp;\n                });\n            }\n            return completions;\n        }\n        catch (e) {\n            console.error('[onCompletion]', e);\n        }\n        return null;\n    });\n}\nexports.onCompletion = onCompletion;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onDidChangeTextDocument = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst vscode_languageserver_textdocument_1 = require(\"vscode-languageserver-textdocument\");\nconst nodes_1 = require(\"../nodes\");\nconst common_1 = require(\"./common\");\nfunction isIncrementalChange(val) {\n    return !!val.range;\n}\nfunction onDidChangeTextDocument({ textDoc, uri, doc, version, contentChanges, config, service, languageConfigs }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const lineAmount = common_1.getStringLines(textDoc.getText()).length;\n        // eslint-disable-next-line prefer-const\n        let lineDelta = 0;\n        let nodeChange;\n        for (const change of contentChanges) {\n            if (isIncrementalChange(change)) {\n                let { index: nodeStart, node: startNode } = nodes_1.getSelectedNode(doc.nodes, textDoc.offsetAt(change.range.start));\n                const { index: nodeStop, node: stopNode } = nodes_1.getSelectedNode(doc.nodes, textDoc.offsetAt(change.range.end));\n                if (nodeStart !== -1 && nodeStop !== -1 && startNode && stopNode) {\n                    //#region Move to the former node.\n                    nodeStart = Math.max(0, nodeStart - 1);\n                    startNode = doc.nodes[nodeStart];\n                    //#endregion\n                    const lineStart = textDoc.positionAt(startNode.range.start).line;\n                    const lineStop = textDoc.positionAt(stopNode.range.end).line;\n                    nodeChange = nodeChange !== null && nodeChange !== void 0 ? nodeChange : { nodeStart, nodeStop, lineStart, lineStop };\n                    nodeChange.nodeStart = Math.min(nodeChange.nodeStart, nodeStart);\n                    nodeChange.nodeStop = Math.max(nodeChange.nodeStop, nodeStop);\n                    nodeChange.lineStart = Math.min(nodeChange.lineStart, lineStart);\n                    nodeChange.lineStop = Math.max(nodeChange.lineStop, lineStop);\n                    lineDelta += common_1.getStringLines(change.text).length - (change.range.end.line + 1 - change.range.start.line);\n                    continue;\n                }\n            }\n            lineDelta = 0;\n            nodeChange = { nodeStart: 0, nodeStop: doc.nodes.length - 1, lineStart: 0, lineStop: lineAmount - 1 };\n            break;\n        }\n        nodeChange = nodeChange !== null && nodeChange !== void 0 ? nodeChange : { nodeStart: 0, nodeStop: doc.nodes.length - 1, lineStart: 0, lineStop: lineAmount - 1 };\n        // Update `document`.\n        vscode_languageserver_textdocument_1.TextDocument.update(textDoc, contentChanges, version);\n        // FIXME: only parse the changed node in the future, instead of all nodes following the changed node.\n        nodeChange.nodeStop = doc.nodes.length - 1;\n        nodeChange.lineStop = lineAmount - 1;\n        // Update `lines`.\n        const commandTree = yield service.getCommandTree(config);\n        const vanillaData = yield service.getVanillaData(config);\n        const jsonSchemas = yield service.getJsonSchemas(config, vanillaData);\n        const changedNodes = common_1.parseSyntaxComponents(service, textDoc, textDoc.offsetAt(vscode_languageserver_1.Position.create(nodeChange.lineStart, 0)), textDoc.offsetAt(vscode_languageserver_1.Position.create(nodeChange.lineStop + lineDelta, Infinity)), config, uri, undefined, commandTree, vanillaData, jsonSchemas, languageConfigs);\n        doc.nodes.splice(nodeChange.nodeStart, nodeChange.nodeStop - nodeChange.nodeStart + 1, ...changedNodes);\n    });\n}\nexports.onDidChangeTextDocument = onDidChangeTextDocument;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onDidCloseTextDocument = void 0;\nfunction onDidCloseTextDocument({ docs, uri }) {\n    docs.delete(uri);\n}\nexports.onDidCloseTextDocument = onDidCloseTextDocument;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onDocumentColor = void 0;\nconst ClientCache_1 = require(\"../types/ClientCache\");\nfunction onDocumentColor({ doc, textDoc }) {\n    var _a;\n    const ans = [];\n    for (const node of doc.nodes) {\n        const colorCategory = ClientCache_1.getSafeCategory(node.cache, 'color');\n        for (const key of Object.keys(colorCategory)) {\n            const unit = colorCategory[key];\n            const numbers = key.split(' ').map(v => parseFloat(v));\n            const color = {\n                red: numbers[0],\n                green: numbers[1],\n                blue: numbers[2],\n                alpha: numbers[3] !== undefined ? numbers[3] : 1\n            };\n            for (const { start, end } of (_a = unit === null || unit === void 0 ? void 0 : unit.ref) !== null && _a !== void 0 ? _a : []) {\n                ans.push({\n                    range: {\n                        start: textDoc.positionAt(start),\n                        end: textDoc.positionAt(end)\n                    },\n                    color\n                });\n            }\n        }\n    }\n    return ans;\n}\nexports.onDocumentColor = onDocumentColor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onDocumentFormatting = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst CommandComponent_1 = require(\"../types/CommandComponent\");\nconst common_1 = require(\"./common\");\nfunction onDocumentFormatting({ doc, textDoc, config }) {\n    const ans = [];\n    doc.nodes.forEach(node => {\n        if (node.errors.filter(v => v.severity === vscode_languageserver_1.DiagnosticSeverity.Error).length === 0) {\n            ans.push({\n                range: common_1.getLspRange(textDoc, node.range),\n                newText: CommandComponent_1.componentToLintedString(node, config.lint)\n            });\n        }\n    });\n    return ans;\n}\nexports.onDocumentFormatting = onDocumentFormatting;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onDocumentHighlight = void 0;\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst onSelectionRanges_1 = require(\"./onSelectionRanges\");\nfunction onDocumentHighlight({ offset, doc, node, position, textDoc }) {\n    /* istanbul ignore next */\n    const result = ClientCache_1.getCacheFromOffset(node.cache || {}, offset);\n    if (result) {\n        // Highlight all the references/definitions of the selected stuff.\n        const ans = [];\n        for (const node of doc.nodes) {\n            const unit = ClientCache_1.getSafeCategory(node.cache, result.type)[result.id];\n            /* istanbul ignore else */\n            if (unit) {\n                const ref = ClientCache_1.CacheUnitPositionTypes.reduce((p, c) => { var _a; return p.concat((_a = unit[c]) !== null && _a !== void 0 ? _a : []); }, []);\n                /* istanbul ignore else */\n                if (ref.length > 0) {\n                    ans.push(...ref.map(v => ({\n                        range: {\n                            start: textDoc.positionAt(v.start),\n                            end: textDoc.positionAt(v.end)\n                        }\n                    })));\n                }\n            }\n        }\n        return ans;\n    }\n    // Highlight the selected token.\n    return onSelectionRanges_1.onSelectionRanges({ doc, textDoc, positions: [position] });\n}\nexports.onDocumentHighlight = onDocumentHighlight;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onDocumentLinks = void 0;\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst types_1 = require(\"../types\");\nfunction onDocumentLinks({ doc, textDoc, service }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const ans = [];\n            for (const { cache } of doc.nodes) {\n                for (const type of Object.keys(cache !== null && cache !== void 0 ? cache : {})) {\n                    if (types_1.isFileType(type)) {\n                        const category = cache[type];\n                        for (const id of Object.keys(category !== null && category !== void 0 ? category : {})) {\n                            const unit = category[id];\n                            const ref = types_1.CacheUnitPositionTypes.reduce((p, c) => { var _a; return p.concat((_a = unit[c]) !== null && _a !== void 0 ? _a : []); }, []);\n                            for (const pos of ref) {\n                                const link = {\n                                    range: {\n                                        start: textDoc.positionAt(pos.start),\n                                        end: textDoc.positionAt(pos.end)\n                                    },\n                                    target: yield service.getUriFromId(IdentityNode_1.IdentityNode.fromString(id), type)\n                                };\n                                /* istanbul ignore next */\n                                if (link.target) {\n                                    ans.push({ range: link.range, target: link.target.toString() });\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return ans;\n        }\n        catch (e) {\n            console.error('[onDocumentLinks]', e);\n        }\n        return null;\n    });\n}\nexports.onDocumentLinks = onDocumentLinks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onFoldingRanges = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst StringReader_1 = require(\"../utils/StringReader\");\nconst common_1 = require(\"./common\");\nfunction getCommentSymbolAmount(string) {\n    const reader = new StringReader_1.StringReader(string);\n    reader.skipSpace();\n    let ans = 0;\n    while (reader.canRead() && reader.peek() === '#') {\n        reader.skip();\n        ans += 1;\n    }\n    if (!StringReader_1.StringReader.isWhiteSpace(reader.peek())) {\n        ans = 0;\n    }\n    return ans;\n}\nfunction onFoldingRanges({ textDoc }) {\n    try {\n        const ans = [];\n        const strings = common_1.getStringLines(textDoc.getText());\n        const regionStartLines = [];\n        const commentStartLines = {};\n        let docCommentStart = undefined;\n        for (const [i, string] of strings.entries()) {\n            if (string.match(/^\\s*#region\\b/)) {\n                regionStartLines.push(i);\n            }\n            else if (string.match(/^\\s*#endregion\\b/)) {\n                const startLine = regionStartLines.pop();\n                if (startLine !== undefined) {\n                    // End “#region”s.\n                    ans.push(vscode_languageserver_1.FoldingRange.create(startLine, i, undefined, undefined, vscode_languageserver_1.FoldingRangeKind.Region));\n                }\n                for (const levelString of Object.keys(commentStartLines)) {\n                    // End normal comments.\n                    const level = parseFloat(levelString);\n                    ans.push(vscode_languageserver_1.FoldingRange.create(commentStartLines[level], i - 1, undefined, undefined, vscode_languageserver_1.FoldingRangeKind.Region));\n                    delete commentStartLines[level];\n                }\n            }\n            else if (docCommentStart === undefined && string.match(/^\\s*#>(\\s|$)/)) {\n                docCommentStart = i;\n            }\n            else if (docCommentStart !== undefined && !string.match(/^\\s*#(\\s|$)/)) {\n                // End doc comments.\n                ans.push(vscode_languageserver_1.FoldingRange.create(docCommentStart, i - 1, undefined, undefined, vscode_languageserver_1.FoldingRangeKind.Comment));\n                docCommentStart = undefined;\n            }\n            else {\n                const amount = getCommentSymbolAmount(string);\n                for (const levelString of Object.keys(commentStartLines)) {\n                    const level = parseFloat(levelString);\n                    if (amount > 0 && level >= amount && commentStartLines[level] !== undefined) {\n                        // End equal-or-lower-level comments.\n                        ans.push(vscode_languageserver_1.FoldingRange.create(commentStartLines[level], i - 1, undefined, undefined, vscode_languageserver_1.FoldingRangeKind.Region));\n                        delete commentStartLines[level];\n                    }\n                    else if (i === strings.length - 1) {\n                        // End normal comments at end of file.\n                        ans.push(vscode_languageserver_1.FoldingRange.create(commentStartLines[level], i, undefined, undefined, vscode_languageserver_1.FoldingRangeKind.Region));\n                        delete commentStartLines[level];\n                    }\n                }\n                if (docCommentStart === undefined && amount > 0) {\n                    commentStartLines[amount] = i;\n                }\n            }\n        }\n        return ans;\n    }\n    catch (e) {\n        console.error('[onFoldingRanges]', e);\n    }\n    return null;\n}\nexports.onFoldingRanges = onFoldingRanges;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onHover = void 0;\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst types_1 = require(\"../types\");\nfunction onHover({ com, ctx }) {\n    if (com.type === 'spgoding:doc_comment/doc_comment') {\n        const docCom = com;\n        if (types_1.isInRange(ctx.cursor, docCom.range)) {\n            return docCom.data.doc[ArgumentNode_1.GetHover](ctx);\n        }\n    }\n    const cmdCom = com;\n    for (const { data } of cmdCom.data) {\n        if (data instanceof ArgumentNode_1.ArgumentNode) {\n            const range = data[ArgumentNode_1.NodeRange];\n            if (types_1.isInRange(ctx.cursor, range)) {\n                return data[ArgumentNode_1.GetHover](ctx);\n            }\n        }\n    }\n    return null;\n}\nexports.onHover = onHover;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onNavigation = void 0;\nconst ClientCache_1 = require(\"../types/ClientCache\");\nfunction onNavigation({ node, offset, cacheFile, type }) {\n    var _a;\n    /* istanbul ignore next */\n    const result = ClientCache_1.getCacheFromOffset(node.cache || {}, offset);\n    if (result) {\n        const unit = ClientCache_1.getSafeCategory(cacheFile.cache, result.type)[result.id];\n        /* istanbul ignore else */\n        if (unit && ((_a = unit[type]) === null || _a === void 0 ? void 0 : _a.length)) {\n            return unit[type].map(v => ({\n                uri: v.uri,\n                range: {\n                    start: { line: v.startLine, character: v.startChar },\n                    end: { line: v.endLine, character: v.endChar }\n                }\n            }));\n        }\n    }\n    return null;\n}\nexports.onNavigation = onNavigation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onPrepareRename = void 0;\nconst ClientCache_1 = require(\"../types/ClientCache\");\nfunction onPrepareRename({ textDoc, node, offset }) {\n    /* istanbul ignore next */\n    const result = ClientCache_1.getCacheFromOffset(node.cache || {}, offset);\n    if (result && !ClientCache_1.isInternalType(result.type)) {\n        return {\n            start: textDoc.positionAt(result.start),\n            end: textDoc.positionAt(result.end)\n        };\n    }\n    return null;\n}\nexports.onPrepareRename = onPrepareRename;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onRenameRequest = void 0;\nconst path_1 = __importDefault(require(\"path\"));\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nfunction onRenameRequest({ node, offset, newName, service }) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function* () {\n        /* istanbul ignore next */\n        const result = ClientCache_1.getCacheFromOffset(node.cache || {}, offset);\n        if (result && !ClientCache_1.isInternalType(result.type)) {\n            const documentChanges = [];\n            const category = ClientCache_1.getSafeCategory(service.cacheFile.cache, result.type);\n            const unit = category[result.id];\n            /* istanbul ignore else */\n            if (unit) {\n                try {\n                    const newID = ClientCache_1.isNamespacedType(result.type) ? IdentityNode_1.IdentityNode.fromString(newName).toString() : newName;\n                    // Change file contents.\n                    for (const key of Object.keys(unit)) {\n                        if (ClientCache_1.isCacheUnitPositionType(key)) {\n                            for (const pos of (_a = unit[key]) !== null && _a !== void 0 ? _a : []) {\n                                if (pos.startLine !== pos.endLine || pos.endChar - pos.startChar === 0) {\n                                    continue;\n                                }\n                                const affectedUri = service.parseUri(pos.uri);\n                                try {\n                                    const { textDoc: affectedTextDoc } = yield service.getDocuments(affectedUri);\n                                    /* istanbul ignore else */\n                                    if (affectedTextDoc) {\n                                        documentChanges.push({\n                                            textDocument: { uri: pos.uri, version: affectedTextDoc.version },\n                                            edits: [{\n                                                    newText: newName,\n                                                    range: {\n                                                        start: { line: pos.startLine, character: pos.startChar },\n                                                        end: { line: pos.startLine, character: pos.endChar }\n                                                    }\n                                                }]\n                                        });\n                                    }\n                                }\n                                catch (e) {\n                                    console.error('[onRenameRequest] ', e);\n                                }\n                            }\n                        }\n                    }\n                    // Rename file if necessary.\n                    if (ClientCache_1.isFileType(result.type)) {\n                        const oldID = IdentityNode_1.IdentityNode.fromString(result.id);\n                        const oldUri = yield service.getUriFromId(oldID, result.type);\n                        /* istanbul ignore next */\n                        if (!oldUri) {\n                            console.error(`[onRenameRequest] Failed to get the URI of “${result.type} ${oldID}”.`);\n                            return null;\n                        }\n                        let preferredRoot;\n                        const oldRel = oldID.toRel(result.type);\n                        for (const root of service.roots) {\n                            const abs = path_1.default.join(root.fsPath, oldRel);\n                            if (yield service.pathAccessible(abs)) {\n                                preferredRoot = root;\n                            }\n                        }\n                        /* istanbul ignore next */\n                        if (!preferredRoot) {\n                            console.error(`[onRenameRequest] Failed to get the preferred root for “${oldRel}” in ${service.roots.map(v => `“${v}”`).join(', ')}.`);\n                            return null;\n                        }\n                        const newUri = service.getUriFromId(IdentityNode_1.IdentityNode.fromString(newName), result.type, preferredRoot);\n                        documentChanges.push(vscode_languageserver_1.RenameFile.create(oldUri.toString(), newUri.toString(), { ignoreIfExists: true }));\n                        // Update cache.\n                        const oldTimestamp = service.cacheFile.files[oldUri.toString()];\n                        /* istanbul ignore else */\n                        if (oldTimestamp !== undefined) {\n                            service.cacheFile.files[newUri.toString()] = oldTimestamp;\n                            delete service.cacheFile.files[oldUri.toString()];\n                        }\n                        ClientCache_1.removeCachePosition(service.cacheFile.cache, oldUri);\n                        service.onDidCloseTextDocument(oldUri);\n                    }\n                    // Update cache.\n                    const targetUnit = category[newID];\n                    if (targetUnit) {\n                        for (const t of ClientCache_1.CacheUnitPositionTypes) {\n                            if ((_b = unit[t]) === null || _b === void 0 ? void 0 : _b.length) {\n                                (targetUnit[t] = (_c = targetUnit[t]) !== null && _c !== void 0 ? _c : []).push(...unit[t]);\n                            }\n                        }\n                    }\n                    else {\n                        category[newID] = unit;\n                    }\n                    delete category[result.id];\n                    service.cacheFile.cache[result.type] = category;\n                }\n                catch (e) {\n                    /* istanbul ignore next */\n                    console.error('[onRenameRequest] ', e);\n                    return null;\n                }\n            }\n            return { documentChanges };\n        }\n        return null;\n    });\n}\nexports.onRenameRequest = onRenameRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onSelectionRanges = void 0;\nconst nodes_1 = require(\"../nodes\");\nfunction onSelectionRanges({ doc, positions, textDoc }) {\n    var _a;\n    const ans = [];\n    for (const pos of positions) {\n        const offset = textDoc.offsetAt(pos);\n        const { node } = nodes_1.getSelectedNode(doc.nodes, offset);\n        for (const token of (_a = node === null || node === void 0 ? void 0 : node.tokens) !== null && _a !== void 0 ? _a : []) {\n            if (token.range.start <= offset && offset <= token.range.end) {\n                ans.push({\n                    range: {\n                        start: textDoc.positionAt(token.range.start),\n                        end: textDoc.positionAt(token.range.end)\n                    }\n                });\n                break;\n            }\n        }\n    }\n    return ans;\n}\nexports.onSelectionRanges = onSelectionRanges;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onSemanticTokens = void 0;\nfunction onSemanticTokens({ doc, textDoc, builder }) {\n    for (const { tokens } of doc.nodes) {\n        tokens\n            .sort((a, b) => a.range.start - b.range.start)\n            .forEach(t => builder.push(...t.toArray(textDoc)));\n    }\n    return builder.build();\n}\nexports.onSemanticTokens = onSemanticTokens;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onSemanticTokensEdits = void 0;\n/** istanbul ignore next: mostly reply on the builder, not ourselves. */\nfunction onSemanticTokensEdits({ doc, previousResultId, textDoc, builder }) {\n    builder.previousResult(previousResultId);\n    for (const { tokens } of doc.nodes) {\n        tokens\n            .sort((a, b) => a.range.start - b.range.start)\n            .forEach(t => builder.push(...t.toArray(textDoc)));\n    }\n    return builder.build /* Edits */();\n}\nexports.onSemanticTokensEdits = onSemanticTokensEdits;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onSignatureHelp = void 0;\nconst common_1 = require(\"./common\");\nfunction onSignatureHelp({ offset, node, uri, service, textDoc, languageConfigs }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const signatures = [];\n            const config = yield service.getConfig(uri);\n            const commandTree = yield service.getCommandTree(config);\n            const vanillaData = yield service.getVanillaData(config);\n            const jsonSchemas = yield service.getJsonSchemas(config, vanillaData);\n            const nodes = common_1.parseSyntaxComponents(service, textDoc, node.range.start, node.range.end, config, uri, offset, commandTree, vanillaData, jsonSchemas, languageConfigs);\n            let fix = [], options = [];\n            if (nodes.length) {\n                fix = nodes[0].hint.fix;\n                options = nodes[0].hint.options;\n            }\n            const fixLabel = fix.join(' ');\n            // eslint-disable-next-line prefer-const\n            for (let [current, nextOptions] of options) {\n                if (nextOptions.length === 0) {\n                    nextOptions = [''];\n                }\n                for (const nextOption of nextOptions) {\n                    const fixLabelStart = 0;\n                    const fixLabelEnd = fixLabelStart + fixLabel.length;\n                    const currentStart = fixLabelEnd + 1; // The 1 is for the space between `fixLabel` and `current`\n                    const currentEnd = currentStart + current.length;\n                    const nextOptionStart = currentEnd + 1; // The 1 is for the space between `current` and `nextOption`\n                    const nextOptionEnd = nextOptionStart + nextOption.length;\n                    signatures.push({\n                        label: `${fixLabel} ${current} ${nextOption}`,\n                        parameters: [\n                            { label: [fixLabelStart, fixLabelEnd] },\n                            { label: [currentStart, currentEnd] },\n                            { label: [nextOptionStart, nextOptionEnd] }\n                        ]\n                    });\n                }\n            }\n            return { signatures, activeParameter: 1, activeSignature: signatures.length - 1 };\n        }\n        catch (e) {\n            console.error('[onSignatureHelp]', e);\n        }\n        return null;\n    });\n}\nexports.onSignatureHelp = onSignatureHelp;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCompletions = exports.setUpUnit = exports.getSafeCategory = exports.getCacheForID = exports.testID = exports.getCacheVisibilities = exports.trimCache = exports.getFileTypeFromCategory = exports.combineCache = exports.removeCacheUnit = exports.removeCachePosition = exports.remapCachePosition = exports.getCacheFromOffset = exports.isCacheUnitPositionType = exports.CacheUnitPositionTypes = exports.isNamespacedType = exports.isCacheType = exports.isInternalType = exports.isAliasType = exports.isDeclarableType = exports.isMiscType = exports.isFileType = exports.isWorldgenRegistryFileType = exports.isTagFileType = exports.NamespacedTypes = exports.CacheTypes = exports.DeclarableTypes = exports.MiscTypes = exports.InternalTypes = exports.AliasTypes = exports.FileTypes = exports.WorldgenFileTypes = exports.TagFileTypes = exports.DefaultCacheFile = exports.CacheVersion = void 0;\nconst rfdc_1 = __importDefault(require(\"rfdc\"));\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst nodes_1 = require(\"../nodes\");\nconst TextRange_1 = require(\"./TextRange\");\nexports.CacheVersion = 11;\nexports.DefaultCacheFile = { cache: {}, advancements: {}, tags: { functions: {} }, files: {}, version: exports.CacheVersion };\nexports.TagFileTypes = [\n    'tag/block',\n    'tag/entity_type',\n    'tag/fluid',\n    'tag/function',\n    'tag/game_event',\n    'tag/item'\n];\nexports.WorldgenFileTypes = [\n    'worldgen/biome',\n    'worldgen/configured_carver',\n    'worldgen/configured_decorator',\n    'worldgen/configured_feature',\n    'worldgen/configured_structure_feature',\n    'worldgen/configured_surface_builder',\n    'worldgen/noise_settings',\n    'worldgen/processor_list',\n    'worldgen/template_pool'\n];\nexports.FileTypes = [\n    'advancement',\n    'dimension',\n    'dimension_type',\n    'function',\n    'item_modifier',\n    'loot_table',\n    'predicate',\n    'recipe',\n    'structure',\n    ...exports.TagFileTypes,\n    ...exports.WorldgenFileTypes\n];\nexports.AliasTypes = [\n    'alias/entity',\n    'alias/uuid',\n    'alias/vector'\n];\nexports.InternalTypes = [\n    'color',\n    ...exports.AliasTypes\n];\nexports.MiscTypes = [\n    'bossbar',\n    'entity',\n    'objective',\n    'score_holder',\n    'storage',\n    'tag',\n    'team'\n];\nexports.DeclarableTypes = [\n    ...exports.FileTypes,\n    ...exports.MiscTypes\n];\nexports.CacheTypes = [\n    ...exports.DeclarableTypes,\n    ...exports.InternalTypes\n];\nexports.NamespacedTypes = [\n    ...exports.FileTypes,\n    'bossbar',\n    'storage'\n];\nfunction isTagFileType(value) {\n    return exports.TagFileTypes.includes(value);\n}\nexports.isTagFileType = isTagFileType;\nfunction isWorldgenRegistryFileType(value) {\n    return exports.WorldgenFileTypes.includes(value);\n}\nexports.isWorldgenRegistryFileType = isWorldgenRegistryFileType;\nfunction isFileType(value) {\n    return exports.FileTypes.includes(value);\n}\nexports.isFileType = isFileType;\nfunction isMiscType(value) {\n    return exports.MiscTypes.includes(value);\n}\nexports.isMiscType = isMiscType;\nfunction isDeclarableType(value) {\n    return exports.DeclarableTypes.includes(value);\n}\nexports.isDeclarableType = isDeclarableType;\nfunction isAliasType(value) {\n    return exports.AliasTypes.includes(value);\n}\nexports.isAliasType = isAliasType;\nfunction isInternalType(value) {\n    return exports.InternalTypes.includes(value);\n}\nexports.isInternalType = isInternalType;\nfunction isCacheType(value) {\n    return exports.CacheTypes.includes(value);\n}\nexports.isCacheType = isCacheType;\nfunction isNamespacedType(value) {\n    return exports.NamespacedTypes.includes(value);\n}\nexports.isNamespacedType = isNamespacedType;\nexports.CacheUnitPositionTypes = ['dcl', 'def', 'ref'];\nfunction isCacheUnitPositionType(value) {\n    return exports.CacheUnitPositionTypes.includes(value);\n}\nexports.isCacheUnitPositionType = isCacheUnitPositionType;\nfunction getCacheFromOffset(cache, offset) {\n    var _a;\n    for (const type of Object.keys(cache)) {\n        const category = cache[type];\n        for (const id of Object.keys(category)) {\n            const unit = category[id];\n            for (const t of exports.CacheUnitPositionTypes) {\n                for (const ele of (_a = unit[t]) !== null && _a !== void 0 ? _a : []) {\n                    if (ele.start <= offset && offset <= ele.end) {\n                        return { type: type, id, start: ele.start, end: ele.end };\n                    }\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexports.getCacheFromOffset = getCacheFromOffset;\nfunction remapCachePosition(cache, mapping) {\n    for (const type of Object.keys(cache)) {\n        const category = cache[type];\n        for (const id of Object.keys(category)) {\n            const unit = category[id];\n            for (const t of exports.CacheUnitPositionTypes) {\n                if (unit[t]) {\n                    unit[t] = unit[t].map(ele => TextRange_1.remapTextRange(ele, mapping));\n                }\n            }\n        }\n    }\n}\nexports.remapCachePosition = remapCachePosition;\nfunction removeCachePosition(cache, uri) {\n    for (const type of Object.keys(cache)) {\n        const category = cache[type];\n        for (const id of Object.keys(category)) {\n            const unit = category[id];\n            for (const t of exports.CacheUnitPositionTypes) {\n                if (unit[t]) {\n                    unit[t] = unit[t].filter(ele => ele.uri !== uri.toString());\n                }\n            }\n        }\n    }\n}\nexports.removeCachePosition = removeCachePosition;\nfunction removeCacheUnit(cache, type, id) {\n    const category = getSafeCategory(cache, type);\n    delete category[id];\n}\nexports.removeCacheUnit = removeCacheUnit;\n/**\n * Combine base cache with overriding cache.\n * @param base Base cache.\n * @param override Overriding cache.\n */\nfunction combineCache(base = {}, override = {}, addition) {\n    var _a, _b, _c, _d, _e;\n    const ans = base;\n    function initUnit(type, id) {\n        ans[type] = getSafeCategory(ans, type);\n        const ansCategory = ans[type];\n        ansCategory[id] = ansCategory[id] || {};\n        const ansUnit = ansCategory[id];\n        return ansUnit;\n    }\n    function addPos(pos, arr) {\n        if (addition) {\n            pos.uri = addition.uri.toString();\n            const startPos = addition.getPosition(pos.start);\n            const endPos = addition.getPosition(pos.end);\n            pos.startLine = startPos.line;\n            pos.startChar = startPos.character;\n            pos.endLine = endPos.line;\n            pos.endChar = endPos.character;\n        }\n        arr.push(pos);\n    }\n    for (const type of Object.keys(override)) {\n        const overrideCategory = override[type];\n        for (const id of Object.keys(overrideCategory !== null && overrideCategory !== void 0 ? overrideCategory : {})) {\n            const overrideUnit = overrideCategory[id];\n            if (((_a = overrideUnit.dcl) === null || _a === void 0 ? void 0 : _a.length) || ((_b = overrideUnit.def) === null || _b === void 0 ? void 0 : _b.length) || ((_c = overrideUnit.ref) === null || _c === void 0 ? void 0 : _c.length) || overrideUnit.doc) {\n                const ansUnit = initUnit(type, id);\n                for (const type of exports.CacheUnitPositionTypes) {\n                    for (const overridePos of (_d = overrideUnit[type]) !== null && _d !== void 0 ? _d : []) {\n                        ansUnit[type] = (_e = ansUnit[type]) !== null && _e !== void 0 ? _e : [];\n                        addPos(overridePos, ansUnit[type]);\n                    }\n                }\n                if (overrideUnit.doc !== undefined) {\n                    ansUnit.doc = overrideUnit.doc;\n                }\n                else {\n                    delete ansUnit.doc;\n                }\n                if (overrideUnit.foo !== undefined) {\n                    ansUnit.foo = overrideUnit.foo;\n                }\n                else {\n                    delete ansUnit.foo;\n                }\n            }\n        }\n    }\n    return ans;\n}\nexports.combineCache = combineCache;\nfunction getFileTypeFromCategory(category) {\n    if (category === 'dimension' || category === 'dimension_type') {\n        return category;\n    }\n    else {\n        return category.slice(0, -1);\n    }\n}\nexports.getFileTypeFromCategory = getFileTypeFromCategory;\nfunction trimCache(cache) {\n    var _a, _b, _c;\n    for (const type of Object.keys(cache)) {\n        const category = cache[type];\n        for (const id of Object.keys(category)) {\n            const unit = category[id];\n            if (!((_a = unit.dcl) === null || _a === void 0 ? void 0 : _a.length) && !((_b = unit.def) === null || _b === void 0 ? void 0 : _b.length) && !((_c = unit.ref) === null || _c === void 0 ? void 0 : _c.length)) {\n                delete category[id];\n            }\n        }\n        if (Object.keys(category).length === 0) {\n            delete cache[type];\n        }\n    }\n}\nexports.trimCache = trimCache;\nfunction getCacheVisibilities(visibility, definitionType, definitionID) {\n    const ans = [];\n    if (visibility === 'private') {\n        ans.push({ type: definitionType, pattern: definitionID.toString() });\n    }\n    else if (visibility === 'internal') {\n        const namespace = definitionID.getNamespace();\n        ans.push({ type: '*', pattern: `${namespace}:**` });\n        if (namespace !== nodes_1.IdentityNode.DefaultNamespace) {\n            ans.push({ type: '*', pattern: `${nodes_1.IdentityNode.DefaultNamespace}:**` });\n        }\n    }\n    else if (visibility === 'public') {\n        ans.push({ type: '*', pattern: '**' });\n    }\n    return ans;\n}\nexports.getCacheVisibilities = getCacheVisibilities;\nfunction testID(service, visibility = [], forType, forID, definitionUri, config) {\n    if (!visibility) {\n        return true;\n    }\n    if (visibility instanceof Array) {\n        if (visibility.length) {\n            return visibility.some(v => testID(service, v, forType, forID, definitionUri, config));\n        }\n        else {\n            const defaultConfig = config.env.defaultVisibility;\n            if (typeof defaultConfig === 'object') {\n                return testID(service, defaultConfig, forType, forID, definitionUri, config);\n            }\n            else {\n                const defIDResult = service.getId(service.parseUri(definitionUri));\n                if (!defIDResult) {\n                    console.error(`[testID] No ID result for “${definitionUri}” for “${forType} ${forID}”.`);\n                    return true;\n                }\n                return testID(service, getCacheVisibilities(defaultConfig, defIDResult.category, defIDResult.id), forType, forID, definitionUri, config);\n            }\n        }\n    }\n    if (visibility.type !== '*' && visibility.type !== forType) {\n        return false;\n    }\n    const regex = new RegExp(`^${visibility.pattern\n        .replace(/\\?/g, '[^:/]')\n        .replace(/\\*\\*\\//g, '.{0,}')\n        .replace(/\\*\\*/g, '.{0,}')\n        .replace(/\\*/g, '[^:/]{0,}')}$`);\n    return regex.test(forID.toString()) || regex.test(forID.toShortestString());\n}\nexports.testID = testID;\n/**\n * Pure function.\n */\nfunction getCacheForID(service, forType, forID, config) {\n    var _a, _b;\n    const trimPositions = (unit, t) => {\n        var _a;\n        unit[t] = (_a = unit[t]) === null || _a === void 0 ? void 0 : _a.filter(p => testID(service, p.visibility, forType, forID, p.uri, config));\n    };\n    const ans = rfdc_1.default()(service.cacheFile.cache);\n    for (const type of Object.keys(ans)) {\n        const category = ans[type];\n        if (!category) {\n            continue;\n        }\n        for (const id of Object.keys(category)) {\n            const unit = category[id];\n            trimPositions(unit, 'dcl');\n            trimPositions(unit, 'def');\n            if (!((_a = unit.dcl) === null || _a === void 0 ? void 0 : _a.length) && !((_b = unit.def) === null || _b === void 0 ? void 0 : _b.length)) {\n                delete category[id];\n            }\n        }\n        if (Object.keys(category).length === 0) {\n            delete ans[type];\n        }\n    }\n    return ans;\n}\nexports.getCacheForID = getCacheForID;\nfunction getSafeCategory(cache, type) {\n    cache = cache || {};\n    return cache[type] || {};\n}\nexports.getSafeCategory = getSafeCategory;\nfunction setUpUnit(cache, type, id, defaultValue = {}) {\n    var _a, _b;\n    const stringID = id.toString();\n    return ((cache = cache !== null && cache !== void 0 ? cache : {})[type] = (_a = cache[type]) !== null && _a !== void 0 ? _a : {})[stringID] = (_b = cache[type][stringID]) !== null && _b !== void 0 ? _b : defaultValue;\n}\nexports.setUpUnit = setUpUnit;\nfunction getCompletions(cache, type, start, end) {\n    const category = getSafeCategory(cache, type);\n    const ans = [];\n    for (const id of Object.keys(category)) {\n        const unit = category[id];\n        const documentation = unit.doc || undefined;\n        ans.push(Object.assign({ label: id, start, end }, documentation && { documentation: { kind: vscode_languageserver_1.MarkupKind.Markdown, value: documentation } }));\n    }\n    return ans;\n}\nexports.getCompletions = getCompletions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getClientCapabilities = void 0;\nfunction getClientCapabilities(lspCapabilities = {}, custom = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;\n    const ans = {\n        dynamicRegistration: {\n            competion: !!((_b = (_a = lspCapabilities.textDocument) === null || _a === void 0 ? void 0 : _a.completion) === null || _b === void 0 ? void 0 : _b.dynamicRegistration),\n            didChangeConfiguration: !!((_d = (_c = lspCapabilities.workspace) === null || _c === void 0 ? void 0 : _c.didChangeConfiguration) === null || _d === void 0 ? void 0 : _d.dynamicRegistration),\n            documentFormatting: !!((_f = (_e = lspCapabilities.textDocument) === null || _e === void 0 ? void 0 : _e.formatting) === null || _f === void 0 ? void 0 : _f.dynamicRegistration),\n            documentHighlight: !!((_h = (_g = lspCapabilities.textDocument) === null || _g === void 0 ? void 0 : _g.documentHighlight) === null || _h === void 0 ? void 0 : _h.dynamicRegistration),\n            foldingRange: !!((_k = (_j = lspCapabilities.textDocument) === null || _j === void 0 ? void 0 : _j.foldingRange) === null || _k === void 0 ? void 0 : _k.dynamicRegistration),\n            selectionRange: !!((_m = (_l = lspCapabilities.textDocument) === null || _l === void 0 ? void 0 : _l.selectionRange) === null || _m === void 0 ? void 0 : _m.dynamicRegistration),\n            signatureHelp: !!((_p = (_o = lspCapabilities.textDocument) === null || _o === void 0 ? void 0 : _o.signatureHelp) === null || _p === void 0 ? void 0 : _p.dynamicRegistration)\n        },\n        applyEdit: !!((_q = lspCapabilities.workspace) === null || _q === void 0 ? void 0 : _q.applyEdit),\n        checkServerVersion: !!custom.checkServerVersion,\n        completionContext: !!((_s = (_r = lspCapabilities.textDocument) === null || _r === void 0 ? void 0 : _r.completion) === null || _s === void 0 ? void 0 : _s.contextSupport),\n        configuration: !!((_t = lspCapabilities.workspace) === null || _t === void 0 ? void 0 : _t.configuration),\n        diagnostics: !!((_u = lspCapabilities.textDocument) === null || _u === void 0 ? void 0 : _u.publishDiagnostics),\n        workDoneProgress: !!((_v = lspCapabilities.window) === null || _v === void 0 ? void 0 : _v.workDoneProgress),\n        workspaceFolders: !!((_w = lspCapabilities.workspace) === null || _w === void 0 ? void 0 : _w.workspaceFolders)\n    };\n    return ans;\n}\nexports.getClientCapabilities = getClientCapabilities;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.componentToLintedString = exports.combineCommand = exports.CommandComponent = void 0;\nconst __1 = require(\"..\");\nconst utils_1 = require(\"../utils\");\nconst ClientCache_1 = require(\"./ClientCache\");\nvar CommandComponent;\n(function (CommandComponent) {\n    function create(data = [], partial = {}) {\n        return __1.plugins.SyntaxComponent.create('spgoding:mcfunction/command', data, partial);\n    }\n    CommandComponent.create = create;\n})(CommandComponent = exports.CommandComponent || (exports.CommandComponent = {}));\nfunction combineCommand(base, override) {\n    // Args.\n    base.data = [...base.data, ...override.data];\n    // Hint.\n    base.hint.fix = [...base.hint.fix, ...override.hint.fix];\n    base.hint.options = [...base.hint.options, ...override.hint.options];\n    // Cache.\n    ClientCache_1.combineCache(base.cache, override.cache);\n    // Completions.\n    base.completions = [...base.completions, ...override.completions];\n    // Errors.\n    base.errors = [...base.errors, ...override.errors];\n    // Tokens.\n    base.tokens = [...base.tokens, ...override.tokens];\n    return base;\n}\nexports.combineCommand = combineCommand;\nfunction componentToLintedString(com, lint) {\n    var _a;\n    if (com.type === 'spgoding:doc_comment/doc_comment') {\n        const docCom = com;\n        return utils_1.toFormattedString(docCom.data.doc, lint) + __1.getEol(lint) + ((_a = docCom.data.commands) === null || _a === void 0 ? void 0 : _a.map(v => v.indent + componentToLintedString(v.component, lint)).join(__1.getEol(lint)));\n    }\n    const cmdCom = com;\n    return cmdCom.data.map(v => utils_1.toFormattedString(v.data, lint)).join(' ');\n}\nexports.componentToLintedString = componentToLintedString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlwaysValidates = exports.Switchable = void 0;\n/**\n * If the keys of this object can be treated as literals to switch to the correct node quickly.\n */\nexports.Switchable = Symbol('Switchable');\n/**\n * Nodes that should always be validated.\n */\nexports.AlwaysValidates = Symbol('AlwaysValidates');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isRelIncluded = exports.constructConfig = exports.VanillaConfig = void 0;\nconst minimatch_1 = __importDefault(require(\"minimatch\"));\n/**\n * Config which simulates the default vanilla command system.\n */\nexports.VanillaConfig = {\n    env: {\n        permissionLevel: 2,\n        dataSource: 'GitHub',\n        dataVersion: 'Latest release',\n        cmdVersion: '1.16',\n        defaultVisibility: 'public',\n        dependsOnVanilla: true,\n        detectionDepth: 1,\n        exclude: [],\n        include: [],\n        jsonVersion: '1.16',\n        language: 'Default'\n    },\n    lint: {\n        // Stylistic configs.\n        blockStateBracketSpacing: { inside: 0 },\n        blockStateCommaSpacing: { before: 0, after: 1 },\n        blockStateEqualSpacing: { before: 0, after: 0 },\n        blockStateTrailingComma: false,\n        eol: 'auto',\n        nbtArrayBracketSpacing: { inside: 0 },\n        nbtArrayCommaSpacing: { before: 0, after: 1 },\n        nbtArraySemicolonSpacing: { after: 1 },\n        nbtArrayTrailingComma: false,\n        nbtByteSuffix: 'b',\n        nbtCompoundBracketSpacing: { inside: 0 },\n        nbtCompoundColonSpacing: { before: 0, after: 1 },\n        nbtCompoundCommaSpacing: { before: 0, after: 1 },\n        nbtCompoundTrailingComma: false,\n        nbtDoubleOmitSuffix: false,\n        nbtDoubleSuffix: 'd',\n        nbtFloatSuffix: 'f',\n        nbtListBracketSpacing: { inside: 0 },\n        nbtListCommaSpacing: { before: 0, after: 1 },\n        nbtListTrailingComma: false,\n        nbtLongSuffix: 'L',\n        nbtShortSuffix: 's',\n        selectorBracketSpacing: { inside: 0 },\n        selectorCommaSpacing: { before: 0, after: 1 },\n        selectorEqualSpacing: { before: 0, after: 0 },\n        selectorTrailingComma: false,\n        timeOmitTickUnit: false,\n        // Diagnostic configs.\n        blockStateSortKeys: null,\n        idOmitDefaultNamespace: null,\n        nameOfNbtCompoundTagKeys: null,\n        nameOfObjectives: null,\n        nameOfTags: null,\n        nameOfTeams: null,\n        nameOfScoreHolders: null,\n        nbtArrayLengthCheck: ['warning', true],\n        nbtBoolean: null,\n        nbtCompoundKeyQuote: null,\n        nbtCompoundKeyQuoteType: ['warning', 'prefer double'],\n        nbtCompoundSortKeys: null,\n        nbtListLengthCheck: null,\n        nbtPathQuote: null,\n        nbtPathQuoteType: ['warning', 'always double'],\n        nbtStringQuote: ['warning', true],\n        nbtStringQuoteType: ['warning', 'prefer double'],\n        nbtTypeCheck: ['warning', 'loosely'],\n        selectorKeyQuote: null,\n        selectorKeyQuoteType: null,\n        selectorSortKeys: null,\n        strictBossbarCheck: null,\n        strictScoreHolderCheck: null,\n        strictStorageCheck: null,\n        strictObjectiveCheck: null,\n        strictTagCheck: null,\n        strictTeamCheck: null,\n        strictAdvancementCheck: null,\n        strictFunctionCheck: null,\n        strictLootTableCheck: null,\n        strictPredicateCheck: null,\n        strictRecipeCheck: null,\n        strictBlockTagCheck: null,\n        strictEntityTypeTagCheck: null,\n        strictFluidTagCheck: null,\n        strictFunctionTagCheck: null,\n        strictItemTagCheck: null,\n        strictAttributeCheck: ['error', 'only-default-namespace'],\n        strictBlockCheck: ['error', 'only-default-namespace'],\n        strictDimensionTypeCheck: ['error', 'only-default-namespace'],\n        strictEnchantmentCheck: ['error', 'only-default-namespace'],\n        strictEntityTypeCheck: ['error', 'only-default-namespace'],\n        strictFluidCheck: ['error', 'only-default-namespace'],\n        strictItemCheck: ['error', 'only-default-namespace'],\n        strictMobEffectCheck: ['error', 'only-default-namespace'],\n        strictMotiveCheck: ['warning', 'only-default-namespace'],\n        strictParticleTypeCheck: ['error', 'only-default-namespace'],\n        strictPotionCheck: ['warning', 'only-default-namespace'],\n        strictSoundEventCheck: ['warning', 'only-default-namespace'],\n        stringQuote: ['warning', false],\n        stringQuoteType: ['warning', 'prefer double']\n    },\n    features: {\n        codeActions: true,\n        colors: true,\n        completions: true,\n        documentHighlighting: true,\n        documentLinks: true,\n        foldingRanges: true,\n        formatting: true,\n        hover: true,\n        semanticColoring: true,\n        selectionRanges: true,\n        signatures: true\n    },\n    snippets: {\n        executeIfScoreSet: 'execute if score ${1:score_holder} ${2:objective} = ${1:score_holder} ${2:objective} $0',\n        scoreboardPlayersOperation: 'scoreboard players operation ${1:target_score_holder} ${2:target_objective} ${3|+=,-=,*=,/=,%=,=,>,<,<>|} ${4:source_score_holder} ${5:source_objective}',\n        scoreboardPlayersSet: 'scoreboard players set ${1:score_holder} ${2:objective} ${3:0}',\n        tagAdd: 'tag ${1:target} add ${2:tag}',\n        tagRemove: 'tag ${1:target} remove ${2:tag}',\n        dataModifyStorageFromSelf: 'data modify storage ${1:id} ${2:path} set from entity @s ${3:path}',\n        summonAec: 'summon minecraft:area_effect_cloud ~ ~ ~ {Age: -2147483648, Duration: -1, WaitTime: -2147483648, Tags: [\"${1:tag}\"]}'\n    }\n};\n/* istanbul ignore next */\nfunction constructConfig(custom, base = exports.VanillaConfig) {\n    custom.env = custom.env || {};\n    custom.lint = custom.lint || {};\n    custom.features = custom.features || {};\n    return {\n        env: Object.assign(Object.assign({}, base.env), custom.env),\n        features: Object.assign(Object.assign({}, base.features), custom.features),\n        lint: Object.assign(Object.assign({}, base.lint), custom.lint),\n        snippets: custom.snippets || base.snippets\n    };\n}\nexports.constructConfig = constructConfig;\n/* istanbul ignore next */\nfunction isRelIncluded(rel, { env: { include, exclude } }) {\n    if (rel === undefined) {\n        // This file is an untitled one, or an alone one.\n        return true;\n    }\n    for (const str of include) {\n        if (minimatch_1.default(rel, str)) {\n            return true;\n        }\n    }\n    for (const str of exclude) {\n        if (minimatch_1.default(rel, str)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isRelIncluded = isRelIncluded;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonDocument = exports.isMcfunctionDocument = void 0;\nfunction isMcfunctionDocument(doc) {\n    return doc.type === 'mcfunction';\n}\nexports.isMcfunctionDocument = isMcfunctionDocument;\nfunction isJsonDocument(doc) {\n    return doc.type === 'json';\n}\nexports.isJsonDocument = isJsonDocument;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFormattable = exports.GetFormattedString = void 0;\nexports.GetFormattedString = Symbol();\nfunction isFormattable(value) {\n    return !!value && value[exports.GetFormattedString] instanceof Function;\n}\nexports.isFormattable = isFormattable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInnerIndex = exports.getOuterIndex = void 0;\nfunction getNormalizedPosition(pos) {\n    if (typeof pos === 'number') {\n        return { index: pos, length: 1 };\n    }\n    else {\n        return { index: pos.index, length: pos.length || 1 };\n    }\n}\nfunction getOuterIndex(mapping, innerIndex) {\n    return (mapping.start || 0) + innerIndex + (mapping.skipAt || []).filter(pos => {\n        const { index, length } = getNormalizedPosition(pos);\n        return innerIndex >= index + length;\n    }).length;\n}\nexports.getOuterIndex = getOuterIndex;\nfunction getInnerIndex(mapping, outerIndex) {\n    let innerIndex = outerIndex - (mapping.start || 0);\n    for (const pos of (mapping.skipAt || [])) {\n        const { index, length } = getNormalizedPosition(pos);\n        if (innerIndex >= index + length) {\n            innerIndex--;\n        }\n        else {\n            break;\n        }\n    }\n    return innerIndex;\n}\nexports.getInnerIndex = getInnerIndex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getConventionNames = exports.checkNamingConvention = exports.DefaultNamingConventions = void 0;\nexports.DefaultNamingConventions = ['camelCase', 'PascalCase', 'snake_case', 'SCREAMING_SNAKE_CASE', 'kebab-case', 'lowercase', 'UPPERCASE'];\nconst defaultValidators = {\n    camelCase: /^[a-z\\d]+([A-Z\\d]+[a-z\\d]*)*$/,\n    PascalCase: /^([A-Z\\d]+[a-z\\d]*)+$/,\n    snake_case: /^[a-z\\d]+(_[a-z\\d]+)*$/,\n    SCREAMING_SNAKE_CASE: /^[A-Z\\d]+(_[A-Z\\d]+)*$/,\n    'kebab-case': /^[a-z\\d]+(\\-[a-z\\d]+)*$/,\n    lowercase: /^[a-z\\d]+$/,\n    UPPERCASE: /^[A-Z\\d]+$/\n};\n/**\n * Check whether the identity follows the naming convention or not.\n * @param identity An identity.\n * @param config A naming convention config.\n */\nfunction checkNamingConvention(identity, config) {\n    if (!config) {\n        return true;\n    }\n    const checkConvention = (identity, convention) => {\n        if (Array.isArray(convention)) {\n            return convention.some(v => checkConvention(identity, v));\n        }\n        if (typeof convention === 'string') {\n            const isNamingConvention = (str) => exports.DefaultNamingConventions.some(v => v === str);\n            if (convention.startsWith('/') && convention.endsWith('/')) {\n                return RegExp(`^${convention.slice(1, -1)}$`).test(identity);\n            }\n            else if (isNamingConvention(convention)) {\n                return defaultValidators[convention].test(identity);\n            }\n            console.error(`[NamingConvention] Unknown NamingConvention ${convention}`);\n            return true;\n        }\n        if (convention.prefix) {\n            if (!identity.startsWith(convention.prefix)) {\n                return false;\n            }\n            else {\n                identity = identity.slice(convention.prefix.length);\n            }\n        }\n        if (convention.suffix) {\n            if (!identity.endsWith(convention.suffix)) {\n                return false;\n            }\n            else {\n                identity = identity.slice(0, -convention.suffix.length);\n            }\n        }\n        if (!convention.parts) {\n            return true;\n        }\n        const conventionParts = convention.parts;\n        if (!convention.sep) {\n            if (!Array.isArray(conventionParts)) {\n                return checkConvention(identity, conventionParts);\n            }\n            else {\n                return conventionParts.some((part) => checkConvention(identity, part));\n            }\n        }\n        const parts = identity.split(convention.sep);\n        if (!Array.isArray(conventionParts)) {\n            return parts.every(v => checkConvention(v, conventionParts));\n        }\n        if (parts.length < conventionParts.length && !convention.allowLessParts) {\n            return false;\n        }\n        if (parts.length > conventionParts.length && !convention.allowMoreParts) {\n            return false;\n        }\n        return parts.every((v, i) => checkConvention(v, conventionParts[i < conventionParts.length ? i : conventionParts.length - 1]));\n    };\n    return checkConvention(identity, config[1]);\n}\nexports.checkNamingConvention = checkNamingConvention;\nfunction getConventionNames(convention) {\n    if (!Array.isArray(convention))\n        convention = [convention];\n    return convention.map(v => typeof v === 'string' ? v : v.label);\n}\nexports.getConventionNames = getConventionNames;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.combineArgumentParserResult = exports.ArgumentParserResult = exports.LegacyValidateResult = exports.ValidateResult = exports.ParserResult = void 0;\nconst ClientCache_1 = require(\"./ClientCache\");\nconst ParsingError_1 = require(\"./ParsingError\");\nvar ParserResult;\n(function (ParserResult) {\n    function create(data) {\n        return { data };\n    }\n    ParserResult.create = create;\n})(ParserResult = exports.ParserResult || (exports.ParserResult = {}));\nvar ValidateResult;\n(function (ValidateResult) {\n    function create(partial = {}) {\n        var _a, _b, _c, _d;\n        return {\n            cache: (_a = partial.cache) !== null && _a !== void 0 ? _a : {},\n            errors: (_b = partial.errors) !== null && _b !== void 0 ? _b : [],\n            hint: (_c = partial.hint) !== null && _c !== void 0 ? _c : { fix: [], options: [] },\n            tokens: (_d = partial.tokens) !== null && _d !== void 0 ? _d : []\n        };\n    }\n    ValidateResult.create = create;\n})(ValidateResult = exports.ValidateResult || (exports.ValidateResult = {}));\nvar LegacyValidateResult;\n(function (LegacyValidateResult) {\n    function create(partial = {}) {\n        var _a;\n        return Object.assign({ completions: (_a = partial.completions) !== null && _a !== void 0 ? _a : [] }, ValidateResult.create(partial));\n    }\n    LegacyValidateResult.create = create;\n})(LegacyValidateResult = exports.LegacyValidateResult || (exports.LegacyValidateResult = {}));\nvar ArgumentParserResult;\n(function (ArgumentParserResult) {\n    function create(data, partial = {}) {\n        return Object.assign(Object.assign({}, ParserResult.create(data)), LegacyValidateResult.create(partial));\n    }\n    ArgumentParserResult.create = create;\n})(ArgumentParserResult = exports.ArgumentParserResult || (exports.ArgumentParserResult = {}));\nfunction combineArgumentParserResult(base, override) {\n    var _a, _b, _c;\n    // Cache.\n    ClientCache_1.combineCache(base.cache, override.cache);\n    // Tokens.\n    base.tokens = [...base.tokens, ...(_a = override === null || override === void 0 ? void 0 : override.tokens) !== null && _a !== void 0 ? _a : []];\n    // Completions.\n    base.completions = [...base.completions, ...(_b = override === null || override === void 0 ? void 0 : override.completions) !== null && _b !== void 0 ? _b : []];\n    // Errors.\n    base.errors = [...base.errors, ...ParsingError_1.downgradeParsingError((_c = override === null || override === void 0 ? void 0 : override.errors) !== null && _c !== void 0 ? _c : [])];\n}\nexports.combineArgumentParserResult = combineArgumentParserResult;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructContext = void 0;\nconst vscode_languageserver_textdocument_1 = require(\"vscode-languageserver-textdocument\");\nconst CommandTree1_16_1 = require(\"../data/CommandTree1.16\");\nconst JsonSchema_1 = require(\"../data/JsonSchema\");\nconst VanillaData_1 = require(\"../data/VanillaData\");\nconst ParserCollection_1 = require(\"../parsers/ParserCollection\");\nconst DatapackLanguageService_1 = require(\"../services/DatapackLanguageService\");\nconst Config_1 = require(\"./Config\");\n/**\n * Construct a `ParsingContext`.\n */\n/* istanbul ignore next */\nfunction constructContext(custom) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    const ans = {\n        blockDefinition: (_a = custom.blockDefinition) !== null && _a !== void 0 ? _a : VanillaData_1.FallbackBlockDefinition,\n        cache: (_b = custom.cache) !== null && _b !== void 0 ? _b : {},\n        commandTree: (_c = custom.commandTree) !== null && _c !== void 0 ? _c : CommandTree1_16_1.CommandTree,\n        config: (_d = custom.config) !== null && _d !== void 0 ? _d : Config_1.VanillaConfig,\n        cursor: (_e = custom.cursor) !== null && _e !== void 0 ? _e : -1,\n        id: (_f = custom.id) !== null && _f !== void 0 ? _f : undefined,\n        namespaceSummary: (_g = custom.namespaceSummary) !== null && _g !== void 0 ? _g : VanillaData_1.FallbackNamespaceSummary,\n        nbtdoc: (_h = custom.nbtdoc) !== null && _h !== void 0 ? _h : VanillaData_1.FallbackNbtdoc,\n        parsers: (_j = custom.parsers) !== null && _j !== void 0 ? _j : new ParserCollection_1.ParserCollection(),\n        registry: (_k = custom.registry) !== null && _k !== void 0 ? _k : VanillaData_1.FallbackRegistry,\n        rootIndex: (_l = custom.rootIndex) !== null && _l !== void 0 ? _l : null,\n        roots: (_m = custom.roots) !== null && _m !== void 0 ? _m : [],\n        jsonSchemas: (_o = custom.jsonSchemas) !== null && _o !== void 0 ? _o : JsonSchema_1.FallbackJsonSchemaRegistry,\n        service: (_p = custom.service) !== null && _p !== void 0 ? _p : new DatapackLanguageService_1.DatapackLanguageService(),\n        textDoc: (_q = custom.textDoc) !== null && _q !== void 0 ? _q : vscode_languageserver_textdocument_1.TextDocument.create('dhp://document.mcfunction', 'mcfunction', 0, '')\n    };\n    return ans;\n}\nexports.constructContext = constructContext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remapParsingErrors = exports.downgradeParsingError = exports.ParsingError = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst TextRange_1 = require(\"./TextRange\");\n/**\n * Represent an error occured while parsing.\n */\nclass ParsingError {\n    constructor(\n    /**\n     * Range of the error.\n     */\n    range, \n    /**\n     * Human-readable error message.\n     */\n    message, \n    /**\n     * Whether the error doesn't affect the process of parsing.\n     * Default to `true`\n     */\n    tolerable = true, \n    /**\n     * The severity of the error.\n     */\n    severity = vscode_languageserver_1.DiagnosticSeverity.Error, \n    /**\n     * The code of the error.\n     */\n    code) {\n        this.range = range;\n        this.message = message;\n        this.tolerable = tolerable;\n        this.severity = severity;\n        this.code = code;\n    }\n    /**\n     * Get the diagnostic form of the parsing error.\n     */\n    toDiagnostic(document) {\n        return Object.assign({ range: { start: document.positionAt(this.range.start), end: document.positionAt(this.range.end) }, severity: this.severity, source: 'datapack', message: this.message + locales_1.locale('punc.period') }, this.code !== undefined ? { code: this.code } : {});\n    }\n}\nexports.ParsingError = ParsingError;\n/**\n * Downgrade specific errors to tolerable ones.\n * @param errors Input errors.\n */\nfunction downgradeParsingError(errors) {\n    return errors.map(v => new ParsingError(v.range, v.message, true, v.severity, v.code));\n}\nexports.downgradeParsingError = downgradeParsingError;\n/**\n * Remap specific errors according to the mapping.\n * @param errors Input errors.\n */\nfunction remapParsingErrors(errors, mapping) {\n    for (const err of errors) {\n        err.range = TextRange_1.remapTextRange(err.range, mapping);\n    }\n}\nexports.remapParsingErrors = remapParsingErrors;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isQuoteTypeConfig = void 0;\nfunction isQuoteTypeConfig(value) {\n    return (value === 'always single' ||\n        value === 'always double' ||\n        value === 'prefer single' ||\n        value === 'prefer double');\n}\nexports.isQuoteTypeConfig = isQuoteTypeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDiagnosticSeverity = void 0;\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nfunction getDiagnosticSeverity(s) {\n    switch (s) {\n        case 'error':\n            return vscode_languageserver_1.DiagnosticSeverity.Error;\n        case 'warning':\n            return vscode_languageserver_1.DiagnosticSeverity.Warning;\n        case 'information':\n            return vscode_languageserver_1.DiagnosticSeverity.Information;\n        case 'hint':\n        default:\n            return vscode_languageserver_1.DiagnosticSeverity.Hint;\n    }\n}\nexports.getDiagnosticSeverity = getDiagnosticSeverity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isInRange = exports.areOverlapped = exports.remapTextRange = exports.TextRange = exports.EmptyRange = void 0;\nconst IndexMapping_1 = require(\"./IndexMapping\");\nexports.EmptyRange = { start: NaN, end: NaN };\nvar TextRange;\n(function (TextRange) {\n    function toLspRange(range, textDoc) {\n        return {\n            start: textDoc.positionAt(range.start),\n            end: textDoc.positionAt(range.end)\n        };\n    }\n    TextRange.toLspRange = toLspRange;\n})(TextRange = exports.TextRange || (exports.TextRange = {}));\n/**\n * Remap all the indices in the specific TextRange object by the specific mapping.\n * @param range The specific TextRange object.\n * @param mapping The mapping used to offset.\n */\nfunction remapTextRange(range, mapping) {\n    return Object.assign(Object.assign({}, range), { start: IndexMapping_1.getOuterIndex(mapping, range.start), end: IndexMapping_1.getOuterIndex(mapping, range.end) });\n}\nexports.remapTextRange = remapTextRange;\nfunction areOverlapped(a, b) {\n    return a.start <= b.end && a.end >= b.start;\n}\nexports.areOverlapped = areOverlapped;\nfunction isInRange(char, range) {\n    return range.start <= char && char <= range.end;\n}\nexports.isInRange = isInRange;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remapTokens = exports.Token = exports.TokenModifier = exports.TokenType = void 0;\nconst clone_1 = __importDefault(require(\"clone\"));\nconst TextRange_1 = require(\"./TextRange\");\nvar TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"annotation\"] = 0] = \"annotation\";\n    TokenType[TokenType[\"boolean\"] = 1] = \"boolean\";\n    TokenType[TokenType[\"comment\"] = 2] = \"comment\";\n    TokenType[TokenType[\"entity\"] = 3] = \"entity\";\n    TokenType[TokenType[\"keyword\"] = 4] = \"keyword\";\n    TokenType[TokenType[\"literal\"] = 5] = \"literal\";\n    TokenType[TokenType[\"identity\"] = 6] = \"identity\";\n    TokenType[TokenType[\"number\"] = 7] = \"number\";\n    TokenType[TokenType[\"operator\"] = 8] = \"operator\";\n    TokenType[TokenType[\"property\"] = 9] = \"property\";\n    TokenType[TokenType[\"string\"] = 10] = \"string\";\n    TokenType[TokenType[\"type\"] = 11] = \"type\";\n    TokenType[TokenType[\"variable\"] = 12] = \"variable\";\n    TokenType[TokenType[\"vector\"] = 13] = \"vector\";\n    TokenType[TokenType[\"_\"] = 14] = \"_\";\n})(TokenType = exports.TokenType || (exports.TokenType = {}));\nvar TokenModifier;\n(function (TokenModifier) {\n    TokenModifier[TokenModifier[\"declaration\"] = 0] = \"declaration\";\n    TokenModifier[TokenModifier[\"deprecated\"] = 1] = \"deprecated\";\n    TokenModifier[TokenModifier[\"documentation\"] = 2] = \"documentation\";\n    TokenModifier[TokenModifier[\"firstArgument\"] = 3] = \"firstArgument\";\n    TokenModifier[TokenModifier[\"inString\"] = 4] = \"inString\";\n    TokenModifier[TokenModifier[\"_\"] = 5] = \"_\";\n})(TokenModifier = exports.TokenModifier || (exports.TokenModifier = {}));\nclass Token {\n    /* istanbul ignore next */\n    constructor(range, type, modifiers = new Set()) {\n        this.range = range;\n        this.type = type;\n        this.modifiers = modifiers;\n    }\n    /**\n     * Get a token from a number, a cursor, a type, and optional modifiers.\n     * @param start The start character of this token.\n     * @param reader The reader which stops at the end character of this token.\n     * @param type The type of this token.\n     * @param modifiers The modifiers of this token.\n     */\n    /* istanbul ignore next */\n    static from(start, reader, type, modifiers = new Set()) {\n        return new Token({ start, end: reader.cursor }, type, modifiers);\n    }\n    /**\n     * Get the array form of the semantic token. The result should be pushed into the\n     * semantic tokens builder.\n     * @returns `[ line, char, length, tokenType, tokenModifiers ]`\n     */\n    toArray(document) {\n        /* istanbul ignore next */\n        let tokenModifiers = 0;\n        for (const modifier of this.modifiers) {\n            tokenModifiers = tokenModifiers | (1 << modifier);\n        }\n        const startPos = document.positionAt(this.range.start);\n        return [\n            /* line           */ startPos.line,\n            /* char           */ startPos.character,\n            /* length         */ this.range.end - this.range.start,\n            /* tokenType      */ this.type,\n            /* tokenModifiers */ tokenModifiers\n        ];\n    }\n}\nexports.Token = Token;\n/**\n * Remap specific tokens according to the mapping, and add the inString modifier.\n * @param tokens Input tokens.\n */\nfunction remapTokens(tokens, mapping, addInStringModifier = true) {\n    const ans = clone_1.default(tokens, false);\n    for (const token of ans) {\n        token.range = TextRange_1.remapTextRange(token.range, mapping);\n        if (addInStringModifier) {\n            token.modifiers.add(TokenModifier.inString);\n        }\n    }\n    return ans;\n}\nexports.remapTokens = remapTokens;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Uri = void 0;\nconst vscode_uri_1 = require(\"vscode-uri\");\nexports.Uri = vscode_uri_1.URI;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./BlockDefinition\"), exports);\n__exportStar(require(\"./ClientCache\"), exports);\n__exportStar(require(\"./ClientCapabilities\"), exports);\n__exportStar(require(\"./CommandTree\"), exports);\n__exportStar(require(\"./CommandTreeVersion\"), exports);\n__exportStar(require(\"./Config\"), exports);\n__exportStar(require(\"./DatapackDocument\"), exports);\n__exportStar(require(\"./Formattable\"), exports);\n__exportStar(require(\"./GameMode\"), exports);\n__exportStar(require(\"./handlers\"), exports);\n__exportStar(require(\"./HoverInformation\"), exports);\n__exportStar(require(\"./IndexMapping\"), exports);\n__exportStar(require(\"./JsonSchemaVersion\"), exports);\n__exportStar(require(\"./CommandComponent\"), exports);\n__exportStar(require(\"./Locale\"), exports);\n__exportStar(require(\"./Manager\"), exports);\n__exportStar(require(\"./NamespaceSummary\"), exports);\n__exportStar(require(\"./NamespaceTreeSummary\"), exports);\n__exportStar(require(\"./NamingConventionConfig\"), exports);\n__exportStar(require(\"./nbtdoc\"), exports);\n__exportStar(require(\"./Parser\"), exports);\n__exportStar(require(\"./ParserSuggestion\"), exports);\n__exportStar(require(\"./ParsingContext\"), exports);\n__exportStar(require(\"./ParsingError\"), exports);\n__exportStar(require(\"./QuoteTypeConfig\"), exports);\n__exportStar(require(\"./Registry\"), exports);\n__exportStar(require(\"./scoreboard\"), exports);\n__exportStar(require(\"./StrictCheckConfig\"), exports);\n__exportStar(require(\"./StylisticConfig\"), exports);\n__exportStar(require(\"../plugins/SyntaxComponent\"), exports);\n__exportStar(require(\"./TextRange\"), exports);\n__exportStar(require(\"./Token\"), exports);\n__exportStar(require(\"./VersionInformation\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scoreboard = void 0;\nvar scoreboard;\n(function (scoreboard) {\n    scoreboard.SlotCategory = ['belowName', 'list', 'sidebar'];\n    scoreboard.SlotColors = ['black', 'dark_blue', 'dark_green', 'dark_aqua', 'dark_red', 'dark_purple', 'gold', 'gray', 'dark_gray', 'blue', 'green', 'aqua', 'red', 'light_purple', 'yellow', 'white'];\n    scoreboard.SlotSep = '.';\n    scoreboard.CriteriaStatsCategory = {\n        custom: 'minecraft:custom_stat',\n        crafted: 'minecraft:item',\n        used: 'minecraft:item',\n        broken: 'minecraft:item',\n        mined: 'minecraft:block',\n        killed: 'minecraft:entity_type',\n        killed_by: 'minecraft:entity_type',\n        picked_up: 'minecraft:item',\n        dropped: 'minecraft:item'\n    };\n    scoreboard.CriteriaCategory = Object.assign({ air: null, armor: null, deathCount: null, dummy: null, food: null, health: null, level: null, playerKillCount: null, teamkill: scoreboard.SlotColors, killedByTeam: scoreboard.SlotColors, totalKillCount: null, trigger: null, xp: null }, scoreboard.CriteriaStatsCategory);\n    scoreboard.CriteriaRegularSep = '.';\n    scoreboard.CriteriaStatsSep = ':';\n})(scoreboard = exports.scoreboard || (exports.scoreboard = {}));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonSchemaHelper = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst fast_deep_equal_1 = __importDefault(require(\"fast-deep-equal\"));\nconst vscode_json_languageservice_1 = require(\"vscode-json-languageservice\");\nconst vscode_languageserver_textdocument_1 = require(\"vscode-languageserver-textdocument\");\nconst _1 = require(\".\");\nconst locales_1 = require(\"../locales\");\nconst nodes_1 = require(\"../nodes\");\nconst CommandParser_1 = require(\"../parsers/CommandParser\");\nconst types_1 = require(\"../types\");\nconst StringReader_1 = require(\"./StringReader\");\nclass JsonSchemaHelper {\n    static validate(ans, node, schema, ctx) {\n        const { model, path } = this.setUp(node, schema);\n        for (const err of model.errors) {\n            ans.errors.push(this.convertSchemaError(err, node));\n        }\n        if (!node) {\n            return;\n        }\n        this.walkAstNode(node, path, schema, (node, path, schema) => {\n            const selectedSchema = schema.navigate(path, -1);\n            const validationOption = selectedSchema === null || selectedSchema === void 0 ? void 0 : selectedSchema.validationOption(path);\n            if (validationOption) {\n                this.validateFromValidator(ans, node, validationOption, ctx);\n            }\n        });\n    }\n    static suggest(ans, node, schema, ctx) {\n        if (!node) {\n            return;\n        }\n        try {\n            const { path, restoredValue } = this.setUp(node, schema);\n            const { node: selectedNode, schema: selectedSchema, path: selectedPath, type: selectedType } = this.getSelectedNode(node, schema, restoredValue, ctx.cursor, path);\n            if (!selectedNode) {\n                return;\n            }\n            const selectedRange = this.getNodeRange(selectedNode);\n            const validationOption = selectedSchema === null || selectedSchema === void 0 ? void 0 : selectedSchema.validationOption(path);\n            if (selectedType === 'value') {\n                if (validationOption && selectedNode.type === 'string') {\n                    // Detailed suggestions for the selected string value.\n                    ans.push(...this.suggestFromStringValidator(selectedRange, selectedNode, ctx, validationOption));\n                }\n                else {\n                    // Regular suggestions for selected value.\n                    if (selectedNode.type === 'object') {\n                        // Regular key suggestions for selected object.\n                        if (selectedRange.start < ctx.cursor && ctx.cursor < selectedRange.end) {\n                            // The cursor isn't out of the curly braces.\n                            ans.push(...this.suggestFromSchema(selectedPath, selectedNode, undefined, schema, ctx));\n                        }\n                    }\n                    else if (selectedNode.type === 'property') {\n                        // Regular value suggestions for selected property\n                        ans.push(...this.suggestFromSchema(selectedPath, selectedNode, undefined, schema, ctx, true));\n                    }\n                    else {\n                        // Regular value suggestions for selected value\n                        ans.push(...this.suggestFromSchema(selectedPath, selectedNode, selectedNode, schema, ctx));\n                    }\n                }\n            }\n            else {\n                // Regular key suggestions for selected key.\n                const objectPath = this.pathPopAll(selectedPath);\n                const keyNode = selectedNode;\n                const objectNode = selectedNode.parent.parent;\n                ans.push(...this.suggestFromSchema(objectPath, objectNode, keyNode, schema, ctx));\n            }\n        }\n        catch (e) {\n            console.error('[JsonSchemaHelper#suggest]', e);\n        }\n    }\n    static onHover(node, schema, ctx, offset) {\n        var _a, _b;\n        if (!node) {\n            return null;\n        }\n        try {\n            const { path, restoredValue } = this.setUp(node, schema);\n            const { node: selectedNode, path: selectedPath, type: selectedType } = this.getSelectedNode(node, schema, restoredValue, offset, path);\n            if (selectedNode && selectedType === 'key') {\n                const selectedRange = this.getNodeRange(selectedNode);\n                // Regular key suggestions for selected key.\n                const title = (_b = (_a = locales_1.segmentedLocale(selectedPath.getContext())) !== null && _a !== void 0 ? _a : selectedPath.getContext().pop()) !== null && _b !== void 0 ? _b : '';\n                const help = locales_1.segmentedLocale(selectedPath.contextPush('help').getContext(), [], 6, 2);\n                return {\n                    range: { start: ctx.textDoc.positionAt(selectedRange.start), end: ctx.textDoc.positionAt(selectedRange.end) },\n                    contents: {\n                        kind: 'markdown',\n                        value: help ? `${title}\\n* * * * * *\\n${help}` : title\n                    }\n                };\n            }\n        }\n        catch (e) {\n            console.error('[JsonSchemaHelper#onHover]', e);\n        }\n        return null;\n    }\n    static setUp(node, schema) {\n        const model = new core_1.DataModel(schema, { historyMax: 1 });\n        const restoredValue = this.restoreValueFromNode(node);\n        model.reset(restoredValue);\n        const path = new core_1.ModelPath(model);\n        return { model, path, restoredValue };\n    }\n    static suggestFromSchema(valuePath, valueNode, replacingNode, schema, ctx, atEmptyValue = false) {\n        var _a;\n        const replacingRange = replacingNode ? this.getNodeRange(replacingNode) : { start: ctx.cursor, end: ctx.cursor };\n        const valueSchema = schema.navigate(valuePath, -1);\n        const value = this.restoreValueFromNode(valueNode);\n        if (valueNode.type === 'object' && typeof (replacingNode === null || replacingNode === void 0 ? void 0 : replacingNode.value) === 'string') {\n            // Delete the current selected key from `value`, so that the selected key can show in the suggestions.\n            delete value[replacingNode.value];\n        }\n        if (atEmptyValue && valueSchema) {\n            // Currently at an empty value position; suggest the default value of this schema node.\n            const defaultValue = valueSchema.default();\n            return [Object.assign(Object.assign({}, replacingRange), { label: JSON.stringify(defaultValue), insertText: this.getDefaultValueSnippet(defaultValue), insertTextFormat: vscode_json_languageservice_1.InsertTextFormat.Snippet })];\n        }\n        const validationOption = valueSchema === null || valueSchema === void 0 ? void 0 : valueSchema.validationOption(valuePath);\n        if (validationOption) {\n            // Do suggestions for keys with custom `validationOption`.\n            if (replacingNode) {\n                // Currently has a selected key.\n                return this.suggestFromStringValidator(replacingRange, replacingNode, ctx, validationOption);\n            }\n            else {\n                // No key is selected; suggest the empty string instead.\n                return [Object.assign(Object.assign({}, replacingRange), { label: '\"\"', insertText: '\"$1\"', insertTextFormat: vscode_json_languageservice_1.InsertTextFormat.Snippet })];\n            }\n        }\n        // Do suggestions provided by the schema node's `suggest` method.\n        const suggestions = (_a = valueSchema === null || valueSchema === void 0 ? void 0 : valueSchema.suggest(valuePath, value)) !== null && _a !== void 0 ? _a : [];\n        return _1.arrayToCompletions(suggestions, replacingRange.start, replacingRange.end, valueNode.type === 'object' ? c => {\n            var _a, _b;\n            // Operations to object keys.\n            const key = c.label.slice(1, -1);\n            const filterText = c.label;\n            const childValuePath = valuePath.push(key);\n            const childValueSchema = schema.navigate(childValuePath, -1);\n            const preselect = !(childValueSchema === null || childValueSchema === void 0 ? void 0 : childValueSchema.optional());\n            const defaultValueSnippet = this.getDefaultValueSnippet(childValueSchema === null || childValueSchema === void 0 ? void 0 : childValueSchema.default());\n            const detail = (_b = (_a = locales_1.segmentedLocale(childValuePath.getContext())) !== null && _a !== void 0 ? _a : childValuePath.getContext().pop()) !== null && _b !== void 0 ? _b : '';\n            const documentation = locales_1.segmentedLocale(childValuePath.contextPush('help').getContext(), [], 6, 2);\n            const insertText = `${c.label}: ${defaultValueSnippet}`;\n            return Object.assign(Object.assign({}, c), { preselect, detail, documentation, label: key, filterText, insertText, insertTextFormat: vscode_json_languageservice_1.InsertTextFormat.Snippet });\n        } : c => {\n            // Operations to other value suggestions.\n            if (c.label.startsWith('\"') && c.label.endsWith('\"')) {\n                return Object.assign(Object.assign({}, c), { label: c.label.slice(1, -1), filterText: c.label, insertText: c.label });\n            }\n            return c;\n        });\n    }\n    static suggestFromStringValidator(rangeOfString, stringNode, ctx, validationOption) {\n        var _a, _b, _c;\n        const { result, out } = this.legacyValidateFromStringValidator(rangeOfString, stringNode, ctx, validationOption);\n        return (_c = (_b = (_a = result === null || result === void 0 ? void 0 : result.completions) === null || _a === void 0 ? void 0 : _a.map(this.escapeCompletion)) === null || _b === void 0 ? void 0 : _b.map(v => _1.remapParserSuggestion(v, out.mapping))) !== null && _c !== void 0 ? _c : [];\n    }\n    static getDefaultValueSnippet(defaultValue) {\n        var _a;\n        const defaultValueJson = (_a = JSON.stringify(defaultValue, this.jsonSnippetReplacer, 4)) !== null && _a !== void 0 ? _a : '';\n        return this.resolveJsonSnippetMagicStrings(defaultValueJson);\n    }\n    /**\n     * Replaces some values that require snippet insert positions with some magic strings.\n     */\n    static jsonSnippetReplacer(_key, value) {\n        if (fast_deep_equal_1.default(value, {})) {\n            return JsonSchemaHelper.Replacers.EmptyObject;\n        }\n        else if (fast_deep_equal_1.default(value, [])) {\n            return JsonSchemaHelper.Replacers.EmptyList;\n        }\n        else if (typeof value === 'string') {\n            return `${JsonSchemaHelper.Replacers.StringStart} ${value} ${JsonSchemaHelper.Replacers.StringEnd}`;\n        }\n        else if (typeof value === 'boolean' || typeof value === 'number' || value === null) {\n            return `${JsonSchemaHelper.Replacers.LiteralStart} ${value} ${JsonSchemaHelper.Replacers.LiteralEnd}`;\n        }\n        else {\n            return value;\n        }\n    }\n    /**\n     * Resolve the magic strings provided from `jsonSnippetReplacer` function with the actual TextMate syntax.\n     */\n    static resolveJsonSnippetMagicStrings(value) {\n        let insertIndex = 1;\n        const replace = (value, searchValue, replaceValue) => {\n            if (value.match(searchValue)) {\n                return value.replace(searchValue, replaceValue(insertIndex++));\n            }\n            return value;\n        };\n        const replaceOneTurn = (value) => replace(replace(replace(replace(value, `\"${this.Replacers.EmptyObject}\"`, i => `{$${i}}`), `\"${this.Replacers.EmptyList}\"`, i => `[$${i}]`), new RegExp(`\"${this.Replacers.StringStart} (.*?) ${this.Replacers.StringEnd}\"`), i => `\"$\\${${i}:$1}\"`), new RegExp(`\"${this.Replacers.LiteralStart} (.*?) ${this.Replacers.LiteralEnd}\"`), i => `$\\${${i}:$1}`);\n        while (true) {\n            const newValue = replaceOneTurn(value);\n            if (newValue === value) {\n                return newValue;\n            }\n            else {\n                value = newValue;\n            }\n        }\n    }\n    /**\n     * @param cb A callback that is called on every node.\n     */\n    static walkAstNode(node, path, schema, cb) {\n        cb(node, path, schema);\n        if (node.type === 'object') {\n            for (const { keyNode, valueNode } of node.properties) {\n                if (valueNode) {\n                    const childPath = path.push(keyNode.value);\n                    this.walkAstNode(valueNode, childPath, schema, cb);\n                }\n            }\n        }\n        else if (node.type === 'array') {\n            for (const [i, childNode] of node.items.entries()) {\n                const childPath = path.push(i);\n                this.walkAstNode(childNode, childPath, schema, cb);\n            }\n        }\n    }\n    static validateFromValidator(ans, node, option, ctx) {\n        const valueRange = this.getNodeRange(node);\n        if (option.validator === 'block_state_map') {\n            // TODO: JSON block_state_map validation\n        }\n        else if (node.type === 'string') {\n            // Validate the selected string node.\n            const { result, out } = this.legacyValidateFromStringValidator(valueRange, node, ctx, option);\n            this.combineResult(ans, result, out.mapping);\n        }\n        else if (node.type === 'object') {\n            // Validate all the keys of the selected object node.\n            for (const { keyNode } of node.properties) {\n                const { result, out } = this.legacyValidateFromStringValidator(this.getNodeRange(keyNode), keyNode, ctx, option);\n                this.combineResult(ans, result, out.mapping);\n            }\n        }\n    }\n    static legacyValidateFromStringValidator(rangeOfString, stringNode, ctx, validationOption) {\n        const out = { mapping: {} };\n        const rawReader = new StringReader_1.StringReader(ctx.textDoc.getText(), rangeOfString.start, rangeOfString.end);\n        try {\n            const value = rawReader.readString(out, true);\n            const valueReader = new StringReader_1.StringReader(value);\n            const subCtx = Object.assign(Object.assign({}, ctx), { textDoc: vscode_languageserver_textdocument_1.TextDocument.create('dhp:///json_schema_helper.txt', 'plaintext', 0, value), cursor: types_1.getInnerIndex(out.mapping, ctx.cursor) });\n            return {\n                result: this.executeStringValidator(valueReader, subCtx, stringNode, validationOption),\n                out\n            };\n        }\n        catch (e) {\n            const ans = types_1.LegacyValidateResult.create();\n            ans.errors.push(e);\n            return { result: ans, out };\n        }\n    }\n    static executeStringValidator(reader, ctx, stringNode, option) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        let ans = types_1.LegacyValidateResult.create();\n        switch (option.validator) {\n            case 'block_state_key': {\n                const id = nodes_1.IdentityNode.fromString((_c = (_b = (_a = this.navigateRelativePath(stringNode, option.params.id)) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.toString()) !== null && _c !== void 0 ? _c : '').toString();\n                const keys = Object.keys((_e = (_d = ctx.blockDefinition[id]) === null || _d === void 0 ? void 0 : _d.properties) !== null && _e !== void 0 ? _e : {});\n                ans = new ctx.parsers.Literal(...keys).parse(reader, ctx);\n                break;\n            }\n            case 'block_state_map':\n                // TODO\n                break;\n            case 'command':\n                ans = new CommandParser_1.CommandParser(option.params.leadingSlash, 'commands', option.params.allowPartial).parse(reader, ctx).data;\n                break;\n            case 'entity':\n                ans = new ctx.parsers.Entity(option.params.amount, option.params.type, option.params.isScoreHolder).parse(reader, ctx);\n                break;\n            case 'nbt':\n                if (option.params.registry) {\n                    const id = (_h = (_g = (_f = this.navigateRelativePath(stringNode, option.params.registry.id)) === null || _f === void 0 ? void 0 : _f.value) === null || _g === void 0 ? void 0 : _g.toString()) !== null && _h !== void 0 ? _h : null;\n                    ans = new ctx.parsers.Nbt('Compound', option.params.registry.category, id, option.params.isPredicate).parse(reader, ctx);\n                }\n                else if (option.params.module) {\n                    ans = new ctx.parsers.Nbt('Compound', 'minecraft:block', undefined, option.params.isPredicate, null, option.params.module).parse(reader, ctx);\n                }\n                break;\n            case 'nbt_path': {\n                let category = (_j = option.params) === null || _j === void 0 ? void 0 : _j.category;\n                if (category && typeof category !== 'string') {\n                    switch (category.getter) {\n                        case 'copy_source':\n                            const copySource = (_l = (_k = this.navigateRelativePath(stringNode, category.path)) === null || _k === void 0 ? void 0 : _k.value) === null || _l === void 0 ? void 0 : _l.toString();\n                            if (copySource === 'block_entity') {\n                                category = 'minecraft:block';\n                            }\n                            else {\n                                category = 'minecraft:entity';\n                            }\n                            break;\n                        default:\n                            category = undefined;\n                            break;\n                    }\n                }\n                ans = new ctx.parsers.NbtPath(category !== null && category !== void 0 ? category : 'minecraft:block', category ? ((_m = option.params.id) !== null && _m !== void 0 ? _m : null) : undefined).parse(reader, ctx);\n                break;\n            }\n            case 'objective':\n                ans = new ctx.parsers.Objective().parse(reader, ctx);\n                break;\n            case 'resource':\n                ans = new ctx.parsers.Identity(option.params.pool, option.params.allowTag, undefined, option.params.allowUnknown, option.params.isDefinition).parse(reader, ctx);\n                break;\n            case 'team':\n                ans = new ctx.parsers.Team().parse(reader, ctx);\n                break;\n            case 'uuid':\n                ans = new ctx.parsers.Uuid().parse(reader, ctx);\n                break;\n            case 'vector':\n                ans = new ctx.parsers.Vector(option.params.dimension, option.params.isInteger ? 'integer' : 'float', !option.params.disableLocal, !option.params.disableRelative, option.params.min, option.params.max).parse(reader, ctx);\n                break;\n            default:\n                /* istanbul ignore next */\n                console.error('[doDetailedStringLegacyValidate]', new Error(`Unknown validator ${option.validator}`));\n                break;\n        }\n        ans.completions = ans.completions.map(this.escapeCompletion);\n        return ans;\n    }\n    static escapeCompletion(origin) {\n        return _1.handleCompletionText(origin, str => _1.quoteString(str, 'always double', true).slice(1, -1));\n    }\n    static combineResult(ans, result, mapping) {\n        if (result) {\n            if (result.cache) {\n                types_1.remapCachePosition(result.cache, mapping);\n                types_1.combineCache(ans.cache, result.cache);\n            }\n            if (result.errors) {\n                const downgradedErrors = types_1.downgradeParsingError(result.errors);\n                types_1.remapParsingErrors(downgradedErrors, mapping);\n                ans.errors.push(...downgradedErrors);\n            }\n            if (result.tokens) {\n                ans.tokens.push(...types_1.remapTokens(result.tokens, mapping, false));\n            }\n        }\n    }\n    static convertSchemaError({ path, params, error }, node) {\n        var _a;\n        const pathElements = path.getArray();\n        const errorNode = node ? this.navigateNodes(node, pathElements) : undefined;\n        const range = (errorNode === null || errorNode === void 0 ? void 0 : errorNode.type) === 'object'\n            ? { start: errorNode.offset, end: errorNode.offset + 1 }\n            : (errorNode ? this.getNodeRange(errorNode) : { start: 0, end: 1 });\n        let message = (_a = locales_1.locale(`json.${error}`, ...(params !== null && params !== void 0 ? params : []))) !== null && _a !== void 0 ? _a : (console.error('[convertSchemaError]', new Error(`Unknown JSON schema error “${error}”`)),\n            '');\n        if (pathElements.length > 0) {\n            message = `${pathElements.join('.')} - ${message}`;\n        }\n        return new types_1.ParsingError(range, message);\n    }\n    /**\n     * @param path Will be changed with the remaining elements after navigation.\n     */\n    static navigateNodes(node, path) {\n        var _a, _b, _c;\n        if (path.length === 0) {\n            return node;\n        }\n        let childNode;\n        const ele = path[0];\n        if (typeof ele === 'number') {\n            childNode = (_a = node.items) === null || _a === void 0 ? void 0 : _a[ele];\n        }\n        else {\n            childNode = (_c = (_b = node.properties) === null || _b === void 0 ? void 0 : _b.find(prop => prop.keyNode.value === ele)) === null || _c === void 0 ? void 0 : _c.valueNode;\n        }\n        if (childNode) {\n            return this.navigateNodes(childNode, (path.shift(), path));\n        }\n        else {\n            return node;\n        }\n    }\n    /**\n     * This function won't work if the path contains any `pop` after `push`, which should be fine.\n     * @param path Won't be changed.\n     */\n    static navigateRelativePath(node, path) {\n        var _a, _b;\n        if (!path || !node) {\n            return undefined;\n        }\n        if (path.length === 0) {\n            return node;\n        }\n        let nextNode;\n        const ele = path[0];\n        if (ele === 'pop') {\n            nextNode = node === null || node === void 0 ? void 0 : node.parent;\n            if ((nextNode === null || nextNode === void 0 ? void 0 : nextNode.type) === 'property') {\n                nextNode = nextNode.parent;\n            }\n        }\n        else {\n            nextNode = (node === null || node === void 0 ? void 0 : node.type) === 'object' ? (_b = (_a = node.properties) === null || _a === void 0 ? void 0 : _a.find(prop => prop.keyNode.value === ele.push)) === null || _b === void 0 ? void 0 : _b.valueNode : undefined;\n        }\n        return this.navigateRelativePath(nextNode, path.slice(1));\n    }\n    static getSelectedNode(node, schema, value, cursor, path, type = 'value') {\n        let ans = { node: undefined, schema: undefined, path, type };\n        if (!types_1.isInRange(cursor, this.getNodeRange(node))) {\n            return ans;\n        }\n        const set = (result) => {\n            if (result.node) {\n                ans = result;\n            }\n        };\n        console.log(schema === null || schema === void 0 ? void 0 : schema.type(path));\n        switch (node.type) {\n            case 'array':\n                for (const [i, childNode] of node.items.entries()) {\n                    const childValue = value === null || value === void 0 ? void 0 : value[i];\n                    const childPath = schema.pathPush(path, i);\n                    const childSchema = schema.navigate(childPath, path.getArray().length - 1);\n                    set(this.getSelectedNode(childNode, childSchema, childValue, cursor, childPath, 'value'));\n                    if (ans.node) {\n                        break;\n                    }\n                }\n                break;\n            case 'object':\n                for (const property of node.properties) {\n                    set(this.getSelectedNode(property, schema, value, cursor, path, 'value'));\n                    if (ans.node) {\n                        break;\n                    }\n                }\n                break;\n            case 'property':\n                const key = node.keyNode.value;\n                const childValue = value === null || value === void 0 ? void 0 : value[key];\n                const childPath = schema.pathPush(path, key);\n                console.log(`Pushed ${key}`);\n                const childSchema = schema.navigate(childPath, path.getArray().length - 1);\n                set(this.getSelectedNode(node.keyNode, childSchema, childValue, cursor, childPath, 'key'));\n                if (!ans.node) {\n                    // Key isn't selected.\n                    if (node.valueNode) {\n                        set(this.getSelectedNode(node.valueNode, childSchema, childValue, cursor, childPath, 'value'));\n                    }\n                    else {\n                        set({ node, path: childPath, schema: childSchema, type: 'value' });\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n        if (!ans.node) {\n            ans = { node, schema, path, type };\n        }\n        return ans;\n    }\n    static restoreValueFromNode(node) {\n        switch (node === null || node === void 0 ? void 0 : node.type) {\n            case 'object': {\n                const ans = {};\n                for (const { keyNode, valueNode } of node.properties) {\n                    if (valueNode) {\n                        ans[JsonSchemaHelper.restoreValueFromNode(keyNode)] = JsonSchemaHelper.restoreValueFromNode(valueNode);\n                    }\n                }\n                return ans;\n            }\n            case 'array':\n                return node.items.map(JsonSchemaHelper.restoreValueFromNode);\n            case 'boolean':\n            case 'null':\n            case 'number':\n            case 'string':\n            default:\n                return node === null || node === void 0 ? void 0 : node.value;\n        }\n    }\n    static getNodeRange(node) {\n        return { start: node.offset, end: node.offset + node.length };\n    }\n    static pathPopAll(model) {\n        return new core_1.ModelPath(model.model, new core_1.Path(model.getArray().slice(0, -1), model.getContext().slice(0, -1)));\n    }\n}\nexports.JsonSchemaHelper = JsonSchemaHelper;\nJsonSchemaHelper.Replacers = {\n    EmptyObject: 'a6CJ_fNaoTKc1J7SavcrSMGmQjW6HEuk',\n    EmptyList: '09v6na643Rr0jeIcBFRGwXJFUvvB_773',\n    StringStart: 'WcfESEXkwL5a0nDMC7ZMib6RftqJyvQP',\n    StringEnd: 'NR9lafzlCwHbjOIrzXcpZFgNQVpn7kpY',\n    LiteralStart: 'gJK7ZIGIpFJlAal2UduKc93rHAOb5K3z',\n    LiteralEnd: '1xs2m6JwQaNtXzexThOAwmpTFCIRftZi'\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NbtdocHelper = void 0;\nconst clone_1 = __importDefault(require(\"clone\"));\nconst rfdc_1 = __importDefault(require(\"rfdc\"));\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst vscode_languageserver_textdocument_1 = require(\"vscode-languageserver-textdocument\");\nconst _1 = require(\".\");\nconst locales_1 = require(\"../locales\");\nconst ArgumentNode_1 = require(\"../nodes/ArgumentNode\");\nconst IdentityNode_1 = require(\"../nodes/IdentityNode\");\nconst MapNode_1 = require(\"../nodes/MapNode\");\nconst NbtByteArrayNode_1 = require(\"../nodes/NbtByteArrayNode\");\nconst NbtByteNode_1 = require(\"../nodes/NbtByteNode\");\nconst NbtCompoundNode_1 = require(\"../nodes/NbtCompoundNode\");\nconst NbtDoubleNode_1 = require(\"../nodes/NbtDoubleNode\");\nconst NbtFloatNode_1 = require(\"../nodes/NbtFloatNode\");\nconst NbtIntArrayNode_1 = require(\"../nodes/NbtIntArrayNode\");\nconst NbtIntNode_1 = require(\"../nodes/NbtIntNode\");\nconst NbtListNode_1 = require(\"../nodes/NbtListNode\");\nconst NbtLongArrayNode_1 = require(\"../nodes/NbtLongArrayNode\");\nconst NbtLongNode_1 = require(\"../nodes/NbtLongNode\");\nconst NbtNode_1 = require(\"../nodes/NbtNode\");\nconst NbtShortNode_1 = require(\"../nodes/NbtShortNode\");\nconst NbtStringNode_1 = require(\"../nodes/NbtStringNode\");\nconst CommandParser_1 = require(\"../parsers/CommandParser\");\nconst ClientCache_1 = require(\"../types/ClientCache\");\nconst Formattable_1 = require(\"../types/Formattable\");\nconst IndexMapping_1 = require(\"../types/IndexMapping\");\nconst Parser_1 = require(\"../types/Parser\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst StylisticConfig_1 = require(\"../types/StylisticConfig\");\nconst Token_1 = require(\"../types/Token\");\nconst StringReader_1 = require(\"./StringReader\");\nclass NbtdocHelper {\n    constructor(doc) {\n        this.doc = doc;\n        this.mockCompoundArena = {};\n        this.mockCompoundIndexNext = -1;\n        this.mockEnumArena = {};\n        this.mockEnumIndexNext = -1;\n    }\n    mockCompoundDoc(compoundDoc) {\n        const mockIndex = this.mockCompoundIndexNext--;\n        this.mockCompoundArena[mockIndex] = compoundDoc;\n        return mockIndex;\n    }\n    readCompound(index) {\n        if (index === null) {\n            return null;\n        }\n        else if (index < 0) {\n            return this.mockCompoundArena[index] || null;\n        }\n        else {\n            return this.doc.compound_arena[index] || null;\n        }\n    }\n    readEnum(index) {\n        if (index < 0) {\n            return this.mockEnumArena[index];\n        }\n        else {\n            return this.doc.enum_arena[index];\n        }\n    }\n    resolveRegistryCompound(type, id) {\n        const registry = this.doc.registries[type];\n        if (registry) {\n            const reg = registry[0];\n            if (id && reg[id] !== undefined) {\n                return { Compound: reg[id] };\n            }\n            else {\n                const compiledFallback = NbtdocHelper.getCompiledFallback(this.doc, type);\n                const mockIndex = this.mockCompoundDoc(compiledFallback);\n                return { Compound: mockIndex };\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the supers of this compound tag doc.\n     * @param supers An index or a compound.\n     * @param node The super tag node.\n     */\n    getSupers(supers, node) {\n        if (supers === null) {\n            return { Compound: null };\n        }\n        else if (NbtdocHelper.isRegistrySupers(supers)) {\n            const id = this.followFieldPath(supers.Registry.path, node);\n            return this.resolveRegistryCompound(supers.Registry.target, \n            /* istanbul ignore next */\n            id ? IdentityNode_1.IdentityNode.fromString(id.valueOf()).toString() : null);\n        }\n        return { Compound: supers.Compound };\n    }\n    followFieldPath(paths, node) {\n        paths = rfdc_1.default()(paths);\n        let ansNode = node;\n        while (paths.length > 0 && ansNode && ansNode instanceof NbtCompoundNode_1.NbtCompoundNode) {\n            const path = paths.shift();\n            if (path === 'Super') {\n                ansNode = ansNode[NbtNode_1.SuperNode];\n            }\n            else {\n                const key = path.Child;\n                ansNode = ansNode[key];\n            }\n            if (paths.length === 0) {\n                if (ansNode && ansNode instanceof NbtStringNode_1.NbtStringNode) {\n                    return ansNode;\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        return null;\n    }\n    readCompoundKeys(doc, node) {\n        if (doc) {\n            const superDoc = this.getSupers(doc.supers, node);\n            return [\n                ...Object.keys(doc.fields),\n                ...this.readCompoundKeys(this.readCompound(superDoc ? superDoc.Compound : null), node)\n            ].filter((v, i, a) => a.indexOf(v) === i);\n        }\n        return [];\n    }\n    /**\n     * @param node The node which is at the same level as the `doc`\n     */\n    readField(doc, key, node) {\n        if (doc) {\n            const field = doc.fields[key];\n            if (field) {\n                return field;\n            }\n            else {\n                const superDoc = this.getSupers(doc.supers, node);\n                return this.readField(this.readCompound(superDoc ? superDoc.Compound : null), key, node);\n            }\n        }\n        return null;\n    }\n    completeField(ans, ctx, doc, isPredicate, description, start, end) {\n        /* istanbul ignore else */\n        if (doc) {\n            /* istanbul ignore else */\n            if (NbtdocHelper.isBooleanDoc(doc)) {\n                this.completeBooleanField(ans, ctx, doc);\n            }\n            else if (NbtdocHelper.isByteArrayDoc(doc)) {\n                this.completeByteArrayField(ans, ctx, doc);\n            }\n            else if (NbtdocHelper.isCompoundDoc(doc)) {\n                this.completeCompoundField(ans, ctx, doc);\n            }\n            else if (NbtdocHelper.isEnumDoc(doc)) {\n                this.completeEnumField(ans, ctx, doc, start, end);\n            }\n            else if (NbtdocHelper.isIdDoc(doc)) {\n                this.completeIdField(ans, ctx, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isIntArrayDoc(doc)) {\n                this.completeIntArrayField(ans, ctx, doc);\n            }\n            else if (NbtdocHelper.isListDoc(doc)) {\n                this.completeListField(ans, ctx, doc);\n            }\n            else if (NbtdocHelper.isLongArrayDoc(doc)) {\n                this.completeLongArrayField(ans, ctx, doc);\n            }\n            else if (NbtdocHelper.isStringDoc(doc)) {\n                this.completeStringField(ans, ctx, doc, isPredicate, description);\n            }\n            // TODO: completions for OR\n            // TODO: completions for compound keys in OR\n            // TODO: completions for inner strings in Enum\n        }\n    }\n    completeOpenCloseField(ans, lint, cursor, node) {\n        const open = node[MapNode_1.GetFormattedOpen](lint);\n        const close = node[MapNode_1.GetFormattedClose](lint);\n        ans.completions.push({\n            start: cursor, end: cursor,\n            label: `${open}${close}`,\n            insertText: `${open}$1${close}`,\n            insertTextFormat: vscode_languageserver_1.InsertTextFormat.Snippet\n        });\n    }\n    completeByteArrayField(ans, { config: { lint }, cursor }, _doc) {\n        this.completeOpenCloseField(ans, lint, cursor, new NbtByteArrayNode_1.NbtByteArrayNode(null));\n    }\n    completeCompoundField(ans, { config: { lint }, cursor }, _doc) {\n        this.completeOpenCloseField(ans, lint, cursor, new NbtCompoundNode_1.NbtCompoundNode(null));\n    }\n    completeIntArrayField(ans, { config: { lint }, cursor }, _doc) {\n        this.completeOpenCloseField(ans, lint, cursor, new NbtIntArrayNode_1.NbtIntArrayNode(null));\n    }\n    completeListField(ans, { config: { lint }, cursor }, _doc) {\n        this.completeOpenCloseField(ans, lint, cursor, new NbtListNode_1.NbtListNode(null));\n    }\n    completeLongArrayField(ans, { config: { lint }, cursor }, _doc) {\n        this.completeOpenCloseField(ans, lint, cursor, new NbtLongArrayNode_1.NbtLongArrayNode(null));\n    }\n    completeBooleanField(ans, ctx, _doc) {\n        if (!ctx.config.lint.nbtBoolean || ctx.config.lint.nbtBoolean[1]) {\n            ans.completions.push(..._1.arrayToCompletions(['false', 'true'], ctx.cursor, ctx.cursor));\n        }\n        if (!ctx.config.lint.nbtBoolean || !ctx.config.lint.nbtBoolean[1]) {\n            ans.completions.push(..._1.arrayToCompletions([\n                NbtdocHelper.getFormattedString(ctx.config.lint, 'Byte', 0),\n                NbtdocHelper.getFormattedString(ctx.config.lint, 'Byte', 1)\n            ], ctx.cursor, ctx.cursor));\n        }\n    }\n    static handleDescription(str) {\n        return str.trim().replace(/\\n\\s/g, '\\n');\n    }\n    completeCompoundKeys(ans, ctx, tag, doc, currentType, start, end) {\n        const existingKeys = Object.keys(tag);\n        const compoundDoc = this.readCompound(this.resolveCompoundOrIndexDoc(doc, tag[NbtNode_1.SuperNode], ctx));\n        const pool = this\n            .readCompoundKeys(compoundDoc, tag)\n            .filter(v => !existingKeys.includes(v));\n        for (const key of pool) {\n            const field = this.readField(compoundDoc, key, tag);\n            const description = NbtdocHelper.handleDescription(field.description);\n            ans.completions.push(NbtdocHelper.escapeCompletion(Object.assign({ label: key, insertText: key, start, end, kind: vscode_languageserver_1.CompletionItemKind.Property, detail: NbtdocHelper.localeType(NbtdocHelper.getValueType(field.nbttype)) }, description ? {\n                documentation: {\n                    kind: 'markdown',\n                    value: description\n                }\n            } : {}), ctx.config.lint.nbtCompoundKeyQuote, ctx.config.lint.nbtCompoundKeyQuoteType, currentType));\n        }\n    }\n    completeEnumField(ans, ctx, doc, start, end) {\n        const { et } = this.readEnum(doc.Enum);\n        const type = NbtdocHelper.getValueType(et);\n        const options = et[type];\n        for (const key of Object.keys(options)) {\n            const { description, value } = options[key];\n            const handledDescription = NbtdocHelper.handleDescription(description);\n            ans.completions.push({\n                start, end,\n                label: NbtdocHelper.getFormattedString(ctx.config.lint, type, value),\n                detail: NbtdocHelper.localeType(type),\n                documentation: {\n                    kind: 'markdown',\n                    value: handledDescription ? `${key}  \\n${handledDescription}` : key\n                },\n                kind: vscode_languageserver_1.CompletionItemKind.EnumMember\n            });\n        }\n    }\n    completeIdField(ans, ctx, doc, isPredicate) {\n        const subCtx = Object.assign(Object.assign({}, ctx), { textDoc: vscode_languageserver_textdocument_1.TextDocument.create('dhp:///nbtdoc_helper.txt', 'plaintext', 0, ''), cursor: 0 });\n        const reader = new StringReader_1.StringReader('');\n        const result = new ctx.parsers.Identity(NbtdocHelper.getIdentityTypeFromRegistry(doc.Id), false, isPredicate).parse(reader, subCtx);\n        for (const com of result.completions) {\n            ans.completions.push(NbtdocHelper.escapeCompletion(Object.assign(Object.assign({}, com), { insertText: com.insertText || com.label }), ctx.config.lint.nbtStringQuote, ctx.config.lint.nbtStringQuoteType, null));\n        }\n    }\n    completeStringField(ans, ctx, _doc, _isPredicate, description) {\n        const subCtx = Object.assign(Object.assign({}, ctx), { textDoc: vscode_languageserver_textdocument_1.TextDocument.create('dhp:///nbtdoc_helper.txt', 'plaintext', 0, ''), cursor: 0 });\n        const reader = new StringReader_1.StringReader('');\n        const result = this.validateInnerString(reader, subCtx, description);\n        if (result && result.completions) {\n            for (const com of result.completions) {\n                ans.completions.push(NbtdocHelper.escapeCompletion(Object.assign(Object.assign({}, com), { insertText: com.insertText || com.label }), ctx.config.lint.nbtStringQuote, ctx.config.lint.nbtStringQuoteType, null));\n            }\n        }\n    }\n    validateField(ans, ctx, tag, doc, isPredicate, description) {\n        if (doc) {\n            if (NbtdocHelper.isBooleanDoc(doc)) {\n                this.validateBooleanField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isByteArrayDoc(doc)) {\n                this.validateByteArrayField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isByteDoc(doc)) {\n                this.validateByteField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isCompoundDoc(doc)) {\n                this.validateCompoundField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isDoubleDoc(doc)) {\n                this.validateDoubleField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isEnumDoc(doc)) {\n                this.validateEnumField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isFloatDoc(doc)) {\n                this.validateFloatField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isIdDoc(doc)) {\n                this.validateIdField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isIndexDoc(doc)) {\n                this.validateIndexField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isIntArrayDoc(doc)) {\n                this.validateIntArrayField(ans, ctx, tag, doc, isPredicate, description);\n            }\n            else if (NbtdocHelper.isIntDoc(doc)) {\n                this.validateIntField(ans, ctx, tag, doc, isPredicate, description);\n            }\n            else if (NbtdocHelper.isListDoc(doc)) {\n                this.validateListField(ans, ctx, tag, doc, isPredicate, description);\n            }\n            else if (NbtdocHelper.isLongArrayDoc(doc)) {\n                this.validateLongArrayField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isLongDoc(doc)) {\n                this.validateLongField(ans, ctx, tag, doc, isPredicate);\n            }\n            else if (NbtdocHelper.isOrDoc(doc)) {\n                this.validateOrField(ans, ctx, tag, doc, isPredicate, description);\n            }\n            else if (NbtdocHelper.isShortDoc(doc)) {\n                this.validateShortField(ans, ctx, tag, doc, isPredicate);\n            }\n            else {\n                this.validateStringField(ans, ctx, tag, isPredicate, description);\n            }\n        }\n    }\n    /**\n     * @returns If it matches loosely; whether or not should be furthermore validated.\n     */\n    validateNbtNodeType(ans, ctx, tag, expected, isPredicate) {\n        const config = ctx.config.lint.nbtTypeCheck;\n        const actual = tag[NbtNode_1.NbtNodeType];\n        const isLooselyMatched = NbtNode_1.isNbtNodeTypeLooselyMatched(actual, expected);\n        if (!isLooselyMatched ||\n            ((isPredicate || (config && config[1] === 'strictly')) && !NbtNode_1.isNbtNodeTypeStrictlyMatched(actual, expected))) {\n            //#region Action codes of converting to similar types\n            let code = undefined;\n            if (actual === 'Byte' || actual === 'Short' || actual === 'Int' || actual === 'Long' || actual === 'Float' || actual === 'Double') {\n                if (expected === 'Byte')\n                    code = 9 /* NbtTypeToByte */;\n                else if (expected === 'Short')\n                    code = 11 /* NbtTypeToShort */;\n                else if (expected === 'Int')\n                    code = 12 /* NbtTypeToInt */;\n                else if (expected === 'Long')\n                    code = 15 /* NbtTypeToLong */;\n                else if (expected === 'Float')\n                    code = 17 /* NbtTypeToFloat */;\n                else if (expected === 'Double')\n                    code = 18 /* NbtTypeToDouble */;\n            }\n            else if (actual === 'ByteArray' || actual === 'IntArray' || actual === 'LongArray' || actual === 'List') {\n                if (expected === 'ByteArray')\n                    code = 10 /* NbtTypeToByteArray */;\n                else if (expected === 'IntArray')\n                    code = 13 /* NbtTypeToIntArray */;\n                else if (expected === 'LongArray')\n                    code = 16 /* NbtTypeToLongArray */;\n                else if (expected === 'List')\n                    code = 14 /* NbtTypeToList */;\n            }\n            //#endregion\n            //#region UUID datafix: #377\n            if (expected === 'IntArray' && actual === 'String') {\n                code = 20 /* NbtUuidDatafixString */;\n            }\n            else if (expected === 'IntArray' && actual === 'Compound') {\n                code = 19 /* NbtUuidDatafixCompound */;\n            }\n            //#endregion\n            ans.errors.push(new ParsingError_1.ParsingError(tag[ArgumentNode_1.NodeRange], locales_1.locale('diagnostic-rule', locales_1.locale('expected-got', locales_1.locale(`nbt-tag.${expected}`), locales_1.locale(`nbt-tag.${actual}`)), locales_1.locale('punc.quote', 'nbtTypeCheck')), true, StylisticConfig_1.getDiagnosticSeverity(config ? config[0] : 'warning'), code));\n        }\n        return isLooselyMatched;\n    }\n    validateCollectionLength(ans, { config }, tag, [min, max], _isPredicate, configKey) {\n        if (config.lint[configKey] && config.lint[configKey][1] && !(min <= tag.length && tag.length <= max)) {\n            ans.errors.push(new ParsingError_1.ParsingError(tag[ArgumentNode_1.NodeRange], locales_1.locale('diagnostic-rule', locales_1.locale('expected', min === max ? locales_1.locale('collection-length.exact', min) : locales_1.locale('collection-length.between', min, max)), locales_1.locale('punc.quote', configKey)), undefined, StylisticConfig_1.getDiagnosticSeverity(config.lint[configKey][0])));\n        }\n    }\n    validateNumberArrayField(ans, ctx, tag, { length_range: lengthRange, value_range: valueRange }, isPredicate, description) {\n        if (lengthRange) {\n            this.validateCollectionLength(ans, ctx, tag, lengthRange, isPredicate, 'nbtArrayLengthCheck');\n        }\n        for (const item of tag) {\n            this.validateNumberField(ans, ctx, item, valueRange, isPredicate, description);\n        }\n    }\n    validateNumberField(ans, _ctx, tag, range, _isPredicate, description) {\n        // Cache.\n        /// Color information.\n        if (description.match(/RED << 16 \\| GREEN << 8 \\| BLUE/i)) {\n            const num = Number(tag.valueOf());\n            const r = ((num >> 16) & 255) / 255;\n            const g = ((num >> 8) & 255) / 255;\n            const b = (num & 255) / 255;\n            ClientCache_1.combineCache(ans.cache, {\n                color: {\n                    [`${r} ${g} ${b} 1`]: {\n                        ref: [tag[ArgumentNode_1.NodeRange]]\n                    }\n                }\n            });\n        }\n        // Errors.\n        if (range) {\n            const [min, max] = range;\n            if (!(min <= tag.valueOf() && tag.valueOf() <= max)) {\n                ans.errors.push(new ParsingError_1.ParsingError(tag[ArgumentNode_1.NodeRange], locales_1.locale('expected-got', locales_1.locale('number.between', min, max), tag.valueOf()), true, vscode_languageserver_1.DiagnosticSeverity.Warning));\n            }\n        }\n    }\n    /**\n     * @param node The node which is at the same level as the `doc`\n     */\n    isInheritFromItemBase(doc, node) {\n        if (!doc) {\n            return false;\n        }\n        if (doc.fields.hasOwnProperty('CustomModelData')) {\n            return true;\n        }\n        const superDoc = this.getSupers(doc.supers, node);\n        return this.isInheritFromItemBase(this.readCompound(superDoc ? superDoc.Compound : null), node ? node[NbtNode_1.SuperNode] : null);\n    }\n    validateCompoundDoc(ans, ctx, node, doc, isPredicate) {\n        if (doc) {\n            for (const key of Object.keys(node)) {\n                const childNode = node[key];\n                const field = this.readField(doc, key, node);\n                if (field) {\n                    // Hover information.\n                    node[MapNode_1.Keys][key][ArgumentNode_1.NodeDescription] = NbtdocHelper.getKeyDescription(field.nbttype, field.description);\n                    this.validateField(ans, ctx, childNode, field.nbttype, isPredicate, NbtdocHelper.handleDescription(field.description));\n                }\n                else {\n                    // Errors.\n                    if (!this.isInheritFromItemBase(doc, node /* [SuperNode] */)) {\n                        let code;\n                        //#region UUID datafix: #377\n                        if (['ConversionPlayerLeast', 'ConversionPlayerMost', 'UUIDLeast', 'UUIDMost', 'LoveCauseLeast', 'LoveCauseMost', 'OwnerUUID', 'OwnerUUIDLeast', 'OwnerUUIDMost', 'target_uuid', 'TrustedUUIDs'].includes(key)) {\n                            code = 21 /* NbtUuidDatafixUnknownKey */;\n                        }\n                        //#endregion\n                        ans.errors.push(new ParsingError_1.ParsingError(node[MapNode_1.Keys][key][ArgumentNode_1.NodeRange], locales_1.locale('unknown-key', locales_1.locale('punc.quote', key)), true, vscode_languageserver_1.DiagnosticSeverity.Warning, code));\n                    }\n                }\n            }\n        }\n    }\n    static getFormattedString(lint, type, value) {\n        let tag;\n        switch (type) {\n            case 'Byte':\n                tag = new NbtByteNode_1.NbtByteNode(null, value, value.toString());\n                break;\n            case 'Short':\n                tag = new NbtShortNode_1.NbtShortNode(null, value, value.toString());\n                break;\n            case 'Int':\n                tag = new NbtIntNode_1.NbtIntNode(null, value, value.toString());\n                break;\n            case 'Long':\n                tag = new NbtLongNode_1.NbtLongNode(null, BigInt(value), value.toString());\n                break;\n            case 'Float':\n                tag = new NbtFloatNode_1.NbtFloatNode(null, value, value.toString());\n                break;\n            case 'Double':\n                tag = new NbtDoubleNode_1.NbtDoubleNode(null, value, value.toString());\n                break;\n            case 'String':\n            default:\n                return NbtdocHelper.quoteCompletionText(value.toString(), lint.nbtStringQuote, lint.nbtStringQuoteType, null);\n        }\n        return tag[Formattable_1.GetFormattedString](lint);\n    }\n    static quoteCompletionText(text, quoteConfig, quoteTypeConfig, currentType) {\n        if (currentType) {\n            return _1.quoteString(text, currentType, true).slice(1, -1);\n        }\n        else {\n            const quote = quoteConfig ? quoteConfig[1] : false;\n            const quoteType = quoteTypeConfig ? quoteTypeConfig[1] : 'prefer double';\n            return _1.quoteString(text, quoteType, quote);\n        }\n    }\n    static getQuoteType(raw) {\n        if (raw.charAt(0) === '\"') {\n            return 'always double';\n        }\n        else if (raw.charAt(0) === \"'\") {\n            return 'always single';\n        }\n        else {\n            return null;\n        }\n    }\n    /* istanbul ignore next */\n    static escapeCompletion(origin, quoteConfig, quoteTypeConfig, currentType) {\n        return _1.handleCompletionText(origin, str => NbtdocHelper.quoteCompletionText(str, quoteConfig, quoteTypeConfig, currentType));\n    }\n    static getValueType(value) {\n        if (typeof value === 'string') {\n            return value;\n        }\n        else {\n            return Object.keys(value)[0];\n        }\n    }\n    static localeType(type) {\n        return locales_1.locale('nbtdoc.type', locales_1.locale(`nbtdoc.type.${type}`));\n    }\n    validateBooleanField(ans, ctx, tag, _doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Byte', isPredicate);\n        // Errors.\n        if (shouldValidate) {\n            const config = ctx.config.lint.nbtBoolean;\n            if (config) {\n                const actualString = tag.toString();\n                const isBooleanLiteral = /^true|false$/i.test(actualString);\n                const [severity, expectedLiteral] = config;\n                const message = expectedLiteral ?\n                    locales_1.locale('expected', _1.arrayToMessage(['false', 'true'], true, 'or')) :\n                    locales_1.locale('expected-got', locales_1.locale('nbt-tag.Byte'), locales_1.locale('punc.quote', actualString));\n                const code = expectedLiteral ? 5 /* NbtByteToLiteral */ : 6 /* NbtByteToNumber */;\n                if (isBooleanLiteral !== expectedLiteral) {\n                    ans.errors.push(new ParsingError_1.ParsingError(tag[ArgumentNode_1.NodeRange], message, undefined, StylisticConfig_1.getDiagnosticSeverity(severity), code));\n                }\n            }\n        }\n    }\n    validateByteArrayField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'ByteArray', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberArrayField(ans, ctx, tag, doc.ByteArray, isPredicate, '');\n        }\n    }\n    validateByteField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Byte', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberField(ans, ctx, tag, doc.Byte.range, isPredicate, '');\n        }\n    }\n    validateCompoundField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Compound', isPredicate);\n        if (shouldValidate) {\n            const compoundNode = tag;\n            const compoundDoc = this.readCompound(doc.Compound);\n            this.validateCompoundDoc(ans, ctx, compoundNode, compoundDoc, isPredicate);\n        }\n    }\n    validateDoubleField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Double', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberField(ans, ctx, tag, doc.Double.range, isPredicate, '');\n        }\n    }\n    validateEnumField(ans, ctx, tag, doc, isPredicate) {\n        const { description, et } = this.readEnum(doc.Enum);\n        const handledDescription = NbtdocHelper.handleDescription(description);\n        const type = NbtdocHelper.getValueType(et);\n        tag[ArgumentNode_1.NodeDescription] = `${NbtdocHelper.localeType(type)}\\n* * * * * *\\n${handledDescription}`;\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, type, isPredicate);\n        if (shouldValidate) {\n            const options = et[type];\n            const optionValues = [];\n            for (const key of Object.keys(options)) {\n                const { description, value } = options[key];\n                optionValues.push(value.toString());\n                // Hover information.\n                const handledDescription = NbtdocHelper.handleDescription(description);\n                if (tag.valueOf() == value) {\n                    const hoverText = handledDescription ? `${key} - ${handledDescription}` : key;\n                    tag[ArgumentNode_1.NodeDescription] += `\\n\\n${hoverText}`;\n                }\n            }\n            // Errors.\n            if (!optionValues.includes(tag.valueOf().toString())) {\n                ans.errors.push(new ParsingError_1.ParsingError(tag[ArgumentNode_1.NodeRange], locales_1.locale('expected-got', _1.arrayToMessage(optionValues, true, 'or'), locales_1.locale('punc.quote', tag.valueOf().toString())), undefined, vscode_languageserver_1.DiagnosticSeverity.Warning));\n            }\n        }\n    }\n    validateFloatField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Float', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberField(ans, ctx, tag, doc.Float.range, isPredicate, '');\n        }\n    }\n    // https://github.com/SPGoding/datapack-language-server/issues/332#issuecomment-590168655\n    /* istanbul ignore next */\n    static getIdentityTypeFromRegistry(registry) {\n        switch (registry) {\n            case 'minecraft:attribute':\n            case 'minecraft:block':\n            case 'minecraft:enchantment':\n            case 'minecraft:item':\n            case 'minecraft:motive':\n            case 'minecraft:potion':\n            case 'minecraft:villager_profession':\n            case 'minecraft:villager_type':\n                return registry;\n            case 'minecraft:block_entity':\n                return 'minecraft:block_entity_type';\n            case 'minecraft:dimension':\n                return '$dimension';\n            case 'minecraft:entity':\n                return 'minecraft:entity_type';\n            case 'minecraft:loot_table':\n                return '$loot_table';\n            case 'minecraft:recipe':\n                return '$recipe';\n            case 'minecraft:structure':\n                return '$structure';\n            default:\n                throw new Error(`Unknown nbtdoc ID registry: ${registry}`);\n        }\n    }\n    validateIdField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'String', isPredicate);\n        if (shouldValidate) {\n            const strTag = tag;\n            if (strTag.valueOf().length === 0) {\n                return;\n            }\n            /// Identity.\n            const subCtx = Object.assign(Object.assign({}, ctx), { textDoc: vscode_languageserver_textdocument_1.TextDocument.create('dhp:///nbtdoc_helper.txt', 'plaintext', 0, strTag.valueOf()), cursor: IndexMapping_1.getInnerIndex(strTag.mapping, ctx.cursor) });\n            const reader = new StringReader_1.StringReader(strTag.valueOf());\n            const result = new ctx.parsers.Identity(NbtdocHelper.getIdentityTypeFromRegistry(doc.Id), false, isPredicate).parse(reader, subCtx);\n            //#region Attribute name datafix: #381\n            if (doc.Id === 'minecraft:attribute') {\n                for (const error of result.errors) {\n                    if (error.code === undefined) {\n                        error.code = 8 /* NbtStringAttributeDatafix */;\n                    }\n                }\n            }\n            //#endregion\n            this.combineResult(ans, result, strTag);\n            /// Quotes.\n            ans.errors.push(..._1.validateStringQuote(strTag.toString(), strTag.valueOf(), tag[ArgumentNode_1.NodeRange], ctx.config.lint.nbtStringQuote, ctx.config.lint.nbtStringQuoteType, 'nbtStringQuote', 'nbtStringQuoteType'));\n        }\n    }\n    validateIndexField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Compound', isPredicate);\n        if (shouldValidate) {\n            var compoundTag = tag;\n            var compoundDocIndex = this.resolveIndexDoc(doc, compoundTag[NbtNode_1.SuperNode], ctx);\n            /* istanbul ignore else */\n            if (compoundDocIndex) {\n                this.validateCompoundDoc(ans, ctx, compoundTag, this.readCompound(compoundDocIndex), isPredicate);\n            }\n        }\n    }\n    validateIntArrayField(ans, ctx, tag, doc, isPredicate, description) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'IntArray', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberArrayField(ans, ctx, tag, doc.IntArray, isPredicate, description);\n        }\n    }\n    validateIntField(ans, ctx, tag, doc, isPredicate, description) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Int', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberField(ans, ctx, tag, doc.Int.range, isPredicate, description);\n        }\n    }\n    validateListField(ans, ctx, tag, doc, isPredicate, description) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'List', isPredicate);\n        if (shouldValidate) {\n            const listTag = tag;\n            const { length_range: lengthRange, value_type: childDoc } = doc.List;\n            if (lengthRange) {\n                this.validateCollectionLength(ans, ctx, listTag, lengthRange, isPredicate, 'nbtListLengthCheck');\n            }\n            for (const item of listTag) {\n                this.validateField(ans, ctx, item, childDoc, isPredicate, description);\n            }\n        }\n    }\n    validateLongArrayField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'LongArray', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberArrayField(ans, ctx, tag, doc.LongArray, isPredicate, '');\n        }\n    }\n    validateLongField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Long', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberField(ans, ctx, tag, doc.Long.range, isPredicate, '');\n        }\n    }\n    validateOrField(ans, ctx, tag, doc, isPredicate, description) {\n        for (const [i, childDoc] of doc.Or.entries()) {\n            const childAns = Parser_1.LegacyValidateResult.create();\n            this.validateField(childAns, ctx, tag, childDoc, isPredicate, description);\n            if (childAns.errors.length === 0 || i === doc.Or.length - 1) {\n                ClientCache_1.combineCache(ans.cache, childAns.cache);\n                ans.completions.push(...childAns.completions);\n                ans.errors.push(...childAns.errors);\n                break;\n            }\n        }\n        if (doc.Or.length === 0) {\n            ans.errors.push(new ParsingError_1.ParsingError(tag[ArgumentNode_1.NodeRange], locales_1.locale('unexpected-nbt'), true, vscode_languageserver_1.DiagnosticSeverity.Warning));\n        }\n    }\n    validateShortField(ans, ctx, tag, doc, isPredicate) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'Short', isPredicate);\n        if (shouldValidate) {\n            this.validateNumberField(ans, ctx, tag, doc.Short.range, isPredicate, '');\n        }\n    }\n    validateStringField(ans, ctx, tag, isPredicate, description) {\n        const shouldValidate = this.validateNbtNodeType(ans, ctx, tag, 'String', isPredicate);\n        if (shouldValidate) {\n            // Errors.\n            /// Special cases: https://github.com/SPGoding/datapack-language-server/issues/332#issuecomment-590167678.\n            const strTag = tag;\n            if (strTag.valueOf().length === 0) {\n                return;\n            }\n            const quoteType = NbtdocHelper.getQuoteType(strTag.toString());\n            if (quoteType) {\n                const subCtx = Object.assign(Object.assign({}, ctx), { textDoc: vscode_languageserver_textdocument_1.TextDocument.create('dhp:///nbtdoc_helper.txt', 'plaintext', 0, strTag.valueOf()), cursor: IndexMapping_1.getInnerIndex(strTag.mapping, ctx.cursor) });\n                const reader = new StringReader_1.StringReader(strTag.valueOf());\n                const result = this.validateInnerString(reader, subCtx, description);\n                if (result && result.completions) {\n                    result.completions = result.completions.map(v => NbtdocHelper.escapeCompletion(v, ctx.config.lint.nbtStringQuote, ctx.config.lint.nbtStringQuoteType, quoteType));\n                }\n                this.combineResult(ans, result, strTag);\n                /// Quotes.\n                ans.errors.push(..._1.validateStringQuote(strTag.toString(), strTag.valueOf(), tag[ArgumentNode_1.NodeRange], ctx.config.lint.nbtStringQuote, ctx.config.lint.nbtStringQuoteType, 'nbtStringQuote', 'nbtStringQuoteType'));\n            }\n        }\n    }\n    /* istanbul ignore next */\n    validateInnerString(reader, ctx, description) {\n        let result = undefined;\n        if (description.match(/command stored/i)) {\n            result = new CommandParser_1.CommandParser(null, 'commands').parse(reader, ctx).data;\n        }\n        else if (description.match(/particle the area effect cloud/i)) {\n            result = new ctx.parsers.Particle().parse(reader, ctx);\n        }\n        else if (description.match(/tags on the entity/i)) {\n            result = new ctx.parsers.Tag().parse(reader, ctx);\n        }\n        else if (description.match(/team to join/i)) {\n            result = new ctx.parsers.Team().parse(reader, ctx);\n        }\n        else if (description.match(/line of text/i) ||\n            description.match(/name of th(?:e|is) (?:banner|brewing stand|command block|container|enchanting table|furance)/i) ||\n            description.match(/JSON text component/i) ||\n            description.match(/lore of an item/i)) {\n            result = new ctx.parsers.TextComponent().parse(reader, ctx);\n        }\n        else if (description.match(/can be placed on/i) || description.match(/can be destroyed/i)) {\n            result = new ctx.parsers.Block(true, true).parse(reader, ctx);\n        }\n        return result;\n    }\n    combineResult(ans, result, tag) {\n        if (result) {\n            if (result.cache) {\n                ClientCache_1.remapCachePosition(result.cache, tag.mapping);\n                ClientCache_1.combineCache(ans.cache, result.cache);\n            }\n            if (result.errors) {\n                const downgradedErrors = ParsingError_1.downgradeParsingError(result.errors);\n                ParsingError_1.remapParsingErrors(downgradedErrors, tag.mapping);\n                ans.errors.push(...downgradedErrors);\n            }\n            if (result.completions) {\n                ans.completions.push(...result.completions.map(v => _1.remapParserSuggestion(v, tag.mapping)));\n            }\n            if (result.tokens) {\n                ans.tokens.push(...Token_1.remapTokens(result.tokens, tag.mapping));\n            }\n        }\n    }\n    /**\n     * @param tag The compound tag which encloses the tag corresponding to `doc`.\n     */\n    /* istanbul ignore next */\n    resolveIndexDoc(indexDoc, tag, ctx) {\n        var _a, _b;\n        const idTag = this.followFieldPath(indexDoc.Index.path, tag);\n        const id = idTag ? IdentityNode_1.IdentityNode.fromString(idTag.valueOf()).toString() : null;\n        if (indexDoc.Index.target.startsWith('custom:')) {\n            return this.resolveCustomIndexDoc(indexDoc, id, ctx);\n        }\n        else {\n            return (_b = (_a = this.resolveRegistryCompound(indexDoc.Index.target, id)) === null || _a === void 0 ? void 0 : _a.Compound) !== null && _b !== void 0 ? _b : null;\n        }\n    }\n    /* istanbul ignore next */\n    resolveCustomIndexDoc(indexDoc, id, ctx) {\n        let compoundDoc = null;\n        if (id) {\n            switch (indexDoc.Index.target) {\n                case 'custom:blockitemstates':\n                    compoundDoc = this.getCustomBlockItemStatesIndexDoc(id, ctx);\n                    break;\n                case 'custom:blockstates':\n                    compoundDoc = this.getCustomBlockStatesIndexDoc(id, ctx);\n                    break;\n                case 'custom:spawnitemtag':\n                case 'custom:spawnitementag':\n                    return this.resolveCustomSpawnItemIndexDoc(id);\n                default:\n                    console.error(`Unknown nbtdoc target registry ${indexDoc.Index.target}`);\n                    break;\n            }\n        }\n        return this.mockCompoundDoc(compoundDoc);\n    }\n    /* istanbul ignore next */\n    getCustomBlockItemStatesIndexDoc(id, ctx) {\n        do {\n            const result = this.getCustomBlockStatesIndexDoc(id, ctx);\n            if (result) {\n                return result;\n            }\n        } while (id.includes('_') && (id = `minecraft:${id.slice(id.indexOf('_') + 1)}`, true));\n        return null;\n    }\n    /* istanbul ignore next */\n    getCustomBlockStatesIndexDoc(id, ctx) {\n        var _a;\n        const ans = { description: '', fields: {}, supers: null };\n        const properties = (_a = ctx.blockDefinition[id]) === null || _a === void 0 ? void 0 : _a.properties;\n        if (!properties) {\n            return null;\n        }\n        for (const key of Object.keys(properties)) {\n            const mockEnumIndex = this.mockEnumIndexNext--;\n            const mockEnum = this.mockEnumArena[mockEnumIndex] = {\n                description: '',\n                et: { String: {} }\n            };\n            const values = properties[key];\n            for (const value of values) {\n                mockEnum.et.String[value] = {\n                    description: '',\n                    value\n                };\n            }\n            ans.fields[key] = {\n                description: '',\n                nbttype: {\n                    Enum: mockEnumIndex\n                }\n            };\n        }\n        return ans;\n    }\n    /* istanbul ignore next */\n    resolveCustomSpawnItemIndexDoc(id) {\n        var _a, _b;\n        const entityId = id.endsWith('_spawn_egg') ? id.slice(0, -10) : id;\n        return (_b = (_a = this.resolveRegistryCompound('minecraft:entity', entityId)) === null || _a === void 0 ? void 0 : _a.Compound) !== null && _b !== void 0 ? _b : null;\n    }\n    /**\n     * @param tag The compound tag which encloses the tag corresponding to `doc`.\n     * @returns An index of a compound doc\n     */\n    resolveCompoundOrIndexDoc(doc, tag, ctx) {\n        if (!doc) {\n            return null;\n        }\n        else if (NbtdocHelper.isCompoundDoc(doc)) {\n            return doc.Compound;\n        }\n        else {\n            return this.resolveIndexDoc(doc, tag, ctx);\n        }\n    }\n    static getCompiledFallback(root, type) {\n        let ans = this.CompiledFallbacks[type];\n        if (!ans) {\n            ans = { description: '', fields: {}, supers: null };\n            const mergedDocs = new Set();\n            const merge = (index) => {\n                if (index !== null && !mergedDocs.has(index)) {\n                    mergedDocs.add(index);\n                    const doc = root.compound_arena[index];\n                    for (const key of Object.keys(doc.fields)) {\n                        const ansField = ans.fields[key];\n                        const field = doc.fields[key];\n                        if (this.isOrDoc(field.nbttype) && field.nbttype.Or.length === 0) {\n                            continue;\n                        }\n                        if (ansField) {\n                            if (this.isOrDoc(ansField.nbttype)) {\n                                ansField.nbttype.Or.push(field.nbttype);\n                            }\n                            else {\n                                ans.fields[key] = {\n                                    description: ansField.description,\n                                    nbttype: { Or: [ansField.nbttype, field.nbttype] }\n                                };\n                            }\n                        }\n                        else {\n                            ans.fields[key] = field;\n                        }\n                    }\n                    merge(doc.supers && !NbtdocHelper.isRegistrySupers(doc.supers) ? doc.supers.Compound : null);\n                }\n            };\n            const registry = root.registries[type][0];\n            for (const key of Object.keys(registry)) {\n                const index = registry[key];\n                merge(index);\n            }\n            this.CompiledFallbacks[type] = ans;\n        }\n        return ans;\n    }\n    static isRegistrySupers(supers) {\n        return supers.Registry !== undefined;\n    }\n    static isBooleanDoc(doc) {\n        return doc === 'Boolean';\n    }\n    static isByteDoc(doc) {\n        return !!doc && doc.Byte !== undefined;\n    }\n    static isShortDoc(doc) {\n        return !!doc && doc.Short !== undefined;\n    }\n    static isIntDoc(doc) {\n        return !!doc && doc.Int !== undefined;\n    }\n    static isLongDoc(doc) {\n        return !!doc && doc.Long !== undefined;\n    }\n    static isFloatDoc(doc) {\n        return !!doc && doc.Float !== undefined;\n    }\n    static isDoubleDoc(doc) {\n        return !!doc && doc.Double !== undefined;\n    }\n    static isStringDoc(doc) {\n        return doc === 'String';\n    }\n    static isByteArrayDoc(doc) {\n        return !!doc && doc.ByteArray !== undefined;\n    }\n    static isIntArrayDoc(doc) {\n        return !!doc && doc.IntArray !== undefined;\n    }\n    static isLongArrayDoc(doc) {\n        return !!doc && doc.LongArray !== undefined;\n    }\n    static isCompoundDoc(doc) {\n        return !!doc && doc.Compound !== undefined;\n    }\n    static isEnumDoc(doc) {\n        return !!doc && doc.Enum !== undefined;\n    }\n    static isListDoc(doc) {\n        return !!doc && doc.List !== undefined;\n    }\n    static isIndexDoc(doc) {\n        return !!doc && doc.Index !== undefined;\n    }\n    static isIdDoc(doc) {\n        return !!doc && doc.Id !== undefined;\n    }\n    static isOrDoc(doc) {\n        return !!doc && doc.Or !== undefined;\n    }\n    static isCompoundOrIndexDoc(doc) {\n        return this.isCompoundDoc(doc) || this.isIndexDoc(doc);\n    }\n    static getKeyDescription(value, description) {\n        return `${NbtdocHelper.localeType(NbtdocHelper.getValueType(value))}\\n* * * * * *\\n${NbtdocHelper.handleDescription(description)}`;\n    }\n    static forEachOrDoc(ans, reader, doc, cb) {\n        for (const [i, childDoc] of doc.Or.entries()) {\n            const childAns = clone_1.default(ans);\n            const clonedReader = reader.clone();\n            cb(childAns, clonedReader, childDoc);\n            ans.completions = _1.removeDupliateCompletions(childAns.completions);\n            if (childAns.errors.length === ans.errors.length || i === doc.Or.length - 1) {\n                ans.cache = childAns.cache;\n                ans.data = childAns.data;\n                ans.errors = childAns.errors;\n                ans.tokens = childAns.tokens;\n                reader.cursor = clonedReader.cursor;\n                return;\n            }\n        }\n    }\n}\nexports.NbtdocHelper = NbtdocHelper;\nNbtdocHelper.CompiledFallbacks = {};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathPatterns = exports.GeneralPathPattern = void 0;\nexports.GeneralPathPattern = 'data/**/*.{json,mcfunction,nbt}';\nexports.PathPatterns = {\n    advancement: 'data/*/advancements/**/*.json',\n    dimension: 'data/*/dimension/**/*.json',\n    dimension_type: 'data/*/dimension_type/**/*.json',\n    function: 'data/*/functions/**/*.mcfunction',\n    item_modifier: 'data/*/item_modifiers/**/*.json',\n    loot_table: 'data/*/loot_tables/**/*.json',\n    predicate: 'data/*/predicates/**/*.json',\n    recipe: 'data/*/recipes/**/*.json',\n    structure: 'data/*/structures/**/*.nbt',\n    'tag/block': 'data/*/tags/blocks/**/*.json',\n    'tag/entity_type': 'data/*/tags/entity_types/**/*.json',\n    'tag/fluid': 'data/*/tags/fluids/**/*.json',\n    'tag/function': 'data/*/tags/functions/**/*.json',\n    'tag/game_event': 'data/*/tags/game_events/**/*.json',\n    'tag/item': 'data/*/tags/items/**/*.json',\n    'worldgen/biome': 'data/*/worldgen/biome/**/*.json',\n    'worldgen/configured_carver': 'data/*/worldgen/configured_carver/**/*.json',\n    'worldgen/configured_decorator': 'data/*/worldgen/configured_decorator/**/*.json',\n    'worldgen/configured_feature': 'data/*/worldgen/configured_feature/**/*.json',\n    'worldgen/configured_structure_feature': 'data/*/worldgen/configured_structure_feature/**/*.json',\n    'worldgen/configured_surface_builder': 'data/*/worldgen/configured_surface_builder/**/*.json',\n    'worldgen/noise_settings': 'data/*/worldgen/noise_settings/**/*.json',\n    'worldgen/processor_list': 'data/*/worldgen/processor_list/**/*.json',\n    'worldgen/template_pool': 'data/*/worldgen/template_pool/**/*.json'\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringReader = void 0;\nconst locales_1 = require(\"../locales\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nclass StringReader {\n    constructor(string, cursor = 0, end = string.length) {\n        this.string = string;\n        this.cursor = cursor;\n        this.end = end;\n    }\n    get passedString() {\n        return this.string.slice(0, this.cursor);\n    }\n    get remainingString() {\n        return this.string.slice(this.cursor, this.end);\n    }\n    clone() {\n        const ans = new StringReader(this.string, this.cursor, this.end);\n        return ans;\n    }\n    canRead(length = 1) {\n        return this.cursor + length <= this.end;\n    }\n    /**\n     * Peeks a character at the current cursor.\n     * @param offset The index to offset from cursor. @default 0\n     */\n    peek(offset = 0) {\n        return this.string.charAt(this.cursor + offset);\n    }\n    /**\n     * Skips the current character.\n     * @param step The step to skip. @default 1\n     */\n    skip(step = 1) {\n        this.cursor += step;\n        return this;\n    }\n    skipLine() {\n        this.readUntilOrEnd('\\r', '\\n');\n        return this;\n    }\n    read() {\n        return this.string.charAt(this.cursor++);\n    }\n    readSpace() {\n        const start = this.cursor;\n        while (this.canRead() && StringReader.isSpace(this.peek())) {\n            this.skip();\n        }\n        return this.string.slice(start, this.cursor);\n    }\n    skipSpace() {\n        while (this.canRead() && StringReader.isSpace(this.peek())) {\n            this.skip();\n        }\n        return this;\n    }\n    skipWhiteSpace() {\n        while (this.canRead() && StringReader.isWhiteSpace(this.peek())) {\n            this.skip();\n        }\n        return this;\n    }\n    /**\n     * @throws {ParsingError} When the value is NaN or have non-number char at the beginning.\n     */\n    readNumber() {\n        const start = this.cursor;\n        let str = '';\n        while (this.canRead() && StringReader.canInNumber(this.peek())) {\n            if (this.peek() === '.' && this.peek(1) === '.') {\n                break;\n            }\n            str += this.read();\n        }\n        if (str) {\n            const num = Number(str);\n            if (isNaN(num)) {\n                const end = this.cursor;\n                throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('number'), locales_1.locale('punc.quote', str)), false);\n            }\n            return str;\n        }\n        else {\n            const end = this.cursor + 1;\n            const value = this.peek();\n            if (value) {\n                throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('number'), locales_1.locale('punc.quote', this.peek())), false);\n            }\n            else {\n                throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('number'), locales_1.locale('nothing')), false);\n            }\n        }\n    }\n    /**\n     * @throws {ParsingError} When the value is float or exceeds the range.\n     */\n    readInt() {\n        const start = this.cursor;\n        const str = this.readNumber();\n        const num = parseInt(str);\n        if (str.includes('.')) {\n            // num is float.\n            const end = this.cursor;\n            throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('integer'), str));\n        }\n        if (num < -2147483648 || num > 2147483647) {\n            const end = this.cursor;\n            throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('integer.between', -2147483648, 2147483647), str));\n        }\n        return num;\n    }\n    /**\n     * @deprecated\n     * @throws When the value is float.\n     */\n    readLong() {\n        const start = this.cursor;\n        const str = this.readNumber();\n        if (str.includes('.')) {\n            // num is float\n            const end = this.cursor;\n            throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('long'), str));\n        }\n        return BigInt(str);\n    }\n    readFloat() {\n        const str = this.readNumber();\n        return parseFloat(str);\n    }\n    /**\n     * @deprecated\n     */\n    readDouble() {\n        const str = this.readNumber();\n        return parseFloat(str);\n    }\n    /**\n     * @param out Stores a mapping from in-string indices to real indices.\n     */\n    readUnquotedString(out = { mapping: {} }) {\n        let ans = '';\n        out.mapping.start = this.cursor;\n        while (this.canRead() && StringReader.canInUnquotedString(this.peek())) {\n            ans += this.read();\n        }\n        return ans;\n    }\n    /**\n     * @throws {ParsingError} If it's not an legal quoted string.\n     * @param out Stores a mapping from in-string indices to real indices.\n     * @param isReadingJson Whether to read the whole JSON string, including quotes and escaping characters.\n     */\n    readQuotedString(out = { mapping: {} }, looseEscapeCheck = false) {\n        let ans = '';\n        if (!this.canRead()) {\n            out.mapping.start = this.cursor;\n            return '';\n        }\n        const quote = this.peek();\n        if (StringReader.isQuote(quote)) {\n            this.skip();\n            ans += this.readUntilQuote(quote, out, looseEscapeCheck);\n        }\n        else {\n            const start = this.cursor;\n            const end = this.cursor + 1;\n            throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('quote'), locales_1.locale('punc.quote', quote)), false);\n        }\n        return ans;\n    }\n    /**\n     * @throws {ParsingError}\n     * @param terminator Endding quote. Will not be included in the result.\n     * @param out Stores a mapping from in-string indices to real indices.\n     */\n    readUntilQuote(terminator, out, looseEscapeCheck) {\n        const start = this.cursor;\n        const escapeChar = '\\\\';\n        let ans = '';\n        let escaped = false;\n        out.mapping.start = start;\n        while (this.canRead()) {\n            const c = this.read();\n            if (escaped) {\n                if (looseEscapeCheck || c === escapeChar || c === terminator) {\n                    out.mapping.skipAt = out.mapping.skipAt || [];\n                    out.mapping.skipAt.push(ans.length);\n                    ans += c;\n                    escaped = false;\n                }\n                else {\n                    const errStart = this.cursor - 1;\n                    this.cursor = start;\n                    throw new ParsingError_1.ParsingError({ start: errStart, end: errStart + 1 }, locales_1.locale('unexpected-escape', locales_1.locale('punc.quote', c)));\n                }\n            }\n            else {\n                if (c === escapeChar) {\n                    escaped = true;\n                }\n                else if (c === terminator) {\n                    return ans;\n                }\n                else {\n                    ans += c;\n                }\n            }\n        }\n        const errStart = this.cursor;\n        this.cursor = start;\n        throw new ParsingError_1.ParsingError({ start: errStart, end: errStart + 1 }, locales_1.locale('expected-got', locales_1.locale('ending-quote', locales_1.locale('punc.quote', terminator)), locales_1.locale('nothing')));\n    }\n    /**\n     * @param terminator Endding character. Will not be included in the result.\n     */\n    readUntilOrEnd(...terminators) {\n        let ans = '';\n        while (this.canRead()) {\n            const c = this.peek();\n            if (terminators.includes(c)) {\n                return ans;\n            }\n            else {\n                ans += c;\n            }\n            this.skip();\n        }\n        return ans;\n    }\n    readLine() {\n        return this.readUntilOrEnd('\\r', '\\n');\n    }\n    /**\n     * @throws {ParsingError} If it's not an legal quoted string.\n     * @param out Stores a mapping from in-string indices to real indices.\n     * @param isReadingJson Whether to read the whole JSON string, including quotes and escaping characters.\n     */\n    readString(out = { mapping: {} }, looseEscapeCheck = false) {\n        if (!this.canRead()) {\n            out.mapping.start = this.cursor;\n            return '';\n        }\n        const c = this.peek();\n        if (StringReader.isQuote(c)) {\n            return this.readQuotedString(out, looseEscapeCheck);\n        }\n        else {\n            return this.readUnquotedString(out);\n        }\n    }\n    /**\n     * @deprecated\n     * @throws {ParsingError}\n     */\n    readBoolean() {\n        const start = this.cursor;\n        const string = this.readString();\n        if (string === 'true') {\n            return true;\n        }\n        else if (string === 'false') {\n            return false;\n        }\n        else {\n            const end = this.cursor;\n            const toleratable = 'true'.startsWith(string.toLowerCase()) || 'false'.startsWith(string.toLowerCase());\n            throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('boolean'), locales_1.locale('punc.quote', string)), toleratable);\n        }\n    }\n    /**\n     * @throws {ParsingError} (tolerable) When the next char can't match the expected one.\n     */\n    expect(c) {\n        const start = this.cursor;\n        const end = this.cursor + 1;\n        if (!this.canRead()) {\n            throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('punc.quote', c), locales_1.locale('nothing')));\n        }\n        else if (this.peek() !== c) {\n            throw new ParsingError_1.ParsingError({ start, end }, locales_1.locale('expected-got', locales_1.locale('punc.quote', c), locales_1.locale('punc.quote', this.peek())));\n        }\n        return this;\n    }\n    readRemaining() {\n        const ans = this.remainingString;\n        this.cursor = this.end;\n        return ans;\n    }\n    lastLine(textDoc) {\n        const pos = textDoc.positionAt(this.cursor);\n        this.cursor = textDoc.offsetAt({ line: pos.line - 1, character: 0 });\n        return this;\n    }\n    nextLine(textDoc) {\n        const pos = textDoc.positionAt(this.cursor);\n        this.cursor = textDoc.offsetAt({ line: pos.line + 1, character: 0 });\n        return this;\n    }\n    static canInNumber(c) {\n        // '+' is illegal in number because Mojang wrote so...\n        // https://github.com/Mojang/brigadier/blob/master/src/main/java/com/mojang/brigadier/StringReader.java#L88\n        // But it IS legal in NBT numbers, because Mojang used `readUnquotedString` to parse primitive tags in NBT parser.\n        return (c === '0' || c === '1' || c === '2' || c === '3' ||\n            c === '4' || c === '5' || c === '6' || c === '7' ||\n            c === '8' || c === '9' || c === '-' || c === '.');\n    }\n    static isSpace(c) {\n        return c === ' ' || c === '\\t';\n    }\n    static isWhiteSpace(c) {\n        return c === ' ' || c === '\\t' || c === '\\r' || c === '\\n' || c === '\\r\\n';\n    }\n    static isLineSeparator(c) {\n        return c === '\\r\\n' || c === '\\r' || c === '\\n';\n    }\n    /**\n     * Whether the string can be used in unquoted string or not.\n     * @param string A string.\n     */\n    static canInUnquotedString(string) {\n        return /^[0-9a-zA-Z\\_\\-\\.\\+]+$/.test(string);\n    }\n    static isQuote(c) {\n        return c === '\"' || c === \"'\";\n    }\n}\nexports.StringReader = StringReader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attributeNameToIdentity = void 0;\nfunction attributeNameToIdentity(name) {\n    return name.replace(/[A-Z]/g, match => `_${match.toLowerCase()}`);\n}\nexports.attributeNameToIdentity = attributeNameToIdentity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nbtIntArrayFromBuffer = exports.bufferFromNbtCompound = exports.bufferFromNbtLongs = exports.bufferFromNbtString = exports.bufferFromLongs = exports.bufferFromString = void 0;\nconst NbtCompoundNode_1 = require(\"../../nodes/NbtCompoundNode\");\nconst NbtIntArrayNode_1 = require(\"../../nodes/NbtIntArrayNode\");\nconst NbtIntNode_1 = require(\"../../nodes/NbtIntNode\");\nconst NbtNumberNode_1 = require(\"../../nodes/NbtNumberNode\");\nconst NbtStringNode_1 = require(\"../../nodes/NbtStringNode\");\nconst group = [8, 4, 4, 4, 12];\nfunction bufferFromString(string) {\n    return Buffer.from(string\n        .split('-')\n        .reduce((p, c, i) => `${p}${c.padStart(group[i], '0')}`, ''), 'hex');\n}\nexports.bufferFromString = bufferFromString;\nfunction bufferFromLongs(most, least) {\n    const buffer = Buffer.alloc(16);\n    buffer.writeBigInt64BE(most, 0);\n    buffer.writeBigInt64BE(least, 8);\n    return buffer;\n}\nexports.bufferFromLongs = bufferFromLongs;\n/**\n * For `{ [key]: \"00000001-0001-0001-0001-000000000001\" }`.\n */\nfunction bufferFromNbtString(node, key) {\n    const stringNode = node[key];\n    if (stringNode instanceof NbtStringNode_1.NbtStringNode) {\n        return bufferFromString(stringNode.valueOf());\n    }\n    else {\n        throw new Error(`Expected a string node for “${key}”`);\n    }\n}\nexports.bufferFromNbtString = bufferFromNbtString;\nfunction bufferFromNbtLongs(node, mostKey, leastKey) {\n    if (!leastKey) {\n        leastKey = `${mostKey}Least`;\n        mostKey = `${mostKey}Most`;\n    }\n    const mostNode = node[mostKey];\n    const leastNode = node[leastKey];\n    if (mostNode instanceof NbtNumberNode_1.NbtNumberNode && leastNode instanceof NbtNumberNode_1.NbtNumberNode) {\n        return bufferFromLongs(BigInt(mostNode.valueOf()), BigInt(leastNode.valueOf()));\n    }\n    else {\n        throw new Error(`Expected two number nodes for “${mostKey}” and “${leastKey}”`);\n    }\n}\nexports.bufferFromNbtLongs = bufferFromNbtLongs;\n/**\n * For `{ [key]: { M: 1L, Least: 1L } }`.\n */\nfunction bufferFromNbtCompound(node, key) {\n    const childNode = node[key];\n    if (childNode instanceof NbtCompoundNode_1.NbtCompoundNode) {\n        return bufferFromNbtLongs(childNode, 'M', 'L');\n    }\n    else {\n        throw new Error(`Expected a compound node for “${key}”`);\n    }\n}\nexports.bufferFromNbtCompound = bufferFromNbtCompound;\nfunction nbtIntArrayFromBuffer(buffer) {\n    const getNbtIntNode = (offset) => {\n        const value = buffer.readInt32BE(offset);\n        return new NbtIntNode_1.NbtIntNode(null, value, value.toString());\n    };\n    const ans = new NbtIntArrayNode_1.NbtIntArrayNode(null);\n    ans.push(getNbtIntNode(0), getNbtIntNode(4), getNbtIntNode(8), getNbtIntNode(12));\n    return ans;\n}\nexports.nbtIntArrayFromBuffer = nbtIntArrayFromBuffer;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.round = exports.readFile = exports.pathAccessible = exports.getNbtdocRegistryId = exports.removeDupliateCompletions = exports.handleCompletionText = exports.remapParserSuggestion = exports.getCodeAction = exports.getEol = exports.requestText = exports.escapeIdentityPattern = exports.escapeRegex = exports.toFormattedString = exports.arrayToCompletions = exports.validateStringQuote = exports.quoteString = exports.escapeString = exports.arrayToMessage = void 0;\nconst fast_deep_equal_1 = __importDefault(require(\"fast-deep-equal\"));\nconst fs = __importStar(require(\"fs\"));\nconst fs_1 = require(\"fs\");\nconst https_1 = __importDefault(require(\"https\"));\nconst os_1 = require(\"os\");\nconst rfdc_1 = __importDefault(require(\"rfdc\"));\nconst vscode_languageserver_1 = require(\"vscode-languageserver\");\nconst locales_1 = require(\"../locales\");\nconst Formattable_1 = require(\"../types/Formattable\");\nconst IndexMapping_1 = require(\"../types/IndexMapping\");\nconst ParsingError_1 = require(\"../types/ParsingError\");\nconst StylisticConfig_1 = require(\"../types/StylisticConfig\");\nconst StringReader_1 = require(\"./StringReader\");\n/**\n * Convert an array to human-readable message.\n * @param arr An array.\n * @param quoted Whether or not to quote the result. Defaults to `true`\n * @param conjunction The conjunction to use. Defaults to `and`.\n * @returns Human-readable message.\n * @example // Using English\n * arrayToMessage([]) // \"nothing\"\n * arrayToMessage('foo') // \"“foo”\"\n * arrayToMessage(['foo']) // \"“foo”\"\n * arrayToMessage(['bar', 'foo']) // \"“bar” and “foo”\"\n * arrayToMessage(['bar', 'baz', 'foo']) // \"“bar”, “baz”, and “foo”\"\n * @example // Using Locale\n * arrayToMessage([], false) // \"nothing\"\n * arrayToMessage(['A'], false) // \"A\"\n * arrayToMessage(['A', 'B'], false) // \"A{conjunction.and_2}B\"\n * arrayToMessage(['A', 'B', 'C'], false) // \"A{conjunction.and_3+_1}B{conjunction.and_3+_2}C\"\n */\nfunction arrayToMessage(arr, quoted = true, conjunction = 'and') {\n    if (typeof arr === 'string') {\n        arr = [arr];\n    }\n    const getPart = (str) => quoted ? locales_1.locale('punc.quote', str) : str;\n    switch (arr.length) {\n        case 0:\n            return locales_1.locale('nothing');\n        case 1:\n            return getPart(arr[0]);\n        case 2:\n            return getPart(arr[0]) + locales_1.locale(`conjunction.${conjunction}_2`) + getPart(arr[1]);\n        default:\n            arr = arr.map(v => getPart(v));\n            return `${arr.slice(0, -1).join(locales_1.locale(`conjunction.${conjunction}_3+_1`))}${locales_1.locale(`conjunction.${conjunction}_3+_2`)}${arr[arr.length - 1]}`;\n    }\n}\nexports.arrayToMessage = arrayToMessage;\n/**\n * Escape characters in a string with `\\`.\n * @param str A string.\n * @param quote A string indicating which type of quote should be escaped.\n */\nfunction escapeString(str, quote = '\"') {\n    let ans = '';\n    for (const char of str) {\n        if (char === '\\\\' || char === quote) {\n            ans += `\\\\${char}`;\n        }\n        else {\n            ans += char;\n        }\n    }\n    return ans;\n}\nexports.escapeString = escapeString;\n/**\n * Quote a string.\n * @param inner The inner string.\n * @param quoteType Which quote to use.\n * @param forced Whether to quote regardless.\n */\nfunction quoteString(inner, quoteType, forced) {\n    const shouldQuote = forced ||\n        !StringReader_1.StringReader.canInUnquotedString(inner) ||\n        Array.from(inner).every(StringReader_1.StringReader.canInNumber) ||\n        inner.toLowerCase() === 'false' ||\n        inner.toLowerCase() === 'true';\n    if (shouldQuote) {\n        let quote;\n        switch (quoteType) {\n            case 'always double':\n                quote = '\"';\n                break;\n            case 'always single':\n                quote = \"'\";\n                break;\n            case 'prefer single':\n                const containSingleQuote = inner.includes(\"'\");\n                if (containSingleQuote) {\n                    quote = '\"';\n                }\n                else {\n                    quote = \"'\";\n                }\n                break;\n            case 'prefer double':\n            default:\n                const containDoubleQuote = inner.includes('\"');\n                if (containDoubleQuote) {\n                    quote = \"'\";\n                }\n                else {\n                    quote = '\"';\n                }\n                break;\n        }\n        return `${quote}${escapeString(inner, quote)}${quote}`;\n    }\n    else {\n        return inner;\n    }\n}\nexports.quoteString = quoteString;\nfunction validateStringQuote(raw, value, range, quoteConfig, quoteTypeConfig, quoteConfigRule, quoteTypeConfigRule) {\n    const ans = [];\n    if (!quoteConfig && !quoteTypeConfig) {\n        return ans;\n    }\n    const firstChar = raw.charAt(0);\n    const isQuoted = StringReader_1.StringReader.isQuote(firstChar);\n    const expectedChar = quoteString(value, quoteTypeConfig ? quoteTypeConfig[1] : 'prefer double', true).charAt(0);\n    const specificQuoteCode = expectedChar === '\"' ? 24 /* StringDoubleQuote */ : 23 /* StringSingleQuote */;\n    if (quoteConfig) {\n        const [severity, shouldQuoted] = quoteConfig;\n        if (shouldQuoted !== isQuoted) {\n            const message = locales_1.locale('expected-got', shouldQuoted ? locales_1.locale('quote') : locales_1.locale('unquoted-string'), locales_1.locale('punc.quote', firstChar));\n            ans.push(new ParsingError_1.ParsingError(range, quoteConfigRule ? locales_1.locale('diagnostic-rule', message, locales_1.locale('punc.quote', quoteConfigRule)) : message, true, StylisticConfig_1.getDiagnosticSeverity(severity), shouldQuoted ? specificQuoteCode : 25 /* StringUnquote */));\n        }\n    }\n    if (isQuoted && quoteTypeConfig) {\n        const severity = quoteTypeConfig[0];\n        if (firstChar !== expectedChar) {\n            const message = expectedChar === '\"' ? locales_1.locale('quote_prefer_double') : locales_1.locale('quote_prefer_single');\n            ans.push(new ParsingError_1.ParsingError(range, quoteConfigRule ? locales_1.locale('diagnostic-rule', message, locales_1.locale('punc.quote', quoteTypeConfigRule)) : message, true, StylisticConfig_1.getDiagnosticSeverity(severity), specificQuoteCode));\n        }\n    }\n    return ans;\n}\nexports.validateStringQuote = validateStringQuote;\n/**\n * Convert an array of any to an array of `ParserSuggestion`.\n * @param array An array\n */\nfunction arrayToCompletions(array, start, end, cb = (c) => c) {\n    return array.map(v => cb({ label: v.toString(), start, end }));\n}\nexports.arrayToCompletions = arrayToCompletions;\n/**\n * Convert specific value to a linted string.\n * @param value Any value.\n */\nfunction toFormattedString(value, lint) {\n    if (Formattable_1.isFormattable(value)) {\n        return value[Formattable_1.GetFormattedString](lint);\n    }\n    else if (value === undefined || value === null) {\n        return '';\n    }\n    else {\n        return String(value);\n    }\n}\nexports.toFormattedString = toFormattedString;\nfunction escapeRegex(value) {\n    return value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\nexports.escapeRegex = escapeRegex;\nfunction escapeIdentityPattern(value) {\n    return value.replace(/[-\\/\\\\^$+.()|[\\]{}]/g, '\\\\$&');\n}\nexports.escapeIdentityPattern = escapeIdentityPattern;\n/* istanbul ignore next */\nfunction requestText(uri) {\n    return new Promise((resolve, reject) => {\n        https_1.default\n            .get(uri, res => {\n            let data = '';\n            res.on('data', chunk => {\n                data += chunk;\n            });\n            res.on('end', () => {\n                resolve(data);\n            });\n        })\n            .on('error', e => {\n            reject(e);\n        })\n            .end();\n    });\n}\nexports.requestText = requestText;\n/**\n * Get EOL from specific lint config.\n * @param param0 The lint config.\n */\nfunction getEol({ eol }) {\n    switch (eol) {\n        case 'CRLF':\n            return '\\r\\n';\n        case 'LF':\n            return '\\n';\n        case 'auto':\n        default:\n            return os_1.EOL;\n    }\n}\nexports.getEol = getEol;\n/**\n * @param titleLocaleKey The locale key of the code action title (without the `code-action.` part).\n */\n/* istanbul ignore next */\nfunction getCodeAction(titleLocaleKey, diagnostics, content, range, newText, kind = vscode_languageserver_1.CodeActionKind.QuickFix, isPreferred = true) {\n    return {\n        title: locales_1.locale(`code-action.${titleLocaleKey}`),\n        kind, diagnostics, isPreferred,\n        edit: {\n            documentChanges: [{\n                    textDocument: { uri: content.uri, version: content.version },\n                    edits: [{\n                            range: {\n                                start: content.positionAt(range.start),\n                                end: content.positionAt(range.end)\n                            },\n                            newText\n                        }]\n                }]\n        }\n    };\n}\nexports.getCodeAction = getCodeAction;\nfunction remapParserSuggestion(completion, param1) {\n    const ans = rfdc_1.default()(completion);\n    if (param1 instanceof Function) {\n        if (ans.textEdit) {\n            const range = ans.textEdit.range;\n            ans.start = range.start.character;\n            ans.end = range.end.character;\n            range.start = param1(ans.start);\n            range.end = param1(ans.end);\n        }\n    }\n    else {\n        if (ans.textEdit) {\n            const range = ans.textEdit.range;\n            range.start.character = IndexMapping_1.getOuterIndex(param1, range.start.character);\n            range.end.character = IndexMapping_1.getOuterIndex(param1, range.end.character);\n        }\n        ans.start = IndexMapping_1.getOuterIndex(param1, ans.start);\n        ans.end = IndexMapping_1.getOuterIndex(param1, ans.end);\n    }\n    return ans;\n}\nexports.remapParserSuggestion = remapParserSuggestion;\n/**\n * @param origin Won't be changed.\n * @returns A new CompletionItem.\n */\nfunction handleCompletionText(origin, cb) {\n    let label = origin.label;\n    let insertText;\n    let textEdit;\n    if (origin.textEdit) {\n        textEdit = {\n            range: origin.textEdit.range,\n            newText: cb(origin.textEdit.newText)\n        };\n    }\n    if (origin.insertText) {\n        insertText = cb(origin.insertText);\n    }\n    if (!origin.textEdit && !origin.insertText) {\n        label = cb(origin.label);\n    }\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, origin), { label }), insertText && { insertText }), textEdit && { textEdit });\n}\nexports.handleCompletionText = handleCompletionText;\nfunction removeDupliateCompletions(completions) {\n    return completions.filter((completion, i) => completions.findIndex(v => fast_deep_equal_1.default(completion, v)) === i);\n}\nexports.removeDupliateCompletions = removeDupliateCompletions;\nfunction getNbtdocRegistryId(entity) {\n    var _a;\n    if (entity.variable === 'a' || entity.variable === 'p' || entity.variable === 'r') {\n        return 'minecraft:player';\n    }\n    const firstID = (_a = entity.argument.type) === null || _a === void 0 ? void 0 : _a[0];\n    if (firstID && !firstID.isTag) {\n        return firstID.toString();\n    }\n    return null;\n}\nexports.getNbtdocRegistryId = getNbtdocRegistryId;\nfunction pathAccessible(path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return fs_1.promises.access(path)\n            .then(() => true)\n            .catch(() => false);\n    });\n}\nexports.pathAccessible = pathAccessible;\nfunction readFile(path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            let data = '';\n            fs\n                .createReadStream(path, { encoding: 'utf-8', highWaterMark: 128 * 1024 })\n                .on('data', chunk => {\n                data += chunk;\n            })\n                .on('end', () => {\n                resolve(data);\n            })\n                .on('error', e => {\n                reject(e);\n            });\n        });\n    });\n}\nexports.readFile = readFile;\nfunction round(number, decimalPlace) {\n    const scale = Math.pow(10, decimalPlace);\n    return Math.round(number * scale) / scale;\n}\nexports.round = round;\n","var map = {\n\t\"./core/lib/index.js\": \"../mcschema/core/lib/index.js\",\n\t\"./core/node_modules/diff/lib/index.js\": \"../mcschema/core/node_modules/diff/lib/index.js\",\n\t\"./core/node_modules/json5/lib/index.js\": \"../mcschema/core/node_modules/json5/lib/index.js\",\n\t\"./core/node_modules/tsconfig-paths/lib/index.js\": \"../mcschema/core/node_modules/tsconfig-paths/lib/index.js\",\n\t\"./java-1.16/lib/index.js\": \"../mcschema/java/1.16/lib/index.js\",\n\t\"./java-1.16/node_modules/@mcschema/core/lib/index.js\": \"../mcschema/core/lib/index.js\",\n\t\"./java-1.16/node_modules/@mcschema/core/node_modules/diff/lib/index.js\": \"../mcschema/core/node_modules/diff/lib/index.js\",\n\t\"./java-1.16/node_modules/@mcschema/core/node_modules/json5/lib/index.js\": \"../mcschema/core/node_modules/json5/lib/index.js\",\n\t\"./java-1.16/node_modules/@mcschema/core/node_modules/tsconfig-paths/lib/index.js\": \"../mcschema/core/node_modules/tsconfig-paths/lib/index.js\",\n\t\"./java-1.17/lib/index.js\": \"../mcschema/java/1.17/lib/index.js\",\n\t\"./java-1.17/node_modules/@mcschema/core/lib/index.js\": \"../mcschema/core/lib/index.js\",\n\t\"./java-1.17/node_modules/@mcschema/core/node_modules/diff/lib/index.js\": \"../mcschema/core/node_modules/diff/lib/index.js\",\n\t\"./java-1.17/node_modules/@mcschema/core/node_modules/json5/lib/index.js\": \"../mcschema/core/node_modules/json5/lib/index.js\",\n\t\"./java-1.17/node_modules/@mcschema/core/node_modules/tsconfig-paths/lib/index.js\": \"../mcschema/core/node_modules/tsconfig-paths/lib/index.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../datapack-language-server/node_modules/@mcschema sync recursive ^\\\\.\\\\/.*\\\\/lib\\\\/index\\\\.js$\";","var map = {\n\t\"./de.json\": \"../mcschema/locales/src/de.json\",\n\t\"./en.json\": \"../mcschema/locales/src/en.json\",\n\t\"./fr.json\": \"../mcschema/locales/src/fr.json\",\n\t\"./it.json\": \"../mcschema/locales/src/it.json\",\n\t\"./ja.json\": \"../mcschema/locales/src/ja.json\",\n\t\"./pl.json\": \"../mcschema/locales/src/pl.json\",\n\t\"./pt.json\": \"../mcschema/locales/src/pt.json\",\n\t\"./ru.json\": \"../mcschema/locales/src/ru.json\",\n\t\"./zh-cn.json\": \"../mcschema/locales/src/zh-cn.json\",\n\t\"./zh-tw.json\": \"../mcschema/locales/src/zh-tw.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../datapack-language-server/node_modules/@mcschema/locales/src sync recursive ^\\\\.\\\\/.*\\\\.json$\";","\"use strict\";\n\nconst {platform, homedir} = require(\"os\");\nconst {join} = require(\"path\");\n\nfunction getForWindows() {\n  return join(homedir(), \"AppData\", \"Roaming\");\n}\n\nfunction getForMac() {\n  return join(homedir(), \"Library\", \"Application Support\");\n}\n\nfunction getForLinux() {\n  return join(homedir(), \".config\");\n}\n\nfunction getFallback() {\n  if (platform().startsWith(\"win\")) {\n    // Who knows, maybe its win64?\n    return getForWindows();\n  }\n  return getForLinux();\n}\n\nfunction getAppDataPath(app) {\n  let appDataPath = process.env[\"APPDATA\"];\n\n  if (appDataPath === undefined) {\n    switch (platform()) {\n      case \"win32\":\n        appDataPath = getForWindows();\n        break;\n      case \"darwin\":\n        appDataPath = getForMac();\n        break;\n      case \"linux\":\n        appDataPath = getForLinux();\n        break;\n      default:\n        appDataPath = getFallback();\n    }\n  }\n\n  if (app === undefined) {\n    return appDataPath;\n  }\n\n  const normalizedAppName = appDataPath !== homedir() ? app : \".\" + app;\n  return join(appDataPath, normalizedAppName);\n}\n\nmodule.exports = Object.assign(\n  getAppDataPath,\n  {\n    getAppDataPath: getAppDataPath,\n    default: getAppDataPath,\n  },\n);\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format';\nimport { parseTree, findNodeAtLocation } from './parser';\nexport function removeProperty(text, path, options) {\n    return setProperty(text, path, void 0, options);\n}\nexport function setProperty(text, originalPath, value, options) {\n    var _a;\n    var path = originalPath.slice();\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, options);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, options);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, options);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = options.getInsertionIndex ? options.getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, options);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else if (value === void 0 && parent.children.length >= 0) {\n            // Removal\n            var removalIndex = lastSegment;\n            var toRemove = parent.children[removalIndex];\n            var edit = void 0;\n            if (parent.children.length === 1) {\n                // only item\n                edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n            }\n            else if (parent.children.length - 1 === removalIndex) {\n                // last item\n                var previous = parent.children[removalIndex - 1];\n                var offset = previous.offset + previous.length;\n                var parentEndOffset = parent.offset + parent.length;\n                edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n            }\n            else {\n                edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else if (value !== void 0) {\n            var edit = void 0;\n            var newProperty = \"\" + JSON.stringify(value);\n            if (!options.isArrayInsertion && parent.children.length > lastSegment) {\n                var toModify = parent.children[lastSegment];\n                edit = { offset: toModify.offset, length: toModify.length, content: newProperty };\n            }\n            else if (parent.children.length === 0 || lastSegment === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n            }\n            else {\n                var index = lastSegment > parent.children.length ? parent.children.length : lastSegment;\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else {\n            throw new Error(\"Can not \" + (value === void 0 ? 'remove' : (options.isArrayInsertion ? 'insert' : 'modify')) + \" Array index \" + insertIndex + \" as length is not sufficient\");\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n}\nfunction withFormatting(text, edit, options) {\n    if (!options.formattingOptions) {\n        return [edit];\n    }\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, options.formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = undefined;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var len = text.length;\n    var pos = 0, value = '', tokenOffset = 0, token = 16 /* Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                var ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenStartLine: function () { return lineStartOffset; },\n        getTokenStartCharacter: function () { return tokenOffset - prevTokenLineStartOffset; },\n        getTokenError: function () { return scanError; },\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['fred', 30], ['barney', 40]]);\n * // => { 'fred': 30, 'barney': 40 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs ? pairs.length : 0,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nmodule.exports = fromPairs;\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash.frompairs');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass ArrayIndicesProxy {\n  constructor(targetArray, handler) {\n    const newHandler = (0, _lodash2.default)(Object.entries(handler).map(([name, trap]) => {\n      const propertyAccessTraps = ['defineProperty', 'deleteProperty', 'get', 'getOwnPropertyDescriptor', 'has', 'set'];\n      if (propertyAccessTraps.includes(name)) {\n        return [name, (target, property, ...other) => {\n          if (typeof property !== 'symbol') {\n            const parsed = parseInt(property, 10);\n            if (String(parsed) === property && parsed >= 0 && parsed <= Number.MAX_VALUE) {\n              return trap(target, parsed, ...other);\n            }\n          }\n          return Reflect[name](target, property, ...other);\n        }];\n      }\n      return [name, trap];\n    }));\n    return new Proxy(targetArray, newHandler);\n  }\n}\nexports.default = ArrayIndicesProxy;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PythonRange = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = range;\n\nvar _arrayIndicesProxy = require('./array-indices-proxy');\n\nvar _arrayIndicesProxy2 = _interopRequireDefault(_arrayIndicesProxy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst mandatory = parameter => {\n  throw new Error(`The ${parameter} parameter is mandatory`);\n};\n\nclass PythonRange {\n  constructor(...args) {\n    if (args.length < 1) {\n      throw new Error(`Expected at least 1 argument, got ${args.length}`);\n    }\n    if (args.length > 3) {\n      throw new Error(`Expected at most 3 arguments, got ${args.length}`);\n    }\n    if (!args.every(Number.isInteger)) {\n      throw new Error('All arguments must be integers');\n    }\n\n    const step = args[2] !== undefined ? args[2] : 1;\n    if (step === 0) {\n      throw new Error('The step argument must not be zero');\n    }\n    let [start, stop] = args;\n    [start, stop] = stop === undefined ? [0, start] : [start, stop];\n    const baseDescriptor = {\n      configurable: false,\n      enumerable: false,\n      writable: true\n    };\n    Reflect.defineProperty(this, 'start', _extends({}, baseDescriptor, { value: start }));\n    Reflect.defineProperty(this, 'stop', _extends({}, baseDescriptor, { value: stop }));\n    Reflect.defineProperty(this, 'step', _extends({}, baseDescriptor, { value: step }));\n\n    Reflect.defineProperty(this, 'length', {\n      configurable: false,\n      enumerable: false,\n      get() {\n        const length = Math.ceil((this.stop - this.start) / this.step);\n        return Math.max(0, length);\n      }\n    });\n\n    if (typeof Proxy !== 'undefined') {\n      const indicesProxy = new _arrayIndicesProxy2.default(this, {\n        get(target, index) {\n          return target.get(index);\n        },\n        has(target, index) {\n          return index < target.length;\n        },\n        getOwnPropertyDescriptor(target, index) {\n          const descriptor = {\n            value: indicesProxy[index],\n            configurable: false,\n            enumerable: true,\n            writable: false\n          };\n          // It is neccessary to define this property on target, because proxy cannot\n          // report a non-existing property as non-configurable.\n          // See http://stackoverflow.com/q/40921884/3853934\n          Reflect.defineProperty(target, String(index), descriptor);\n          return descriptor;\n        },\n        defineProperty() {\n          return false;\n        },\n        set() {\n          return false;\n        },\n        deleteProperty() {\n          return false;\n        },\n        // In order to be able to create numeric properties on-demand,\n        // the object has to be extensible.\n        preventExtensions() {\n          return false;\n        }\n      });\n\n      return indicesProxy;\n    }\n    return this;\n  }\n  get(index, ...rest) {\n    if (rest.length !== 0) {\n      throw new Error(`Expected one argument; got ${rest.length + 1}`);\n    }\n    if (!Number.isInteger(index)) {\n      throw new Error('The index argument must be an integer');\n    }\n    if (index < this.length) {\n      return this.start + this.step * index;\n    }\n    return undefined;\n  }\n  forEach(callback = mandatory('callback'), thisArg, ...rest) {\n    if (rest.length !== 0) {\n      throw new Error(`Expected at most two arguments; got ${rest.length + 2}`);\n    }\n    for (let i = 0; i < this.length; i += 1) {\n      callback.call(thisArg, this.get(i), i, this);\n    }\n  }\n  includes(value = mandatory('value'), ...rest) {\n    if (rest.length !== 0) {\n      throw new Error(`Expected one argument; got ${rest.length + 1}`);\n    }\n    if (!Number.isInteger(value)) {\n      throw new Error('The value argument must be an integer');\n    }\n    return (this.step > 0 ? value >= this.start && value < this.stop : value > this.stop && value <= this.start) && (value - this.start) % this.step === 0;\n  }\n  min(...rest) {\n    if (rest.length !== 0) {\n      throw new Error(`Expected zero arguments; got ${rest.length}`);\n    }\n    if (this.length !== 0) {\n      return this.get(this.step > 0 ? 0 : this.length - 1);\n    }\n    return Infinity;\n  }\n  max(...rest) {\n    if (rest.length !== 0) {\n      throw new Error(`Expected zero arguments; got ${rest.length}`);\n    }\n    if (this.length !== 0) {\n      return this.get(this.step > 0 ? this.length - 1 : 0);\n    }\n    return -Infinity;\n  }\n  reverse(...rest) {\n    if (rest.length !== 0) {\n      throw new Error(`Expected zero arguments; got ${rest.length}`);\n    }\n    [this.start, this.stop, this.step] = [this.get(this.length - 1), this.start - Math.sign(this.step), -this.step];\n    return this;\n  }\n  toString() {\n    return `range(${this.start}, ${this.stop}, ${this.step})`;\n  }\n  valueOf() {\n    return this.toString();\n  }\n  inspect() {\n    return this.toString();\n  }\n  *[Symbol.iterator]() {\n    for (let i = 0; i < this.length; i += 1) {\n      yield this.get(i);\n    }\n  }\n  static areEqual(a = mandatory('a'), b = mandatory('b'), ...rest) {\n    if (rest.length !== 0) {\n      throw new Error(`Expected two arguments; got ${rest.length + 2}`);\n    }\n    if (![a, b].every(x => x instanceof PythonRange)) {\n      throw new Error('Both arguments must be instances of PythonRange');\n    }\n    // Based on https://github.com/python/cpython/blob/cff677abe1823900e954592035a170eb67840971/Objects/rangeobject.c#L425\n    if (a === b) return true;\n    if (a.length !== b.length) return false;\n    if (a.length === 0) return true;\n    if (a.start !== b.start) return false;\n    if (a.length === 1) return true;\n    return a.step === b.step;\n  }\n}\n\nexports.PythonRange = PythonRange;\nReflect.defineProperty(PythonRange.prototype, Symbol.toStringTag, {\n  configurable: false,\n  writable: false,\n  enumerable: false,\n  value: 'PythonRange'\n});\n\nfunction range(...args) {\n  return new PythonRange(...args);\n}","'use strict'\nmodule.exports = rfdc\n\nfunction rfdc (opts) {\n  opts = opts || {}\n\n  if (opts.circles) return rfdcCircles(opts)\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else {\n        a2[k] = fn(cur)\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    var o2 = {}\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else {\n        o2[k] = clone(cur)\n      }\n    }\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    var o2 = {}\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else {\n        o2[k] = cloneProto(cur)\n      }\n    }\n    return o2\n  }\n}\n\nfunction rfdcCircles (opts) {\n  var refs = []\n  var refsNew = []\n\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else {\n        var index = refs.indexOf(cur)\n        if (index !== -1) {\n          a2[k] = refsNew[index]\n        } else {\n          a2[k] = fn(cur)\n        }\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = clone(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = cloneProto(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n}\n","/* jshint node: true */\r\n\"use strict\";\r\nfunction makeArrayFrom(obj) {\r\n  return Array.prototype.slice.apply(obj);\r\n}\r\nvar\r\n  PENDING = \"pending\",\r\n  RESOLVED = \"resolved\",\r\n  REJECTED = \"rejected\";\r\n\r\nfunction SynchronousPromise(handler) {\r\n  this.status = PENDING;\r\n  this._continuations = [];\r\n  this._parent = null;\r\n  this._paused = false;\r\n  if (handler) {\r\n    handler.call(\r\n      this,\r\n      this._continueWith.bind(this),\r\n      this._failWith.bind(this)\r\n    );\r\n  }\r\n}\r\n\r\nfunction looksLikeAPromise(obj) {\r\n  return obj && typeof (obj.then) === \"function\";\r\n}\r\n\r\nfunction passThrough(value) {\r\n  return value;\r\n}\r\n\r\nSynchronousPromise.prototype = {\r\n  then: function (nextFn, catchFn) {\r\n    var next = SynchronousPromise.unresolved()._setParent(this);\r\n    if (this._isRejected()) {\r\n      if (this._paused) {\r\n        this._continuations.push({\r\n          promise: next,\r\n          nextFn: nextFn,\r\n          catchFn: catchFn\r\n        });\r\n        return next;\r\n      }\r\n      if (catchFn) {\r\n        try {\r\n          var catchResult = catchFn(this._error);\r\n          if (looksLikeAPromise(catchResult)) {\r\n            this._chainPromiseData(catchResult, next);\r\n            return next;\r\n          } else {\r\n            return SynchronousPromise.resolve(catchResult)._setParent(this);\r\n          }\r\n        } catch (e) {\r\n          return SynchronousPromise.reject(e)._setParent(this);\r\n        }\r\n      }\r\n      return SynchronousPromise.reject(this._error)._setParent(this);\r\n    }\r\n    this._continuations.push({\r\n      promise: next,\r\n      nextFn: nextFn,\r\n      catchFn: catchFn\r\n    });\r\n    this._runResolutions();\r\n    return next;\r\n  },\r\n  catch: function (handler) {\r\n    if (this._isResolved()) {\r\n      return SynchronousPromise.resolve(this._data)._setParent(this);\r\n    }\r\n    var next = SynchronousPromise.unresolved()._setParent(this);\r\n    this._continuations.push({\r\n      promise: next,\r\n      catchFn: handler\r\n    });\r\n    this._runRejections();\r\n    return next;\r\n  },\r\n  finally: function(callback) {\r\n    var ran = false;\r\n    function runFinally(result, err) {\r\n      if (!ran) {\r\n        ran = true;\r\n        if (!callback) {\r\n          callback = passThrough;\r\n        }\r\n        var callbackResult = callback(result);\r\n        if (looksLikeAPromise(callbackResult)) {\r\n          return callbackResult.then(function() {\r\n            if (err) {\r\n              throw err;\r\n            }\r\n            return result;\r\n          });\r\n        } else {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return this\r\n      .then(function(result) {\r\n        return runFinally(result);\r\n      })\r\n      .catch(function(err) {\r\n        return runFinally(null, err);\r\n      });\r\n  },\r\n  pause: function () {\r\n    this._paused = true;\r\n    return this;\r\n  },\r\n  resume: function () {\r\n    var firstPaused = this._findFirstPaused();\r\n    if (firstPaused) {\r\n      firstPaused._paused = false;\r\n      firstPaused._runResolutions();\r\n      firstPaused._runRejections();\r\n    }\r\n    return this;\r\n  },\r\n  _findAncestry: function () {\r\n    return this._continuations.reduce(function (acc, cur) {\r\n      if (cur.promise) {\r\n        var node = {\r\n          promise: cur.promise,\r\n          children: cur.promise._findAncestry()\r\n        };\r\n        acc.push(node);\r\n      }\r\n      return acc;\r\n    }, []);\r\n  },\r\n  _setParent: function (parent) {\r\n    if (this._parent) {\r\n      throw new Error(\"parent already set\");\r\n    }\r\n    this._parent = parent;\r\n    return this;\r\n  },\r\n  _continueWith: function (data) {\r\n    var firstPending = this._findFirstPending();\r\n    if (firstPending) {\r\n      firstPending._data = data;\r\n      firstPending._setResolved();\r\n    }\r\n  },\r\n  _findFirstPending: function () {\r\n    return this._findFirstAncestor(function (test) {\r\n      return test._isPending && test._isPending();\r\n    });\r\n  },\r\n  _findFirstPaused: function () {\r\n    return this._findFirstAncestor(function (test) {\r\n      return test._paused;\r\n    });\r\n  },\r\n  _findFirstAncestor: function (matching) {\r\n    var test = this;\r\n    var result;\r\n    while (test) {\r\n      if (matching(test)) {\r\n        result = test;\r\n      }\r\n      test = test._parent;\r\n    }\r\n    return result;\r\n  },\r\n  _failWith: function (error) {\r\n    var firstRejected = this._findFirstPending();\r\n    if (firstRejected) {\r\n      firstRejected._error = error;\r\n      firstRejected._setRejected();\r\n    }\r\n  },\r\n  _takeContinuations: function () {\r\n    return this._continuations.splice(0, this._continuations.length);\r\n  },\r\n  _runRejections: function () {\r\n    if (this._paused || !this._isRejected()) {\r\n      return;\r\n    }\r\n    var\r\n      error = this._error,\r\n      continuations = this._takeContinuations(),\r\n      self = this;\r\n    continuations.forEach(function (cont) {\r\n      if (cont.catchFn) {\r\n        try {\r\n          var catchResult = cont.catchFn(error);\r\n          self._handleUserFunctionResult(catchResult, cont.promise);\r\n        } catch (e) {\r\n          cont.promise.reject(e);\r\n        }\r\n      } else {\r\n        cont.promise.reject(error);\r\n      }\r\n    });\r\n  },\r\n  _runResolutions: function () {\r\n    if (this._paused || !this._isResolved() || this._isPending()) {\r\n      return;\r\n    }\r\n    var continuations = this._takeContinuations();\r\n    if (looksLikeAPromise(this._data)) {\r\n      return this._handleWhenResolvedDataIsPromise(this._data);\r\n    }\r\n    var data = this._data;\r\n    var self = this;\r\n    continuations.forEach(function (cont) {\r\n      if (cont.nextFn) {\r\n        try {\r\n          var result = cont.nextFn(data);\r\n          self._handleUserFunctionResult(result, cont.promise);\r\n        } catch (e) {\r\n          self._handleResolutionError(e, cont);\r\n        }\r\n      } else if (cont.promise) {\r\n        cont.promise.resolve(data);\r\n      }\r\n    });\r\n  },\r\n  _handleResolutionError: function (e, continuation) {\r\n    this._setRejected();\r\n    if (continuation.catchFn) {\r\n      try {\r\n        continuation.catchFn(e);\r\n        return;\r\n      } catch (e2) {\r\n        e = e2;\r\n      }\r\n    }\r\n    if (continuation.promise) {\r\n      continuation.promise.reject(e);\r\n    }\r\n  },\r\n  _handleWhenResolvedDataIsPromise: function (data) {\r\n    var self = this;\r\n    return data.then(function (result) {\r\n      self._data = result;\r\n      self._runResolutions();\r\n    }).catch(function (error) {\r\n      self._error = error;\r\n      self._setRejected();\r\n      self._runRejections();\r\n    });\r\n  },\r\n  _handleUserFunctionResult: function (data, nextSynchronousPromise) {\r\n    if (looksLikeAPromise(data)) {\r\n      this._chainPromiseData(data, nextSynchronousPromise);\r\n    } else {\r\n      nextSynchronousPromise.resolve(data);\r\n    }\r\n  },\r\n  _chainPromiseData: function (promiseData, nextSynchronousPromise) {\r\n    promiseData.then(function (newData) {\r\n      nextSynchronousPromise.resolve(newData);\r\n    }).catch(function (newError) {\r\n      nextSynchronousPromise.reject(newError);\r\n    });\r\n  },\r\n  _setResolved: function () {\r\n    this.status = RESOLVED;\r\n    if (!this._paused) {\r\n      this._runResolutions();\r\n    }\r\n  },\r\n  _setRejected: function () {\r\n    this.status = REJECTED;\r\n    if (!this._paused) {\r\n      this._runRejections();\r\n    }\r\n  },\r\n  _isPending: function () {\r\n    return this.status === PENDING;\r\n  },\r\n  _isResolved: function () {\r\n    return this.status === RESOLVED;\r\n  },\r\n  _isRejected: function () {\r\n    return this.status === REJECTED;\r\n  }\r\n};\r\n\r\nSynchronousPromise.resolve = function (result) {\r\n  return new SynchronousPromise(function (resolve, reject) {\r\n    if (looksLikeAPromise(result)) {\r\n      result.then(function (newResult) {\r\n        resolve(newResult);\r\n      }).catch(function (error) {\r\n        reject(error);\r\n      });\r\n    } else {\r\n      resolve(result);\r\n    }\r\n  });\r\n};\r\n\r\nSynchronousPromise.reject = function (result) {\r\n  return new SynchronousPromise(function (resolve, reject) {\r\n    reject(result);\r\n  });\r\n};\r\n\r\nSynchronousPromise.unresolved = function () {\r\n  return new SynchronousPromise(function (resolve, reject) {\r\n    this.resolve = resolve;\r\n    this.reject = reject;\r\n  });\r\n};\r\n\r\nSynchronousPromise.all = function () {\r\n  var args = makeArrayFrom(arguments);\r\n  if (Array.isArray(args[0])) {\r\n    args = args[0];\r\n  }\r\n  if (!args.length) {\r\n    return SynchronousPromise.resolve([]);\r\n  }\r\n  return new SynchronousPromise(function (resolve, reject) {\r\n    var\r\n      allData = [],\r\n      numResolved = 0,\r\n      doResolve = function () {\r\n        if (numResolved === args.length) {\r\n          resolve(allData);\r\n        }\r\n      },\r\n      rejected = false,\r\n      doReject = function (err) {\r\n        if (rejected) {\r\n          return;\r\n        }\r\n        rejected = true;\r\n        reject(err);\r\n      };\r\n    args.forEach(function (arg, idx) {\r\n      SynchronousPromise.resolve(arg).then(function (thisResult) {\r\n        allData[idx] = thisResult;\r\n        numResolved += 1;\r\n        doResolve();\r\n      }).catch(function (err) {\r\n        doReject(err);\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n/* jshint ignore:start */\r\nif (Promise === SynchronousPromise) {\r\n  throw new Error(\"Please use SynchronousPromise.installGlobally() to install globally\");\r\n}\r\nvar RealPromise = Promise;\r\nSynchronousPromise.installGlobally = function(__awaiter) {\r\n  if (Promise === SynchronousPromise) {\r\n    return __awaiter;\r\n  }\r\n  var result = patchAwaiterIfRequired(__awaiter);\r\n  Promise = SynchronousPromise;\r\n  return result;\r\n};\r\n\r\nSynchronousPromise.uninstallGlobally = function() {\r\n  if (Promise === SynchronousPromise) {\r\n    Promise = RealPromise;\r\n  }\r\n};\r\n\r\nfunction patchAwaiterIfRequired(__awaiter) {\r\n  if (typeof(__awaiter) === \"undefined\" || __awaiter.__patched) {\r\n    return __awaiter;\r\n  }\r\n  var originalAwaiter = __awaiter;\r\n  __awaiter = function() {\r\n    var Promise = RealPromise;\r\n    originalAwaiter.apply(this, makeArrayFrom(arguments));\r\n  };\r\n  __awaiter.__patched = true;\r\n  return __awaiter;\r\n}\r\n/* jshint ignore:end */\r\n\r\nmodule.exports = {\r\n  SynchronousPromise: SynchronousPromise\r\n};\r\n","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import crypto from 'crypto';\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  return crypto.randomFillSync(rnds8);\n}","import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { JSONCompletion } from './services/jsonCompletion';\nimport { JSONHover } from './services/jsonHover';\nimport { JSONValidation } from './services/jsonValidation';\nimport { JSONDocumentSymbols } from './services/jsonDocumentSymbols';\nimport { parse as parseJSON, newJSONDocument } from './parser/jsonParser';\nimport { schemaContributions } from './services/configuration';\nimport { JSONSchemaService } from './services/jsonSchemaService';\nimport { getFoldingRanges } from './services/jsonFolding';\nimport { getSelectionRanges } from './services/jsonSelectionRanges';\nimport { format as formatJSON } from 'jsonc-parser';\nimport { Range, TextEdit } from './jsonLanguageTypes';\nimport { findDefinition } from './services/jsonDefinition';\nexport * from './jsonLanguageTypes';\nexport function getLanguageService(params) {\n    var promise = params.promiseConstructor || Promise;\n    var jsonSchemaService = new JSONSchemaService(params.schemaRequestService, params.workspaceContext, promise);\n    jsonSchemaService.setSchemaContributions(schemaContributions);\n    var jsonCompletion = new JSONCompletion(jsonSchemaService, params.contributions, promise, params.clientCapabilities);\n    var jsonHover = new JSONHover(jsonSchemaService, params.contributions, promise);\n    var jsonDocumentSymbols = new JSONDocumentSymbols(jsonSchemaService);\n    var jsonValidation = new JSONValidation(jsonSchemaService, promise);\n    return {\n        configure: function (settings) {\n            jsonSchemaService.clearExternalSchemas();\n            if (settings.schemas) {\n                settings.schemas.forEach(function (settings) {\n                    jsonSchemaService.registerExternalSchema(settings.uri, settings.fileMatch, settings.schema);\n                });\n            }\n            jsonValidation.configure(settings);\n        },\n        resetSchema: function (uri) { return jsonSchemaService.onResourceChange(uri); },\n        doValidation: jsonValidation.doValidation.bind(jsonValidation),\n        parseJSONDocument: function (document) { return parseJSON(document, { collectComments: true }); },\n        newJSONDocument: function (root, diagnostics) { return newJSONDocument(root, diagnostics); },\n        doResolve: jsonCompletion.doResolve.bind(jsonCompletion),\n        doComplete: jsonCompletion.doComplete.bind(jsonCompletion),\n        findDocumentSymbols: jsonDocumentSymbols.findDocumentSymbols.bind(jsonDocumentSymbols),\n        findDocumentSymbols2: jsonDocumentSymbols.findDocumentSymbols2.bind(jsonDocumentSymbols),\n        findColorSymbols: function (d, s) { return jsonDocumentSymbols.findDocumentColors(d, s).then(function (s) { return s.map(function (s) { return s.range; }); }); },\n        findDocumentColors: jsonDocumentSymbols.findDocumentColors.bind(jsonDocumentSymbols),\n        getColorPresentations: jsonDocumentSymbols.getColorPresentations.bind(jsonDocumentSymbols),\n        doHover: jsonHover.doHover.bind(jsonHover),\n        getFoldingRanges: getFoldingRanges,\n        getSelectionRanges: getSelectionRanges,\n        findDefinition: findDefinition,\n        format: function (d, r, o) {\n            var range = undefined;\n            if (r) {\n                var offset = d.offsetAt(r.start);\n                var length = d.offsetAt(r.end) - offset;\n                range = { offset: offset, length: length };\n            }\n            var options = { tabSize: o ? o.tabSize : 4, insertSpaces: o ? o.insertSpaces : true, eol: '\\n' };\n            return formatJSON(d.getText(), range, options).map(function (e) {\n                return TextEdit.replace(Range.create(d.positionAt(e.offset), d.positionAt(e.offset + e.length)), e.content);\n            });\n        }\n    };\n}\n","import { MarkupKind } from 'vscode-languageserver-types';\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nexport * from 'vscode-languageserver-types';\n/**\n * Error codes used by diagnostics\n */\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[ErrorCode[\"Undefined\"] = 0] = \"Undefined\";\n    ErrorCode[ErrorCode[\"EnumValueMismatch\"] = 1] = \"EnumValueMismatch\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfComment\"] = 257] = \"UnexpectedEndOfComment\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfString\"] = 258] = \"UnexpectedEndOfString\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfNumber\"] = 259] = \"UnexpectedEndOfNumber\";\n    ErrorCode[ErrorCode[\"InvalidUnicode\"] = 260] = \"InvalidUnicode\";\n    ErrorCode[ErrorCode[\"InvalidEscapeCharacter\"] = 261] = \"InvalidEscapeCharacter\";\n    ErrorCode[ErrorCode[\"InvalidCharacter\"] = 262] = \"InvalidCharacter\";\n    ErrorCode[ErrorCode[\"PropertyExpected\"] = 513] = \"PropertyExpected\";\n    ErrorCode[ErrorCode[\"CommaExpected\"] = 514] = \"CommaExpected\";\n    ErrorCode[ErrorCode[\"ColonExpected\"] = 515] = \"ColonExpected\";\n    ErrorCode[ErrorCode[\"ValueExpected\"] = 516] = \"ValueExpected\";\n    ErrorCode[ErrorCode[\"CommaOrCloseBacketExpected\"] = 517] = \"CommaOrCloseBacketExpected\";\n    ErrorCode[ErrorCode[\"CommaOrCloseBraceExpected\"] = 518] = \"CommaOrCloseBraceExpected\";\n    ErrorCode[ErrorCode[\"TrailingComma\"] = 519] = \"TrailingComma\";\n    ErrorCode[ErrorCode[\"DuplicateKey\"] = 520] = \"DuplicateKey\";\n    ErrorCode[ErrorCode[\"CommentNotPermitted\"] = 521] = \"CommentNotPermitted\";\n    ErrorCode[ErrorCode[\"SchemaResolveError\"] = 768] = \"SchemaResolveError\";\n})(ErrorCode || (ErrorCode = {}));\nexport var ClientCapabilities;\n(function (ClientCapabilities) {\n    ClientCapabilities.LATEST = {\n        textDocument: {\n            completion: {\n                completionItem: {\n                    documentationFormat: [MarkupKind.Markdown, MarkupKind.PlainText],\n                    commitCharactersSupport: true\n                }\n            }\n        }\n    };\n})(ClientCapabilities || (ClientCapabilities = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as Json from 'jsonc-parser';\nimport { isNumber, equals, isBoolean, isString, isDefined } from '../utils/objects';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes';\nimport * as nls from 'vscode-nls';\nvar localize = nls.loadMessageBundle();\nvar formats = {\n    'color-hex': { errorMessage: localize('colorHexFormatWarning', 'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.'), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/ },\n    'date-time': { errorMessage: localize('dateTimeFormatWarning', 'String is not a RFC3339 date-time.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'date': { errorMessage: localize('dateFormatWarning', 'String is not a RFC3339 date.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i },\n    'time': { errorMessage: localize('timeFormatWarning', 'String is not a RFC3339 time.'), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'email': { errorMessage: localize('emailFormatWarning', 'String is not an e-mail address.'), pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ }\n};\nvar ASTNodeImpl = /** @class */ (function () {\n    function ASTNodeImpl(parent, offset, length) {\n        if (length === void 0) { length = 0; }\n        this.offset = offset;\n        this.length = length;\n        this.parent = parent;\n    }\n    Object.defineProperty(ASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ASTNodeImpl.prototype.toString = function () {\n        return 'type: ' + this.type + ' (' + this.offset + '/' + this.length + ')' + (this.parent ? ' parent: {' + this.parent.toString() + '}' : '');\n    };\n    return ASTNodeImpl;\n}());\nexport { ASTNodeImpl };\nvar NullASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NullASTNodeImpl, _super);\n    function NullASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'null';\n        _this.value = null;\n        return _this;\n    }\n    return NullASTNodeImpl;\n}(ASTNodeImpl));\nexport { NullASTNodeImpl };\nvar BooleanASTNodeImpl = /** @class */ (function (_super) {\n    __extends(BooleanASTNodeImpl, _super);\n    function BooleanASTNodeImpl(parent, boolValue, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'boolean';\n        _this.value = boolValue;\n        return _this;\n    }\n    return BooleanASTNodeImpl;\n}(ASTNodeImpl));\nexport { BooleanASTNodeImpl };\nvar ArrayASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ArrayASTNodeImpl, _super);\n    function ArrayASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'array';\n        _this.items = [];\n        return _this;\n    }\n    Object.defineProperty(ArrayASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArrayASTNodeImpl;\n}(ASTNodeImpl));\nexport { ArrayASTNodeImpl };\nvar NumberASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NumberASTNodeImpl, _super);\n    function NumberASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'number';\n        _this.isInteger = true;\n        _this.value = Number.NaN;\n        return _this;\n    }\n    return NumberASTNodeImpl;\n}(ASTNodeImpl));\nexport { NumberASTNodeImpl };\nvar StringASTNodeImpl = /** @class */ (function (_super) {\n    __extends(StringASTNodeImpl, _super);\n    function StringASTNodeImpl(parent, offset, length) {\n        var _this = _super.call(this, parent, offset, length) || this;\n        _this.type = 'string';\n        _this.value = '';\n        return _this;\n    }\n    return StringASTNodeImpl;\n}(ASTNodeImpl));\nexport { StringASTNodeImpl };\nvar PropertyASTNodeImpl = /** @class */ (function (_super) {\n    __extends(PropertyASTNodeImpl, _super);\n    function PropertyASTNodeImpl(parent, offset, keyNode) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'property';\n        _this.colonOffset = -1;\n        _this.keyNode = keyNode;\n        return _this;\n    }\n    Object.defineProperty(PropertyASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PropertyASTNodeImpl;\n}(ASTNodeImpl));\nexport { PropertyASTNodeImpl };\nvar ObjectASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ObjectASTNodeImpl, _super);\n    function ObjectASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'object';\n        _this.properties = [];\n        return _this;\n    }\n    Object.defineProperty(ObjectASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ObjectASTNodeImpl;\n}(ASTNodeImpl));\nexport { ObjectASTNodeImpl };\nexport function asSchema(schema) {\n    if (isBoolean(schema)) {\n        return schema ? {} : { \"not\": {} };\n    }\n    return schema;\n}\nexport var EnumMatch;\n(function (EnumMatch) {\n    EnumMatch[EnumMatch[\"Key\"] = 0] = \"Key\";\n    EnumMatch[EnumMatch[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar SchemaCollector = /** @class */ (function () {\n    function SchemaCollector(focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        this.focusOffset = focusOffset;\n        this.exclude = exclude;\n        this.schemas = [];\n    }\n    SchemaCollector.prototype.add = function (schema) {\n        this.schemas.push(schema);\n    };\n    SchemaCollector.prototype.merge = function (other) {\n        Array.prototype.push.apply(this.schemas, other.schemas);\n    };\n    SchemaCollector.prototype.include = function (node) {\n        return (this.focusOffset === -1 || contains(node, this.focusOffset)) && (node !== this.exclude);\n    };\n    SchemaCollector.prototype.newSub = function () {\n        return new SchemaCollector(-1, this.exclude);\n    };\n    return SchemaCollector;\n}());\nvar NoOpSchemaCollector = /** @class */ (function () {\n    function NoOpSchemaCollector() {\n    }\n    Object.defineProperty(NoOpSchemaCollector.prototype, \"schemas\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    NoOpSchemaCollector.prototype.add = function (schema) { };\n    NoOpSchemaCollector.prototype.merge = function (other) { };\n    NoOpSchemaCollector.prototype.include = function (node) { return true; };\n    NoOpSchemaCollector.prototype.newSub = function () { return this; };\n    NoOpSchemaCollector.instance = new NoOpSchemaCollector();\n    return NoOpSchemaCollector;\n}());\nvar ValidationResult = /** @class */ (function () {\n    function ValidationResult() {\n        this.problems = [];\n        this.propertiesMatches = 0;\n        this.propertiesValueMatches = 0;\n        this.primaryValueMatches = 0;\n        this.enumValueMatch = false;\n        this.enumValues = undefined;\n    }\n    ValidationResult.prototype.hasProblems = function () {\n        return !!this.problems.length;\n    };\n    ValidationResult.prototype.mergeAll = function (validationResults) {\n        for (var _i = 0, validationResults_1 = validationResults; _i < validationResults_1.length; _i++) {\n            var validationResult = validationResults_1[_i];\n            this.merge(validationResult);\n        }\n    };\n    ValidationResult.prototype.merge = function (validationResult) {\n        this.problems = this.problems.concat(validationResult.problems);\n    };\n    ValidationResult.prototype.mergeEnumValues = function (validationResult) {\n        if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n            this.enumValues = this.enumValues.concat(validationResult.enumValues);\n            for (var _i = 0, _a = this.problems; _i < _a.length; _i++) {\n                var error = _a[_i];\n                if (error.code === ErrorCode.EnumValueMismatch) {\n                    error.message = localize('enumWarning', 'Value is not accepted. Valid values: {0}.', this.enumValues.map(function (v) { return JSON.stringify(v); }).join(', '));\n                }\n            }\n        }\n    };\n    ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n        this.merge(propertyValidationResult);\n        this.propertiesMatches++;\n        if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n            this.propertiesValueMatches++;\n        }\n        if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n            this.primaryValueMatches++;\n        }\n    };\n    ValidationResult.prototype.compare = function (other) {\n        var hasProblems = this.hasProblems();\n        if (hasProblems !== other.hasProblems()) {\n            return hasProblems ? -1 : 1;\n        }\n        if (this.enumValueMatch !== other.enumValueMatch) {\n            return other.enumValueMatch ? -1 : 1;\n        }\n        if (this.primaryValueMatches !== other.primaryValueMatches) {\n            return this.primaryValueMatches - other.primaryValueMatches;\n        }\n        if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n            return this.propertiesValueMatches - other.propertiesValueMatches;\n        }\n        return this.propertiesMatches - other.propertiesMatches;\n    };\n    return ValidationResult;\n}());\nexport { ValidationResult };\nexport function newJSONDocument(root, diagnostics) {\n    if (diagnostics === void 0) { diagnostics = []; }\n    return new JSONDocument(root, diagnostics, []);\n}\nexport function getNodeValue(node) {\n    return Json.getNodeValue(node);\n}\nexport function getNodePath(node) {\n    return Json.getNodePath(node);\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return offset >= node.offset && offset < (node.offset + node.length) || includeRightBound && offset === (node.offset + node.length);\n}\nvar JSONDocument = /** @class */ (function () {\n    function JSONDocument(root, syntaxErrors, comments) {\n        if (syntaxErrors === void 0) { syntaxErrors = []; }\n        if (comments === void 0) { comments = []; }\n        this.root = root;\n        this.syntaxErrors = syntaxErrors;\n        this.comments = comments;\n    }\n    JSONDocument.prototype.getNodeFromOffset = function (offset, includeRightBound) {\n        if (includeRightBound === void 0) { includeRightBound = false; }\n        if (this.root) {\n            return Json.findNodeAtOffset(this.root, offset, includeRightBound);\n        }\n        return undefined;\n    };\n    JSONDocument.prototype.visit = function (visitor) {\n        if (this.root) {\n            var doVisit_1 = function (node) {\n                var ctn = visitor(node);\n                var children = node.children;\n                if (Array.isArray(children)) {\n                    for (var i = 0; i < children.length && ctn; i++) {\n                        ctn = doVisit_1(children[i]);\n                    }\n                }\n                return ctn;\n            };\n            doVisit_1(this.root);\n        }\n    };\n    JSONDocument.prototype.validate = function (textDocument, schema) {\n        if (this.root && schema) {\n            var validationResult = new ValidationResult();\n            validate(this.root, schema, validationResult, NoOpSchemaCollector.instance);\n            return validationResult.problems.map(function (p) {\n                var range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n                return Diagnostic.create(range, p.message, p.severity, p.code);\n            });\n        }\n        return undefined;\n    };\n    JSONDocument.prototype.getMatchingSchemas = function (schema, focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        var matchingSchemas = new SchemaCollector(focusOffset, exclude);\n        if (this.root && schema) {\n            validate(this.root, schema, new ValidationResult(), matchingSchemas);\n        }\n        return matchingSchemas.schemas;\n    };\n    return JSONDocument;\n}());\nexport { JSONDocument };\nfunction validate(n, schema, validationResult, matchingSchemas) {\n    if (!n || !matchingSchemas.include(n)) {\n        return;\n    }\n    var node = n;\n    switch (node.type) {\n        case 'object':\n            _validateObjectNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'array':\n            _validateArrayNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'string':\n            _validateStringNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'number':\n            _validateNumberNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'property':\n            return validate(node.valueNode, schema, validationResult, matchingSchemas);\n    }\n    _validateNode();\n    matchingSchemas.add({ node: node, schema: schema });\n    function _validateNode() {\n        function matchesType(type) {\n            return node.type === type || (type === 'integer' && node.type === 'number' && node.isInteger);\n        }\n        if (Array.isArray(schema.type)) {\n            if (!schema.type.some(matchesType)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}.', schema.type.join(', '))\n                });\n            }\n        }\n        else if (schema.type) {\n            if (!matchesType(schema.type)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\".', schema.type)\n                });\n            }\n        }\n        if (Array.isArray(schema.allOf)) {\n            for (var _i = 0, _a = schema.allOf; _i < _a.length; _i++) {\n                var subSchemaRef = _a[_i];\n                validate(node, asSchema(subSchemaRef), validationResult, matchingSchemas);\n            }\n        }\n        var notSchema = asSchema(schema.not);\n        if (notSchema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, notSchema, subValidationResult, subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n                });\n            }\n            for (var _b = 0, _c = subMatchingSchemas.schemas; _b < _c.length; _b++) {\n                var ms = _c[_b];\n                ms.inverted = !ms.inverted;\n                matchingSchemas.add(ms);\n            }\n        }\n        var testAlternatives = function (alternatives, maxOneMatch) {\n            var matches = [];\n            // remember the best match that is used for error messages\n            var bestMatch = undefined;\n            for (var _i = 0, alternatives_1 = alternatives; _i < alternatives_1.length; _i++) {\n                var subSchemaRef = alternatives_1[_i];\n                var subSchema = asSchema(subSchemaRef);\n                var subValidationResult = new ValidationResult();\n                var subMatchingSchemas = matchingSchemas.newSub();\n                validate(node, subSchema, subValidationResult, subMatchingSchemas);\n                if (!subValidationResult.hasProblems()) {\n                    matches.push(subSchema);\n                }\n                if (!bestMatch) {\n                    bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                }\n                else {\n                    if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n                        // no errors, both are equally good matches\n                        bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                        bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n                        bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n                    }\n                    else {\n                        var compareResult = subValidationResult.compare(bestMatch.validationResult);\n                        if (compareResult > 0) {\n                            // our node is the best matching so far\n                            bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                        }\n                        else if (compareResult === 0) {\n                            // there's already a best matching but we are as good\n                            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                            bestMatch.validationResult.mergeEnumValues(subValidationResult);\n                        }\n                    }\n                }\n            }\n            if (matches.length > 1 && maxOneMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: 1 },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n                });\n            }\n            if (bestMatch) {\n                validationResult.merge(bestMatch.validationResult);\n                validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n                validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n                matchingSchemas.merge(bestMatch.matchingSchemas);\n            }\n            return matches.length;\n        };\n        if (Array.isArray(schema.anyOf)) {\n            testAlternatives(schema.anyOf, false);\n        }\n        if (Array.isArray(schema.oneOf)) {\n            testAlternatives(schema.oneOf, true);\n        }\n        var testBranch = function (schema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, asSchema(schema), subValidationResult, subMatchingSchemas);\n            validationResult.merge(subValidationResult);\n            validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            matchingSchemas.merge(subMatchingSchemas);\n        };\n        var testCondition = function (ifSchema, thenSchema, elseSchema) {\n            var subSchema = asSchema(ifSchema);\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, subSchema, subValidationResult, subMatchingSchemas);\n            matchingSchemas.merge(subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                if (thenSchema) {\n                    testBranch(thenSchema);\n                }\n            }\n            else if (elseSchema) {\n                testBranch(elseSchema);\n            }\n        };\n        var ifSchema = asSchema(schema.if);\n        if (ifSchema) {\n            testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n        }\n        if (Array.isArray(schema.enum)) {\n            var val = getNodeValue(node);\n            var enumValueMatch = false;\n            for (var _d = 0, _e = schema.enum; _d < _e.length; _d++) {\n                var e = _e[_d];\n                if (equals(val, e)) {\n                    enumValueMatch = true;\n                    break;\n                }\n            }\n            validationResult.enumValues = schema.enum;\n            validationResult.enumValueMatch = enumValueMatch;\n            if (!enumValueMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('enumWarning', 'Value is not accepted. Valid values: {0}.', schema.enum.map(function (v) { return JSON.stringify(v); }).join(', '))\n                });\n            }\n        }\n        if (isDefined(schema.const)) {\n            var val = getNodeValue(node);\n            if (!equals(val, schema.const)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('constWarning', 'Value must be {0}.', JSON.stringify(schema.const))\n                });\n                validationResult.enumValueMatch = false;\n            }\n            else {\n                validationResult.enumValueMatch = true;\n            }\n            validationResult.enumValues = [schema.const];\n        }\n        if (schema.deprecationMessage && node.parent) {\n            validationResult.problems.push({\n                location: { offset: node.parent.offset, length: node.parent.length },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.deprecationMessage\n            });\n        }\n    }\n    function _validateNumberNode(node, schema, validationResult, matchingSchemas) {\n        var val = node.value;\n        if (isNumber(schema.multipleOf)) {\n            if (val % schema.multipleOf !== 0) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('multipleOfWarning', 'Value is not divisible by {0}.', schema.multipleOf)\n                });\n            }\n        }\n        function getExclusiveLimit(limit, exclusive) {\n            if (isNumber(exclusive)) {\n                return exclusive;\n            }\n            if (isBoolean(exclusive) && exclusive) {\n                return limit;\n            }\n            return undefined;\n        }\n        function getLimit(limit, exclusive) {\n            if (!isBoolean(exclusive) || !exclusive) {\n                return limit;\n            }\n            return undefined;\n        }\n        var exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}.', exclusiveMinimum)\n            });\n        }\n        var exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}.', exclusiveMaximum)\n            });\n        }\n        var minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(minimum) && val < minimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minimumWarning', 'Value is below the minimum of {0}.', minimum)\n            });\n        }\n        var maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(maximum) && val > maximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maximumWarning', 'Value is above the maximum of {0}.', maximum)\n            });\n        }\n    }\n    function _validateStringNode(node, schema, validationResult, matchingSchemas) {\n        if (isNumber(schema.minLength) && node.value.length < schema.minLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minLengthWarning', 'String is shorter than the minimum length of {0}.', schema.minLength)\n            });\n        }\n        if (isNumber(schema.maxLength) && node.value.length > schema.maxLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxLengthWarning', 'String is longer than the maximum length of {0}.', schema.maxLength)\n            });\n        }\n        if (isString(schema.pattern)) {\n            var regex = new RegExp(schema.pattern);\n            if (!regex.test(node.value)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.patternErrorMessage || schema.errorMessage || localize('patternWarning', 'String does not match the pattern of \"{0}\".', schema.pattern)\n                });\n            }\n        }\n        if (schema.format) {\n            switch (schema.format) {\n                case 'uri':\n                case 'uri-reference':\n                    {\n                        var errorMessage = void 0;\n                        if (!node.value) {\n                            errorMessage = localize('uriEmpty', 'URI expected.');\n                        }\n                        else {\n                            var match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node.value);\n                            if (!match) {\n                                errorMessage = localize('uriMissing', 'URI is expected.');\n                            }\n                            else if (!match[2] && schema.format === 'uri') {\n                                errorMessage = localize('uriSchemeMissing', 'URI with a scheme is expected.');\n                            }\n                        }\n                        if (errorMessage) {\n                            validationResult.problems.push({\n                                location: { offset: node.offset, length: node.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.patternErrorMessage || schema.errorMessage || localize('uriFormatWarning', 'String is not a URI: {0}', errorMessage)\n                            });\n                        }\n                    }\n                    break;\n                case 'color-hex':\n                case 'date-time':\n                case 'date':\n                case 'time':\n                case 'email':\n                    var format = formats[schema.format];\n                    if (!node.value || !format.pattern.exec(node.value)) {\n                        validationResult.problems.push({\n                            location: { offset: node.offset, length: node.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.patternErrorMessage || schema.errorMessage || format.errorMessage\n                        });\n                    }\n                default:\n            }\n        }\n    }\n    function _validateArrayNode(node, schema, validationResult, matchingSchemas) {\n        if (Array.isArray(schema.items)) {\n            var subSchemas = schema.items;\n            for (var index = 0; index < subSchemas.length; index++) {\n                var subSchemaRef = subSchemas[index];\n                var subSchema = asSchema(subSchemaRef);\n                var itemValidationResult = new ValidationResult();\n                var item = node.items[index];\n                if (item) {\n                    validate(item, subSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n                else if (node.items.length >= subSchemas.length) {\n                    validationResult.propertiesValueMatches++;\n                }\n            }\n            if (node.items.length > subSchemas.length) {\n                if (typeof schema.additionalItems === 'object') {\n                    for (var i = subSchemas.length; i < node.items.length; i++) {\n                        var itemValidationResult = new ValidationResult();\n                        validate(node.items[i], schema.additionalItems, itemValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(itemValidationResult);\n                    }\n                }\n                else if (schema.additionalItems === false) {\n                    validationResult.problems.push({\n                        location: { offset: node.offset, length: node.length },\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer.', subSchemas.length)\n                    });\n                }\n            }\n        }\n        else {\n            var itemSchema = asSchema(schema.items);\n            if (itemSchema) {\n                for (var _i = 0, _a = node.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    var itemValidationResult = new ValidationResult();\n                    validate(item, itemSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n            }\n        }\n        var containsSchema = asSchema(schema.contains);\n        if (containsSchema) {\n            var doesContain = node.items.some(function (item) {\n                var itemValidationResult = new ValidationResult();\n                validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance);\n                return !itemValidationResult.hasProblems();\n            });\n            if (!doesContain) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('requiredItemMissingWarning', 'Array does not contain required item.')\n                });\n            }\n        }\n        if (isNumber(schema.minItems) && node.items.length < schema.minItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minItemsWarning', 'Array has too few items. Expected {0} or more.', schema.minItems)\n            });\n        }\n        if (isNumber(schema.maxItems) && node.items.length > schema.maxItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer.', schema.maxItems)\n            });\n        }\n        if (schema.uniqueItems === true) {\n            var values_1 = getNodeValue(node);\n            var duplicates = values_1.some(function (value, index) {\n                return index !== values_1.lastIndexOf(value);\n            });\n            if (duplicates) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('uniqueItemsWarning', 'Array has duplicate items.')\n                });\n            }\n        }\n    }\n    function _validateObjectNode(node, schema, validationResult, matchingSchemas) {\n        var seenKeys = Object.create(null);\n        var unprocessedProperties = [];\n        for (var _i = 0, _a = node.properties; _i < _a.length; _i++) {\n            var propertyNode = _a[_i];\n            var key = propertyNode.keyNode.value;\n            seenKeys[key] = propertyNode.valueNode;\n            unprocessedProperties.push(key);\n        }\n        if (Array.isArray(schema.required)) {\n            for (var _b = 0, _c = schema.required; _b < _c.length; _b++) {\n                var propertyName = _c[_b];\n                if (!seenKeys[propertyName]) {\n                    var keyNode = node.parent && node.parent.type === 'property' && node.parent.keyNode;\n                    var location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node.offset, length: 1 };\n                    validationResult.problems.push({\n                        location: location,\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('MissingRequiredPropWarning', 'Missing property \"{0}\".', propertyName)\n                    });\n                }\n            }\n        }\n        var propertyProcessed = function (prop) {\n            var index = unprocessedProperties.indexOf(prop);\n            while (index >= 0) {\n                unprocessedProperties.splice(index, 1);\n                index = unprocessedProperties.indexOf(prop);\n            }\n        };\n        if (schema.properties) {\n            for (var _d = 0, _e = Object.keys(schema.properties); _d < _e.length; _d++) {\n                var propertyName = _e[_d];\n                propertyProcessed(propertyName);\n                var propertySchema = schema.properties[propertyName];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    if (isBoolean(propertySchema)) {\n                        if (!propertySchema) {\n                            var propertyNode = child.parent;\n                            validationResult.problems.push({\n                                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                            });\n                        }\n                        else {\n                            validationResult.propertiesMatches++;\n                            validationResult.propertiesValueMatches++;\n                        }\n                    }\n                    else {\n                        var propertyValidationResult = new ValidationResult();\n                        validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(propertyValidationResult);\n                    }\n                }\n            }\n        }\n        if (schema.patternProperties) {\n            for (var _f = 0, _g = Object.keys(schema.patternProperties); _f < _g.length; _f++) {\n                var propertyPattern = _g[_f];\n                var regex = new RegExp(propertyPattern);\n                for (var _h = 0, _j = unprocessedProperties.slice(0); _h < _j.length; _h++) {\n                    var propertyName = _j[_h];\n                    if (regex.test(propertyName)) {\n                        propertyProcessed(propertyName);\n                        var child = seenKeys[propertyName];\n                        if (child) {\n                            var propertySchema = schema.patternProperties[propertyPattern];\n                            if (isBoolean(propertySchema)) {\n                                if (!propertySchema) {\n                                    var propertyNode = child.parent;\n                                    validationResult.problems.push({\n                                        location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                        severity: DiagnosticSeverity.Warning,\n                                        message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                                    });\n                                }\n                                else {\n                                    validationResult.propertiesMatches++;\n                                    validationResult.propertiesValueMatches++;\n                                }\n                            }\n                            else {\n                                var propertyValidationResult = new ValidationResult();\n                                validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                                validationResult.mergePropertyMatch(propertyValidationResult);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            for (var _k = 0, unprocessedProperties_1 = unprocessedProperties; _k < unprocessedProperties_1.length; _k++) {\n                var propertyName = unprocessedProperties_1[_k];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    var propertyValidationResult = new ValidationResult();\n                    validate(child, schema.additionalProperties, propertyValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n            }\n        }\n        else if (schema.additionalProperties === false) {\n            if (unprocessedProperties.length > 0) {\n                for (var _l = 0, unprocessedProperties_2 = unprocessedProperties; _l < unprocessedProperties_2.length; _l++) {\n                    var propertyName = unprocessedProperties_2[_l];\n                    var child = seenKeys[propertyName];\n                    if (child) {\n                        var propertyNode = child.parent;\n                        validationResult.problems.push({\n                            location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                        });\n                    }\n                }\n            }\n        }\n        if (isNumber(schema.maxProperties)) {\n            if (node.properties.length > schema.maxProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MaxPropWarning', 'Object has more properties than limit of {0}.', schema.maxProperties)\n                });\n            }\n        }\n        if (isNumber(schema.minProperties)) {\n            if (node.properties.length < schema.minProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n                });\n            }\n        }\n        if (schema.dependencies) {\n            for (var _m = 0, _o = Object.keys(schema.dependencies); _m < _o.length; _m++) {\n                var key = _o[_m];\n                var prop = seenKeys[key];\n                if (prop) {\n                    var propertyDep = schema.dependencies[key];\n                    if (Array.isArray(propertyDep)) {\n                        for (var _p = 0, propertyDep_1 = propertyDep; _p < propertyDep_1.length; _p++) {\n                            var requiredProp = propertyDep_1[_p];\n                            if (!seenKeys[requiredProp]) {\n                                validationResult.problems.push({\n                                    location: { offset: node.offset, length: node.length },\n                                    severity: DiagnosticSeverity.Warning,\n                                    message: localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}.', requiredProp, key)\n                                });\n                            }\n                            else {\n                                validationResult.propertiesValueMatches++;\n                            }\n                        }\n                    }\n                    else {\n                        var propertySchema = asSchema(propertyDep);\n                        if (propertySchema) {\n                            var propertyValidationResult = new ValidationResult();\n                            validate(node, propertySchema, propertyValidationResult, matchingSchemas);\n                            validationResult.mergePropertyMatch(propertyValidationResult);\n                        }\n                    }\n                }\n            }\n        }\n        var propertyNames = asSchema(schema.propertyNames);\n        if (propertyNames) {\n            for (var _q = 0, _r = node.properties; _q < _r.length; _q++) {\n                var f = _r[_q];\n                var key = f.keyNode;\n                if (key) {\n                    validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance);\n                }\n            }\n        }\n    }\n}\nexport function parse(textDocument, config) {\n    var problems = [];\n    var lastProblemOffset = -1;\n    var text = textDocument.getText();\n    var scanner = Json.createScanner(text, false);\n    var commentRanges = config && config.collectComments ? [] : undefined;\n    function _scanNext() {\n        while (true) {\n            var token_1 = scanner.scan();\n            _checkScanError();\n            switch (token_1) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (Array.isArray(commentRanges)) {\n                        commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n                    }\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token_1;\n            }\n        }\n    }\n    function _accept(token) {\n        if (scanner.getToken() === token) {\n            _scanNext();\n            return true;\n        }\n        return false;\n    }\n    function _errorAtRange(message, code, startOffset, endOffset, severity) {\n        if (severity === void 0) { severity = DiagnosticSeverity.Error; }\n        if (problems.length === 0 || startOffset !== lastProblemOffset) {\n            var range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n            problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n            lastProblemOffset = startOffset;\n        }\n    }\n    function _error(message, code, node, skipUntilAfter, skipUntil) {\n        if (node === void 0) { node = undefined; }\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        var start = scanner.getTokenOffset();\n        var end = scanner.getTokenOffset() + scanner.getTokenLength();\n        if (start === end && start > 0) {\n            start--;\n            while (start > 0 && /\\s/.test(text.charAt(start))) {\n                start--;\n            }\n            end = start + 1;\n        }\n        _errorAtRange(message, code, start, end);\n        if (node) {\n            _finalize(node, false);\n        }\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token_2 = scanner.getToken();\n            while (token_2 !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token_2) !== -1) {\n                    _scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token_2) !== -1) {\n                    break;\n                }\n                token_2 = _scanNext();\n            }\n        }\n        return node;\n    }\n    function _checkScanError() {\n        switch (scanner.getTokenError()) {\n            case 4 /* InvalidUnicode */:\n                _error(localize('InvalidUnicode', 'Invalid unicode sequence in string.'), ErrorCode.InvalidUnicode);\n                return true;\n            case 5 /* InvalidEscapeCharacter */:\n                _error(localize('InvalidEscapeCharacter', 'Invalid escape character in string.'), ErrorCode.InvalidEscapeCharacter);\n                return true;\n            case 3 /* UnexpectedEndOfNumber */:\n                _error(localize('UnexpectedEndOfNumber', 'Unexpected end of number.'), ErrorCode.UnexpectedEndOfNumber);\n                return true;\n            case 1 /* UnexpectedEndOfComment */:\n                _error(localize('UnexpectedEndOfComment', 'Unexpected end of comment.'), ErrorCode.UnexpectedEndOfComment);\n                return true;\n            case 2 /* UnexpectedEndOfString */:\n                _error(localize('UnexpectedEndOfString', 'Unexpected end of string.'), ErrorCode.UnexpectedEndOfString);\n                return true;\n            case 6 /* InvalidCharacter */:\n                _error(localize('InvalidCharacter', 'Invalid characters in string. Control characters must be escaped.'), ErrorCode.InvalidCharacter);\n                return true;\n        }\n        return false;\n    }\n    function _finalize(node, scanNext) {\n        node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n        if (scanNext) {\n            _scanNext();\n        }\n        return node;\n    }\n    function _parseArray(parent) {\n        if (scanner.getToken() !== 3 /* OpenBracketToken */) {\n            return undefined;\n        }\n        var node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n        _scanNext(); // consume OpenBracketToken\n        var count = 0;\n        var needsComma = false;\n        while (scanner.getToken() !== 4 /* CloseBracketToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 4 /* CloseBracketToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var item = _parseValue(node);\n            if (!item) {\n                _error(localize('PropertyExpected', 'Value expected'), ErrorCode.ValueExpected, undefined, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.items.push(item);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 4 /* CloseBracketToken */) {\n            return _error(localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), ErrorCode.CommaOrCloseBacketExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    var keyPlaceholder = new StringASTNodeImpl(undefined, 0, 0);\n    function _parseProperty(parent, keysSeen) {\n        var node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset(), keyPlaceholder);\n        var key = _parseString(node);\n        if (!key) {\n            if (scanner.getToken() === 16 /* Unknown */) {\n                // give a more helpful error message\n                _error(localize('DoubleQuotesExpected', 'Property keys must be doublequoted'), ErrorCode.Undefined);\n                var keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n                keyNode.value = scanner.getTokenValue();\n                key = keyNode;\n                _scanNext(); // consume Unknown\n            }\n            else {\n                return undefined;\n            }\n        }\n        node.keyNode = key;\n        var seen = keysSeen[key.value];\n        if (seen) {\n            _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n            if (typeof seen === 'object') {\n                _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n            }\n            keysSeen[key.value] = true; // if the same key is duplicate again, avoid duplicate error reporting\n        }\n        else {\n            keysSeen[key.value] = node;\n        }\n        if (scanner.getToken() === 6 /* ColonToken */) {\n            node.colonOffset = scanner.getTokenOffset();\n            _scanNext(); // consume ColonToken\n        }\n        else {\n            _error(localize('ColonExpected', 'Colon expected'), ErrorCode.ColonExpected);\n            if (scanner.getToken() === 10 /* StringLiteral */ && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n                node.length = key.length;\n                return node;\n            }\n        }\n        var value = _parseValue(node);\n        if (!value) {\n            return _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected, node, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        node.valueNode = value;\n        node.length = value.offset + value.length - node.offset;\n        return node;\n    }\n    function _parseObject(parent) {\n        if (scanner.getToken() !== 1 /* OpenBraceToken */) {\n            return undefined;\n        }\n        var node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n        var keysSeen = Object.create(null);\n        _scanNext(); // consume OpenBraceToken\n        var needsComma = false;\n        while (scanner.getToken() !== 2 /* CloseBraceToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 2 /* CloseBraceToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var property = _parseProperty(node, keysSeen);\n            if (!property) {\n                _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected, undefined, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.properties.push(property);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 2 /* CloseBraceToken */) {\n            return _error(localize('ExpectedCloseBrace', 'Expected comma or closing brace'), ErrorCode.CommaOrCloseBraceExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseString(parent) {\n        if (scanner.getToken() !== 10 /* StringLiteral */) {\n            return undefined;\n        }\n        var node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n        node.value = scanner.getTokenValue();\n        return _finalize(node, true);\n    }\n    function _parseNumber(parent) {\n        if (scanner.getToken() !== 11 /* NumericLiteral */) {\n            return undefined;\n        }\n        var node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n        if (scanner.getTokenError() === 0 /* None */) {\n            var tokenValue = scanner.getTokenValue();\n            try {\n                var numberValue = JSON.parse(tokenValue);\n                if (!isNumber(numberValue)) {\n                    return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n                }\n                node.value = numberValue;\n            }\n            catch (e) {\n                return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n            }\n            node.isInteger = tokenValue.indexOf('.') === -1;\n        }\n        return _finalize(node, true);\n    }\n    function _parseLiteral(parent) {\n        var node;\n        switch (scanner.getToken()) {\n            case 7 /* NullKeyword */:\n                return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n            case 8 /* TrueKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n            case 9 /* FalseKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n            default:\n                return undefined;\n        }\n    }\n    function _parseValue(parent) {\n        return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n    }\n    var _root = undefined;\n    var token = _scanNext();\n    if (token !== 17 /* EOF */) {\n        _root = _parseValue(_root);\n        if (!_root) {\n            _error(localize('Invalid symbol', 'Expected a JSON object, array or literal.'), ErrorCode.Undefined);\n        }\n        else if (scanner.getToken() !== 17 /* EOF */) {\n            _error(localize('End of file expected', 'End of file expected.'), ErrorCode.Undefined);\n        }\n    }\n    return new JSONDocument(_root, problems, commentRanges);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from 'vscode-nls';\nvar localize = nls.loadMessageBundle();\nexport var schemaContributions = {\n    schemaAssociations: [],\n    schemas: {\n        // refer to the latest schema\n        'http://json-schema.org/schema#': {\n            $ref: 'http://json-schema.org/draft-07/schema#'\n        },\n        // bundle the schema-schema to include (localized) descriptions\n        'http://json-schema.org/draft-04/schema#': {\n            'title': localize('schema.json', 'Describes a JSON file using a schema. See json-schema.org for more info.'),\n            '$schema': 'http://json-schema.org/draft-04/schema#',\n            'definitions': {\n                'schemaArray': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'items': {\n                        '$ref': '#'\n                    }\n                },\n                'positiveInteger': {\n                    'type': 'integer',\n                    'minimum': 0\n                },\n                'positiveIntegerDefault0': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        },\n                        {\n                            'default': 0\n                        }\n                    ]\n                },\n                'simpleTypes': {\n                    'type': 'string',\n                    'enum': [\n                        'array',\n                        'boolean',\n                        'integer',\n                        'null',\n                        'number',\n                        'object',\n                        'string'\n                    ]\n                },\n                'stringArray': {\n                    'type': 'array',\n                    'items': {\n                        'type': 'string'\n                    },\n                    'minItems': 1,\n                    'uniqueItems': true\n                }\n            },\n            'type': 'object',\n            'properties': {\n                'id': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                '$schema': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                'title': {\n                    'type': 'string'\n                },\n                'description': {\n                    'type': 'string'\n                },\n                'default': {},\n                'multipleOf': {\n                    'type': 'number',\n                    'minimum': 0,\n                    'exclusiveMinimum': true\n                },\n                'maximum': {\n                    'type': 'number'\n                },\n                'exclusiveMaximum': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'minimum': {\n                    'type': 'number'\n                },\n                'exclusiveMinimum': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'maxLength': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minLength': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'pattern': {\n                    'type': 'string',\n                    'format': 'regex'\n                },\n                'additionalItems': {\n                    'anyOf': [\n                        {\n                            'type': 'boolean'\n                        },\n                        {\n                            '$ref': '#'\n                        }\n                    ],\n                    'default': {}\n                },\n                'items': {\n                    'anyOf': [\n                        {\n                            '$ref': '#'\n                        },\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ],\n                    'default': {}\n                },\n                'maxItems': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minItems': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'uniqueItems': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'maxProperties': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minProperties': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'required': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/stringArray'\n                        }\n                    ]\n                },\n                'additionalProperties': {\n                    'anyOf': [\n                        {\n                            'type': 'boolean'\n                        },\n                        {\n                            '$ref': '#'\n                        }\n                    ],\n                    'default': {}\n                },\n                'definitions': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'properties': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'patternProperties': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'dependencies': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        'anyOf': [\n                            {\n                                '$ref': '#'\n                            },\n                            {\n                                '$ref': '#/definitions/stringArray'\n                            }\n                        ]\n                    }\n                },\n                'enum': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'uniqueItems': true\n                },\n                'type': {\n                    'anyOf': [\n                        {\n                            '$ref': '#/definitions/simpleTypes'\n                        },\n                        {\n                            'type': 'array',\n                            'items': {\n                                '$ref': '#/definitions/simpleTypes'\n                            },\n                            'minItems': 1,\n                            'uniqueItems': true\n                        }\n                    ]\n                },\n                'format': {\n                    'anyOf': [\n                        {\n                            'type': 'string',\n                            'enum': [\n                                'date-time',\n                                'uri',\n                                'email',\n                                'hostname',\n                                'ipv4',\n                                'ipv6',\n                                'regex'\n                            ]\n                        },\n                        {\n                            'type': 'string'\n                        }\n                    ]\n                },\n                'allOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'anyOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'oneOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'not': {\n                    'allOf': [\n                        {\n                            '$ref': '#'\n                        }\n                    ]\n                }\n            },\n            'dependencies': {\n                'exclusiveMaximum': [\n                    'maximum'\n                ],\n                'exclusiveMinimum': [\n                    'minimum'\n                ]\n            },\n            'default': {}\n        },\n        'http://json-schema.org/draft-07/schema#': {\n            'title': localize('schema.json', 'Describes a JSON file using a schema. See json-schema.org for more info.'),\n            'definitions': {\n                'schemaArray': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'items': { '$ref': '#' }\n                },\n                'nonNegativeInteger': {\n                    'type': 'integer',\n                    'minimum': 0\n                },\n                'nonNegativeIntegerDefault0': {\n                    'allOf': [\n                        { '$ref': '#/definitions/nonNegativeInteger' },\n                        { 'default': 0 }\n                    ]\n                },\n                'simpleTypes': {\n                    'enum': [\n                        'array',\n                        'boolean',\n                        'integer',\n                        'null',\n                        'number',\n                        'object',\n                        'string'\n                    ]\n                },\n                'stringArray': {\n                    'type': 'array',\n                    'items': { 'type': 'string' },\n                    'uniqueItems': true,\n                    'default': []\n                }\n            },\n            'type': ['object', 'boolean'],\n            'properties': {\n                '$id': {\n                    'type': 'string',\n                    'format': 'uri-reference'\n                },\n                '$schema': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                '$ref': {\n                    'type': 'string',\n                    'format': 'uri-reference'\n                },\n                '$comment': {\n                    'type': 'string'\n                },\n                'title': {\n                    'type': 'string'\n                },\n                'description': {\n                    'type': 'string'\n                },\n                'default': true,\n                'readOnly': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'examples': {\n                    'type': 'array',\n                    'items': true\n                },\n                'multipleOf': {\n                    'type': 'number',\n                    'exclusiveMinimum': 0\n                },\n                'maximum': {\n                    'type': 'number'\n                },\n                'exclusiveMaximum': {\n                    'type': 'number'\n                },\n                'minimum': {\n                    'type': 'number'\n                },\n                'exclusiveMinimum': {\n                    'type': 'number'\n                },\n                'maxLength': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minLength': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'pattern': {\n                    'type': 'string',\n                    'format': 'regex'\n                },\n                'additionalItems': { '$ref': '#' },\n                'items': {\n                    'anyOf': [\n                        { '$ref': '#' },\n                        { '$ref': '#/definitions/schemaArray' }\n                    ],\n                    'default': true\n                },\n                'maxItems': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minItems': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'uniqueItems': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'contains': { '$ref': '#' },\n                'maxProperties': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minProperties': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'required': { '$ref': '#/definitions/stringArray' },\n                'additionalProperties': { '$ref': '#' },\n                'definitions': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {}\n                },\n                'properties': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {}\n                },\n                'patternProperties': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'propertyNames': { 'format': 'regex' },\n                    'default': {}\n                },\n                'dependencies': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        'anyOf': [\n                            { '$ref': '#' },\n                            { '$ref': '#/definitions/stringArray' }\n                        ]\n                    }\n                },\n                'propertyNames': { '$ref': '#' },\n                'const': true,\n                'enum': {\n                    'type': 'array',\n                    'items': true,\n                    'minItems': 1,\n                    'uniqueItems': true\n                },\n                'type': {\n                    'anyOf': [\n                        { '$ref': '#/definitions/simpleTypes' },\n                        {\n                            'type': 'array',\n                            'items': { '$ref': '#/definitions/simpleTypes' },\n                            'minItems': 1,\n                            'uniqueItems': true\n                        }\n                    ]\n                },\n                'format': { 'type': 'string' },\n                'contentMediaType': { 'type': 'string' },\n                'contentEncoding': { 'type': 'string' },\n                'if': { '$ref': '#' },\n                'then': { '$ref': '#' },\n                'else': { '$ref': '#' },\n                'allOf': { '$ref': '#/definitions/schemaArray' },\n                'anyOf': { '$ref': '#/definitions/schemaArray' },\n                'oneOf': { '$ref': '#/definitions/schemaArray' },\n                'not': { '$ref': '#' }\n            },\n            'default': true\n        }\n    }\n};\nvar descriptions = {\n    id: localize('schema.json.id', \"A unique identifier for the schema.\"),\n    $schema: localize('schema.json.$schema', \"The schema to verify this document against.\"),\n    title: localize('schema.json.title', \"A descriptive title of the element.\"),\n    description: localize('schema.json.description', \"A long description of the element. Used in hover menus and suggestions.\"),\n    default: localize('schema.json.default', \"A default value. Used by suggestions.\"),\n    multipleOf: localize('schema.json.multipleOf', \"A number that should cleanly divide the current value (i.e. have no remainder).\"),\n    maximum: localize('schema.json.maximum', \"The maximum numerical value, inclusive by default.\"),\n    exclusiveMaximum: localize('schema.json.exclusiveMaximum', \"Makes the maximum property exclusive.\"),\n    minimum: localize('schema.json.minimum', \"The minimum numerical value, inclusive by default.\"),\n    exclusiveMinimum: localize('schema.json.exclusiveMininum', \"Makes the minimum property exclusive.\"),\n    maxLength: localize('schema.json.maxLength', \"The maximum length of a string.\"),\n    minLength: localize('schema.json.minLength', \"The minimum length of a string.\"),\n    pattern: localize('schema.json.pattern', \"A regular expression to match the string against. It is not implicitly anchored.\"),\n    additionalItems: localize('schema.json.additionalItems', \"For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.\"),\n    items: localize('schema.json.items', \"For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.\"),\n    maxItems: localize('schema.json.maxItems', \"The maximum number of items that can be inside an array. Inclusive.\"),\n    minItems: localize('schema.json.minItems', \"The minimum number of items that can be inside an array. Inclusive.\"),\n    uniqueItems: localize('schema.json.uniqueItems', \"If all of the items in the array must be unique. Defaults to false.\"),\n    maxProperties: localize('schema.json.maxProperties', \"The maximum number of properties an object can have. Inclusive.\"),\n    minProperties: localize('schema.json.minProperties', \"The minimum number of properties an object can have. Inclusive.\"),\n    required: localize('schema.json.required', \"An array of strings that lists the names of all properties required on this object.\"),\n    additionalProperties: localize('schema.json.additionalProperties', \"Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail.\"),\n    definitions: localize('schema.json.definitions', \"Not used for validation. Place subschemas here that you wish to reference inline with $ref.\"),\n    properties: localize('schema.json.properties', \"A map of property names to schemas for each property.\"),\n    patternProperties: localize('schema.json.patternProperties', \"A map of regular expressions on property names to schemas for matching properties.\"),\n    dependencies: localize('schema.json.dependencies', \"A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.\"),\n    enum: localize('schema.json.enum', \"The set of literal values that are valid.\"),\n    type: localize('schema.json.type', \"Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.\"),\n    format: localize('schema.json.format', \"Describes the format expected for the value.\"),\n    allOf: localize('schema.json.allOf', \"An array of schemas, all of which must match.\"),\n    anyOf: localize('schema.json.anyOf', \"An array of schemas, where at least one must match.\"),\n    oneOf: localize('schema.json.oneOf', \"An array of schemas, exactly one of which must match.\"),\n    not: localize('schema.json.not', \"A schema which must not match.\"),\n    $id: localize('schema.json.$id', \"A unique identifier for the schema.\"),\n    $ref: localize('schema.json.$ref', \"Reference a definition hosted on any location.\"),\n    $comment: localize('schema.json.$comment', \"Comments from schema authors to readers or maintainers of the schema.\"),\n    readOnly: localize('schema.json.readOnly', \"Indicates that the value of the instance is managed exclusively by the owning authority.\"),\n    examples: localize('schema.json.examples', \"Sample JSON values associated with a particular schema, for the purpose of illustrating usage.\"),\n    contains: localize('schema.json.contains', \"An array instance is valid against \\\"contains\\\" if at least one of its elements is valid against the given schema.\"),\n    propertyNames: localize('schema.json.propertyNames', \"If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema.\"),\n    const: localize('schema.json.const', \"An instance validates successfully against this keyword if its value is equal to the value of the keyword.\"),\n    contentMediaType: localize('schema.json.contentMediaType', \"Describes the media type of a string property.\"),\n    contentEncoding: localize('schema.json.contentEncoding', \"Describes the content encoding of a string property.\"),\n    if: localize('schema.json.if', \"The validation outcome of the \\\"if\\\" subschema controls which of the \\\"then\\\" or \\\"else\\\" keywords are evaluated.\"),\n    then: localize('schema.json.then', \"The \\\"if\\\" subschema is used for validation when the \\\"if\\\" subschema succeeds.\"),\n    else: localize('schema.json.else', \"The \\\"else\\\" subschema is used for validation when the \\\"if\\\" subschema fails.\")\n};\nfor (var schemaName in schemaContributions.schemas) {\n    var schema = schemaContributions.schemas[schemaName];\n    for (var property in schema.properties) {\n        var propertyObject = schema.properties[property];\n        if (typeof propertyObject === 'boolean') {\n            propertyObject = schema.properties[property] = {};\n        }\n        var description = descriptions[property];\n        if (description) {\n            propertyObject['description'] = description;\n        }\n        else {\n            console.log(property + \": localize('schema.json.\" + property + \"', \\\"\\\")\");\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser';\nimport * as Json from 'jsonc-parser';\nimport { stringifyObject } from '../utils/json';\nimport { endsWith } from '../utils/strings';\nimport { isDefined } from '../utils/objects';\nimport { CompletionItem, CompletionItemKind, Range, TextEdit, InsertTextFormat, MarkupKind } from '../jsonLanguageTypes';\nimport * as nls from 'vscode-nls';\nvar localize = nls.loadMessageBundle();\nvar valueCommitCharacters = [',', '}', ']'];\nvar propertyCommitCharacters = [':'];\nvar JSONCompletion = /** @class */ (function () {\n    function JSONCompletion(schemaService, contributions, promiseConstructor, clientCapabilities) {\n        if (contributions === void 0) { contributions = []; }\n        if (promiseConstructor === void 0) { promiseConstructor = Promise; }\n        if (clientCapabilities === void 0) { clientCapabilities = {}; }\n        this.schemaService = schemaService;\n        this.contributions = contributions;\n        this.promiseConstructor = promiseConstructor;\n        this.clientCapabilities = clientCapabilities;\n    }\n    JSONCompletion.prototype.doResolve = function (item) {\n        for (var i = this.contributions.length - 1; i >= 0; i--) {\n            var resolveCompletion = this.contributions[i].resolveCompletion;\n            if (resolveCompletion) {\n                var resolver = resolveCompletion(item);\n                if (resolver) {\n                    return resolver;\n                }\n            }\n        }\n        return this.promiseConstructor.resolve(item);\n    };\n    JSONCompletion.prototype.doComplete = function (document, position, doc) {\n        var _this = this;\n        var result = {\n            items: [],\n            isIncomplete: false\n        };\n        var text = document.getText();\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset, true);\n        if (this.isInComment(document, node ? node.offset : 0, offset)) {\n            return Promise.resolve(result);\n        }\n        if (node && (offset === node.offset + node.length) && offset > 0) {\n            var ch = text[offset - 1];\n            if (node.type === 'object' && ch === '}' || node.type === 'array' && ch === ']') {\n                // after ] or }\n                node = node.parent;\n            }\n        }\n        var currentWord = this.getCurrentWord(document, offset);\n        var overwriteRange;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            overwriteRange = Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n        }\n        else {\n            var overwriteStart = offset - currentWord.length;\n            if (overwriteStart > 0 && text[overwriteStart - 1] === '\"') {\n                overwriteStart--;\n            }\n            overwriteRange = Range.create(document.positionAt(overwriteStart), position);\n        }\n        var supportsCommitCharacters = false; //this.doesSupportsCommitCharacters(); disabled for now, waiting for new API: https://github.com/microsoft/vscode/issues/42544\n        var proposed = {};\n        var collector = {\n            add: function (suggestion) {\n                var label = suggestion.label;\n                var existing = proposed[label];\n                if (!existing) {\n                    label = label.replace(/[\\n]/g, '↵');\n                    if (label.length > 60) {\n                        var shortendedLabel = label.substr(0, 57).trim() + '...';\n                        if (!proposed[shortendedLabel]) {\n                            label = shortendedLabel;\n                        }\n                    }\n                    if (overwriteRange && suggestion.insertText !== undefined) {\n                        suggestion.textEdit = TextEdit.replace(overwriteRange, suggestion.insertText);\n                    }\n                    if (supportsCommitCharacters) {\n                        suggestion.commitCharacters = suggestion.kind === CompletionItemKind.Property ? propertyCommitCharacters : valueCommitCharacters;\n                    }\n                    suggestion.label = label;\n                    proposed[label] = suggestion;\n                    result.items.push(suggestion);\n                }\n                else if (!existing.documentation) {\n                    existing.documentation = suggestion.documentation;\n                }\n            },\n            setAsIncomplete: function () {\n                result.isIncomplete = true;\n            },\n            error: function (message) {\n                console.error(message);\n            },\n            log: function (message) {\n                console.log(message);\n            },\n            getNumberOfProposals: function () {\n                return result.items.length;\n            }\n        };\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var collectionPromises = [];\n            var addValue = true;\n            var currentKey = '';\n            var currentProperty = undefined;\n            if (node) {\n                if (node.type === 'string') {\n                    var parent = node.parent;\n                    if (parent && parent.type === 'property' && parent.keyNode === node) {\n                        addValue = !parent.valueNode;\n                        currentProperty = parent;\n                        currentKey = text.substr(node.offset + 1, node.length - 2);\n                        if (parent) {\n                            node = parent.parent;\n                        }\n                    }\n                }\n            }\n            // proposals for properties\n            if (node && node.type === 'object') {\n                // don't suggest keys when the cursor is just before the opening curly brace\n                if (node.offset === offset) {\n                    return result;\n                }\n                // don't suggest properties that are already present\n                var properties = node.properties;\n                properties.forEach(function (p) {\n                    if (!currentProperty || currentProperty !== p) {\n                        proposed[p.keyNode.value] = CompletionItem.create('__');\n                    }\n                });\n                var separatorAfter_1 = '';\n                if (addValue) {\n                    separatorAfter_1 = _this.evaluateSeparatorAfter(document, document.offsetAt(overwriteRange.end));\n                }\n                if (schema) {\n                    // property proposals with schema\n                    _this.getPropertyCompletions(schema, doc, node, addValue, separatorAfter_1, collector);\n                }\n                else {\n                    // property proposals without schema\n                    _this.getSchemaLessPropertyCompletions(doc, node, currentKey, collector);\n                }\n                var location_1 = Parser.getNodePath(node);\n                _this.contributions.forEach(function (contribution) {\n                    var collectPromise = contribution.collectPropertyCompletions(document.uri, location_1, currentWord, addValue, separatorAfter_1 === '', collector);\n                    if (collectPromise) {\n                        collectionPromises.push(collectPromise);\n                    }\n                });\n                if ((!schema && currentWord.length > 0 && text.charAt(offset - currentWord.length - 1) !== '\"')) {\n                    collector.add({\n                        kind: CompletionItemKind.Property,\n                        label: _this.getLabelForValue(currentWord),\n                        insertText: _this.getInsertTextForProperty(currentWord, undefined, false, separatorAfter_1),\n                        insertTextFormat: InsertTextFormat.Snippet, documentation: '',\n                    });\n                    collector.setAsIncomplete();\n                }\n            }\n            // proposals for values\n            var types = {};\n            if (schema) {\n                // value proposals with schema\n                _this.getValueCompletions(schema, doc, node, offset, document, collector, types);\n            }\n            else {\n                // value proposals without schema\n                _this.getSchemaLessValueCompletions(doc, node, offset, document, collector);\n            }\n            if (_this.contributions.length > 0) {\n                _this.getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises);\n            }\n            return _this.promiseConstructor.all(collectionPromises).then(function () {\n                if (collector.getNumberOfProposals() === 0) {\n                    var offsetForSeparator = offset;\n                    if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n                        offsetForSeparator = node.offset + node.length;\n                    }\n                    var separatorAfter = _this.evaluateSeparatorAfter(document, offsetForSeparator);\n                    _this.addFillerValueCompletions(types, separatorAfter, collector);\n                }\n                return result;\n            });\n        });\n    };\n    JSONCompletion.prototype.getPropertyCompletions = function (schema, doc, node, addValue, separatorAfter, collector) {\n        var _this = this;\n        var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n        matchingSchemas.forEach(function (s) {\n            if (s.node === node && !s.inverted) {\n                var schemaProperties_1 = s.schema.properties;\n                if (schemaProperties_1) {\n                    Object.keys(schemaProperties_1).forEach(function (key) {\n                        var propertySchema = schemaProperties_1[key];\n                        if (typeof propertySchema === 'object' && !propertySchema.deprecationMessage && !propertySchema.doNotSuggest) {\n                            var proposal = {\n                                kind: CompletionItemKind.Property,\n                                label: key,\n                                insertText: _this.getInsertTextForProperty(key, propertySchema, addValue, separatorAfter),\n                                insertTextFormat: InsertTextFormat.Snippet,\n                                filterText: _this.getFilterTextForValue(key),\n                                documentation: _this.fromMarkup(propertySchema.markdownDescription) || propertySchema.description || '',\n                            };\n                            if (proposal.insertText && endsWith(proposal.insertText, \"$1\" + separatorAfter)) {\n                                proposal.command = {\n                                    title: 'Suggest',\n                                    command: 'editor.action.triggerSuggest'\n                                };\n                            }\n                            collector.add(proposal);\n                        }\n                    });\n                }\n            }\n        });\n    };\n    JSONCompletion.prototype.getSchemaLessPropertyCompletions = function (doc, node, currentKey, collector) {\n        var _this = this;\n        var collectCompletionsForSimilarObject = function (obj) {\n            obj.properties.forEach(function (p) {\n                var key = p.keyNode.value;\n                collector.add({\n                    kind: CompletionItemKind.Property,\n                    label: key,\n                    insertText: _this.getInsertTextForValue(key, ''),\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    filterText: _this.getFilterTextForValue(key),\n                    documentation: ''\n                });\n            });\n        };\n        if (node.parent) {\n            if (node.parent.type === 'property') {\n                // if the object is a property value, check the tree for other objects that hang under a property of the same name\n                var parentKey_1 = node.parent.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n !== node.parent && n.keyNode.value === parentKey_1 && n.valueNode && n.valueNode.type === 'object') {\n                        collectCompletionsForSimilarObject(n.valueNode);\n                    }\n                    return true;\n                });\n            }\n            else if (node.parent.type === 'array') {\n                // if the object is in an array, use all other array elements as similar objects\n                node.parent.items.forEach(function (n) {\n                    if (n.type === 'object' && n !== node) {\n                        collectCompletionsForSimilarObject(n);\n                    }\n                });\n            }\n        }\n        else if (node.type === 'object') {\n            collector.add({\n                kind: CompletionItemKind.Property,\n                label: '$schema',\n                insertText: this.getInsertTextForProperty('$schema', undefined, true, ''),\n                insertTextFormat: InsertTextFormat.Snippet, documentation: '',\n                filterText: this.getFilterTextForValue(\"$schema\")\n            });\n        }\n    };\n    JSONCompletion.prototype.getSchemaLessValueCompletions = function (doc, node, offset, document, collector) {\n        var _this = this;\n        var offsetForSeparator = offset;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            offsetForSeparator = node.offset + node.length;\n            node = node.parent;\n        }\n        if (!node) {\n            collector.add({\n                kind: this.getSuggestionKind('object'),\n                label: 'Empty object',\n                insertText: this.getInsertTextForValue({}, ''),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: ''\n            });\n            collector.add({\n                kind: this.getSuggestionKind('array'),\n                label: 'Empty array',\n                insertText: this.getInsertTextForValue([], ''),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: ''\n            });\n            return;\n        }\n        var separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n        var collectSuggestionsForValues = function (value) {\n            if (value.parent && !Parser.contains(value.parent, offset, true)) {\n                collector.add({\n                    kind: _this.getSuggestionKind(value.type),\n                    label: _this.getLabelTextForMatchingNode(value, document),\n                    insertText: _this.getInsertTextForMatchingNode(value, document, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet, documentation: ''\n                });\n            }\n            if (value.type === 'boolean') {\n                _this.addBooleanValueCompletion(!value.value, separatorAfter, collector);\n            }\n        };\n        if (node.type === 'property') {\n            if (offset > (node.colonOffset || 0)) {\n                var valueNode = node.valueNode;\n                if (valueNode && (offset > (valueNode.offset + valueNode.length) || valueNode.type === 'object' || valueNode.type === 'array')) {\n                    return;\n                }\n                // suggest values at the same key\n                var parentKey_2 = node.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n.keyNode.value === parentKey_2 && n.valueNode) {\n                        collectSuggestionsForValues(n.valueNode);\n                    }\n                    return true;\n                });\n                if (parentKey_2 === '$schema' && node.parent && !node.parent.parent) {\n                    this.addDollarSchemaCompletions(separatorAfter, collector);\n                }\n            }\n        }\n        if (node.type === 'array') {\n            if (node.parent && node.parent.type === 'property') {\n                // suggest items of an array at the same key\n                var parentKey_3 = node.parent.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n.keyNode.value === parentKey_3 && n.valueNode && n.valueNode.type === 'array') {\n                        n.valueNode.items.forEach(collectSuggestionsForValues);\n                    }\n                    return true;\n                });\n            }\n            else {\n                // suggest items in the same array\n                node.items.forEach(collectSuggestionsForValues);\n            }\n        }\n    };\n    JSONCompletion.prototype.getValueCompletions = function (schema, doc, node, offset, document, collector, types) {\n        var offsetForSeparator = offset;\n        var parentKey = undefined;\n        var valueNode = undefined;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            offsetForSeparator = node.offset + node.length;\n            valueNode = node;\n            node = node.parent;\n        }\n        if (!node) {\n            this.addSchemaValueCompletions(schema.schema, '', collector, types);\n            return;\n        }\n        if ((node.type === 'property') && offset > (node.colonOffset || 0)) {\n            var valueNode_1 = node.valueNode;\n            if (valueNode_1 && offset > (valueNode_1.offset + valueNode_1.length)) {\n                return; // we are past the value node\n            }\n            parentKey = node.keyNode.value;\n            node = node.parent;\n        }\n        if (node && (parentKey !== undefined || node.type === 'array')) {\n            var separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n            var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset, valueNode);\n            for (var _i = 0, matchingSchemas_1 = matchingSchemas; _i < matchingSchemas_1.length; _i++) {\n                var s = matchingSchemas_1[_i];\n                if (s.node === node && !s.inverted && s.schema) {\n                    if (node.type === 'array' && s.schema.items) {\n                        if (Array.isArray(s.schema.items)) {\n                            var index = this.findItemAtOffset(node, document, offset);\n                            if (index < s.schema.items.length) {\n                                this.addSchemaValueCompletions(s.schema.items[index], separatorAfter, collector, types);\n                            }\n                        }\n                        else {\n                            this.addSchemaValueCompletions(s.schema.items, separatorAfter, collector, types);\n                        }\n                    }\n                    if (s.schema.properties && parentKey !== undefined) {\n                        var propertySchema = s.schema.properties[parentKey];\n                        if (propertySchema) {\n                            this.addSchemaValueCompletions(propertySchema, separatorAfter, collector, types);\n                        }\n                    }\n                }\n            }\n            if (parentKey === '$schema' && !node.parent) {\n                this.addDollarSchemaCompletions(separatorAfter, collector);\n            }\n            if (types['boolean']) {\n                this.addBooleanValueCompletion(true, separatorAfter, collector);\n                this.addBooleanValueCompletion(false, separatorAfter, collector);\n            }\n            if (types['null']) {\n                this.addNullValueCompletion(separatorAfter, collector);\n            }\n        }\n    };\n    JSONCompletion.prototype.getContributedValueCompletions = function (doc, node, offset, document, collector, collectionPromises) {\n        if (!node) {\n            this.contributions.forEach(function (contribution) {\n                var collectPromise = contribution.collectDefaultCompletions(document.uri, collector);\n                if (collectPromise) {\n                    collectionPromises.push(collectPromise);\n                }\n            });\n        }\n        else {\n            if (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null') {\n                node = node.parent;\n            }\n            if (node && (node.type === 'property') && offset > (node.colonOffset || 0)) {\n                var parentKey_4 = node.keyNode.value;\n                var valueNode = node.valueNode;\n                if ((!valueNode || offset <= (valueNode.offset + valueNode.length)) && node.parent) {\n                    var location_2 = Parser.getNodePath(node.parent);\n                    this.contributions.forEach(function (contribution) {\n                        var collectPromise = contribution.collectValueCompletions(document.uri, location_2, parentKey_4, collector);\n                        if (collectPromise) {\n                            collectionPromises.push(collectPromise);\n                        }\n                    });\n                }\n            }\n        }\n    };\n    JSONCompletion.prototype.addSchemaValueCompletions = function (schema, separatorAfter, collector, types) {\n        var _this = this;\n        if (typeof schema === 'object') {\n            this.addEnumValueCompletions(schema, separatorAfter, collector);\n            this.addDefaultValueCompletions(schema, separatorAfter, collector);\n            this.collectTypes(schema, types);\n            if (Array.isArray(schema.allOf)) {\n                schema.allOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n            if (Array.isArray(schema.anyOf)) {\n                schema.anyOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n            if (Array.isArray(schema.oneOf)) {\n                schema.oneOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n        }\n    };\n    JSONCompletion.prototype.addDefaultValueCompletions = function (schema, separatorAfter, collector, arrayDepth) {\n        var _this = this;\n        if (arrayDepth === void 0) { arrayDepth = 0; }\n        var hasProposals = false;\n        if (isDefined(schema.default)) {\n            var type = schema.type;\n            var value = schema.default;\n            for (var i = arrayDepth; i > 0; i--) {\n                value = [value];\n                type = 'array';\n            }\n            collector.add({\n                kind: this.getSuggestionKind(type),\n                label: this.getLabelForValue(value),\n                insertText: this.getInsertTextForValue(value, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('json.suggest.default', 'Default value')\n            });\n            hasProposals = true;\n        }\n        if (Array.isArray(schema.examples)) {\n            schema.examples.forEach(function (example) {\n                var type = schema.type;\n                var value = example;\n                for (var i = arrayDepth; i > 0; i--) {\n                    value = [value];\n                    type = 'array';\n                }\n                collector.add({\n                    kind: _this.getSuggestionKind(type),\n                    label: _this.getLabelForValue(value),\n                    insertText: _this.getInsertTextForValue(value, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet\n                });\n                hasProposals = true;\n            });\n        }\n        if (Array.isArray(schema.defaultSnippets)) {\n            schema.defaultSnippets.forEach(function (s) {\n                var type = schema.type;\n                var value = s.body;\n                var label = s.label;\n                var insertText;\n                var filterText;\n                if (isDefined(value)) {\n                    var type_1 = schema.type;\n                    for (var i = arrayDepth; i > 0; i--) {\n                        value = [value];\n                        type_1 = 'array';\n                    }\n                    insertText = _this.getInsertTextForSnippetValue(value, separatorAfter);\n                    filterText = _this.getFilterTextForSnippetValue(value);\n                    label = label || _this.getLabelForSnippetValue(value);\n                }\n                else if (typeof s.bodyText === 'string') {\n                    var prefix = '', suffix = '', indent = '';\n                    for (var i = arrayDepth; i > 0; i--) {\n                        prefix = prefix + indent + '[\\n';\n                        suffix = suffix + '\\n' + indent + ']';\n                        indent += '\\t';\n                        type = 'array';\n                    }\n                    insertText = prefix + indent + s.bodyText.split('\\n').join('\\n' + indent) + suffix + separatorAfter;\n                    label = label || insertText,\n                        filterText = insertText.replace(/[\\n]/g, ''); // remove new lines\n                }\n                else {\n                    return;\n                }\n                collector.add({\n                    kind: _this.getSuggestionKind(type),\n                    label: label,\n                    documentation: _this.fromMarkup(s.markdownDescription) || s.description,\n                    insertText: insertText,\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    filterText: filterText\n                });\n                hasProposals = true;\n            });\n        }\n        if (!hasProposals && typeof schema.items === 'object' && !Array.isArray(schema.items) && arrayDepth < 5 /* beware of recursion */) {\n            this.addDefaultValueCompletions(schema.items, separatorAfter, collector, arrayDepth + 1);\n        }\n    };\n    JSONCompletion.prototype.addEnumValueCompletions = function (schema, separatorAfter, collector) {\n        if (isDefined(schema.const)) {\n            collector.add({\n                kind: this.getSuggestionKind(schema.type),\n                label: this.getLabelForValue(schema.const),\n                insertText: this.getInsertTextForValue(schema.const, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: this.fromMarkup(schema.markdownDescription) || schema.description\n            });\n        }\n        if (Array.isArray(schema.enum)) {\n            for (var i = 0, length = schema.enum.length; i < length; i++) {\n                var enm = schema.enum[i];\n                var documentation = this.fromMarkup(schema.markdownDescription) || schema.description;\n                if (schema.markdownEnumDescriptions && i < schema.markdownEnumDescriptions.length && this.doesSupportMarkdown()) {\n                    documentation = this.fromMarkup(schema.markdownEnumDescriptions[i]);\n                }\n                else if (schema.enumDescriptions && i < schema.enumDescriptions.length) {\n                    documentation = schema.enumDescriptions[i];\n                }\n                collector.add({\n                    kind: this.getSuggestionKind(schema.type),\n                    label: this.getLabelForValue(enm),\n                    insertText: this.getInsertTextForValue(enm, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    documentation: documentation\n                });\n            }\n        }\n    };\n    JSONCompletion.prototype.collectTypes = function (schema, types) {\n        if (Array.isArray(schema.enum) || isDefined(schema.const)) {\n            return;\n        }\n        var type = schema.type;\n        if (Array.isArray(type)) {\n            type.forEach(function (t) { return types[t] = true; });\n        }\n        else if (type) {\n            types[type] = true;\n        }\n    };\n    JSONCompletion.prototype.addFillerValueCompletions = function (types, separatorAfter, collector) {\n        if (types['object']) {\n            collector.add({\n                kind: this.getSuggestionKind('object'),\n                label: '{}',\n                insertText: this.getInsertTextForGuessedValue({}, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('defaults.object', 'New object'),\n                documentation: ''\n            });\n        }\n        if (types['array']) {\n            collector.add({\n                kind: this.getSuggestionKind('array'),\n                label: '[]',\n                insertText: this.getInsertTextForGuessedValue([], separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('defaults.array', 'New array'),\n                documentation: ''\n            });\n        }\n    };\n    JSONCompletion.prototype.addBooleanValueCompletion = function (value, separatorAfter, collector) {\n        collector.add({\n            kind: this.getSuggestionKind('boolean'),\n            label: value ? 'true' : 'false',\n            insertText: this.getInsertTextForValue(value, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: ''\n        });\n    };\n    JSONCompletion.prototype.addNullValueCompletion = function (separatorAfter, collector) {\n        collector.add({\n            kind: this.getSuggestionKind('null'),\n            label: 'null',\n            insertText: 'null' + separatorAfter,\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: ''\n        });\n    };\n    JSONCompletion.prototype.addDollarSchemaCompletions = function (separatorAfter, collector) {\n        var _this = this;\n        var schemaIds = this.schemaService.getRegisteredSchemaIds(function (schema) { return schema === 'http' || schema === 'https'; });\n        schemaIds.forEach(function (schemaId) { return collector.add({\n            kind: CompletionItemKind.Module,\n            label: _this.getLabelForValue(schemaId),\n            filterText: _this.getFilterTextForValue(schemaId),\n            insertText: _this.getInsertTextForValue(schemaId, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet, documentation: ''\n        }); });\n    };\n    JSONCompletion.prototype.getLabelForValue = function (value) {\n        return JSON.stringify(value);\n    };\n    JSONCompletion.prototype.getFilterTextForValue = function (value) {\n        return JSON.stringify(value);\n    };\n    JSONCompletion.prototype.getFilterTextForSnippetValue = function (value) {\n        return JSON.stringify(value).replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, '$1');\n    };\n    JSONCompletion.prototype.getLabelForSnippetValue = function (value) {\n        var label = JSON.stringify(value);\n        return label.replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, '$1');\n    };\n    JSONCompletion.prototype.getInsertTextForPlainText = function (text) {\n        return text.replace(/[\\\\\\$\\}]/g, '\\\\$&'); // escape $, \\ and } \n    };\n    JSONCompletion.prototype.getInsertTextForValue = function (value, separatorAfter) {\n        var text = JSON.stringify(value, null, '\\t');\n        if (text === '{}') {\n            return '{$1}' + separatorAfter;\n        }\n        else if (text === '[]') {\n            return '[$1]' + separatorAfter;\n        }\n        return this.getInsertTextForPlainText(text + separatorAfter);\n    };\n    JSONCompletion.prototype.getInsertTextForSnippetValue = function (value, separatorAfter) {\n        var replacer = function (value) {\n            if (typeof value === 'string') {\n                if (value[0] === '^') {\n                    return value.substr(1);\n                }\n            }\n            return JSON.stringify(value);\n        };\n        return stringifyObject(value, '', replacer) + separatorAfter;\n    };\n    JSONCompletion.prototype.getInsertTextForGuessedValue = function (value, separatorAfter) {\n        switch (typeof value) {\n            case 'object':\n                if (value === null) {\n                    return '${1:null}' + separatorAfter;\n                }\n                return this.getInsertTextForValue(value, separatorAfter);\n            case 'string':\n                var snippetValue = JSON.stringify(value);\n                snippetValue = snippetValue.substr(1, snippetValue.length - 2); // remove quotes\n                snippetValue = this.getInsertTextForPlainText(snippetValue); // escape \\ and }\n                return '\"${1:' + snippetValue + '}\"' + separatorAfter;\n            case 'number':\n            case 'boolean':\n                return '${1:' + JSON.stringify(value) + '}' + separatorAfter;\n        }\n        return this.getInsertTextForValue(value, separatorAfter);\n    };\n    JSONCompletion.prototype.getSuggestionKind = function (type) {\n        if (Array.isArray(type)) {\n            var array = type;\n            type = array.length > 0 ? array[0] : undefined;\n        }\n        if (!type) {\n            return CompletionItemKind.Value;\n        }\n        switch (type) {\n            case 'string': return CompletionItemKind.Value;\n            case 'object': return CompletionItemKind.Module;\n            case 'property': return CompletionItemKind.Property;\n            default: return CompletionItemKind.Value;\n        }\n    };\n    JSONCompletion.prototype.getLabelTextForMatchingNode = function (node, document) {\n        switch (node.type) {\n            case 'array':\n                return '[]';\n            case 'object':\n                return '{}';\n            default:\n                var content = document.getText().substr(node.offset, node.length);\n                return content;\n        }\n    };\n    JSONCompletion.prototype.getInsertTextForMatchingNode = function (node, document, separatorAfter) {\n        switch (node.type) {\n            case 'array':\n                return this.getInsertTextForValue([], separatorAfter);\n            case 'object':\n                return this.getInsertTextForValue({}, separatorAfter);\n            default:\n                var content = document.getText().substr(node.offset, node.length) + separatorAfter;\n                return this.getInsertTextForPlainText(content);\n        }\n    };\n    JSONCompletion.prototype.getInsertTextForProperty = function (key, propertySchema, addValue, separatorAfter) {\n        var propertyText = this.getInsertTextForValue(key, '');\n        if (!addValue) {\n            return propertyText;\n        }\n        var resultText = propertyText + ': ';\n        var value;\n        var nValueProposals = 0;\n        if (propertySchema) {\n            if (Array.isArray(propertySchema.defaultSnippets)) {\n                if (propertySchema.defaultSnippets.length === 1) {\n                    var body = propertySchema.defaultSnippets[0].body;\n                    if (isDefined(body)) {\n                        value = this.getInsertTextForSnippetValue(body, '');\n                    }\n                }\n                nValueProposals += propertySchema.defaultSnippets.length;\n            }\n            if (propertySchema.enum) {\n                if (!value && propertySchema.enum.length === 1) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.enum[0], '');\n                }\n                nValueProposals += propertySchema.enum.length;\n            }\n            if (isDefined(propertySchema.default)) {\n                if (!value) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.default, '');\n                }\n                nValueProposals++;\n            }\n            if (Array.isArray(propertySchema.examples) && propertySchema.examples.length) {\n                if (!value) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.examples[0], '');\n                }\n                nValueProposals += propertySchema.examples.length;\n            }\n            if (nValueProposals === 0) {\n                var type = Array.isArray(propertySchema.type) ? propertySchema.type[0] : propertySchema.type;\n                if (!type) {\n                    if (propertySchema.properties) {\n                        type = 'object';\n                    }\n                    else if (propertySchema.items) {\n                        type = 'array';\n                    }\n                }\n                switch (type) {\n                    case 'boolean':\n                        value = '$1';\n                        break;\n                    case 'string':\n                        value = '\"$1\"';\n                        break;\n                    case 'object':\n                        value = '{$1}';\n                        break;\n                    case 'array':\n                        value = '[$1]';\n                        break;\n                    case 'number':\n                    case 'integer':\n                        value = '${1:0}';\n                        break;\n                    case 'null':\n                        value = '${1:null}';\n                        break;\n                    default:\n                        return propertyText;\n                }\n            }\n        }\n        if (!value || nValueProposals > 1) {\n            value = '$1';\n        }\n        return resultText + value + separatorAfter;\n    };\n    JSONCompletion.prototype.getCurrentWord = function (document, offset) {\n        var i = offset - 1;\n        var text = document.getText();\n        while (i >= 0 && ' \\t\\n\\r\\v\":{[,]}'.indexOf(text.charAt(i)) === -1) {\n            i--;\n        }\n        return text.substring(i + 1, offset);\n    };\n    JSONCompletion.prototype.evaluateSeparatorAfter = function (document, offset) {\n        var scanner = Json.createScanner(document.getText(), true);\n        scanner.setPosition(offset);\n        var token = scanner.scan();\n        switch (token) {\n            case 5 /* CommaToken */:\n            case 2 /* CloseBraceToken */:\n            case 4 /* CloseBracketToken */:\n            case 17 /* EOF */:\n                return '';\n            default:\n                return ',';\n        }\n    };\n    JSONCompletion.prototype.findItemAtOffset = function (node, document, offset) {\n        var scanner = Json.createScanner(document.getText(), true);\n        var children = node.items;\n        for (var i = children.length - 1; i >= 0; i--) {\n            var child = children[i];\n            if (offset > child.offset + child.length) {\n                scanner.setPosition(child.offset + child.length);\n                var token = scanner.scan();\n                if (token === 5 /* CommaToken */ && offset >= scanner.getTokenOffset() + scanner.getTokenLength()) {\n                    return i + 1;\n                }\n                return i;\n            }\n            else if (offset >= child.offset) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    JSONCompletion.prototype.isInComment = function (document, start, offset) {\n        var scanner = Json.createScanner(document.getText(), false);\n        scanner.setPosition(start);\n        var token = scanner.scan();\n        while (token !== 17 /* EOF */ && (scanner.getTokenOffset() + scanner.getTokenLength() < offset)) {\n            token = scanner.scan();\n        }\n        return (token === 12 /* LineCommentTrivia */ || token === 13 /* BlockCommentTrivia */) && scanner.getTokenOffset() <= offset;\n    };\n    JSONCompletion.prototype.fromMarkup = function (markupString) {\n        if (markupString && this.doesSupportMarkdown()) {\n            return {\n                kind: MarkupKind.Markdown,\n                value: markupString\n            };\n        }\n        return undefined;\n    };\n    JSONCompletion.prototype.doesSupportMarkdown = function () {\n        if (!isDefined(this.supportsMarkdown)) {\n            var completion = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.completion;\n            this.supportsMarkdown = completion && completion.completionItem && Array.isArray(completion.completionItem.documentationFormat) && completion.completionItem.documentationFormat.indexOf(MarkupKind.Markdown) !== -1;\n        }\n        return this.supportsMarkdown;\n    };\n    JSONCompletion.prototype.doesSupportsCommitCharacters = function () {\n        if (!isDefined(this.supportsCommitCharacters)) {\n            var completion = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.completion;\n            this.supportsCommitCharacters = completion && completion.completionItem && !!completion.completionItem.commitCharactersSupport;\n        }\n        return this.supportsCommitCharacters;\n    };\n    return JSONCompletion;\n}());\nexport { JSONCompletion };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../jsonLanguageTypes';\nexport function findDefinition(document, position, doc) {\n    var offset = document.offsetAt(position);\n    var node = doc.getNodeFromOffset(offset, true);\n    if (!node || !isRef(node)) {\n        return Promise.resolve([]);\n    }\n    var propertyNode = node.parent;\n    var valueNode = propertyNode.valueNode;\n    var path = valueNode.value;\n    var targetNode = findTargetNode(doc, path);\n    if (!targetNode) {\n        return Promise.resolve([]);\n    }\n    var definition = {\n        targetUri: document.uri,\n        originSelectionRange: createRange(document, valueNode),\n        targetRange: createRange(document, targetNode),\n        targetSelectionRange: createRange(document, targetNode)\n    };\n    return Promise.resolve([definition]);\n}\nfunction createRange(document, node) {\n    return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\nfunction isRef(node) {\n    return node.type === 'string' &&\n        node.parent &&\n        node.parent.type === 'property' &&\n        node.parent.valueNode === node &&\n        node.parent.keyNode.value === \"$ref\" ||\n        false;\n}\nfunction findTargetNode(doc, path) {\n    var tokens = parseJSONPointer(path);\n    if (!tokens) {\n        return null;\n    }\n    return findNode(tokens, doc.root);\n}\nfunction findNode(pointer, node) {\n    if (!node) {\n        return null;\n    }\n    if (pointer.length === 0) {\n        return node;\n    }\n    var token = pointer.shift();\n    if (node && node.type === 'object') {\n        var propertyNode = node.properties.find(function (propertyNode) { return propertyNode.keyNode.value === token; });\n        if (!propertyNode) {\n            return null;\n        }\n        return findNode(pointer, propertyNode.valueNode);\n    }\n    else if (node && node.type === 'array') {\n        if (token.match(/^(0|[1-9][0-9]*)$/)) {\n            var index = Number.parseInt(token);\n            var arrayItem = node.items[index];\n            if (!arrayItem) {\n                return null;\n            }\n            return findNode(pointer, arrayItem);\n        }\n    }\n    return null;\n}\nfunction parseJSONPointer(path) {\n    if (path === \"#\") {\n        return [];\n    }\n    if (path[0] !== '#' || path[1] !== '/') {\n        return null;\n    }\n    return path.substring(2).split(/\\//).map(unescape);\n}\nfunction unescape(str) {\n    return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser';\nimport * as Strings from '../utils/strings';\nimport { colorFromHex } from '../utils/colors';\nimport { Range, TextEdit, SymbolKind, Location } from \"../jsonLanguageTypes\";\nvar JSONDocumentSymbols = /** @class */ (function () {\n    function JSONDocumentSymbols(schemaService) {\n        this.schemaService = schemaService;\n    }\n    JSONDocumentSymbols.prototype.findDocumentSymbols = function (document, doc, context) {\n        var _this = this;\n        if (context === void 0) { context = { resultLimit: Number.MAX_VALUE }; }\n        var root = doc.root;\n        if (!root) {\n            return [];\n        }\n        var limit = context.resultLimit || Number.MAX_VALUE;\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_1 = [];\n                for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.type === 'object') {\n                        for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n                            var property = _c[_b];\n                            if (property.keyNode.value === 'key' && property.valueNode) {\n                                var location = Location.create(document.uri, getRange(document, item));\n                                result_1.push({ name: Parser.getNodeValue(property.valueNode), kind: SymbolKind.Function, location: location });\n                                limit--;\n                                if (limit <= 0) {\n                                    if (context && context.onResultLimitExceeded) {\n                                        context.onResultLimitExceeded(resourceString);\n                                    }\n                                    return result_1;\n                                }\n                            }\n                        }\n                    }\n                }\n                return result_1;\n            }\n        }\n        var toVisit = [\n            { node: root, containerName: '' }\n        ];\n        var nextToVisit = 0;\n        var limitExceeded = false;\n        var result = [];\n        var collectOutlineEntries = function (node, containerName) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node) {\n                    if (node) {\n                        toVisit.push({ node: node, containerName: containerName });\n                    }\n                });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        if (limit > 0) {\n                            limit--;\n                            var location = Location.create(document.uri, getRange(document, property));\n                            var childContainerName = containerName ? containerName + '.' + property.keyNode.value : property.keyNode.value;\n                            result.push({ name: _this.getKeyLabel(property), kind: _this.getSymbolKind(valueNode.type), location: location, containerName: containerName });\n                            toVisit.push({ node: valueNode, containerName: childContainerName });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n        };\n        // breath first traversal\n        while (nextToVisit < toVisit.length) {\n            var next = toVisit[nextToVisit++];\n            collectOutlineEntries(next.node, next.containerName);\n        }\n        if (limitExceeded && context && context.onResultLimitExceeded) {\n            context.onResultLimitExceeded(resourceString);\n        }\n        return result;\n    };\n    JSONDocumentSymbols.prototype.findDocumentSymbols2 = function (document, doc, context) {\n        var _this = this;\n        if (context === void 0) { context = { resultLimit: Number.MAX_VALUE }; }\n        var root = doc.root;\n        if (!root) {\n            return [];\n        }\n        var limit = context.resultLimit || Number.MAX_VALUE;\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_2 = [];\n                for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.type === 'object') {\n                        for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n                            var property = _c[_b];\n                            if (property.keyNode.value === 'key' && property.valueNode) {\n                                var range = getRange(document, item);\n                                var selectionRange = getRange(document, property.keyNode);\n                                result_2.push({ name: Parser.getNodeValue(property.valueNode), kind: SymbolKind.Function, range: range, selectionRange: selectionRange });\n                                limit--;\n                                if (limit <= 0) {\n                                    if (context && context.onResultLimitExceeded) {\n                                        context.onResultLimitExceeded(resourceString);\n                                    }\n                                    return result_2;\n                                }\n                            }\n                        }\n                    }\n                }\n                return result_2;\n            }\n        }\n        var result = [];\n        var toVisit = [\n            { node: root, result: result }\n        ];\n        var nextToVisit = 0;\n        var limitExceeded = false;\n        var collectOutlineEntries = function (node, result) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node, index) {\n                    if (node) {\n                        if (limit > 0) {\n                            limit--;\n                            var range = getRange(document, node);\n                            var selectionRange = range;\n                            var name = String(index);\n                            var symbol = { name: name, kind: _this.getSymbolKind(node.type), range: range, selectionRange: selectionRange, children: [] };\n                            result.push(symbol);\n                            toVisit.push({ result: symbol.children, node: node });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        if (limit > 0) {\n                            limit--;\n                            var range = getRange(document, property);\n                            var selectionRange = getRange(document, property.keyNode);\n                            var symbol = { name: _this.getKeyLabel(property), kind: _this.getSymbolKind(valueNode.type), range: range, selectionRange: selectionRange, children: [] };\n                            result.push(symbol);\n                            toVisit.push({ result: symbol.children, node: valueNode });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n        };\n        // breath first traversal\n        while (nextToVisit < toVisit.length) {\n            var next = toVisit[nextToVisit++];\n            collectOutlineEntries(next.node, next.result);\n        }\n        if (limitExceeded && context && context.onResultLimitExceeded) {\n            context.onResultLimitExceeded(resourceString);\n        }\n        return result;\n    };\n    JSONDocumentSymbols.prototype.getSymbolKind = function (nodeType) {\n        switch (nodeType) {\n            case 'object':\n                return SymbolKind.Module;\n            case 'string':\n                return SymbolKind.String;\n            case 'number':\n                return SymbolKind.Number;\n            case 'array':\n                return SymbolKind.Array;\n            case 'boolean':\n                return SymbolKind.Boolean;\n            default: // 'null'\n                return SymbolKind.Variable;\n        }\n    };\n    JSONDocumentSymbols.prototype.getKeyLabel = function (property) {\n        var name = property.keyNode.value;\n        if (name) {\n            name = name.replace(/[\\n]/g, '↵');\n        }\n        if (name && name.trim()) {\n            return name;\n        }\n        return \"\\\"\" + name + \"\\\"\";\n    };\n    JSONDocumentSymbols.prototype.findDocumentColors = function (document, doc, context) {\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var result = [];\n            if (schema) {\n                var limit = context && typeof context.resultLimit === 'number' ? context.resultLimit : Number.MAX_VALUE;\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema);\n                var visitedNode = {};\n                for (var _i = 0, matchingSchemas_1 = matchingSchemas; _i < matchingSchemas_1.length; _i++) {\n                    var s = matchingSchemas_1[_i];\n                    if (!s.inverted && s.schema && (s.schema.format === 'color' || s.schema.format === 'color-hex') && s.node && s.node.type === 'string') {\n                        var nodeId = String(s.node.offset);\n                        if (!visitedNode[nodeId]) {\n                            var color = colorFromHex(Parser.getNodeValue(s.node));\n                            if (color) {\n                                var range = getRange(document, s.node);\n                                result.push({ color: color, range: range });\n                            }\n                            visitedNode[nodeId] = true;\n                            limit--;\n                            if (limit <= 0) {\n                                if (context && context.onResultLimitExceeded) {\n                                    context.onResultLimitExceeded(document.uri);\n                                }\n                                return result;\n                            }\n                        }\n                    }\n                }\n            }\n            return result;\n        });\n    };\n    JSONDocumentSymbols.prototype.getColorPresentations = function (document, doc, color, range) {\n        var result = [];\n        var red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n        function toTwoDigitHex(n) {\n            var r = n.toString(16);\n            return r.length !== 2 ? '0' + r : r;\n        }\n        var label;\n        if (color.alpha === 1) {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n        }\n        else {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n        }\n        result.push({ label: label, textEdit: TextEdit.replace(range, JSON.stringify(label)) });\n        return result;\n    };\n    return JSONDocumentSymbols;\n}());\nexport { JSONDocumentSymbols };\nfunction getRange(document, node) {\n    return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createScanner } from 'jsonc-parser';\nimport { FoldingRangeKind, Position } from '../jsonLanguageTypes';\nexport function getFoldingRanges(document, context) {\n    var ranges = [];\n    var nestingLevels = [];\n    var stack = [];\n    var prevStart = -1;\n    var scanner = createScanner(document.getText(), false);\n    var token = scanner.scan();\n    function addRange(range) {\n        ranges.push(range);\n        nestingLevels.push(stack.length);\n    }\n    while (token !== 17 /* EOF */) {\n        switch (token) {\n            case 1 /* OpenBraceToken */:\n            case 3 /* OpenBracketToken */: {\n                var startLine = document.positionAt(scanner.getTokenOffset()).line;\n                var range = { startLine: startLine, endLine: startLine, kind: token === 1 /* OpenBraceToken */ ? 'object' : 'array' };\n                stack.push(range);\n                break;\n            }\n            case 2 /* CloseBraceToken */:\n            case 4 /* CloseBracketToken */: {\n                var kind = token === 2 /* CloseBraceToken */ ? 'object' : 'array';\n                if (stack.length > 0 && stack[stack.length - 1].kind === kind) {\n                    var range = stack.pop();\n                    var line = document.positionAt(scanner.getTokenOffset()).line;\n                    if (range && line > range.startLine + 1 && prevStart !== range.startLine) {\n                        range.endLine = line - 1;\n                        addRange(range);\n                        prevStart = range.startLine;\n                    }\n                }\n                break;\n            }\n            case 13 /* BlockCommentTrivia */: {\n                var startLine = document.positionAt(scanner.getTokenOffset()).line;\n                var endLine = document.positionAt(scanner.getTokenOffset() + scanner.getTokenLength()).line;\n                if (scanner.getTokenError() === 1 /* UnexpectedEndOfComment */ && startLine + 1 < document.lineCount) {\n                    scanner.setPosition(document.offsetAt(Position.create(startLine + 1, 0)));\n                }\n                else {\n                    if (startLine < endLine) {\n                        addRange({ startLine: startLine, endLine: endLine, kind: FoldingRangeKind.Comment });\n                        prevStart = startLine;\n                    }\n                }\n                break;\n            }\n            case 12 /* LineCommentTrivia */: {\n                var text = document.getText().substr(scanner.getTokenOffset(), scanner.getTokenLength());\n                var m = text.match(/^\\/\\/\\s*#(region\\b)|(endregion\\b)/);\n                if (m) {\n                    var line = document.positionAt(scanner.getTokenOffset()).line;\n                    if (m[1]) { // start pattern match\n                        var range = { startLine: line, endLine: line, kind: FoldingRangeKind.Region };\n                        stack.push(range);\n                    }\n                    else {\n                        var i = stack.length - 1;\n                        while (i >= 0 && stack[i].kind !== FoldingRangeKind.Region) {\n                            i--;\n                        }\n                        if (i >= 0) {\n                            var range = stack[i];\n                            stack.length = i;\n                            if (line > range.startLine && prevStart !== range.startLine) {\n                                range.endLine = line;\n                                addRange(range);\n                                prevStart = range.startLine;\n                            }\n                        }\n                    }\n                }\n                break;\n            }\n        }\n        token = scanner.scan();\n    }\n    var rangeLimit = context && context.rangeLimit;\n    if (typeof rangeLimit !== 'number' || ranges.length <= rangeLimit) {\n        return ranges;\n    }\n    if (context && context.onRangeLimitExceeded) {\n        context.onRangeLimitExceeded(document.uri);\n    }\n    var counts = [];\n    for (var _i = 0, nestingLevels_1 = nestingLevels; _i < nestingLevels_1.length; _i++) {\n        var level = nestingLevels_1[_i];\n        if (level < 30) {\n            counts[level] = (counts[level] || 0) + 1;\n        }\n    }\n    var entries = 0;\n    var maxLevel = 0;\n    for (var i = 0; i < counts.length; i++) {\n        var n = counts[i];\n        if (n) {\n            if (n + entries > rangeLimit) {\n                maxLevel = i;\n                break;\n            }\n            entries += n;\n        }\n    }\n    var result = [];\n    for (var i = 0; i < ranges.length; i++) {\n        var level = nestingLevels[i];\n        if (typeof level === 'number') {\n            if (level < maxLevel || (level === maxLevel && entries++ < rangeLimit)) {\n                result.push(ranges[i]);\n            }\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser';\nimport { Range } from '../jsonLanguageTypes';\nvar JSONHover = /** @class */ (function () {\n    function JSONHover(schemaService, contributions, promiseConstructor) {\n        if (contributions === void 0) { contributions = []; }\n        this.schemaService = schemaService;\n        this.contributions = contributions;\n        this.promise = promiseConstructor || Promise;\n    }\n    JSONHover.prototype.doHover = function (document, position, doc) {\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset);\n        if (!node || (node.type === 'object' || node.type === 'array') && offset > node.offset + 1 && offset < node.offset + node.length - 1) {\n            return this.promise.resolve(null);\n        }\n        var hoverRangeNode = node;\n        // use the property description when hovering over an object key\n        if (node.type === 'string') {\n            var parent = node.parent;\n            if (parent && parent.type === 'property' && parent.keyNode === node) {\n                node = parent.valueNode;\n                if (!node) {\n                    return this.promise.resolve(null);\n                }\n            }\n        }\n        var hoverRange = Range.create(document.positionAt(hoverRangeNode.offset), document.positionAt(hoverRangeNode.offset + hoverRangeNode.length));\n        var createHover = function (contents) {\n            var result = {\n                contents: contents,\n                range: hoverRange\n            };\n            return result;\n        };\n        var location = Parser.getNodePath(node);\n        for (var i = this.contributions.length - 1; i >= 0; i--) {\n            var contribution = this.contributions[i];\n            var promise = contribution.getInfoContribution(document.uri, location);\n            if (promise) {\n                return promise.then(function (htmlContent) { return createHover(htmlContent); });\n            }\n        }\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            if (schema && node) {\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n                var title_1 = undefined;\n                var markdownDescription_1 = undefined;\n                var markdownEnumValueDescription_1 = undefined, enumValue_1 = undefined;\n                matchingSchemas.every(function (s) {\n                    if (s.node === node && !s.inverted && s.schema) {\n                        title_1 = title_1 || s.schema.title;\n                        markdownDescription_1 = markdownDescription_1 || s.schema.markdownDescription || toMarkdown(s.schema.description);\n                        if (s.schema.enum) {\n                            var idx = s.schema.enum.indexOf(Parser.getNodeValue(node));\n                            if (s.schema.markdownEnumDescriptions) {\n                                markdownEnumValueDescription_1 = s.schema.markdownEnumDescriptions[idx];\n                            }\n                            else if (s.schema.enumDescriptions) {\n                                markdownEnumValueDescription_1 = toMarkdown(s.schema.enumDescriptions[idx]);\n                            }\n                            if (markdownEnumValueDescription_1) {\n                                enumValue_1 = s.schema.enum[idx];\n                                if (typeof enumValue_1 !== 'string') {\n                                    enumValue_1 = JSON.stringify(enumValue_1);\n                                }\n                            }\n                        }\n                    }\n                    return true;\n                });\n                var result = '';\n                if (title_1) {\n                    result = toMarkdown(title_1);\n                }\n                if (markdownDescription_1) {\n                    if (result.length > 0) {\n                        result += \"\\n\\n\";\n                    }\n                    result += markdownDescription_1;\n                }\n                if (markdownEnumValueDescription_1) {\n                    if (result.length > 0) {\n                        result += \"\\n\\n\";\n                    }\n                    result += \"`\" + toMarkdownCodeBlock(enumValue_1) + \"`: \" + markdownEnumValueDescription_1;\n                }\n                return createHover([result]);\n            }\n            return null;\n        });\n    };\n    return JSONHover;\n}());\nexport { JSONHover };\nfunction toMarkdown(plain) {\n    if (plain) {\n        var res = plain.replace(/([^\\n\\r])(\\r?\\n)([^\\n\\r])/gm, '$1\\n\\n$3'); // single new lines to \\n\\n (Markdown paragraph)\n        return res.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    return undefined;\n}\nfunction toMarkdownCodeBlock(content) {\n    // see https://daringfireball.net/projects/markdown/syntax#precode\n    if (content.indexOf('`') !== -1) {\n        return '`` ' + content + ' ``';\n    }\n    return content;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Json from 'jsonc-parser';\nimport { URI } from 'vscode-uri';\nimport * as Strings from '../utils/strings';\nimport * as Parser from '../parser/jsonParser';\nimport * as nls from 'vscode-nls';\nvar localize = nls.loadMessageBundle();\nvar FilePatternAssociation = /** @class */ (function () {\n    function FilePatternAssociation(pattern, uris) {\n        this.patternRegExps = [];\n        this.isInclude = [];\n        try {\n            for (var _i = 0, pattern_1 = pattern; _i < pattern_1.length; _i++) {\n                var p = pattern_1[_i];\n                var include = p[0] !== '!';\n                if (!include) {\n                    p = p.substring(1);\n                }\n                this.patternRegExps.push(new RegExp(Strings.convertSimple2RegExpPattern(p) + '$'));\n                this.isInclude.push(include);\n            }\n            this.uris = uris;\n        }\n        catch (e) {\n            // invalid pattern\n            this.patternRegExps.length = 0;\n            this.isInclude.length = 0;\n            this.uris = [];\n        }\n    }\n    FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n        var match = false;\n        for (var i = 0; i < this.patternRegExps.length; i++) {\n            var regExp = this.patternRegExps[i];\n            if (regExp.test(fileName)) {\n                match = this.isInclude[i];\n            }\n        }\n        return match;\n    };\n    FilePatternAssociation.prototype.getURIs = function () {\n        return this.uris;\n    };\n    return FilePatternAssociation;\n}());\nvar SchemaHandle = /** @class */ (function () {\n    function SchemaHandle(service, url, unresolvedSchemaContent) {\n        this.service = service;\n        this.url = url;\n        this.dependencies = {};\n        if (unresolvedSchemaContent) {\n            this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n        }\n    }\n    SchemaHandle.prototype.getUnresolvedSchema = function () {\n        if (!this.unresolvedSchema) {\n            this.unresolvedSchema = this.service.loadSchema(this.url);\n        }\n        return this.unresolvedSchema;\n    };\n    SchemaHandle.prototype.getResolvedSchema = function () {\n        var _this = this;\n        if (!this.resolvedSchema) {\n            this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n                return _this.service.resolveSchemaContent(unresolved, _this.url, _this.dependencies);\n            });\n        }\n        return this.resolvedSchema;\n    };\n    SchemaHandle.prototype.clearSchema = function () {\n        this.resolvedSchema = undefined;\n        this.unresolvedSchema = undefined;\n        this.dependencies = {};\n    };\n    return SchemaHandle;\n}());\nvar UnresolvedSchema = /** @class */ (function () {\n    function UnresolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    return UnresolvedSchema;\n}());\nexport { UnresolvedSchema };\nvar ResolvedSchema = /** @class */ (function () {\n    function ResolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    ResolvedSchema.prototype.getSection = function (path) {\n        var schemaRef = this.getSectionRecursive(path, this.schema);\n        if (schemaRef) {\n            return Parser.asSchema(schemaRef);\n        }\n        return undefined;\n    };\n    ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n        if (!schema || typeof schema === 'boolean' || path.length === 0) {\n            return schema;\n        }\n        var next = path.shift();\n        if (schema.properties && typeof schema.properties[next]) {\n            return this.getSectionRecursive(path, schema.properties[next]);\n        }\n        else if (schema.patternProperties) {\n            for (var _i = 0, _a = Object.keys(schema.patternProperties); _i < _a.length; _i++) {\n                var pattern = _a[_i];\n                var regex = new RegExp(pattern);\n                if (regex.test(next)) {\n                    return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n                }\n            }\n        }\n        else if (typeof schema.additionalProperties === 'object') {\n            return this.getSectionRecursive(path, schema.additionalProperties);\n        }\n        else if (next.match('[0-9]+')) {\n            if (Array.isArray(schema.items)) {\n                var index = parseInt(next, 10);\n                if (!isNaN(index) && schema.items[index]) {\n                    return this.getSectionRecursive(path, schema.items[index]);\n                }\n            }\n            else if (schema.items) {\n                return this.getSectionRecursive(path, schema.items);\n            }\n        }\n        return undefined;\n    };\n    return ResolvedSchema;\n}());\nexport { ResolvedSchema };\nvar JSONSchemaService = /** @class */ (function () {\n    function JSONSchemaService(requestService, contextService, promiseConstructor) {\n        this.contextService = contextService;\n        this.requestService = requestService;\n        this.promiseConstructor = promiseConstructor || Promise;\n        this.callOnDispose = [];\n        this.contributionSchemas = {};\n        this.contributionAssociations = [];\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.registeredSchemasIds = {};\n    }\n    JSONSchemaService.prototype.getRegisteredSchemaIds = function (filter) {\n        return Object.keys(this.registeredSchemasIds).filter(function (id) {\n            var scheme = URI.parse(id).scheme;\n            return scheme !== 'schemaservice' && (!filter || filter(scheme));\n        });\n    };\n    Object.defineProperty(JSONSchemaService.prototype, \"promise\", {\n        get: function () {\n            return this.promiseConstructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JSONSchemaService.prototype.dispose = function () {\n        while (this.callOnDispose.length > 0) {\n            this.callOnDispose.pop()();\n        }\n    };\n    JSONSchemaService.prototype.onResourceChange = function (uri) {\n        var _this = this;\n        var hasChanges = false;\n        uri = normalizeId(uri);\n        var toWalk = [uri];\n        var all = Object.keys(this.schemasById).map(function (key) { return _this.schemasById[key]; });\n        while (toWalk.length) {\n            var curr = toWalk.pop();\n            for (var i = 0; i < all.length; i++) {\n                var handle = all[i];\n                if (handle && (handle.url === curr || handle.dependencies[curr])) {\n                    if (handle.url !== curr) {\n                        toWalk.push(handle.url);\n                    }\n                    handle.clearSchema();\n                    all[i] = undefined;\n                    hasChanges = true;\n                }\n            }\n        }\n        return hasChanges;\n    };\n    JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n        if (schemaContributions.schemas) {\n            var schemas = schemaContributions.schemas;\n            for (var id in schemas) {\n                var normalizedId = normalizeId(id);\n                this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n            }\n        }\n        if (Array.isArray(schemaContributions.schemaAssociations)) {\n            var schemaAssociations = schemaContributions.schemaAssociations;\n            for (var _i = 0, schemaAssociations_1 = schemaAssociations; _i < schemaAssociations_1.length; _i++) {\n                var schemaAssociation = schemaAssociations_1[_i];\n                var uris = schemaAssociation.uris.map(normalizeId);\n                var association = this.addFilePatternAssociation(schemaAssociation.pattern, uris);\n                this.contributionAssociations.push(association);\n            }\n        }\n    };\n    JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n        var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n        this.schemasById[id] = schemaHandle;\n        return schemaHandle;\n    };\n    JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n        return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n    };\n    JSONSchemaService.prototype.addFilePatternAssociation = function (pattern, uris) {\n        var fpa = new FilePatternAssociation(pattern, uris);\n        this.filePatternAssociations.push(fpa);\n        return fpa;\n    };\n    JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n        var id = normalizeId(uri);\n        this.registeredSchemasIds[id] = true;\n        this.cachedSchemaForResource = undefined;\n        if (filePatterns) {\n            this.addFilePatternAssociation(filePatterns, [uri]);\n        }\n        return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n    };\n    JSONSchemaService.prototype.clearExternalSchemas = function () {\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.registeredSchemasIds = {};\n        this.cachedSchemaForResource = undefined;\n        for (var id in this.contributionSchemas) {\n            this.schemasById[id] = this.contributionSchemas[id];\n            this.registeredSchemasIds[id] = true;\n        }\n        for (var _i = 0, _a = this.contributionAssociations; _i < _a.length; _i++) {\n            var contributionAssociation = _a[_i];\n            this.filePatternAssociations.push(contributionAssociation);\n        }\n    };\n    JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n        var id = normalizeId(schemaId);\n        var schemaHandle = this.schemasById[id];\n        if (schemaHandle) {\n            return schemaHandle.getResolvedSchema();\n        }\n        return this.promise.resolve(undefined);\n    };\n    JSONSchemaService.prototype.loadSchema = function (url) {\n        if (!this.requestService) {\n            var errorMessage = localize('json.schema.norequestservice', 'Unable to load schema from \\'{0}\\'. No schema request service available', toDisplayString(url));\n            return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n        }\n        return this.requestService(url).then(function (content) {\n            if (!content) {\n                var errorMessage = localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n                return new UnresolvedSchema({}, [errorMessage]);\n            }\n            var schemaContent = {};\n            var jsonErrors = [];\n            schemaContent = Json.parse(content, jsonErrors);\n            var errors = jsonErrors.length ? [localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': Parse error at offset {1}.', toDisplayString(url), jsonErrors[0].offset)] : [];\n            return new UnresolvedSchema(schemaContent, errors);\n        }, function (error) {\n            var errorMessage = error.toString();\n            var errorSplit = error.toString().split('Error: ');\n            if (errorSplit.length > 1) {\n                // more concise error message, URL and context are attached by caller anyways\n                errorMessage = errorSplit[1];\n            }\n            if (Strings.endsWith(errorMessage, '.')) {\n                errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n            }\n            return new UnresolvedSchema({}, [localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': {1}.', toDisplayString(url), errorMessage)]);\n        });\n    };\n    JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve, schemaURL, dependencies) {\n        var _this = this;\n        var resolveErrors = schemaToResolve.errors.slice(0);\n        var schema = schemaToResolve.schema;\n        if (schema.$schema) {\n            var id = normalizeId(schema.$schema);\n            if (id === 'http://json-schema.org/draft-03/schema') {\n                return this.promise.resolve(new ResolvedSchema({}, [localize('json.schema.draft03.notsupported', \"Draft-03 schemas are not supported.\")]));\n            }\n            else if (id === 'https://json-schema.org/draft/2019-09/schema') {\n                schemaToResolve.errors.push(localize('json.schema.draft201909.notsupported', \"Draft 2019-09 schemas are not yet fully supported.\"));\n            }\n        }\n        var contextService = this.contextService;\n        var findSection = function (schema, path) {\n            if (!path) {\n                return schema;\n            }\n            var current = schema;\n            if (path[0] === '/') {\n                path = path.substr(1);\n            }\n            path.split('/').some(function (part) {\n                current = current[part];\n                return !current;\n            });\n            return current;\n        };\n        var merge = function (target, sourceRoot, sourceURI, refSegment) {\n            var path = refSegment ? decodeURIComponent(refSegment) : undefined;\n            var section = findSection(sourceRoot, path);\n            if (section) {\n                for (var key in section) {\n                    if (section.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                        target[key] = section[key];\n                    }\n                }\n            }\n            else {\n                resolveErrors.push(localize('json.schema.invalidref', '$ref \\'{0}\\' in \\'{1}\\' can not be resolved.', path, sourceURI));\n            }\n        };\n        var resolveExternalLink = function (node, uri, refSegment, parentSchemaURL, parentSchemaDependencies) {\n            if (contextService && !/^\\w+:\\/\\/.*/.test(uri)) {\n                uri = contextService.resolveRelativePath(uri, parentSchemaURL);\n            }\n            uri = normalizeId(uri);\n            var referencedHandle = _this.getOrAddSchemaHandle(uri);\n            return referencedHandle.getUnresolvedSchema().then(function (unresolvedSchema) {\n                parentSchemaDependencies[uri] = true;\n                if (unresolvedSchema.errors.length) {\n                    var loc = refSegment ? uri + '#' + refSegment : uri;\n                    resolveErrors.push(localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n                }\n                merge(node, unresolvedSchema.schema, uri, refSegment);\n                return resolveRefs(node, unresolvedSchema.schema, uri, referencedHandle.dependencies);\n            });\n        };\n        var resolveRefs = function (node, parentSchema, parentSchemaURL, parentSchemaDependencies) {\n            if (!node || typeof node !== 'object') {\n                return Promise.resolve(null);\n            }\n            var toWalk = [node];\n            var seen = [];\n            var openPromises = [];\n            var collectEntries = function () {\n                var entries = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    entries[_i] = arguments[_i];\n                }\n                for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n                    var entry = entries_1[_a];\n                    if (typeof entry === 'object') {\n                        toWalk.push(entry);\n                    }\n                }\n            };\n            var collectMapEntries = function () {\n                var maps = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    maps[_i] = arguments[_i];\n                }\n                for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n                    var map = maps_1[_a];\n                    if (typeof map === 'object') {\n                        for (var k in map) {\n                            var key = k;\n                            var entry = map[key];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var collectArrayEntries = function () {\n                var arrays = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    arrays[_i] = arguments[_i];\n                }\n                for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n                    var array = arrays_1[_a];\n                    if (Array.isArray(array)) {\n                        for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n                            var entry = array_1[_b];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var handleRef = function (next) {\n                var seenRefs = [];\n                while (next.$ref) {\n                    var ref = next.$ref;\n                    var segments = ref.split('#', 2);\n                    delete next.$ref;\n                    if (segments[0].length > 0) {\n                        openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentSchemaURL, parentSchemaDependencies));\n                        return;\n                    }\n                    else {\n                        if (seenRefs.indexOf(ref) === -1) {\n                            merge(next, parentSchema, parentSchemaURL, segments[1]); // can set next.$ref again, use seenRefs to avoid circle\n                            seenRefs.push(ref);\n                        }\n                    }\n                }\n                collectEntries(next.items, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else);\n                collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n                collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n            };\n            while (toWalk.length) {\n                var next = toWalk.pop();\n                if (seen.indexOf(next) >= 0) {\n                    continue;\n                }\n                seen.push(next);\n                handleRef(next);\n            }\n            return _this.promise.all(openPromises);\n        };\n        return resolveRefs(schema, schema, schemaURL, dependencies).then(function (_) { return new ResolvedSchema(schema, resolveErrors); });\n    };\n    JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n        // first use $schema if present\n        if (document && document.root && document.root.type === 'object') {\n            var schemaProperties = document.root.properties.filter(function (p) { return (p.keyNode.value === '$schema') && p.valueNode && p.valueNode.type === 'string'; });\n            if (schemaProperties.length > 0) {\n                var valueNode = schemaProperties[0].valueNode;\n                if (valueNode && valueNode.type === 'string') {\n                    var schemeId = Parser.getNodeValue(valueNode);\n                    if (schemeId && Strings.startsWith(schemeId, '.') && this.contextService) {\n                        schemeId = this.contextService.resolveRelativePath(schemeId, resource);\n                    }\n                    if (schemeId) {\n                        var id = normalizeId(schemeId);\n                        return this.getOrAddSchemaHandle(id).getResolvedSchema();\n                    }\n                }\n            }\n        }\n        if (this.cachedSchemaForResource && this.cachedSchemaForResource.resource === resource) {\n            return this.cachedSchemaForResource.resolvedSchema;\n        }\n        var seen = Object.create(null);\n        var schemas = [];\n        for (var _i = 0, _a = this.filePatternAssociations; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry.matchesPattern(resource)) {\n                for (var _b = 0, _c = entry.getURIs(); _b < _c.length; _b++) {\n                    var schemaId = _c[_b];\n                    if (!seen[schemaId]) {\n                        schemas.push(schemaId);\n                        seen[schemaId] = true;\n                    }\n                }\n            }\n        }\n        var resolvedSchema = schemas.length > 0 ? this.createCombinedSchema(resource, schemas).getResolvedSchema() : this.promise.resolve(undefined);\n        this.cachedSchemaForResource = { resource: resource, resolvedSchema: resolvedSchema };\n        return resolvedSchema;\n    };\n    JSONSchemaService.prototype.createCombinedSchema = function (resource, schemaIds) {\n        if (schemaIds.length === 1) {\n            return this.getOrAddSchemaHandle(schemaIds[0]);\n        }\n        else {\n            var combinedSchemaId = 'schemaservice://combinedSchema/' + encodeURIComponent(resource);\n            var combinedSchema = {\n                allOf: schemaIds.map(function (schemaId) { return ({ $ref: schemaId }); })\n            };\n            return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n        }\n    };\n    return JSONSchemaService;\n}());\nexport { JSONSchemaService };\nfunction normalizeId(id) {\n    // remove trailing '#', normalize drive capitalization\n    try {\n        return URI.parse(id).toString();\n    }\n    catch (e) {\n        return id;\n    }\n}\nfunction toDisplayString(url) {\n    try {\n        var uri = URI.parse(url);\n        if (uri.scheme === 'file') {\n            return uri.fsPath;\n        }\n    }\n    catch (e) {\n        // ignore\n    }\n    return url;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range, SelectionRange } from '../jsonLanguageTypes';\nimport { createScanner } from 'jsonc-parser';\nexport function getSelectionRanges(document, positions, doc) {\n    function getSelectionRange(position) {\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset, true);\n        var result = [];\n        while (node) {\n            switch (node.type) {\n                case 'string':\n                case 'object':\n                case 'array':\n                    // range without \", [ or {\n                    var cStart = node.offset + 1, cEnd = node.offset + node.length - 1;\n                    if (cStart < cEnd && offset >= cStart && offset <= cEnd) {\n                        result.push(newRange(cStart, cEnd));\n                    }\n                    result.push(newRange(node.offset, node.offset + node.length));\n                    break;\n                case 'number':\n                case 'boolean':\n                case 'null':\n                case 'property':\n                    result.push(newRange(node.offset, node.offset + node.length));\n                    break;\n            }\n            if (node.type === 'property' || node.parent && node.parent.type === 'array') {\n                var afterCommaOffset = getOffsetAfterNextToken(node.offset + node.length, 5 /* CommaToken */);\n                if (afterCommaOffset !== -1) {\n                    result.push(newRange(node.offset, afterCommaOffset));\n                }\n            }\n            node = node.parent;\n        }\n        var current = undefined;\n        for (var index = result.length - 1; index >= 0; index--) {\n            current = SelectionRange.create(result[index], current);\n        }\n        if (!current) {\n            current = SelectionRange.create(Range.create(position, position));\n        }\n        return current;\n    }\n    function newRange(start, end) {\n        return Range.create(document.positionAt(start), document.positionAt(end));\n    }\n    var scanner = createScanner(document.getText(), true);\n    function getOffsetAfterNextToken(offset, expectedToken) {\n        scanner.setPosition(offset);\n        var token = scanner.scan();\n        if (token === expectedToken) {\n            return scanner.getTokenOffset() + scanner.getTokenLength();\n        }\n        return -1;\n    }\n    return positions.map(getSelectionRange);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { UnresolvedSchema } from './jsonSchemaService';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes';\nimport * as nls from 'vscode-nls';\nimport { isBoolean } from '../utils/objects';\nvar localize = nls.loadMessageBundle();\nvar JSONValidation = /** @class */ (function () {\n    function JSONValidation(jsonSchemaService, promiseConstructor) {\n        this.jsonSchemaService = jsonSchemaService;\n        this.promise = promiseConstructor;\n        this.validationEnabled = true;\n    }\n    JSONValidation.prototype.configure = function (raw) {\n        if (raw) {\n            this.validationEnabled = raw.validate;\n            this.commentSeverity = raw.allowComments ? undefined : DiagnosticSeverity.Error;\n        }\n    };\n    JSONValidation.prototype.doValidation = function (textDocument, jsonDocument, documentSettings, schema) {\n        var _this = this;\n        if (!this.validationEnabled) {\n            return this.promise.resolve([]);\n        }\n        var diagnostics = [];\n        var added = {};\n        var addProblem = function (problem) {\n            // remove duplicated messages\n            var signature = problem.range.start.line + ' ' + problem.range.start.character + ' ' + problem.message;\n            if (!added[signature]) {\n                added[signature] = true;\n                diagnostics.push(problem);\n            }\n        };\n        var getDiagnostics = function (schema) {\n            var trailingCommaSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n            var commentSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.comments) : _this.commentSeverity;\n            if (schema) {\n                if (schema.errors.length && jsonDocument.root) {\n                    var astRoot = jsonDocument.root;\n                    var property = astRoot.type === 'object' ? astRoot.properties[0] : undefined;\n                    if (property && property.keyNode.value === '$schema') {\n                        var node = property.valueNode || property;\n                        var range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                    else {\n                        var range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                }\n                else {\n                    var semanticErrors = jsonDocument.validate(textDocument, schema.schema);\n                    if (semanticErrors) {\n                        semanticErrors.forEach(addProblem);\n                    }\n                }\n                if (schemaAllowsComments(schema.schema)) {\n                    commentSeverity = undefined;\n                }\n                if (schemaAllowsTrailingCommas(schema.schema)) {\n                    trailingCommaSeverity = undefined;\n                }\n            }\n            for (var _i = 0, _a = jsonDocument.syntaxErrors; _i < _a.length; _i++) {\n                var p = _a[_i];\n                if (p.code === ErrorCode.TrailingComma) {\n                    if (typeof trailingCommaSeverity !== 'number') {\n                        continue;\n                    }\n                    p.severity = trailingCommaSeverity;\n                }\n                addProblem(p);\n            }\n            if (typeof commentSeverity === 'number') {\n                var message_1 = localize('InvalidCommentToken', 'Comments are not permitted in JSON.');\n                jsonDocument.comments.forEach(function (c) {\n                    addProblem(Diagnostic.create(c, message_1, commentSeverity, ErrorCode.CommentNotPermitted));\n                });\n            }\n            return diagnostics;\n        };\n        if (schema) {\n            var id = schema.id || ('schemaservice://untitled/' + idCounter++);\n            return this.jsonSchemaService.resolveSchemaContent(new UnresolvedSchema(schema), id, {}).then(function (resolvedSchema) {\n                return getDiagnostics(resolvedSchema);\n            });\n        }\n        return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(function (schema) {\n            return getDiagnostics(schema);\n        });\n    };\n    return JSONValidation;\n}());\nexport { JSONValidation };\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowComments)) {\n            return schemaRef.allowComments;\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsComments(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowTrailingCommas)) {\n            return schemaRef.allowTrailingCommas;\n        }\n        var deprSchemaRef = schemaRef;\n        if (isBoolean(deprSchemaRef['allowsTrailingCommas'])) { // deprecated\n            return deprSchemaRef['allowsTrailingCommas'];\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsTrailingCommas(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n    switch (severityLevel) {\n        case 'error': return DiagnosticSeverity.Error;\n        case 'warning': return DiagnosticSeverity.Warning;\n        case 'ignore': return undefined;\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar a = 97;\nvar f = 102;\nexport function hexDigit(charCode) {\n    if (charCode < Digit0) {\n        return 0;\n    }\n    if (charCode <= Digit9) {\n        return charCode - Digit0;\n    }\n    if (charCode < a) {\n        charCode += (a - A);\n    }\n    if (charCode >= a && charCode <= f) {\n        return charCode - a + 10;\n    }\n    return 0;\n}\nexport function colorFromHex(text) {\n    if (text[0] !== '#') {\n        return undefined;\n    }\n    switch (text.length) {\n        case 4:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: 1\n            };\n        case 5:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(4)) * 0x11) / 255.0,\n            };\n        case 7:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: 1\n            };\n        case 9:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(7)) * 0x10 + hexDigit(text.charCodeAt(8))) / 255.0\n            };\n    }\n    return undefined;\n}\nexport function colorFrom256RGB(red, green, blue, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    return {\n        red: red / 255.0,\n        green: green / 255.0,\n        blue: blue / 255.0,\n        alpha: alpha\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function stringifyObject(obj, indent, stringifyLiteral) {\n    if (obj !== null && typeof obj === 'object') {\n        var newIndent = indent + '\\t';\n        if (Array.isArray(obj)) {\n            if (obj.length === 0) {\n                return '[]';\n            }\n            var result = '[\\n';\n            for (var i = 0; i < obj.length; i++) {\n                result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n                if (i < obj.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + ']';\n            return result;\n        }\n        else {\n            var keys = Object.keys(obj);\n            if (keys.length === 0) {\n                return '{}';\n            }\n            var result = '{\\n';\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                result += newIndent + JSON.stringify(key) + ': ' + stringifyObject(obj[key], newIndent, stringifyLiteral);\n                if (i < keys.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + '}';\n            return result;\n        }\n    }\n    return stringifyLiteral(obj);\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    var i, key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        var oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        var otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function isNumber(val) {\n    return typeof val === 'number';\n}\nexport function isDefined(val) {\n    return typeof val !== 'undefined';\n}\nexport function isBoolean(val) {\n    return typeof val === 'boolean';\n}\nexport function isString(val) {\n    return typeof val === 'string';\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n    dispose() {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = undefined;\r\n        }\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Emitter = Emitter;\r\nEmitter._noop = function () { };\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nvar ProgressNotification;\r\n(function (ProgressNotification) {\r\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\r\n})(ProgressNotification || (ProgressNotification = {}));\r\nclass ProgressType {\r\n    constructor() {\r\n    }\r\n}\r\nexports.ProgressType = ProgressType;\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        if (!Is.string(value)) {\r\n            return Trace.Off;\r\n        }\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let progressHandlers = new Map();\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let unhandledProgressEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        onProgress: (_type, token, handler) => {\r\n            if (progressHandlers.has(token)) {\r\n                throw new Error(`Progress handler for token ${token} already registered`);\r\n            }\r\n            progressHandlers.set(token, handler);\r\n            return {\r\n                dispose: () => {\r\n                    progressHandlers.delete(token);\r\n                }\r\n            };\r\n        },\r\n        sendProgress: (_type, token, value) => {\r\n            connection.sendNotification(ProgressNotification.type, { token, value });\r\n        },\r\n        onUnhandledProgress: unhandledProgressEmitter.event,\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            // eslint-disable-next-line no-console\r\n            console.log('inspect');\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    connection.onNotification(ProgressNotification.type, (params) => {\r\n        const handler = progressHandlers.get(params.token);\r\n        if (handler) {\r\n            handler(params.value);\r\n        }\r\n        else {\r\n            unhandledProgressEmitter.fire(params);\r\n        }\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't received the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.socket.destroy();\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    ErrorCodes.ContentModified = -32801;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n *\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\n/**\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\nexports.ProgressType = vscode_jsonrpc_1.ProgressType;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nconst callHierarchy = require(\"./protocol.callHierarchy.proposed\");\r\nconst st = require(\"./protocol.sematicTokens.proposed\");\r\nvar Proposed;\r\n(function (Proposed) {\r\n    let CallHierarchyPrepareRequest;\r\n    (function (CallHierarchyPrepareRequest) {\r\n        CallHierarchyPrepareRequest.method = callHierarchy.CallHierarchyPrepareRequest.method;\r\n        CallHierarchyPrepareRequest.type = callHierarchy.CallHierarchyPrepareRequest.type;\r\n    })(CallHierarchyPrepareRequest = Proposed.CallHierarchyPrepareRequest || (Proposed.CallHierarchyPrepareRequest = {}));\r\n    let CallHierarchyIncomingCallsRequest;\r\n    (function (CallHierarchyIncomingCallsRequest) {\r\n        CallHierarchyIncomingCallsRequest.method = callHierarchy.CallHierarchyIncomingCallsRequest.method;\r\n        CallHierarchyIncomingCallsRequest.type = callHierarchy.CallHierarchyIncomingCallsRequest.type;\r\n    })(CallHierarchyIncomingCallsRequest = Proposed.CallHierarchyIncomingCallsRequest || (Proposed.CallHierarchyIncomingCallsRequest = {}));\r\n    let CallHierarchyOutgoingCallsRequest;\r\n    (function (CallHierarchyOutgoingCallsRequest) {\r\n        CallHierarchyOutgoingCallsRequest.method = callHierarchy.CallHierarchyOutgoingCallsRequest.method;\r\n        CallHierarchyOutgoingCallsRequest.type = callHierarchy.CallHierarchyOutgoingCallsRequest.type;\r\n    })(CallHierarchyOutgoingCallsRequest = Proposed.CallHierarchyOutgoingCallsRequest || (Proposed.CallHierarchyOutgoingCallsRequest = {}));\r\n    Proposed.SemanticTokenTypes = st.SemanticTokenTypes;\r\n    Proposed.SemanticTokenModifiers = st.SemanticTokenModifiers;\r\n    Proposed.SemanticTokens = st.SemanticTokens;\r\n    let SemanticTokensRequest;\r\n    (function (SemanticTokensRequest) {\r\n        SemanticTokensRequest.method = st.SemanticTokensRequest.method;\r\n        SemanticTokensRequest.type = st.SemanticTokensRequest.type;\r\n    })(SemanticTokensRequest = Proposed.SemanticTokensRequest || (Proposed.SemanticTokensRequest = {}));\r\n    let SemanticTokensEditsRequest;\r\n    (function (SemanticTokensEditsRequest) {\r\n        SemanticTokensEditsRequest.method = st.SemanticTokensEditsRequest.method;\r\n        SemanticTokensEditsRequest.type = st.SemanticTokensEditsRequest.type;\r\n    })(SemanticTokensEditsRequest = Proposed.SemanticTokensEditsRequest || (Proposed.SemanticTokensEditsRequest = {}));\r\n    let SemanticTokensRangeRequest;\r\n    (function (SemanticTokensRangeRequest) {\r\n        SemanticTokensRangeRequest.method = st.SemanticTokensRangeRequest.method;\r\n        SemanticTokensRangeRequest.type = st.SemanticTokensRangeRequest.type;\r\n    })(SemanticTokensRangeRequest = Proposed.SemanticTokensRangeRequest || (Proposed.SemanticTokensRangeRequest = {}));\r\n})(Proposed = exports.Proposed || (exports.Proposed = {}));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType0 = ProtocolRequestType0;\r\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType = ProtocolRequestType;\r\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType = ProtocolNotificationType;\r\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) TypeFox and others. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to result a `CallHierarchyItem` in a document at a given position.\r\n * Can be used as an input to a incoming or outgoing call hierarchy.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyPrepareRequest;\r\n(function (CallHierarchyPrepareRequest) {\r\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\r\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\r\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\r\n/**\r\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyIncomingCallsRequest;\r\n(function (CallHierarchyIncomingCallsRequest) {\r\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\r\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\r\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\r\n/**\r\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyOutgoingCallsRequest;\r\n(function (CallHierarchyOutgoingCallsRequest) {\r\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\r\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\r\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.method = 'textDocument/documentColor';\r\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\r\n    /** @deprecated Use DocumentColorRequest.type */\r\n    DocumentColorRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\r\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DeclarationRequest;\r\n(function (DeclarationRequest) {\r\n    DeclarationRequest.method = 'textDocument/declaration';\r\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\r\n    /** @deprecated Use DeclarationRequest.type */\r\n    DeclarationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\r\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\r\n    /** @deprecated Use FoldingRangeRequest.type */\r\n    FoldingRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.method = 'textDocument/implementation';\r\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\r\n    /** @deprecated Use ImplementationRequest.type */\r\n    ImplementationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\r\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\r\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\r\nexports.SelectionRangeRequest = protocol_selectionRange_1.SelectionRangeRequest;\r\nconst protocol_progress_1 = require(\"./protocol.progress\");\r\nexports.WorkDoneProgress = protocol_progress_1.WorkDoneProgress;\r\nexports.WorkDoneProgressCreateRequest = protocol_progress_1.WorkDoneProgressCreateRequest;\r\nexports.WorkDoneProgressCancelNotification = protocol_progress_1.WorkDoneProgressCancelNotification;\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * The DocumentFilter namespace provides helper functions to work with\r\n * [DocumentFilter](#DocumentFilter) literals.\r\n */\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The DocumentSelector namespace provides helper functions to work with\r\n * [DocumentSelector](#DocumentSelector)s.\r\n */\r\nvar DocumentSelector;\r\n(function (DocumentSelector) {\r\n    function is(value) {\r\n        if (!Array.isArray(value)) {\r\n            return false;\r\n        }\r\n        for (let elem of value) {\r\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    DocumentSelector.is = is;\r\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new files and folders.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing files and folders.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing files and folders.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guarantee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * The StaticRegistrationOptions namespace provides helper functions to work with\r\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\r\n */\r\nvar StaticRegistrationOptions;\r\n(function (StaticRegistrationOptions) {\r\n    function hasId(value) {\r\n        const candidate = value;\r\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\r\n    }\r\n    StaticRegistrationOptions.hasId = hasId;\r\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\r\n/**\r\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\r\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\r\n */\r\nvar TextDocumentRegistrationOptions;\r\n(function (TextDocumentRegistrationOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\r\n    }\r\n    TextDocumentRegistrationOptions.is = is;\r\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\r\n/**\r\n * The WorkDoneProgressOptions namespace provides helper functions to work with\r\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\r\n */\r\nvar WorkDoneProgressOptions;\r\n(function (WorkDoneProgressOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\r\n    }\r\n    WorkDoneProgressOptions.is = is;\r\n    function hasWorkDoneProgress(value) {\r\n        const candidate = value;\r\n        return candidate && Is.boolean(candidate.workDoneProgress);\r\n    }\r\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\r\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\r\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\r\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\r\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\r\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\r\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\r\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.method = 'textDocument/completion';\r\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\r\n    /** @deprecated Use CompletionRequest.type */\r\n    CompletionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.method = 'completionItem/resolve';\r\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.method = 'textDocument/hover';\r\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\n/**\r\n * How a signature help was triggered.\r\n *\r\n * @since 3.15.0\r\n */\r\nvar SignatureHelpTriggerKind;\r\n(function (SignatureHelpTriggerKind) {\r\n    /**\r\n     * Signature help was invoked manually by the user or by a command.\r\n     */\r\n    SignatureHelpTriggerKind.Invoked = 1;\r\n    /**\r\n     * Signature help was triggered by a trigger character.\r\n     */\r\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Signature help was triggered by the cursor moving or by the document content changing.\r\n     */\r\n    SignatureHelpTriggerKind.ContentChange = 3;\r\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\r\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\r\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.method = 'textDocument/definition';\r\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\r\n    /** @deprecated Use DefinitionRequest.type */\r\n    DefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.method = 'textDocument/references';\r\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\r\n    /** @deprecated Use ReferencesRequest.type */\r\n    ReferencesRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\r\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\r\n    /** @deprecated Use DocumentHighlightRequest.type */\r\n    DocumentHighlightRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\r\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\r\n    /** @deprecated Use DocumentSymbolRequest.type */\r\n    DocumentSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.method = 'textDocument/codeAction';\r\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\r\n    /** @deprecated Use CodeActionRequest.type */\r\n    CodeActionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\r\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\r\n    /** @deprecated Use WorkspaceSymbolRequest.type */\r\n    WorkspaceSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new messages_1.ProtocolRequestType('textDocument/codeLens');\r\n    /** @deprecated Use CodeLensRequest.type */\r\n    CodeLensRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.method = 'textDocument/documentLink';\r\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\r\n    /** @deprecated Use DocumentLinkRequest.type */\r\n    DocumentLinkRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.method = 'textDocument/formatting';\r\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\r\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\r\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.method = 'textDocument/rename';\r\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\r\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nvar WorkDoneProgress;\r\n(function (WorkDoneProgress) {\r\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\r\n/**\r\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\r\n * reporting from the server.\r\n */\r\nvar WorkDoneProgressCreateRequest;\r\n(function (WorkDoneProgressCreateRequest) {\r\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType('window/workDoneProgress/create');\r\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\r\n/**\r\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\r\n * initiated on the server side.\r\n */\r\nvar WorkDoneProgressCancelNotification;\r\n(function (WorkDoneProgressCancelNotification) {\r\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType('window/workDoneProgress/cancel');\r\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to provide selection ranges in a document. The request's\r\n * parameter is of type [SelectionRangeParams](#SelectionRangeParams), the\r\n * response is of type [SelectionRange[]](#SelectionRange[]) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar SelectionRangeRequest;\r\n(function (SelectionRangeRequest) {\r\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\r\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\r\n    /** @deprecated  Use SelectionRangeRequest.type */\r\n    SelectionRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A set of predefined token types. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenTypes;\r\n(function (SemanticTokenTypes) {\r\n    SemanticTokenTypes[\"comment\"] = \"comment\";\r\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\r\n    SemanticTokenTypes[\"string\"] = \"string\";\r\n    SemanticTokenTypes[\"number\"] = \"number\";\r\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\r\n    SemanticTokenTypes[\"operator\"] = \"operator\";\r\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\r\n    SemanticTokenTypes[\"type\"] = \"type\";\r\n    SemanticTokenTypes[\"struct\"] = \"struct\";\r\n    SemanticTokenTypes[\"class\"] = \"class\";\r\n    SemanticTokenTypes[\"interface\"] = \"interface\";\r\n    SemanticTokenTypes[\"enum\"] = \"enum\";\r\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\r\n    SemanticTokenTypes[\"function\"] = \"function\";\r\n    SemanticTokenTypes[\"member\"] = \"member\";\r\n    SemanticTokenTypes[\"property\"] = \"property\";\r\n    SemanticTokenTypes[\"macro\"] = \"macro\";\r\n    SemanticTokenTypes[\"variable\"] = \"variable\";\r\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\r\n    SemanticTokenTypes[\"label\"] = \"label\";\r\n})(SemanticTokenTypes = exports.SemanticTokenTypes || (exports.SemanticTokenTypes = {}));\r\n/**\r\n * A set of predefined token modifiers. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenModifiers;\r\n(function (SemanticTokenModifiers) {\r\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\r\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\r\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\r\n    SemanticTokenModifiers[\"reference\"] = \"reference\";\r\n    SemanticTokenModifiers[\"static\"] = \"static\";\r\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\r\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\r\n    SemanticTokenModifiers[\"async\"] = \"async\";\r\n    SemanticTokenModifiers[\"volatile\"] = \"volatile\";\r\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\r\n})(SemanticTokenModifiers = exports.SemanticTokenModifiers || (exports.SemanticTokenModifiers = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokens;\r\n(function (SemanticTokens) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate !== undefined && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\r\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\r\n    }\r\n    SemanticTokens.is = is;\r\n})(SemanticTokens = exports.SemanticTokens || (exports.SemanticTokens = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRequest;\r\n(function (SemanticTokensRequest) {\r\n    SemanticTokensRequest.method = 'textDocument/semanticTokens';\r\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\r\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensEditsRequest;\r\n(function (SemanticTokensEditsRequest) {\r\n    SemanticTokensEditsRequest.method = 'textDocument/semanticTokens/edits';\r\n    SemanticTokensEditsRequest.type = new messages_1.ProtocolRequestType(SemanticTokensEditsRequest.method);\r\n})(SemanticTokensEditsRequest = exports.SemanticTokensEditsRequest || (exports.SemanticTokensEditsRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRangeRequest;\r\n(function (SemanticTokensRangeRequest) {\r\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\r\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\r\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\r\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\r\n    /** @deprecated Use TypeDefinitionRequest.type */\r\n    TypeDefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction objectLiteral(value) {\r\n    // Strictly speaking class instances pass this check as well. Since the LSP\r\n    // doesn't use classes we ignore this for now. If we do we need to add something\r\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n    return value !== null && typeof value === 'object';\r\n}\r\nexports.objectLiteral = objectLiteral;\r\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (changes, version) {\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                var range = getWellformedRange(change.range);\n                // update content\n                var startOffset = this.offsetAt(range.start);\n                var endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                var startLine = Math.max(range.start.line, 0);\n                var endLine = Math.max(range.end.line, 0);\n                var lineOffsets = this._lineOffsets;\n                var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (var i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice.apply(lineOffsets, [startLine + 1, endLine - startLine].concat(addedLineOffsets));\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                var diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return { line: line, character: offset - lineOffsets[line] };\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.isIncremental = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    };\n    FullTextDocument.isFull = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    };\n    return FullTextDocument;\n}());\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifing its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = 0;\n        var spans = [];\n        for (var _i = 0, sortedEdits_1 = sortedEdits; _i < sortedEdits_1.length; _i++) {\n            var e = sortedEdits_1[_i];\n            var startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    var p = (data.length / 2) | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        var ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset) {\n    if (textOffset === void 0) { textOffset = 0; }\n    var result = isAtLineStart ? [textOffset] : [];\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charCodeAt(i);\n        if (ch === 13 /* CarriageReturn */ || ch === 10 /* LineFeed */) {\n            if (ch === 13 /* CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction getWellformedRange(range) {\n    var start = range.start;\n    var end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    var range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range: range };\n    }\n    return textEdit;\n}\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The diagnostic tags.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var DiagnosticTag;\r\n(function (DiagnosticTag) {\r\n    /**\r\n     * Unused or unnecessary code.\r\n     *\r\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\r\n     * an error squiggle.\r\n     */\r\n    DiagnosticTag.Unnecessary = 1;\r\n    /**\r\n     * Deprecated or obsolete code.\r\n     *\r\n     * Clients are allowed to rendered diagnostics with this tag strike through.\r\n     */\r\n    DiagnosticTag.Deprecated = 2;\r\n})(DiagnosticTag || (DiagnosticTag = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * Completion item tags are extra annotations that tweak the rendering of a completion\r\n * item.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    /**\r\n     * Render a completion as obsolete, usually using a strike-out.\r\n     */\r\n    CompletionItemTag.Deprecated = 1;\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\n/**\r\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\r\n * @since 3.15\r\n */\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    /**\r\n     * Render a symbol as obsolete, usually using a strike-out.\r\n     */\r\n    SymbolTag.Deprecated = 1;\r\n})(SymbolTag || (SymbolTag = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\nexport var DocumentSymbol;\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Empty kind.\r\n     */\r\n    CodeActionKind.Empty = '';\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n    /**\r\n     * Base kind for auto-fix source actions: `source.fixAll`.\r\n     *\r\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\r\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\r\n     *\r\n     * @since 3.15.0\r\n     */\r\n    CodeActionKind.SourceFixAll = 'source.fixAll';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void 0) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data)) {\r\n            result.data = data;\r\n        }\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\nexport var DocumentLink;\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\n/**\r\n * The SelectionRange namespace provides helper function to work with\r\n * SelectionRange literals.\r\n */\r\nexport var SelectionRange;\r\n(function (SelectionRange) {\r\n    /**\r\n     * Creates a new SelectionRange\r\n     * @param range the range.\r\n     * @param parent an optional parent.\r\n     */\r\n    function create(range, parent) {\r\n        return { range: range, parent: parent };\r\n    }\r\n    SelectionRange.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\r\n    }\r\n    SelectionRange.is = is;\r\n})(SelectionRange || (SelectionRange = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\n/**\r\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\r\n */\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = undefined;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = undefined;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === undefined) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.CallHierarchyFeature = (Base) => {\r\n    return class extends Base {\r\n        get callHierarchy() {\r\n            return {\r\n                onPrepare: (handler) => {\r\n                    this.connection.onRequest(vscode_languageserver_protocol_1.Proposed.CallHierarchyPrepareRequest.type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), undefined);\r\n                    });\r\n                },\r\n                onIncomingCalls: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.CallHierarchyIncomingCallsRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                },\r\n                onOutgoingCalls: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.CallHierarchyOutgoingCallsRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=callHierarchy.proposed.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nexports.ConfigurationFeature = (Base) => {\r\n    return class extends Base {\r\n        getConfiguration(arg) {\r\n            if (!arg) {\r\n                return this._getConfiguration({});\r\n            }\r\n            else if (Is.string(arg)) {\r\n                return this._getConfiguration({ section: arg });\r\n            }\r\n            else {\r\n                return this._getConfiguration(arg);\r\n            }\r\n        }\r\n        _getConfiguration(arg) {\r\n            let params = {\r\n                items: Array.isArray(arg) ? arg : [arg]\r\n            };\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then((result) => {\r\n                return Array.isArray(arg) ? result : result[0];\r\n            });\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=configuration.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst url = require(\"url\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst child_process_1 = require(\"child_process\");\r\n/**\r\n * @deprecated Use the `vscode-uri` npm module which provides a more\r\n * complete implementation of handling VS Code URIs.\r\n */\r\nfunction uriToFilePath(uri) {\r\n    let parsed = url.parse(uri);\r\n    if (parsed.protocol !== 'file:' || !parsed.path) {\r\n        return undefined;\r\n    }\r\n    let segments = parsed.path.split('/');\r\n    for (var i = 0, len = segments.length; i < len; i++) {\r\n        segments[i] = decodeURIComponent(segments[i]);\r\n    }\r\n    if (process.platform === 'win32' && segments.length > 1) {\r\n        let first = segments[0];\r\n        let second = segments[1];\r\n        // Do we have a drive letter and we started with a / which is the\r\n        // case if the first segement is empty (see split above)\r\n        if (first.length === 0 && second.length > 1 && second[1] === ':') {\r\n            // Remove first slash\r\n            segments.shift();\r\n        }\r\n    }\r\n    return path.normalize(segments.join('/'));\r\n}\r\nexports.uriToFilePath = uriToFilePath;\r\nfunction isWindows() {\r\n    return process.platform === 'win32';\r\n}\r\nfunction resolve(moduleName, nodePath, cwd, tracer) {\r\n    const nodePathKey = 'NODE_PATH';\r\n    const app = [\r\n        'var p = process;',\r\n        'p.on(\\'message\\',function(m){',\r\n        'if(m.c===\\'e\\'){',\r\n        'p.exit(0);',\r\n        '}',\r\n        'else if(m.c===\\'rs\\'){',\r\n        'try{',\r\n        'var r=require.resolve(m.a);',\r\n        'p.send({c:\\'r\\',s:true,r:r});',\r\n        '}',\r\n        'catch(err){',\r\n        'p.send({c:\\'r\\',s:false});',\r\n        '}',\r\n        '}',\r\n        '});'\r\n    ].join('');\r\n    return new Promise((resolve, reject) => {\r\n        let env = process.env;\r\n        let newEnv = Object.create(null);\r\n        Object.keys(env).forEach(key => newEnv[key] = env[key]);\r\n        if (nodePath && fs.existsSync(nodePath) /* see issue 545 */) {\r\n            if (newEnv[nodePathKey]) {\r\n                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];\r\n            }\r\n            else {\r\n                newEnv[nodePathKey] = nodePath;\r\n            }\r\n            if (tracer) {\r\n                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);\r\n            }\r\n        }\r\n        newEnv['ELECTRON_RUN_AS_NODE'] = '1';\r\n        try {\r\n            let cp = child_process_1.fork('', [], {\r\n                cwd: cwd,\r\n                env: newEnv,\r\n                execArgv: ['-e', app]\r\n            });\r\n            if (cp.pid === void 0) {\r\n                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));\r\n                return;\r\n            }\r\n            cp.on('error', (error) => {\r\n                reject(error);\r\n            });\r\n            cp.on('message', (message) => {\r\n                if (message.c === 'r') {\r\n                    cp.send({ c: 'e' });\r\n                    if (message.s) {\r\n                        resolve(message.r);\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Failed to resolve module: ${moduleName}`));\r\n                    }\r\n                }\r\n            });\r\n            let message = {\r\n                c: 'rs',\r\n                a: moduleName\r\n            };\r\n            cp.send(message);\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\nexports.resolve = resolve;\r\n/**\r\n * Resolve the global npm package path.\r\n * @deprecated Since this depends on the used package manager and their version the best is that servers\r\n * implement this themselves since they know best what kind of package managers to support.\r\n * @param tracer the tracer to use\r\n */\r\nfunction resolveGlobalNodePath(tracer) {\r\n    let npmCommand = 'npm';\r\n    const env = Object.create(null);\r\n    Object.keys(process.env).forEach(key => env[key] = process.env[key]);\r\n    env['NO_UPDATE_NOTIFIER'] = 'true';\r\n    const options = {\r\n        encoding: 'utf8',\r\n        env\r\n    };\r\n    if (isWindows()) {\r\n        npmCommand = 'npm.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let stdout = child_process_1.spawnSync(npmCommand, ['config', 'get', 'prefix'], options).stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'npm config get prefix' didn't return a value.`);\r\n            }\r\n            return undefined;\r\n        }\r\n        let prefix = stdout.trim();\r\n        if (tracer) {\r\n            tracer(`'npm config get prefix' value is: ${prefix}`);\r\n        }\r\n        if (prefix.length > 0) {\r\n            if (isWindows()) {\r\n                return path.join(prefix, 'node_modules');\r\n            }\r\n            else {\r\n                return path.join(prefix, 'lib', 'node_modules');\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalNodePath = resolveGlobalNodePath;\r\n/*\r\n * Resolve the global yarn pakage path.\r\n * @deprecated Since this depends on the used package manager and their version the best is that servers\r\n * implement this themselves since they know best what kind of package managers to support.\r\n * @param tracer the tracer to use\r\n */\r\nfunction resolveGlobalYarnPath(tracer) {\r\n    let yarnCommand = 'yarn';\r\n    let options = {\r\n        encoding: 'utf8'\r\n    };\r\n    if (isWindows()) {\r\n        yarnCommand = 'yarn.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let results = child_process_1.spawnSync(yarnCommand, ['global', 'dir', '--json'], options);\r\n        let stdout = results.stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'yarn global dir' didn't return a value.`);\r\n                if (results.stderr) {\r\n                    tracer(results.stderr);\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        let lines = stdout.trim().split(/\\r?\\n/);\r\n        for (let line of lines) {\r\n            try {\r\n                let yarn = JSON.parse(line);\r\n                if (yarn.type === 'log') {\r\n                    return path.join(yarn.data, 'node_modules');\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Do nothing. Ignore the line\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalYarnPath = resolveGlobalYarnPath;\r\nvar FileSystem;\r\n(function (FileSystem) {\r\n    let _isCaseSensitive = undefined;\r\n    function isCaseSensitive() {\r\n        if (_isCaseSensitive !== void 0) {\r\n            return _isCaseSensitive;\r\n        }\r\n        if (process.platform === 'win32') {\r\n            _isCaseSensitive = false;\r\n        }\r\n        else {\r\n            // convert current file name to upper case / lower case and check if file exists\r\n            // (guards against cases when name is already all uppercase or lowercase)\r\n            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());\r\n        }\r\n        return _isCaseSensitive;\r\n    }\r\n    FileSystem.isCaseSensitive = isCaseSensitive;\r\n    function isParent(parent, child) {\r\n        if (isCaseSensitive()) {\r\n            return path.normalize(child).indexOf(path.normalize(parent)) === 0;\r\n        }\r\n        else {\r\n            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) === 0;\r\n        }\r\n    }\r\n    FileSystem.isParent = isParent;\r\n})(FileSystem = exports.FileSystem || (exports.FileSystem = {}));\r\nfunction resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {\r\n    if (nodePath) {\r\n        if (!path.isAbsolute(nodePath)) {\r\n            nodePath = path.join(workspaceRoot, nodePath);\r\n        }\r\n        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {\r\n            if (FileSystem.isParent(nodePath, value)) {\r\n                return value;\r\n            }\r\n            else {\r\n                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));\r\n            }\r\n        }).then(undefined, (_error) => {\r\n            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n        });\r\n    }\r\n    else {\r\n        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n    }\r\n}\r\nexports.resolveModulePath = resolveModulePath;\r\n//# sourceMappingURL=files.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.Event = vscode_languageserver_protocol_1.Event;\r\nconst configuration_1 = require(\"./configuration\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst progress_1 = require(\"./progress\");\r\nconst Is = require(\"./utils/is\");\r\nconst UUID = require(\"./utils/uuid\");\r\n// ------------- Reexport the API surface of the language worker API ----------------------\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nconst fm = require(\"./files\");\r\nvar Files;\r\n(function (Files) {\r\n    Files.uriToFilePath = fm.uriToFilePath;\r\n    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;\r\n    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;\r\n    Files.resolve = fm.resolve;\r\n    Files.resolveModulePath = fm.resolveModulePath;\r\n})(Files = exports.Files || (exports.Files = {}));\r\nlet shutdownReceived = false;\r\nlet exitTimer = undefined;\r\nfunction setupExitTimer() {\r\n    const argName = '--clientProcessId';\r\n    function runTimer(value) {\r\n        try {\r\n            let processId = parseInt(value);\r\n            if (!isNaN(processId)) {\r\n                exitTimer = setInterval(() => {\r\n                    try {\r\n                        process.kill(processId, 0);\r\n                    }\r\n                    catch (ex) {\r\n                        // Parent process doesn't exist anymore. Exit the server.\r\n                        process.exit(shutdownReceived ? 0 : 1);\r\n                    }\r\n                }, 3000);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Ignore errors;\r\n        }\r\n    }\r\n    for (let i = 2; i < process.argv.length; i++) {\r\n        let arg = process.argv[i];\r\n        if (arg === argName && i + 1 < process.argv.length) {\r\n            runTimer(process.argv[i + 1]);\r\n            return;\r\n        }\r\n        else {\r\n            let args = arg.split('=');\r\n            if (args[0] === argName) {\r\n                runTimer(args[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\nsetupExitTimer();\r\nfunction null2Undefined(value) {\r\n    if (value === null) {\r\n        return void 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A manager for simple text documents\r\n */\r\nclass TextDocuments {\r\n    /**\r\n     * Create a new text document manager.\r\n     */\r\n    constructor(configuration) {\r\n        this._documents = Object.create(null);\r\n        this._configuration = configuration;\r\n        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened or the content changes.\r\n     */\r\n    get onDidChangeContent() {\r\n        return this._onDidChangeContent.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened.\r\n     */\r\n    get onDidOpen() {\r\n        return this._onDidOpen.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * will be saved.\r\n     */\r\n    get onWillSave() {\r\n        return this._onWillSave.event;\r\n    }\r\n    /**\r\n     * Sets a handler that will be called if a participant wants to provide\r\n     * edits during a text document save.\r\n     */\r\n    onWillSaveWaitUntil(handler) {\r\n        this._willSaveWaitUntil = handler;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been saved.\r\n     */\r\n    get onDidSave() {\r\n        return this._onDidSave.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been closed.\r\n     */\r\n    get onDidClose() {\r\n        return this._onDidClose.event;\r\n    }\r\n    /**\r\n     * Returns the document for the given URI. Returns undefined if\r\n     * the document is not mananged by this instance.\r\n     *\r\n     * @param uri The text document's URI to retrieve.\r\n     * @return the text document or `undefined`.\r\n     */\r\n    get(uri) {\r\n        return this._documents[uri];\r\n    }\r\n    /**\r\n     * Returns all text documents managed by this instance.\r\n     *\r\n     * @return all text documents.\r\n     */\r\n    all() {\r\n        return Object.keys(this._documents).map(key => this._documents[key]);\r\n    }\r\n    /**\r\n     * Returns the URIs of all text documents managed by this instance.\r\n     *\r\n     * @return the URI's of all text documents.\r\n     */\r\n    keys() {\r\n        return Object.keys(this._documents);\r\n    }\r\n    /**\r\n     * Listens for `low level` notification on the given connection to\r\n     * update the text documents managed by this instance.\r\n     *\r\n     * @param connection The connection to listen on.\r\n     */\r\n    listen(connection) {\r\n        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\r\n        connection.onDidOpenTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let document = this._configuration.create(td.uri, td.languageId, td.version, td.text);\r\n            this._documents[td.uri] = document;\r\n            let toFire = Object.freeze({ document });\r\n            this._onDidOpen.fire(toFire);\r\n            this._onDidChangeContent.fire(toFire);\r\n        });\r\n        connection.onDidChangeTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let changes = event.contentChanges;\r\n            if (changes.length === 0) {\r\n                return;\r\n            }\r\n            let document = this._documents[td.uri];\r\n            const { version } = td;\r\n            if (version === null || version === void 0) {\r\n                throw new Error(`Received document change event for ${td.uri} without valid version identifier`);\r\n            }\r\n            document = this._configuration.update(document, changes, version);\r\n            this._documents[td.uri] = document;\r\n            this._onDidChangeContent.fire(Object.freeze({ document }));\r\n        });\r\n        connection.onDidCloseTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                delete this._documents[event.textDocument.uri];\r\n                this._onDidClose.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onWillSave.fire(Object.freeze({ document, reason: event.reason }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocumentWaitUntil((event, token) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document && this._willSaveWaitUntil) {\r\n                return this._willSaveWaitUntil(Object.freeze({ document, reason: event.reason }), token);\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        connection.onDidSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onDidSave.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TextDocuments = TextDocuments;\r\n/**\r\n * Helps tracking error message. Equal occurences of the same\r\n * message are only stored once. This class is for example\r\n * useful if text documents are validated in a loop and equal\r\n * error message should be folded into one.\r\n */\r\nclass ErrorMessageTracker {\r\n    constructor() {\r\n        this._messages = Object.create(null);\r\n    }\r\n    /**\r\n     * Add a message to the tracker.\r\n     *\r\n     * @param message The message to add.\r\n     */\r\n    add(message) {\r\n        let count = this._messages[message];\r\n        if (!count) {\r\n            count = 0;\r\n        }\r\n        count++;\r\n        this._messages[message] = count;\r\n    }\r\n    /**\r\n     * Send all tracked messages to the connection's window.\r\n     *\r\n     * @param connection The connection established between client and server.\r\n     */\r\n    sendErrors(connection) {\r\n        Object.keys(this._messages).forEach(message => {\r\n            connection.window.showErrorMessage(message);\r\n        });\r\n    }\r\n}\r\nexports.ErrorMessageTracker = ErrorMessageTracker;\r\nclass RemoteConsoleImpl {\r\n    constructor() {\r\n    }\r\n    rawAttach(connection) {\r\n        this._rawConnection = connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    error(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);\r\n    }\r\n    warn(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);\r\n    }\r\n    info(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);\r\n    }\r\n    log(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);\r\n    }\r\n    send(type, message) {\r\n        if (this._rawConnection) {\r\n            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message });\r\n        }\r\n    }\r\n}\r\nclass _RemoteWindowImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    showErrorMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showWarningMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showInformationMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n}\r\nconst RemoteWindowImpl = progress_1.ProgressFeature(_RemoteWindowImpl);\r\nvar BulkRegistration;\r\n(function (BulkRegistration) {\r\n    /**\r\n     * Creates a new bulk registration.\r\n     * @return an empty bulk registration.\r\n     */\r\n    function create() {\r\n        return new BulkRegistrationImpl();\r\n    }\r\n    BulkRegistration.create = create;\r\n})(BulkRegistration = exports.BulkRegistration || (exports.BulkRegistration = {}));\r\nclass BulkRegistrationImpl {\r\n    constructor() {\r\n        this._registrations = [];\r\n        this._registered = new Set();\r\n    }\r\n    add(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        if (this._registered.has(method)) {\r\n            throw new Error(`${method} is already added to this registration`);\r\n        }\r\n        const id = UUID.generateUuid();\r\n        this._registrations.push({\r\n            id: id,\r\n            method: method,\r\n            registerOptions: registerOptions || {}\r\n        });\r\n        this._registered.add(method);\r\n    }\r\n    asRegistrationParams() {\r\n        return {\r\n            registrations: this._registrations\r\n        };\r\n    }\r\n}\r\nvar BulkUnregistration;\r\n(function (BulkUnregistration) {\r\n    function create() {\r\n        return new BulkUnregistrationImpl(undefined, []);\r\n    }\r\n    BulkUnregistration.create = create;\r\n})(BulkUnregistration = exports.BulkUnregistration || (exports.BulkUnregistration = {}));\r\nclass BulkUnregistrationImpl {\r\n    constructor(_connection, unregistrations) {\r\n        this._connection = _connection;\r\n        this._unregistrations = new Map();\r\n        unregistrations.forEach(unregistration => {\r\n            this._unregistrations.set(unregistration.method, unregistration);\r\n        });\r\n    }\r\n    get isAttached() {\r\n        return !!this._connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    add(unregistration) {\r\n        this._unregistrations.set(unregistration.method, unregistration);\r\n    }\r\n    dispose() {\r\n        let unregistrations = [];\r\n        for (let unregistration of this._unregistrations.values()) {\r\n            unregistrations.push(unregistration);\r\n        }\r\n        let params = {\r\n            unregisterations: unregistrations\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this._connection.console.info(`Bulk unregistration failed.`);\r\n        });\r\n    }\r\n    disposeSingle(arg) {\r\n        const method = Is.string(arg) ? arg : arg.method;\r\n        const unregistration = this._unregistrations.get(method);\r\n        if (!unregistration) {\r\n            return false;\r\n        }\r\n        let params = {\r\n            unregisterations: [unregistration]\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {\r\n            this._unregistrations.delete(method);\r\n        }, (_error) => {\r\n            this._connection.console.info(`Unregistering request handler for ${unregistration.id} failed.`);\r\n        });\r\n        return true;\r\n    }\r\n}\r\nclass RemoteClientImpl {\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {\r\n        if (typeOrRegistrations instanceof BulkRegistrationImpl) {\r\n            return this.registerMany(typeOrRegistrations);\r\n        }\r\n        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {\r\n            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);\r\n        }\r\n        else {\r\n            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);\r\n        }\r\n    }\r\n    registerSingle1(unregistration, type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        if (!unregistration.isAttached) {\r\n            unregistration.attach(this._connection);\r\n        }\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            unregistration.add({ id: id, method: method });\r\n            return unregistration;\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    registerSingle2(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            return vscode_languageserver_protocol_1.Disposable.create(() => {\r\n                this.unregisterSingle(id, method);\r\n            });\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    unregisterSingle(id, method) {\r\n        let params = {\r\n            unregisterations: [{ id, method }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this.connection.console.info(`Unregistering request handler for ${id} failed.`);\r\n        });\r\n    }\r\n    registerMany(registrations) {\r\n        let params = registrations.asRegistrationParams();\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {\r\n            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));\r\n        }, (_error) => {\r\n            this.connection.console.info(`Bulk registration failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n}\r\nclass _RemoteWorkspaceImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    applyEdit(paramOrEdit) {\r\n        function isApplyWorkspaceEditParams(value) {\r\n            return value && !!value.edit;\r\n        }\r\n        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);\r\n    }\r\n}\r\nconst RemoteWorkspaceImpl = workspaceFolders_1.WorkspaceFoldersFeature(configuration_1.ConfigurationFeature(_RemoteWorkspaceImpl));\r\nclass TelemetryImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    logEvent(data) {\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data);\r\n    }\r\n}\r\nclass TracerImpl {\r\n    constructor() {\r\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n    }\r\n    log(message, verbose) {\r\n        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {\r\n            return;\r\n        }\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {\r\n            message: message,\r\n            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined\r\n        });\r\n    }\r\n}\r\nclass LanguagesImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    attachWorkDoneProgress(params) {\r\n        return progress_1.attachWorkDone(this.connection, params);\r\n    }\r\n    attachPartialResultProgress(_type, params) {\r\n        return progress_1.attachPartialResult(this.connection, params);\r\n    }\r\n}\r\nexports.LanguagesImpl = LanguagesImpl;\r\nfunction combineConsoleFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineConsoleFeatures = combineConsoleFeatures;\r\nfunction combineTelemetryFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTelemetryFeatures = combineTelemetryFeatures;\r\nfunction combineTracerFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTracerFeatures = combineTracerFeatures;\r\nfunction combineClientFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineClientFeatures = combineClientFeatures;\r\nfunction combineWindowFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWindowFeatures = combineWindowFeatures;\r\nfunction combineWorkspaceFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWorkspaceFeatures = combineWorkspaceFeatures;\r\nfunction combineLanguagesFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineLanguagesFeatures = combineLanguagesFeatures;\r\nfunction combineFeatures(one, two) {\r\n    function combine(one, two, func) {\r\n        if (one && two) {\r\n            return func(one, two);\r\n        }\r\n        else if (one) {\r\n            return one;\r\n        }\r\n        else {\r\n            return two;\r\n        }\r\n    }\r\n    let result = {\r\n        __brand: 'features',\r\n        console: combine(one.console, two.console, combineConsoleFeatures),\r\n        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),\r\n        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),\r\n        client: combine(one.client, two.client, combineClientFeatures),\r\n        window: combine(one.window, two.window, combineWindowFeatures),\r\n        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures)\r\n    };\r\n    return result;\r\n}\r\nexports.combineFeatures = combineFeatures;\r\nfunction createConnection(arg1, arg2, arg3, arg4) {\r\n    let factories;\r\n    let input;\r\n    let output;\r\n    let strategy;\r\n    if (arg1 !== void 0 && arg1.__brand === 'features') {\r\n        factories = arg1;\r\n        arg1 = arg2;\r\n        arg2 = arg3;\r\n        arg3 = arg4;\r\n    }\r\n    if (vscode_languageserver_protocol_1.ConnectionStrategy.is(arg1)) {\r\n        strategy = arg1;\r\n    }\r\n    else {\r\n        input = arg1;\r\n        output = arg2;\r\n        strategy = arg3;\r\n    }\r\n    return _createConnection(input, output, strategy, factories);\r\n}\r\nexports.createConnection = createConnection;\r\nfunction _createConnection(input, output, strategy, factories) {\r\n    if (!input && !output && process.argv.length > 2) {\r\n        let port = void 0;\r\n        let pipeName = void 0;\r\n        let argv = process.argv.slice(2);\r\n        for (let i = 0; i < argv.length; i++) {\r\n            let arg = argv[i];\r\n            if (arg === '--node-ipc') {\r\n                input = new vscode_languageserver_protocol_1.IPCMessageReader(process);\r\n                output = new vscode_languageserver_protocol_1.IPCMessageWriter(process);\r\n                break;\r\n            }\r\n            else if (arg === '--stdio') {\r\n                input = process.stdin;\r\n                output = process.stdout;\r\n                break;\r\n            }\r\n            else if (arg === '--socket') {\r\n                port = parseInt(argv[i + 1]);\r\n                break;\r\n            }\r\n            else if (arg === '--pipe') {\r\n                pipeName = argv[i + 1];\r\n                break;\r\n            }\r\n            else {\r\n                var args = arg.split('=');\r\n                if (args[0] === '--socket') {\r\n                    port = parseInt(args[1]);\r\n                    break;\r\n                }\r\n                else if (args[0] === '--pipe') {\r\n                    pipeName = args[1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (port) {\r\n            let transport = vscode_languageserver_protocol_1.createServerSocketTransport(port);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n        else if (pipeName) {\r\n            let transport = vscode_languageserver_protocol_1.createServerPipeTransport(pipeName);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n    }\r\n    var commandLineMessage = 'Use arguments of createConnection or set command line parameters: \\'--node-ipc\\', \\'--stdio\\' or \\'--socket={number}\\'';\r\n    if (!input) {\r\n        throw new Error('Connection input stream is not set. ' + commandLineMessage);\r\n    }\r\n    if (!output) {\r\n        throw new Error('Connection output stream is not set. ' + commandLineMessage);\r\n    }\r\n    // Backwards compatibility\r\n    if (Is.func(input.read) && Is.func(input.on)) {\r\n        let inputStream = input;\r\n        inputStream.on('end', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n        inputStream.on('close', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n    }\r\n    const logger = (factories && factories.console ? new (factories.console(RemoteConsoleImpl))() : new RemoteConsoleImpl());\r\n    const connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger, strategy);\r\n    logger.rawAttach(connection);\r\n    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());\r\n    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());\r\n    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());\r\n    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());\r\n    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());\r\n    const languages = (factories && factories.languages ? new (factories.languages(LanguagesImpl))() : new LanguagesImpl());\r\n    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace, languages];\r\n    function asPromise(value) {\r\n        if (value instanceof Promise) {\r\n            return value;\r\n        }\r\n        else if (Is.thenable(value)) {\r\n            return new Promise((resolve, reject) => {\r\n                value.then((resolved) => resolve(resolved), (error) => reject(error));\r\n            });\r\n        }\r\n        else {\r\n            return Promise.resolve(value);\r\n        }\r\n    }\r\n    let shutdownHandler = undefined;\r\n    let initializeHandler = undefined;\r\n    let exitHandler = undefined;\r\n    let protocolConnection = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(type, handler),\r\n        sendNotification: (type, param) => {\r\n            const method = Is.string(type) ? type : type.method;\r\n            if (arguments.length === 1) {\r\n                connection.sendNotification(method);\r\n            }\r\n            else {\r\n                connection.sendNotification(method, param);\r\n            }\r\n        },\r\n        onNotification: (type, handler) => connection.onNotification(type, handler),\r\n        onProgress: connection.onProgress,\r\n        sendProgress: connection.sendProgress,\r\n        onInitialize: (handler) => initializeHandler = handler,\r\n        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),\r\n        onShutdown: (handler) => shutdownHandler = handler,\r\n        onExit: (handler) => exitHandler = handler,\r\n        get console() { return logger; },\r\n        get telemetry() { return telemetry; },\r\n        get tracer() { return tracer; },\r\n        get client() { return client; },\r\n        get window() { return remoteWindow; },\r\n        get workspace() { return workspace; },\r\n        get languages() { return languages; },\r\n        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),\r\n        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),\r\n        __textDocumentSync: undefined,\r\n        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),\r\n        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),\r\n        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),\r\n        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),\r\n        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),\r\n        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),\r\n        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, (params, cancel) => {\r\n            return handler(params, cancel);\r\n        }),\r\n        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, (params, cancel) => {\r\n            return handler(params, cancel);\r\n        }),\r\n        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, (params, cancel) => {\r\n            return handler(params, cancel);\r\n        }),\r\n        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, (params, cancel) => {\r\n            return handler(params, cancel);\r\n        }),\r\n        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onSelectionRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    for (let remote of allRemotes) {\r\n        remote.attach(protocolConnection);\r\n    }\r\n    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {\r\n        const processId = params.processId;\r\n        if (Is.number(processId) && exitTimer === void 0) {\r\n            // We received a parent process id. Set up a timer to periodically check\r\n            // if the parent is still alive.\r\n            setInterval(() => {\r\n                try {\r\n                    process.kill(processId, 0);\r\n                }\r\n                catch (ex) {\r\n                    // Parent process doesn't exist anymore. Exit the server.\r\n                    process.exit(shutdownReceived ? 0 : 1);\r\n                }\r\n            }, 3000);\r\n        }\r\n        if (Is.string(params.trace)) {\r\n            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);\r\n        }\r\n        for (let remote of allRemotes) {\r\n            remote.initialize(params.capabilities);\r\n        }\r\n        if (initializeHandler) {\r\n            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token, progress_1.attachWorkDone(connection, params), undefined);\r\n            return asPromise(result).then((value) => {\r\n                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n                    return value;\r\n                }\r\n                let result = value;\r\n                if (!result) {\r\n                    result = { capabilities: {} };\r\n                }\r\n                let capabilities = result.capabilities;\r\n                if (!capabilities) {\r\n                    capabilities = {};\r\n                    result.capabilities = capabilities;\r\n                }\r\n                if (capabilities.textDocumentSync === void 0 || capabilities.textDocumentSync === null) {\r\n                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {\r\n                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                for (let remote of allRemotes) {\r\n                    remote.fillServerCapabilities(capabilities);\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        else {\r\n            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };\r\n            for (let remote of allRemotes) {\r\n                remote.fillServerCapabilities(result.capabilities);\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {\r\n        shutdownReceived = true;\r\n        if (shutdownHandler) {\r\n            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {\r\n        try {\r\n            if (exitHandler) {\r\n                exitHandler();\r\n            }\r\n        }\r\n        finally {\r\n            if (shutdownReceived) {\r\n                process.exit(0);\r\n            }\r\n            else {\r\n                process.exit(1);\r\n            }\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {\r\n        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);\r\n    });\r\n    return protocolConnection;\r\n}\r\n// Export the protocol currently in proposed state.\r\nconst callHierarchy_proposed_1 = require(\"./callHierarchy.proposed\");\r\nconst st = require(\"./sematicTokens.proposed\");\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    ProposedFeatures.all = {\r\n        __brand: 'features',\r\n        languages: combineLanguagesFeatures(callHierarchy_proposed_1.CallHierarchyFeature, st.SemanticTokensFeature)\r\n    };\r\n    ProposedFeatures.SemanticTokensBuilder = st.SemanticTokensBuilder;\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n//# sourceMappingURL=main.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst uuid_1 = require(\"./utils/uuid\");\r\nclass WorkDoneProgressImpl {\r\n    constructor(_connection, _token) {\r\n        this._connection = _connection;\r\n        this._token = _token;\r\n        WorkDoneProgressImpl.Instances.set(this._token, this);\r\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\r\n    }\r\n    get token() {\r\n        return this._source.token;\r\n    }\r\n    begin(title, percentage, message, cancellable) {\r\n        let param = {\r\n            kind: 'begin',\r\n            title,\r\n            percentage,\r\n            message,\r\n            cancellable\r\n        };\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\r\n    }\r\n    report(arg0, arg1) {\r\n        let param = {\r\n            kind: 'report'\r\n        };\r\n        if (typeof arg0 === 'number') {\r\n            param.percentage = arg0;\r\n            if (arg1 !== undefined) {\r\n                param.message = arg1;\r\n            }\r\n        }\r\n        else {\r\n            param.message = arg0;\r\n        }\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, param);\r\n    }\r\n    done() {\r\n        WorkDoneProgressImpl.Instances.delete(this._token);\r\n        this._source.dispose();\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, { kind: 'end' });\r\n    }\r\n    cancel() {\r\n        this._source.cancel();\r\n    }\r\n}\r\nWorkDoneProgressImpl.Instances = new Map();\r\nclass NullProgress {\r\n    constructor() {\r\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\r\n    }\r\n    get token() {\r\n        return this._source.token;\r\n    }\r\n    begin() {\r\n    }\r\n    report() {\r\n    }\r\n    done() {\r\n    }\r\n}\r\nfunction attachWorkDone(connection, params) {\r\n    if (params === undefined || params.workDoneToken === undefined) {\r\n        return new NullProgress();\r\n    }\r\n    const token = params.workDoneToken;\r\n    delete params.workDoneToken;\r\n    return new WorkDoneProgressImpl(connection, token);\r\n}\r\nexports.attachWorkDone = attachWorkDone;\r\nexports.ProgressFeature = (Base) => {\r\n    return class extends Base {\r\n        initialize(capabilities) {\r\n            var _a;\r\n            if (((_a = capabilities === null || capabilities === void 0 ? void 0 : capabilities.window) === null || _a === void 0 ? void 0 : _a.workDoneProgress) === true) {\r\n                this._progressSupported = true;\r\n                this.connection.onNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, (params) => {\r\n                    let progress = WorkDoneProgressImpl.Instances.get(params.token);\r\n                    if (progress !== undefined) {\r\n                        progress.cancel();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        attachWorkDoneProgress(token) {\r\n            if (token === undefined) {\r\n                return new NullProgress();\r\n            }\r\n            else {\r\n                return new WorkDoneProgressImpl(this.connection, token);\r\n            }\r\n        }\r\n        createWorkDoneProgress() {\r\n            if (this._progressSupported) {\r\n                const token = uuid_1.generateUuid();\r\n                return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, { token }).then(() => {\r\n                    const result = new WorkDoneProgressImpl(this.connection, token);\r\n                    return result;\r\n                });\r\n            }\r\n            else {\r\n                return Promise.resolve(new NullProgress());\r\n            }\r\n        }\r\n    };\r\n};\r\nvar ResultProgress;\r\n(function (ResultProgress) {\r\n    ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();\r\n})(ResultProgress || (ResultProgress = {}));\r\nclass ResultProgressImpl {\r\n    constructor(_connection, _token) {\r\n        this._connection = _connection;\r\n        this._token = _token;\r\n    }\r\n    report(data) {\r\n        this._connection.sendProgress(ResultProgress.type, this._token, data);\r\n    }\r\n}\r\nfunction attachPartialResult(connection, params) {\r\n    if (params === undefined || params.partialResultToken === undefined) {\r\n        return undefined;\r\n    }\r\n    const token = params.partialResultToken;\r\n    delete params.partialResultToken;\r\n    return new ResultProgressImpl(connection, token);\r\n}\r\nexports.attachPartialResult = attachPartialResult;\r\n//# sourceMappingURL=progress.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.SemanticTokensFeature = (Base) => {\r\n    return class extends Base {\r\n        get semanticTokens() {\r\n            return {\r\n                on: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.SemanticTokensRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                },\r\n                onEdits: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.SemanticTokensEditsRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                },\r\n                onRange: (handler) => {\r\n                    const type = vscode_languageserver_protocol_1.Proposed.SemanticTokensRangeRequest.type;\r\n                    this.connection.onRequest(type, (params, cancel) => {\r\n                        return handler(params, cancel, this.attachWorkDoneProgress(params), this.attachPartialResultProgress(type, params));\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n};\r\nclass SemanticTokensBuilder {\r\n    constructor() {\r\n        this._prevData = undefined;\r\n        this.initialize();\r\n    }\r\n    initialize() {\r\n        this._id = Date.now();\r\n        this._prevLine = 0;\r\n        this._prevChar = 0;\r\n        this._data = [];\r\n        this._dataLen = 0;\r\n    }\r\n    push(line, char, length, tokenType, tokenModifiers) {\r\n        let pushLine = line;\r\n        let pushChar = char;\r\n        if (this._dataLen > 0) {\r\n            pushLine -= this._prevLine;\r\n            if (pushLine === 0) {\r\n                pushChar -= this._prevChar;\r\n            }\r\n        }\r\n        this._data[this._dataLen++] = pushLine;\r\n        this._data[this._dataLen++] = pushChar;\r\n        this._data[this._dataLen++] = length;\r\n        this._data[this._dataLen++] = tokenType;\r\n        this._data[this._dataLen++] = tokenModifiers;\r\n        this._prevLine = line;\r\n        this._prevChar = char;\r\n    }\r\n    get id() {\r\n        return this._id.toString();\r\n    }\r\n    previousResult(id) {\r\n        if (this.id === id) {\r\n            this._prevData = this._data;\r\n        }\r\n        this.initialize();\r\n    }\r\n    build() {\r\n        this._prevData = undefined;\r\n        return {\r\n            resultId: this.id,\r\n            data: this._data\r\n        };\r\n    }\r\n    canBuildEdits() {\r\n        return this._prevData !== undefined;\r\n    }\r\n    buildEdits() {\r\n        if (this._prevData !== undefined) {\r\n            const prevDataLength = this._prevData.length;\r\n            const dataLength = this._data.length;\r\n            let startIndex = 0;\r\n            while (startIndex < dataLength && startIndex < prevDataLength && this._prevData[startIndex] === this._data[startIndex]) {\r\n                startIndex++;\r\n            }\r\n            if (startIndex < dataLength && startIndex < prevDataLength) {\r\n                // Find end index\r\n                let endIndex = 0;\r\n                while (endIndex < dataLength && endIndex < prevDataLength && this._prevData[prevDataLength - 1 - endIndex] === this._data[dataLength - 1 - endIndex]) {\r\n                    endIndex++;\r\n                }\r\n                const newData = this._data.slice(startIndex, dataLength - endIndex);\r\n                const result = {\r\n                    resultId: this.id,\r\n                    edits: [\r\n                        { start: startIndex, deleteCount: prevDataLength - endIndex - startIndex, data: newData }\r\n                    ]\r\n                };\r\n                return result;\r\n            }\r\n            else if (startIndex < dataLength) {\r\n                return { resultId: this.id, edits: [\r\n                        { start: startIndex, deleteCount: 0, data: this._data.slice(startIndex) }\r\n                    ] };\r\n            }\r\n            else if (startIndex < prevDataLength) {\r\n                return { resultId: this.id, edits: [\r\n                        { start: startIndex, deleteCount: prevDataLength - startIndex }\r\n                    ] };\r\n            }\r\n            else {\r\n                return { resultId: this.id, edits: [] };\r\n            }\r\n        }\r\n        else {\r\n            return this.build();\r\n        }\r\n    }\r\n}\r\nexports.SemanticTokensBuilder = SemanticTokensBuilder;\r\n//# sourceMappingURL=sematicTokens.proposed.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n//# sourceMappingURL=is.js.map","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n//# sourceMappingURL=uuid.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.WorkspaceFoldersFeature = (Base) => {\r\n    return class extends Base {\r\n        initialize(capabilities) {\r\n            let workspaceCapabilities = capabilities.workspace;\r\n            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {\r\n                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();\r\n                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {\r\n                    this._onDidChangeWorkspaceFolders.fire(params.event);\r\n                });\r\n            }\r\n        }\r\n        getWorkspaceFolders() {\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);\r\n        }\r\n        get onDidChangeWorkspaceFolders() {\r\n            if (!this._onDidChangeWorkspaceFolders) {\r\n                throw new Error('Client doesn\\'t support sending workspace folder change events.');\r\n            }\r\n            if (!this._unregistration) {\r\n                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);\r\n            }\r\n            return this._onDidChangeWorkspaceFolders.event;\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=workspaceFolders.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar path = require(\"path\");\r\nvar fs = require(\"fs\");\r\nvar toString = Object.prototype.toString;\r\nfunction isDefined(value) {\r\n    return typeof value !== 'undefined';\r\n}\r\nfunction isNumber(value) {\r\n    return toString.call(value) === '[object Number]';\r\n}\r\nfunction isString(value) {\r\n    return toString.call(value) === '[object String]';\r\n}\r\nfunction isBoolean(value) {\r\n    return value === true || value === false;\r\n}\r\nfunction readJsonFileSync(filename) {\r\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\r\n}\r\nvar MessageFormat;\r\n(function (MessageFormat) {\r\n    MessageFormat[\"file\"] = \"file\";\r\n    MessageFormat[\"bundle\"] = \"bundle\";\r\n    MessageFormat[\"both\"] = \"both\";\r\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\r\nvar BundleFormat;\r\n(function (BundleFormat) {\r\n    // the nls.bundle format\r\n    BundleFormat[\"standalone\"] = \"standalone\";\r\n    BundleFormat[\"languagePack\"] = \"languagePack\";\r\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\r\nvar LocalizeInfo;\r\n(function (LocalizeInfo) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\r\n    }\r\n    LocalizeInfo.is = is;\r\n})(LocalizeInfo || (LocalizeInfo = {}));\r\nvar resolvedLanguage;\r\nvar resolvedBundles;\r\nvar options;\r\nvar isPseudo;\r\nfunction initializeSettings() {\r\n    options = { locale: undefined, language: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: MessageFormat.bundle };\r\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\r\n        try {\r\n            var vscodeOptions_1 = JSON.parse(process.env.VSCODE_NLS_CONFIG);\r\n            var language = void 0;\r\n            var locale = void 0;\r\n            if (vscodeOptions_1.availableLanguages) {\r\n                var value = vscodeOptions_1.availableLanguages['*'];\r\n                if (isString(value)) {\r\n                    language = value;\r\n                }\r\n            }\r\n            if (isString(vscodeOptions_1.locale)) {\r\n                options.locale = vscodeOptions_1.locale.toLowerCase();\r\n            }\r\n            if (language === undefined) {\r\n                options.language = options.locale;\r\n            }\r\n            else if (language !== 'en') {\r\n                options.language = language;\r\n            }\r\n            if (isBoolean(vscodeOptions_1._languagePackSupport)) {\r\n                options.languagePackSupport = vscodeOptions_1._languagePackSupport;\r\n            }\r\n            if (isString(vscodeOptions_1._cacheRoot)) {\r\n                options.cacheRoot = vscodeOptions_1._cacheRoot;\r\n            }\r\n            if (isString(vscodeOptions_1._languagePackId)) {\r\n                options.languagePackId = vscodeOptions_1._languagePackId;\r\n            }\r\n            if (isString(vscodeOptions_1._translationsConfigFile)) {\r\n                options.translationsConfigFile = vscodeOptions_1._translationsConfigFile;\r\n                try {\r\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\r\n                }\r\n                catch (error) {\r\n                    // We can't read the translation config file. Mark the cache as corrupted.\r\n                    if (vscodeOptions_1._corruptedFile) {\r\n                        var dirname = path.dirname(vscodeOptions_1._corruptedFile);\r\n                        fs.exists(dirname, function (exists) {\r\n                            if (exists) {\r\n                                fs.writeFile(vscodeOptions_1._corruptedFile, 'corrupted', 'utf8', function (err) {\r\n                                    console.error(err);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // Do nothing.\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    resolvedLanguage = undefined;\r\n    resolvedBundles = Object.create(null);\r\n}\r\ninitializeSettings();\r\nfunction supportsLanguagePack() {\r\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\r\n        && options.translationsConfig !== undefined;\r\n}\r\nfunction format(message, args) {\r\n    var result;\r\n    if (isPseudo) {\r\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\r\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\r\n    }\r\n    if (args.length === 0) {\r\n        result = message;\r\n    }\r\n    else {\r\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\r\n            var index = rest[0];\r\n            var arg = args[index];\r\n            var replacement = match;\r\n            if (typeof arg === 'string') {\r\n                replacement = arg;\r\n            }\r\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\r\n                replacement = String(arg);\r\n            }\r\n            return replacement;\r\n        });\r\n    }\r\n    return result;\r\n}\r\nfunction createScopedLocalizeFunction(messages) {\r\n    return function (key, message) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (isNumber(key)) {\r\n            if (key >= messages.length) {\r\n                console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \" + new Error('').stack);\r\n                return;\r\n            }\r\n            return format(messages[key], args);\r\n        }\r\n        else {\r\n            if (isString(message)) {\r\n                console.warn(\"Message \" + message + \" didn't get externalized correctly.\");\r\n                return format(message, args);\r\n            }\r\n            else {\r\n                console.error(\"Broken localize call found. Stacktrace is\\n: \" + new Error('').stack);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction localize(key, message) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    return format(message, args);\r\n}\r\nfunction resolveLanguage(file) {\r\n    var resolvedLanguage;\r\n    if (options.cacheLanguageResolution && resolvedLanguage) {\r\n        resolvedLanguage = resolvedLanguage;\r\n    }\r\n    else {\r\n        if (isPseudo || !options.language) {\r\n            resolvedLanguage = '.nls.json';\r\n        }\r\n        else {\r\n            var locale = options.language;\r\n            while (locale) {\r\n                var candidate = '.nls.' + locale + '.json';\r\n                if (fs.existsSync(file + candidate)) {\r\n                    resolvedLanguage = candidate;\r\n                    break;\r\n                }\r\n                else {\r\n                    var index = locale.lastIndexOf('-');\r\n                    if (index > 0) {\r\n                        locale = locale.substring(0, index);\r\n                    }\r\n                    else {\r\n                        resolvedLanguage = '.nls.json';\r\n                        locale = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (options.cacheLanguageResolution) {\r\n            resolvedLanguage = resolvedLanguage;\r\n        }\r\n    }\r\n    return file + resolvedLanguage;\r\n}\r\nfunction findInTheBoxBundle(root) {\r\n    var language = options.language;\r\n    while (language) {\r\n        var candidate = path.join(root, \"nls.bundle.\" + language + \".json\");\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n        else {\r\n            var index = language.lastIndexOf('-');\r\n            if (index > 0) {\r\n                language = language.substring(0, index);\r\n            }\r\n            else {\r\n                language = undefined;\r\n            }\r\n        }\r\n    }\r\n    // Test if we can reslove the default bundle.\r\n    if (language === undefined) {\r\n        var candidate = path.join(root, 'nls.bundle.json');\r\n        if (fs.existsSync(candidate)) {\r\n            return candidate;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction mkdir(directory) {\r\n    try {\r\n        fs.mkdirSync(directory);\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'EEXIST') {\r\n            return;\r\n        }\r\n        else if (err.code === 'ENOENT') {\r\n            var parent = path.dirname(directory);\r\n            if (parent !== directory) {\r\n                mkdir(parent);\r\n                fs.mkdirSync(directory);\r\n            }\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nfunction createDefaultNlsBundle(folder) {\r\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_1 in metaData) {\r\n        var entry = metaData[module_1];\r\n        result[module_1] = entry.messages;\r\n    }\r\n    return result;\r\n}\r\nfunction createNLSBundle(header, metaDataPath) {\r\n    var languagePackLocation = options.translationsConfig[header.id];\r\n    if (!languagePackLocation) {\r\n        return undefined;\r\n    }\r\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\r\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\r\n    var result = Object.create(null);\r\n    for (var module_2 in metaData) {\r\n        var entry = metaData[module_2];\r\n        var translations = languagePack[header.outDir + \"/\" + module_2];\r\n        if (translations) {\r\n            var resultMessages = [];\r\n            for (var i = 0; i < entry.keys.length; i++) {\r\n                var messageKey = entry.keys[i];\r\n                var key = isString(messageKey) ? messageKey : messageKey.key;\r\n                var translatedMessage = translations[key];\r\n                if (translatedMessage === undefined) {\r\n                    translatedMessage = entry.messages[i];\r\n                }\r\n                resultMessages.push(translatedMessage);\r\n            }\r\n            result[module_2] = resultMessages;\r\n        }\r\n        else {\r\n            result[module_2] = entry.messages;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction touch(file) {\r\n    var d = new Date();\r\n    fs.utimes(file, d, d, function () {\r\n        // Do nothing. Ignore\r\n    });\r\n}\r\nfunction cacheBundle(key, bundle) {\r\n    resolvedBundles[key] = bundle;\r\n    return bundle;\r\n}\r\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\r\n    var result;\r\n    var bundle = path.join(options.cacheRoot, header.id + \"-\" + header.hash + \".json\");\r\n    var useMemoryOnly = false;\r\n    var writeBundle = false;\r\n    try {\r\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\r\n        touch(bundle);\r\n        return result;\r\n    }\r\n    catch (err) {\r\n        if (err.code === 'ENOENT') {\r\n            writeBundle = true;\r\n        }\r\n        else if (err instanceof SyntaxError) {\r\n            // We have a syntax error. So no valid JSON. Use\r\n            console.log(\"Syntax error parsing message bundle: \" + err.message + \".\");\r\n            fs.unlink(bundle, function (err) {\r\n                if (err) {\r\n                    console.error(\"Deleting corrupted bundle \" + bundle + \" failed.\");\r\n                }\r\n            });\r\n            useMemoryOnly = true;\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    result = createNLSBundle(header, bundlePath);\r\n    if (!result || useMemoryOnly) {\r\n        return result;\r\n    }\r\n    if (writeBundle) {\r\n        try {\r\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\r\n        }\r\n        catch (err) {\r\n            if (err.code === 'EEXIST') {\r\n                return result;\r\n            }\r\n            throw err;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadDefaultNlsBundle(bundlePath) {\r\n    try {\r\n        return createDefaultNlsBundle(bundlePath);\r\n    }\r\n    catch (err) {\r\n        console.log(\"Generating default bundle from meta data failed.\", err);\r\n        return undefined;\r\n    }\r\n}\r\nfunction loadNlsBundle(header, bundlePath) {\r\n    var result;\r\n    // Core decided to use a language pack. Do the same in the extension\r\n    if (supportsLanguagePack()) {\r\n        try {\r\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\r\n        }\r\n        catch (err) {\r\n            console.log(\"Load or create bundle failed \", err);\r\n        }\r\n    }\r\n    if (!result) {\r\n        // No language pack found, but core is running in language pack mode\r\n        // Don't try to use old in the box bundles since the might be stale\r\n        // Fall right back to the default bundle.\r\n        if (options.languagePackSupport) {\r\n            return loadDefaultNlsBundle(bundlePath);\r\n        }\r\n        var candidate = findInTheBoxBundle(bundlePath);\r\n        if (candidate) {\r\n            try {\r\n                return readJsonFileSync(candidate);\r\n            }\r\n            catch (err) {\r\n                console.log(\"Loading in the box message bundle failed.\", err);\r\n            }\r\n        }\r\n        result = loadDefaultNlsBundle(bundlePath);\r\n    }\r\n    return result;\r\n}\r\nfunction tryFindMetaDataHeaderFile(file) {\r\n    var result;\r\n    var dirname = path.dirname(file);\r\n    while (true) {\r\n        result = path.join(dirname, 'nls.metadata.header.json');\r\n        if (fs.existsSync(result)) {\r\n            break;\r\n        }\r\n        var parent = path.dirname(dirname);\r\n        if (parent === dirname) {\r\n            result = undefined;\r\n            break;\r\n        }\r\n        else {\r\n            dirname = parent;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction loadMessageBundle(file) {\r\n    if (!file) {\r\n        // No file. We are in dev mode. Return the default\r\n        // localize function.\r\n        return localize;\r\n    }\r\n    // Remove extension since we load json files.\r\n    var ext = path.extname(file);\r\n    if (ext) {\r\n        file = file.substr(0, file.length - ext.length);\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.bundle) {\r\n        var headerFile = tryFindMetaDataHeaderFile(file);\r\n        if (headerFile) {\r\n            var bundlePath = path.dirname(headerFile);\r\n            var bundle = resolvedBundles[bundlePath];\r\n            if (bundle === undefined) {\r\n                try {\r\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\r\n                    try {\r\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\r\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\r\n                    }\r\n                    catch (err) {\r\n                        console.error('Failed to load nls bundle', err);\r\n                        bundle = cacheBundle(bundlePath, null);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.error('Failed to read header file', err);\r\n                    bundle = cacheBundle(bundlePath, null);\r\n                }\r\n            }\r\n            if (bundle) {\r\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\/g, '/');\r\n                var messages = bundle.nlsBundle[module_3];\r\n                if (messages === undefined) {\r\n                    console.error(\"Messages for file \" + file + \" not found. See console for details.\");\r\n                    return function () {\r\n                        return 'Messages not found.';\r\n                    };\r\n                }\r\n                return createScopedLocalizeFunction(messages);\r\n            }\r\n        }\r\n    }\r\n    if (options.messageFormat === MessageFormat.both || options.messageFormat === MessageFormat.file) {\r\n        // Try to load a single file bundle\r\n        try {\r\n            var json = readJsonFileSync(resolveLanguage(file));\r\n            if (Array.isArray(json)) {\r\n                return createScopedLocalizeFunction(json);\r\n            }\r\n            else {\r\n                if (isDefined(json.messages) && isDefined(json.keys)) {\r\n                    return createScopedLocalizeFunction(json.messages);\r\n                }\r\n                else {\r\n                    console.error(\"String bundle '\" + file + \"' uses an unsupported format.\");\r\n                    return function () {\r\n                        return 'File bundle has unsupported format. See console for details';\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            if (err.code !== 'ENOENT') {\r\n                console.error('Failed to load single file bundle', err);\r\n            }\r\n        }\r\n    }\r\n    console.error(\"Failed to load message bundle for file \" + file);\r\n    return function () {\r\n        return 'Failed to load message bundle. See console for details.';\r\n    };\r\n}\r\nexports.loadMessageBundle = loadMessageBundle;\r\nfunction config(opts) {\r\n    if (opts) {\r\n        if (isString(opts.locale)) {\r\n            options.locale = opts.locale.toLowerCase();\r\n            options.language = options.locale;\r\n            resolvedLanguage = undefined;\r\n            resolvedBundles = Object.create(null);\r\n        }\r\n        if (opts.messageFormat !== undefined) {\r\n            options.messageFormat = opts.messageFormat;\r\n        }\r\n        if (opts.bundleFormat === BundleFormat.standalone && options.languagePackSupport === true) {\r\n            options.languagePackSupport = false;\r\n        }\r\n    }\r\n    isPseudo = options.locale === 'pseudo';\r\n    return loadMessageBundle;\r\n}\r\nexports.config = config;\r\n//# sourceMappingURL=main.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nvar isWindows;\nif (typeof process === 'object') {\n    isWindows = process.platform === 'win32';\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    isWindows = userAgent.indexOf('Windows') >= 0;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction isLowerAsciiHex(code) {\n    return code >= 97 /* a */ && code <= 102 /* f */;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n//#endregion\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return uriToFsPath(this, false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // /**\n    //  * Join a URI path with path fragments and normalizes the resulting path.\n    //  *\n    //  * @param uri The input URI.\n    //  * @param pathFragment The path fragment to add to the URI path.\n    //  * @returns The resulting URI.\n    //  */\n    // static joinPath(uri: URI, ...pathFragment: string[]): URI {\n    // \tif (!uri.path) {\n    // \t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n    // \t}\n    // \tlet newPath: string;\n    // \tif (isWindows && uri.scheme === 'file') {\n    // \t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n    // \t} else {\n    // \t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n    // \t}\n    // \treturn uri.with({ path: newPath });\n    // }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\nvar _pathSepMarker = isWindows ? 1 : undefined;\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = uriToFsPath(this, false);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nvar _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, function (match) { return decodeURIComponentGraceful(match); });\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CollectionRegistry = exports.SchemaRegistry = void 0;\r\n/**\r\n * Registry for schemas\r\n */\r\nclass SchemaRegistry {\r\n    constructor() {\r\n        this.registry = {};\r\n    }\r\n    register(id, node) {\r\n        this.registry[id] = node;\r\n    }\r\n    get(id) {\r\n        const node = this.registry[id];\r\n        if (node === undefined) {\r\n            console.error(`Tried to access schema \"${id}\", but that doesn't exist.`);\r\n        }\r\n        return node;\r\n    }\r\n}\r\nexports.SchemaRegistry = SchemaRegistry;\r\n/**\r\n * Registry for collections\r\n */\r\nclass CollectionRegistry {\r\n    constructor() {\r\n        this.registry = {};\r\n    }\r\n    register(id, list) {\r\n        this.registry[id] = list;\r\n    }\r\n    get(id) {\r\n        const list = this.registry[id];\r\n        if (list === undefined) {\r\n            console.warn(`Tried to access collection \"${id}\", but that doesn't exist.`);\r\n        }\r\n        return list !== null && list !== void 0 ? list : [];\r\n    }\r\n}\r\nexports.CollectionRegistry = CollectionRegistry;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./model/DataModel\"), exports);\r\n__exportStar(require(\"./model/Path\"), exports);\r\n__exportStar(require(\"./model/Errors\"), exports);\r\n__exportStar(require(\"./nodes/Node\"), exports);\r\n__exportStar(require(\"./nodes/BooleanNode\"), exports);\r\n__exportStar(require(\"./nodes/ChoiceNode\"), exports);\r\n__exportStar(require(\"./nodes/ListNode\"), exports);\r\n__exportStar(require(\"./nodes/MapNode\"), exports);\r\n__exportStar(require(\"./nodes/NumberNode\"), exports);\r\n__exportStar(require(\"./nodes/ObjectNode\"), exports);\r\n__exportStar(require(\"./nodes/Reference\"), exports);\r\n__exportStar(require(\"./nodes/StringNode\"), exports);\r\n__exportStar(require(\"./nodes/SwitchNode\"), exports);\r\n__exportStar(require(\"./Hook\"), exports);\r\n__exportStar(require(\"./Registries\"), exports);\r\n__exportStar(require(\"./ValidationOption\"), exports);\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DataModel = void 0;\r\nconst Path_1 = require(\"./Path\");\r\nconst Errors_1 = require(\"./Errors\");\r\n/**\r\n * Holding the data linked to a given schema\r\n */\r\nclass DataModel {\r\n    /**\r\n     * @param schema node to use as schema for this model\r\n     */\r\n    constructor(schema, options) {\r\n        var _a;\r\n        this.schema = schema;\r\n        this.data = schema.default();\r\n        this.listeners = [];\r\n        this.errors = new Errors_1.Errors();\r\n        this.history = [JSON.stringify(this.data)];\r\n        this.historyIndex = 0;\r\n        this.historyMax = (_a = options === null || options === void 0 ? void 0 : options.historyMax) !== null && _a !== void 0 ? _a : 50;\r\n    }\r\n    /**\r\n     * Adds a listener to notify when the model is invalidated\r\n     * @param listener the listener to be notified\r\n     */\r\n    addListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    /**\r\n     * Removes a listener from this model\r\n     * @param listener the listener to be removed\r\n     */\r\n    removeListener(listener) {\r\n        const index = this.listeners.indexOf(listener);\r\n        if (index > -1) {\r\n            this.listeners.splice(index, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Updates the history and notifies all\r\n     * listeners that the model is invalidated\r\n     */\r\n    invalidate() {\r\n        const newHistory = JSON.stringify(this.data);\r\n        if (this.history[this.historyIndex] !== newHistory) {\r\n            this.historyIndex += 1;\r\n            this.history.splice(this.historyIndex, this.historyMax, newHistory);\r\n            if (this.history.length > this.historyMax) {\r\n                this.history.splice(0, 1);\r\n                this.historyIndex -= 1;\r\n            }\r\n        }\r\n        this.silentInvalidate();\r\n    }\r\n    /**\r\n     * Notifies all listeners that the model is invalidated\r\n     */\r\n    silentInvalidate() {\r\n        this.listeners.forEach(l => {\r\n            if (l.invalidated)\r\n                l.invalidated(this);\r\n            if (l.errors)\r\n                l.errors(this.errors);\r\n        });\r\n    }\r\n    /**\r\n     * Resets the full data and notifies listeners\r\n     * @param value new model data\r\n     */\r\n    reset(value, loose) {\r\n        this.data = value;\r\n        this.validate(loose);\r\n        this.invalidate();\r\n    }\r\n    /**\r\n     * Gets the data at a specified path\r\n     * @param path path at which to find the data\r\n     * @returns undefined, if the the path does not exist in the data\r\n     */\r\n    get(path) {\r\n        let node = this.data;\r\n        path.forEach(e => {\r\n            if (node === undefined)\r\n                return node;\r\n            node = node[e];\r\n        });\r\n        return node;\r\n    }\r\n    /**\r\n     * Updates the data on a path. Node will be removed when value is undefined\r\n     * @param path path to update\r\n     * @param value new data at the specified path\r\n     */\r\n    set(path, value, silent) {\r\n        if (path.getArray().length === 0) {\r\n            this.reset(value, true);\r\n            return;\r\n        }\r\n        let node = this.data;\r\n        path.pop().forEach(e => {\r\n            if (node[e] === undefined || typeof node[e] === 'string' || typeof node[e] === 'number') {\r\n                node[e] = {};\r\n            }\r\n            node = node[e];\r\n        });\r\n        if (value === undefined || (typeof value === 'number' && isNaN(value))) {\r\n            if (typeof path.last() === 'number') {\r\n                node.splice(path.last(), 1);\r\n            }\r\n            else {\r\n                delete node[path.last()];\r\n            }\r\n        }\r\n        else {\r\n            node[path.last()] = value;\r\n        }\r\n        if (silent)\r\n            return;\r\n        console.log('Set', path.toString(), JSON.stringify(value));\r\n        this.validate(true);\r\n        this.invalidate();\r\n    }\r\n    /**\r\n     * Go one step back in history\r\n     */\r\n    undo() {\r\n        if (this.historyIndex > 0) {\r\n            this.historyIndex -= 1;\r\n            this.data = JSON.parse(this.history[this.historyIndex]);\r\n            this.validate(false);\r\n            this.silentInvalidate();\r\n        }\r\n    }\r\n    /**\r\n     * Go one step forward in history.\r\n     */\r\n    redo() {\r\n        if (this.historyIndex < this.history.length - 1) {\r\n            this.historyIndex += 1;\r\n            this.data = JSON.parse(this.history[this.historyIndex]);\r\n            this.validate(false);\r\n            this.silentInvalidate();\r\n        }\r\n    }\r\n    /**\r\n     * Uses the schema to check whether the data is valid\r\n     */\r\n    validate(loose) {\r\n        var _a;\r\n        const path = new Path_1.Path().withModel(this);\r\n        this.errors.clear();\r\n        this.data = (_a = this.schema.validate(path, this.data, this.errors, { loose })) !== null && _a !== void 0 ? _a : {};\r\n    }\r\n    error(path, error, ...params) {\r\n        const tempErrors = new Errors_1.Errors();\r\n        tempErrors.add(path, error, params);\r\n        this.listeners.forEach(l => {\r\n            if (l.errors)\r\n                l.errors(tempErrors);\r\n        });\r\n    }\r\n}\r\nexports.DataModel = DataModel;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Errors = void 0;\r\n/**\r\n * Collects errors from data paths\r\n */\r\nclass Errors {\r\n    constructor() {\r\n        this.errors = [];\r\n    }\r\n    add(path, error, ...params) {\r\n        this.errors.push({ path, error, params });\r\n        return false;\r\n    }\r\n    get(path, exact = false) {\r\n        return exact ? this.errors.filter(e => e.path.equals(path))\r\n            : this.errors.filter(e => e.path.startsWith(path));\r\n    }\r\n    getAll() {\r\n        return this.errors;\r\n    }\r\n    clear() {\r\n        this.errors = [];\r\n    }\r\n    count() {\r\n        return this.errors.length;\r\n    }\r\n    *[Symbol.iterator]() {\r\n        for (const e of this.errors) {\r\n            yield e;\r\n        }\r\n    }\r\n}\r\nexports.Errors = Errors;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ModelPath = exports.Path = void 0;\r\n/**\r\n * Immutable helper class to represent a path in data\r\n */\r\nclass Path {\r\n    /**\r\n     * @param modelArr Initial array of path model elements. Empty if not given\r\n     * @param contextArr Initial array of path context elements. Empty if not given\r\n     */\r\n    constructor(modelArr, contextArr) {\r\n        this.modelArr = modelArr !== null && modelArr !== void 0 ? modelArr : [];\r\n        this.contextArr = contextArr !== null && contextArr !== void 0 ? contextArr : [];\r\n    }\r\n    /**\r\n     * The last model element of this path\r\n     */\r\n    last() {\r\n        return this.modelArr[this.modelArr.length - 1];\r\n    }\r\n    /**\r\n     * A new path with the specific sliced module elements\r\n     */\r\n    slice(start, end) {\r\n        return new Path(this.modelArr.slice(start, end), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with the first model element removed\r\n     */\r\n    shift() {\r\n        return new Path(this.modelArr.slice(1), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with the last model element removed\r\n     */\r\n    pop() {\r\n        return new Path(this.modelArr.slice(0, -1), this.contextArr);\r\n    }\r\n    /**\r\n     * A new path with an element added at the end\r\n     * @param element element to push at the end of the array\r\n     */\r\n    push(element) {\r\n        return this.modelPush(element).contextPush(element);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the model array\r\n     * @param element\r\n     */\r\n    modelPush(element) {\r\n        return new Path([...this.modelArr, element], [...this.contextArr]);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the context array\r\n     * @param element\r\n     */\r\n    contextPush(element) {\r\n        if (typeof element === 'number')\r\n            return this.copy();\r\n        const newElement = element.startsWith('minecraft:') ? element.slice(10) : element;\r\n        return new Path([...this.modelArr], [...this.contextArr, newElement]);\r\n    }\r\n    copy() {\r\n        return new Path([...this.modelArr], [...this.contextArr]);\r\n    }\r\n    getArray() {\r\n        return this.modelArr;\r\n    }\r\n    /**\r\n     * Attaches a model to this path and all paths created from this\r\n     * @param model\r\n     */\r\n    withModel(model) {\r\n        return new ModelPath(model, this);\r\n    }\r\n    getContext() {\r\n        return this.contextArr;\r\n    }\r\n    /**\r\n     * Checks path equality\r\n     * @param other path to compare\r\n     */\r\n    equals(other) {\r\n        return other.modelArr.length === this.modelArr.length\r\n            && other.modelArr.every((v, i) => v === this.modelArr[i]);\r\n    }\r\n    /**\r\n     * Checks if this path starts with another path\r\n     * @param other path that this path should start with\r\n     */\r\n    startsWith(other) {\r\n        if (this.modelArr.length < other.modelArr.length)\r\n            return false;\r\n        return other.modelArr.every((v, i) => v === this.modelArr[i]);\r\n    }\r\n    /**\r\n     * Checks if this path ends with another path\r\n     * @param other parent path where this path should end with\r\n     */\r\n    endsWith(other) {\r\n        const offset = this.modelArr.length - other.modelArr.length;\r\n        if (offset < 0)\r\n            return false;\r\n        return other.modelArr.every((v, i) => v === this.modelArr[offset + i]);\r\n    }\r\n    toString() {\r\n        return this.modelArr\r\n            .map(e => (typeof e === 'string') ? `.${e}` : `[${e}]`)\r\n            .join('')\r\n            .replace(/^\\./, '');\r\n    }\r\n    forEach(fn, thisArg) {\r\n        return this.modelArr.forEach(fn, thisArg);\r\n    }\r\n}\r\nexports.Path = Path;\r\nclass ModelPath extends Path {\r\n    constructor(model, path) {\r\n        super(path === null || path === void 0 ? void 0 : path.modelArr, path === null || path === void 0 ? void 0 : path.contextArr);\r\n        this.model = model;\r\n    }\r\n    getModel() {\r\n        return this.model;\r\n    }\r\n    /**\r\n     * Gets the data from the model if it was attached\r\n     * @returns undefined, if no model was attached\r\n     */\r\n    get() {\r\n        var _a;\r\n        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.get(this);\r\n    }\r\n    /**\r\n     * Sets the value to the model if it was attached\r\n     */\r\n    set(value) {\r\n        var _a;\r\n        (_a = this.model) === null || _a === void 0 ? void 0 : _a.set(this, value);\r\n    }\r\n    /**\r\n     * A new path with the specific sliced module elements\r\n     */\r\n    slice(start, end) {\r\n        return new ModelPath(this.model, super.slice(start, end));\r\n    }\r\n    /**\r\n     * A new path with the first model element removed\r\n     */\r\n    shift() {\r\n        return new ModelPath(this.model, super.shift());\r\n    }\r\n    /**\r\n     * A new path with the last model element removed\r\n     */\r\n    pop() {\r\n        return new ModelPath(this.model, super.pop());\r\n    }\r\n    /**\r\n     * A new path with an element added at the end\r\n     * @param element element to push at the end of the array\r\n     */\r\n    push(element) {\r\n        return this.modelPush(element).contextPush(element);\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the model array\r\n     * @param element\r\n     */\r\n    modelPush(element) {\r\n        return new ModelPath(this.model, super.modelPush(element));\r\n    }\r\n    /**\r\n     * Push an element exclusivly to the context array\r\n     * @param element\r\n     */\r\n    contextPush(element) {\r\n        return new ModelPath(this.model, super.contextPush(element));\r\n    }\r\n    copy() {\r\n        return new ModelPath(this.model, super.copy());\r\n    }\r\n}\r\nexports.ModelPath = ModelPath;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BooleanNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\n/**\r\n * Boolean node with two buttons for true/false\r\n */\r\nexports.BooleanNode = () => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'boolean',\r\n        default: () => false,\r\n        suggest: () => ['false', 'true'],\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'boolean') {\r\n                value = this.default();\r\n            }\r\n            if (typeof value !== 'boolean' || value === undefined) {\r\n                errors.add(path, 'error.expected_boolean');\r\n            }\r\n            return value;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return hook.boolean({ node: this }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectOrPreset = exports.StringOrList = exports.ObjectOrList = exports.ChoiceNode = void 0;\r\nconst ListNode_1 = require(\"./ListNode\");\r\nconst SwitchNode_1 = require(\"./SwitchNode\");\r\n/**\r\n * Node that allows multiple types\r\n */\r\nexports.ChoiceNode = (choices, config) => {\r\n    const isValid = (choice, value) => {\r\n        var _a;\r\n        console.log('choice.match - ' + ((_a = choice.match) === null || _a === void 0 ? void 0 : _a.toString()));\r\n        if (choice.match) {\r\n            return choice.match(value);\r\n        }\r\n        console.log('choice.type - ' + choice.type);\r\n        switch (choice.type) {\r\n            case 'list': return Array.isArray(value);\r\n            case 'object': return typeof value === 'object' && !Array.isArray(value);\r\n            default: return typeof value === choice.type;\r\n        }\r\n    };\r\n    const switchNode = SwitchNode_1.SwitchNode(choices.map(c => ({\r\n        type: c.type,\r\n        priority: c.priority,\r\n        match: (path) => isValid(c, path.get()),\r\n        node: c.node\r\n    })));\r\n    return {\r\n        ...switchNode,\r\n        validate(path, value, errors, options) {\r\n            let choice = switchNode.activeCase(path, true);\r\n            if (choice.node.optional()) {\r\n                return value;\r\n            }\r\n            return choice.node.validate(path, value, errors, options);\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return hook.choice({ node: this, choices, config: config !== null && config !== void 0 ? config : {}, switchNode }, path, ...args);\r\n        }\r\n    };\r\n};\r\nconst XOrList = (x) => ((node, config) => {\r\n    return exports.ChoiceNode([\r\n        {\r\n            type: x,\r\n            node,\r\n            change: v => { var _a; return (_a = v[0]) !== null && _a !== void 0 ? _a : node.default(); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: ListNode_1.ListNode(node),\r\n            change: v => v ? [v] : []\r\n        }\r\n    ], config);\r\n});\r\nexports.ObjectOrList = XOrList('object');\r\nexports.StringOrList = XOrList('string');\r\nexports.ObjectOrPreset = (presetNode, objectNode, presets) => {\r\n    return exports.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: presetNode,\r\n            change: v => Object.keys(presets)[0]\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: objectNode,\r\n            change: v => { var _a; return (_a = presets[v]) !== null && _a !== void 0 ? _a : presets[Object.keys(presets)[0]]; }\r\n        }\r\n    ]);\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ListNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nexports.ListNode = (children) => {\r\n    return ({\r\n        ...Node_1.Base,\r\n        type: () => 'list',\r\n        default: () => [],\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            return children.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, index) {\r\n            return path.push(parseInt(index.toString())).contextPush('entry');\r\n        },\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && !Array.isArray(value)) {\r\n                value = this.default();\r\n            }\r\n            if (!Array.isArray(value)) {\r\n                errors.add(path, 'error.expected_list');\r\n                return value;\r\n            }\r\n            return value.map((obj, index) => children.validate(path.push(index), obj, errors, options));\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return hook.list({ node: this, children }, path, ...args);\r\n        }\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MapNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\n/**\r\n * Map nodes similar to list nodes, but a string key is required to add children\r\n */\r\nexports.MapNode = (keys, children, config) => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'map',\r\n        default: () => ({}),\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            return children.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, key) {\r\n            return path.modelPush(key);\r\n        },\r\n        suggest: (path) => keys.suggest(path, ''),\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'object') {\r\n                value = this.default();\r\n            }\r\n            if (value === null || typeof value !== 'object') {\r\n                errors.add(path, 'error.expected_object');\r\n                return value;\r\n            }\r\n            let res = {};\r\n            Object.keys(value).forEach(k => {\r\n                keys.validate(path, k, errors, options);\r\n                res[k] = children.validate(path.push(k), value[k], errors, options);\r\n            });\r\n            return res;\r\n        },\r\n        validationOption(path) {\r\n            var _a;\r\n            return (_a = config === null || config === void 0 ? void 0 : config.validation) !== null && _a !== void 0 ? _a : keys.validationOption(path.push(''));\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return hook.map({ node: this, keys, children, config: config !== null && config !== void 0 ? config : {} }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Keep = exports.Opt = exports.Has = exports.Mod = exports.Base = void 0;\r\nexports.Base = ({\r\n    type: () => 'base',\r\n    category: () => undefined,\r\n    default: () => undefined,\r\n    enabled: () => true,\r\n    keep: () => false,\r\n    optional: () => false,\r\n    navigate() { return this; },\r\n    pathPush: (p) => p,\r\n    suggest: () => [],\r\n    validate: (_, v) => v,\r\n    validationOption: () => undefined,\r\n    hook(hook, path, ...args) { return hook.base({ node: this }, path, ...args); },\r\n    canUpdate: () => false,\r\n    update: () => []\r\n});\r\nexports.Mod = (node, mods) => ({\r\n    ...node, ...(typeof mods === 'function' ? mods(node) : mods)\r\n});\r\nexports.Has = (key, node) => exports.Mod(node, {\r\n    enabled: (p) => p.push(key).get() !== undefined\r\n});\r\nfunction Opt(node) {\r\n    return {\r\n        ...node,\r\n        optional: () => true\r\n    };\r\n}\r\nexports.Opt = Opt;\r\nfunction Keep(node) {\r\n    return {\r\n        ...node,\r\n        keep: () => true\r\n    };\r\n}\r\nexports.Keep = Keep;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NumberNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nexports.NumberNode = (config) => {\r\n    var _a, _b, _c;\r\n    const integer = (config === null || config === void 0 ? void 0 : config.color) ? true : (_a = config === null || config === void 0 ? void 0 : config.integer) !== null && _a !== void 0 ? _a : false;\r\n    const min = (config === null || config === void 0 ? void 0 : config.color) ? 0 : (_b = config === null || config === void 0 ? void 0 : config.min) !== null && _b !== void 0 ? _b : -Infinity;\r\n    const max = (config === null || config === void 0 ? void 0 : config.color) ? 16777215 : (_c = config === null || config === void 0 ? void 0 : config.max) !== null && _c !== void 0 ? _c : Infinity;\r\n    const between = (config === null || config === void 0 ? void 0 : config.min) !== undefined && (config === null || config === void 0 ? void 0 : config.max) !== undefined;\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'number',\r\n        default: () => min > 0 ? min : 0,\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'number') {\r\n                value = this.default();\r\n            }\r\n            if (typeof value !== 'number') {\r\n                errors.add(path, 'error.expected_number');\r\n            }\r\n            else if (integer && !Number.isInteger(value)) {\r\n                errors.add(path, 'error.expected_integer');\r\n            }\r\n            else if (between && (value < min || value > max)) {\r\n                errors.add(path, 'error.expected_number_between', min, max);\r\n            }\r\n            else if (value < min) {\r\n                errors.add(path, 'error.invalid_range.smaller', value, min);\r\n            }\r\n            else if (value > max) {\r\n                errors.add(path, 'error.invalid_range.larger', value, max);\r\n            }\r\n            return value;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return hook.number({ node: this, integer, min, max, between, config: config !== null && config !== void 0 ? config : {} }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectNode = exports.Case = exports.Switch = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nconst Path_1 = require(\"../model/Path\");\r\nconst Errors_1 = require(\"../model/Errors\");\r\nconst utils_1 = require(\"../utils\");\r\nexports.Switch = Symbol('switch');\r\nexports.Case = Symbol('case');\r\nexports.ObjectNode = (fields, config) => {\r\n    const { [exports.Switch]: filter, [exports.Case]: cases, ...defaultFields } = fields;\r\n    const getActiveFields = (path) => {\r\n        if (filter === undefined)\r\n            return defaultFields;\r\n        const switchValue = filter(path).get();\r\n        const activeCase = cases[switchValue];\r\n        return { ...defaultFields, ...activeCase };\r\n    };\r\n    const getChildModelPath = (path, childKey) => {\r\n        var _a;\r\n        const switchValue = filter === null || filter === void 0 ? void 0 : filter(path).get();\r\n        const caseFields = filter ? ((_a = cases[switchValue]) !== null && _a !== void 0 ? _a : {}) : {};\r\n        const caseKeys = Object.keys(caseFields);\r\n        const pathWithContext = (config === null || config === void 0 ? void 0 : config.context) ?\r\n            new Path_1.ModelPath(path.getModel(), new Path_1.Path(path.getArray(), [config.context])) : path;\r\n        const pathWithFilter = !(config === null || config === void 0 ? void 0 : config.disableSwitchContext) && switchValue && caseKeys.includes(childKey) ?\r\n            pathWithContext.contextPush(switchValue) : pathWithContext;\r\n        return pathWithFilter.push(childKey);\r\n    };\r\n    return ({\r\n        ...Node_1.Base,\r\n        type: () => 'object',\r\n        category: () => config === null || config === void 0 ? void 0 : config.category,\r\n        default: () => ({}),\r\n        keep() {\r\n            return this.optional();\r\n        },\r\n        navigate(path, index) {\r\n            const nextIndex = index + 1;\r\n            const pathElements = path.getArray();\r\n            if (pathElements.length <= nextIndex) {\r\n                return this;\r\n            }\r\n            const activeFields = getActiveFields(path.slice(0, nextIndex));\r\n            const node = activeFields[pathElements[nextIndex]];\r\n            return node === null || node === void 0 ? void 0 : node.navigate(path, nextIndex);\r\n        },\r\n        pathPush(path, key) {\r\n            return getChildModelPath(path, key.toString());\r\n        },\r\n        suggest(path, value) {\r\n            const activeFields = getActiveFields(path);\r\n            const existingKeys = Object.keys(typeof value === 'object' ? value : {});\r\n            return Object.keys(activeFields)\r\n                .filter(k => !existingKeys.includes(k))\r\n                .map(utils_1.quoteString);\r\n        },\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'object') {\r\n                value = this.default();\r\n            }\r\n            if (typeof value !== 'object') {\r\n                errors.add(path, 'error.expected_object');\r\n                return value;\r\n            }\r\n            let activeFields = defaultFields;\r\n            if (filter) {\r\n                const filterPath = filter(path);\r\n                let switchValue = filterPath.get();\r\n                if (path.equals(filterPath.pop())) {\r\n                    const filterField = filterPath.last();\r\n                    switchValue = defaultFields[filterField].validate(path.push(filterField), value[filterField], new Errors_1.Errors(), options);\r\n                }\r\n                activeFields = { ...activeFields, ...cases[switchValue] };\r\n            }\r\n            const activeKeys = Object.keys(activeFields);\r\n            const forcedKeys = activeKeys.filter(k => !activeFields[k].optional());\r\n            const keys = new Set([...forcedKeys, ...Object.keys(value)]);\r\n            let res = {};\r\n            keys.forEach(k => {\r\n                if (activeKeys.includes(k)) {\r\n                    if (!activeFields[k].enabled(path))\r\n                        return;\r\n                    const newValue = activeFields[k].validate(path.push(k), value[k], errors, options);\r\n                    if (!activeFields[k].keep() && activeFields[k].optional()\r\n                        && (newValue === undefined\r\n                            || (Array.isArray(newValue) && newValue.length === 0)\r\n                            || (newValue.constructor === Object && Object.keys(newValue).length === 0))) {\r\n                        res[k] = undefined;\r\n                    }\r\n                    else {\r\n                        res[k] = newValue;\r\n                        path.getModel().set(path.push(k), newValue, true);\r\n                    }\r\n                }\r\n                else {\r\n                    res[k] = value[k];\r\n                }\r\n            });\r\n            return res;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return hook.object({ node: this, fields: defaultFields, filter, cases, getActiveFields, getChildModelPath }, path, ...args);\r\n        }\r\n    });\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Reference = void 0;\r\nexports.Reference = (schemas, schema) => ({\r\n    type(path) {\r\n        return schemas.get(schema).type.bind(this)(path);\r\n    },\r\n    category(path) {\r\n        return schemas.get(schema).category.bind(this)(path);\r\n    },\r\n    default() {\r\n        return schemas.get(schema).default.bind(this)();\r\n    },\r\n    transform(path, value) {\r\n        return schemas.get(schema).transform(path, value);\r\n    },\r\n    enabled(path) {\r\n        return schemas.get(schema).enabled.bind(this)(path);\r\n    },\r\n    keep() {\r\n        return schemas.get(schema).keep.bind(this)();\r\n    },\r\n    optional() {\r\n        return schemas.get(schema).optional.bind(this)();\r\n    },\r\n    navigate(path, index) {\r\n        return schemas.get(schema).navigate.bind(this)(path, index);\r\n    },\r\n    pathPush(path, key) {\r\n        return schemas.get(schema).pathPush.bind(this)(path, key);\r\n    },\r\n    suggest(path, value) {\r\n        return schemas.get(schema).suggest.bind(this)(path, value);\r\n    },\r\n    validate(path, value, errors, options) {\r\n        return schemas.get(schema).validate.bind(this)(path, value, errors, options);\r\n    },\r\n    validationOption(path) {\r\n        return schemas.get(schema).validationOption.bind(this)(path);\r\n    },\r\n    hook(hook, path, ...args) {\r\n        return schemas.get(schema).hook.bind(this)(hook, path, ...args);\r\n    },\r\n    activeCase(path, fallback) {\r\n        return schemas.get(schema).activeCase.bind(this)(path, fallback);\r\n    },\r\n    canUpdate(path, value) {\r\n        return schemas.get(schema).canUpdate.bind(this)(path, value);\r\n    },\r\n    update(path, value) {\r\n        return schemas.get(schema).update.bind(this)(path, value);\r\n    }\r\n});\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StringNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\nconst utils_1 = require(\"../utils\");\r\nconst isEnum = (value) => {\r\n    var _a;\r\n    return !!((_a = value) === null || _a === void 0 ? void 0 : _a.enum);\r\n};\r\nconst isValidator = (value) => {\r\n    var _a;\r\n    return !!((_a = value) === null || _a === void 0 ? void 0 : _a.validator);\r\n};\r\n/**\r\n * Simple string node with one text field\r\n */\r\nexports.StringNode = (collections, config) => {\r\n    const getValues = isEnum(config)\r\n        ? ((typeof config.enum === 'string')\r\n            ? () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.enum)) !== null && _a !== void 0 ? _a : []; }\r\n            : () => config.enum)\r\n        : (((config === null || config === void 0 ? void 0 : config.validator) === 'resource')\r\n            ? ((typeof config.params.pool === 'string')\r\n                ? (config.params.pool.startsWith('$')\r\n                    ? () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.params.pool.slice(1))) !== null && _a !== void 0 ? _a : []; }\r\n                    : () => { var _a; return (_a = collections === null || collections === void 0 ? void 0 : collections.get(config.params.pool)) !== null && _a !== void 0 ? _a : []; })\r\n                : () => config.params.pool)\r\n            : () => []);\r\n    return {\r\n        ...Node_1.Base,\r\n        type: () => 'string',\r\n        default: () => '',\r\n        validate(path, value, errors, options) {\r\n            if (options.loose && typeof value !== 'string') {\r\n                value = this.default() || undefined;\r\n            }\r\n            if (typeof value !== 'string') {\r\n                errors.add(path, 'error.expected_string');\r\n                return value;\r\n            }\r\n            if (isValidator(config)) {\r\n                if (config.validator === 'resource' && value.length > 0 && !value.includes(':')) {\r\n                    value = value[0] === '#'\r\n                        ? '#minecraft:' + value.slice(1)\r\n                        : 'minecraft:' + value;\r\n                }\r\n                if (config.validator === 'resource' && ((typeof config.params.pool === 'string' && config.params.pool.startsWith('$')) ||\r\n                    (config.params.allowTag && value[0] === '#') ||\r\n                    config.params.isDefinition ||\r\n                    config.params.allowUnknown)) {\r\n                    return value;\r\n                }\r\n            }\r\n            if ((isEnum(config) && config.additional)) {\r\n                return value;\r\n            }\r\n            const values = getValues();\r\n            if (values.length > 0 && !values.includes(value)) {\r\n                errors.add(path, 'error.invalid_enum_option', value);\r\n            }\r\n            return value;\r\n        },\r\n        suggest: () => getValues().map(utils_1.quoteString),\r\n        validationOption() {\r\n            return isValidator(config) ? config : undefined;\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return hook.string({ node: this, getValues, config }, path, ...args);\r\n        }\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SwitchNode = void 0;\r\nconst Node_1 = require(\"./Node\");\r\n/**\r\n * Node that allows multiple types\r\n */\r\nexports.SwitchNode = (cases) => {\r\n    return {\r\n        ...Node_1.Base,\r\n        type(path) {\r\n            return this.activeCase(path, true)\r\n                .node.type(path);\r\n        },\r\n        category(path) {\r\n            return this.activeCase(path, true)\r\n                .node.category(path);\r\n        },\r\n        default: () => cases[0].node.default(),\r\n        navigate(path, index) {\r\n            var _a;\r\n            const nextIndex = index + 1;\r\n            return (_a = this.activeCase(path.slice(0, nextIndex))) === null || _a === void 0 ? void 0 : _a.node.navigate(path, index);\r\n        },\r\n        pathPush(path, key) {\r\n            var _a, _b;\r\n            return (_b = (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.pathPush(path, key)) !== null && _b !== void 0 ? _b : path;\r\n        },\r\n        suggest(path, value) {\r\n            var _a, _b;\r\n            return (_b = (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.suggest(path, value)) !== null && _b !== void 0 ? _b : cases\r\n                .filter(c => c.match(path))\r\n                .map(c => c.node.suggest(path, value))\r\n                .reduce((p, c) => p.concat(c));\r\n        },\r\n        validate(path, value, errors, options) {\r\n            let c = this.activeCase(path);\r\n            if (c === undefined) {\r\n                return value;\r\n            }\r\n            return c.node.validate(path, value, errors, options);\r\n        },\r\n        validationOption(path) {\r\n            var _a;\r\n            return (_a = this.activeCase(path)) === null || _a === void 0 ? void 0 : _a.node.validationOption(path);\r\n        },\r\n        activeCase(path, fallback) {\r\n            const sorter = (a, b) => { var _a, _b; return ((_a = b.priority) !== null && _a !== void 0 ? _a : 0) - ((_b = a.priority) !== null && _b !== void 0 ? _b : 0); };\r\n            const matchedCases = cases.filter(c => (console.log(c.match.toString()), c.match(path))).sort(sorter);\r\n            if (fallback && matchedCases.length === 0) {\r\n                return cases.sort(sorter)[0];\r\n            }\r\n            return (matchedCases.length > 0 ? matchedCases[0] : undefined);\r\n        },\r\n        hook(hook, path, ...args) {\r\n            return this.activeCase(path, true)\r\n                .node.hook(hook, path, ...args);\r\n        },\r\n    };\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.quoteString = exports.escapeString = void 0;\r\nfunction escapeString(str) {\r\n    return str.replace(/(\\\\|\")/g, '\\\\$1');\r\n}\r\nexports.escapeString = escapeString;\r\nfunction quoteString(str) {\r\n    return `\"${escapeString(str)}\"`;\r\n}\r\nexports.quoteString = quoteString;\r\n","/*istanbul ignore start*/\"use strict\";\n\nexports.__esModule = true;\nexports. /*istanbul ignore end*/convertChangesToDMP = convertChangesToDMP;\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change = /*istanbul ignore start*/void 0 /*istanbul ignore end*/,\n      operation = /*istanbul ignore start*/void 0 /*istanbul ignore end*/;\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n  return ret;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb252ZXJ0L2RtcC5qcyJdLCJuYW1lcyI6WyJjb252ZXJ0Q2hhbmdlc1RvRE1QIiwiY2hhbmdlcyIsInJldCIsImNoYW5nZSIsIm9wZXJhdGlvbiIsImkiLCJsZW5ndGgiLCJhZGRlZCIsInJlbW92ZWQiLCJwdXNoIiwidmFsdWUiXSwibWFwcGluZ3MiOiI7OztnQ0FDZ0JBLG1CLEdBQUFBLG1CO0FBRGhCO0FBQ08sU0FBU0EsbUJBQVQsQ0FBNkJDLE9BQTdCLEVBQXNDO0FBQzNDLE1BQUlDLE1BQU0sRUFBVjtBQUFBLE1BQ0lDLHdDQURKO0FBQUEsTUFFSUMsMkNBRko7QUFHQSxPQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUosUUFBUUssTUFBNUIsRUFBb0NELEdBQXBDLEVBQXlDO0FBQ3ZDRixhQUFTRixRQUFRSSxDQUFSLENBQVQ7QUFDQSxRQUFJRixPQUFPSSxLQUFYLEVBQWtCO0FBQ2hCSCxrQkFBWSxDQUFaO0FBQ0QsS0FGRCxNQUVPLElBQUlELE9BQU9LLE9BQVgsRUFBb0I7QUFDekJKLGtCQUFZLENBQUMsQ0FBYjtBQUNELEtBRk0sTUFFQTtBQUNMQSxrQkFBWSxDQUFaO0FBQ0Q7O0FBRURGLFFBQUlPLElBQUosQ0FBUyxDQUFDTCxTQUFELEVBQVlELE9BQU9PLEtBQW5CLENBQVQ7QUFDRDtBQUNELFNBQU9SLEdBQVA7QUFDRCIsImZpbGUiOiJkbXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTZWU6IGh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9nb29nbGUtZGlmZi1tYXRjaC1wYXRjaC93aWtpL0FQSVxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRDaGFuZ2VzVG9ETVAoY2hhbmdlcykge1xuICBsZXQgcmV0ID0gW10sXG4gICAgICBjaGFuZ2UsXG4gICAgICBvcGVyYXRpb247XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY2hhbmdlcy5sZW5ndGg7IGkrKykge1xuICAgIGNoYW5nZSA9IGNoYW5nZXNbaV07XG4gICAgaWYgKGNoYW5nZS5hZGRlZCkge1xuICAgICAgb3BlcmF0aW9uID0gMTtcbiAgICB9IGVsc2UgaWYgKGNoYW5nZS5yZW1vdmVkKSB7XG4gICAgICBvcGVyYXRpb24gPSAtMTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3BlcmF0aW9uID0gMDtcbiAgICB9XG5cbiAgICByZXQucHVzaChbb3BlcmF0aW9uLCBjaGFuZ2UudmFsdWVdKTtcbiAgfVxuICByZXR1cm4gcmV0O1xufVxuIl19\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports. /*istanbul ignore end*/convertChangesToXML = convertChangesToXML;\nfunction convertChangesToXML(changes) {\n  var ret = [];\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb252ZXJ0L3htbC5qcyJdLCJuYW1lcyI6WyJjb252ZXJ0Q2hhbmdlc1RvWE1MIiwiY2hhbmdlcyIsInJldCIsImkiLCJsZW5ndGgiLCJjaGFuZ2UiLCJhZGRlZCIsInB1c2giLCJyZW1vdmVkIiwiZXNjYXBlSFRNTCIsInZhbHVlIiwiam9pbiIsInMiLCJuIiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6Ijs7O2dDQUFnQkEsbUIsR0FBQUEsbUI7QUFBVCxTQUFTQSxtQkFBVCxDQUE2QkMsT0FBN0IsRUFBc0M7QUFDM0MsTUFBSUMsTUFBTSxFQUFWO0FBQ0EsT0FBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlGLFFBQVFHLE1BQTVCLEVBQW9DRCxHQUFwQyxFQUF5QztBQUN2QyxRQUFJRSxTQUFTSixRQUFRRSxDQUFSLENBQWI7QUFDQSxRQUFJRSxPQUFPQyxLQUFYLEVBQWtCO0FBQ2hCSixVQUFJSyxJQUFKLENBQVMsT0FBVDtBQUNELEtBRkQsTUFFTyxJQUFJRixPQUFPRyxPQUFYLEVBQW9CO0FBQ3pCTixVQUFJSyxJQUFKLENBQVMsT0FBVDtBQUNEOztBQUVETCxRQUFJSyxJQUFKLENBQVNFLFdBQVdKLE9BQU9LLEtBQWxCLENBQVQ7O0FBRUEsUUFBSUwsT0FBT0MsS0FBWCxFQUFrQjtBQUNoQkosVUFBSUssSUFBSixDQUFTLFFBQVQ7QUFDRCxLQUZELE1BRU8sSUFBSUYsT0FBT0csT0FBWCxFQUFvQjtBQUN6Qk4sVUFBSUssSUFBSixDQUFTLFFBQVQ7QUFDRDtBQUNGO0FBQ0QsU0FBT0wsSUFBSVMsSUFBSixDQUFTLEVBQVQsQ0FBUDtBQUNEOztBQUVELFNBQVNGLFVBQVQsQ0FBb0JHLENBQXBCLEVBQXVCO0FBQ3JCLE1BQUlDLElBQUlELENBQVI7QUFDQUMsTUFBSUEsRUFBRUMsT0FBRixDQUFVLElBQVYsRUFBZ0IsT0FBaEIsQ0FBSjtBQUNBRCxNQUFJQSxFQUFFQyxPQUFGLENBQVUsSUFBVixFQUFnQixNQUFoQixDQUFKO0FBQ0FELE1BQUlBLEVBQUVDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLE1BQWhCLENBQUo7QUFDQUQsTUFBSUEsRUFBRUMsT0FBRixDQUFVLElBQVYsRUFBZ0IsUUFBaEIsQ0FBSjs7QUFFQSxTQUFPRCxDQUFQO0FBQ0QiLCJmaWxlIjoieG1sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRDaGFuZ2VzVG9YTUwoY2hhbmdlcykge1xuICBsZXQgcmV0ID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY2hhbmdlcy5sZW5ndGg7IGkrKykge1xuICAgIGxldCBjaGFuZ2UgPSBjaGFuZ2VzW2ldO1xuICAgIGlmIChjaGFuZ2UuYWRkZWQpIHtcbiAgICAgIHJldC5wdXNoKCc8aW5zPicpO1xuICAgIH0gZWxzZSBpZiAoY2hhbmdlLnJlbW92ZWQpIHtcbiAgICAgIHJldC5wdXNoKCc8ZGVsPicpO1xuICAgIH1cblxuICAgIHJldC5wdXNoKGVzY2FwZUhUTUwoY2hhbmdlLnZhbHVlKSk7XG5cbiAgICBpZiAoY2hhbmdlLmFkZGVkKSB7XG4gICAgICByZXQucHVzaCgnPC9pbnM+Jyk7XG4gICAgfSBlbHNlIGlmIChjaGFuZ2UucmVtb3ZlZCkge1xuICAgICAgcmV0LnB1c2goJzwvZGVsPicpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmV0LmpvaW4oJycpO1xufVxuXG5mdW5jdGlvbiBlc2NhcGVIVE1MKHMpIHtcbiAgbGV0IG4gPSBzO1xuICBuID0gbi5yZXBsYWNlKC8mL2csICcmYW1wOycpO1xuICBuID0gbi5yZXBsYWNlKC88L2csICcmbHQ7Jyk7XG4gIG4gPSBuLnJlcGxhY2UoLz4vZywgJyZndDsnKTtcbiAgbiA9IG4ucmVwbGFjZSgvXCIvZywgJyZxdW90OycpO1xuXG4gIHJldHVybiBuO1xufVxuIl19\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports.arrayDiff = undefined;\nexports. /*istanbul ignore end*/diffArrays = diffArrays;\n\nvar /*istanbul ignore start*/_base = require('./base') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _base2 = _interopRequireDefault(_base);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*istanbul ignore end*/var arrayDiff = /*istanbul ignore start*/exports. /*istanbul ignore end*/arrayDiff = new /*istanbul ignore start*/_base2['default'] /*istanbul ignore end*/();\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2FycmF5LmpzIl0sIm5hbWVzIjpbImRpZmZBcnJheXMiLCJhcnJheURpZmYiLCJ0b2tlbml6ZSIsInZhbHVlIiwic2xpY2UiLCJqb2luIiwicmVtb3ZlRW1wdHkiLCJvbGRBcnIiLCJuZXdBcnIiLCJjYWxsYmFjayIsImRpZmYiXSwibWFwcGluZ3MiOiI7Ozs7Z0NBVWdCQSxVLEdBQUFBLFU7O0FBVmhCOzs7Ozs7dUJBRU8sSUFBTUMsaUZBQVksd0VBQWxCO0FBQ1BBLFVBQVVDLFFBQVYsR0FBcUIsVUFBU0MsS0FBVCxFQUFnQjtBQUNuQyxTQUFPQSxNQUFNQyxLQUFOLEVBQVA7QUFDRCxDQUZEO0FBR0FILFVBQVVJLElBQVYsR0FBaUJKLFVBQVVLLFdBQVYsR0FBd0IsVUFBU0gsS0FBVCxFQUFnQjtBQUN2RCxTQUFPQSxLQUFQO0FBQ0QsQ0FGRDs7QUFJTyxTQUFTSCxVQUFULENBQW9CTyxNQUFwQixFQUE0QkMsTUFBNUIsRUFBb0NDLFFBQXBDLEVBQThDO0FBQUUsU0FBT1IsVUFBVVMsSUFBVixDQUFlSCxNQUFmLEVBQXVCQyxNQUF2QixFQUErQkMsUUFBL0IsQ0FBUDtBQUFrRCIsImZpbGUiOiJhcnJheS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaWZmIGZyb20gJy4vYmFzZSc7XG5cbmV4cG9ydCBjb25zdCBhcnJheURpZmYgPSBuZXcgRGlmZigpO1xuYXJyYXlEaWZmLnRva2VuaXplID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlLnNsaWNlKCk7XG59O1xuYXJyYXlEaWZmLmpvaW4gPSBhcnJheURpZmYucmVtb3ZlRW1wdHkgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWU7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZGlmZkFycmF5cyhvbGRBcnIsIG5ld0FyciwgY2FsbGJhY2spIHsgcmV0dXJuIGFycmF5RGlmZi5kaWZmKG9sZEFyciwgbmV3QXJyLCBjYWxsYmFjayk7IH1cbiJdfQ==\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports['default'] = /*istanbul ignore end*/Diff;\nfunction Diff() {}\n\nDiff.prototype = {\n  /*istanbul ignore start*/ /*istanbul ignore end*/diff: function diff(oldString, newString) {\n    /*istanbul ignore start*/var /*istanbul ignore end*/options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var callback = options.callback;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    this.options = options;\n\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    }\n\n    // Allow subclasses to massage the input prior to running\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{ newPos: -1, components: [] }];\n\n    // Seed editLength = 0, i.e. the content starts with the same values\n    var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{ value: this.join(newString), count: newString.length }]);\n    }\n\n    // Main worker method. checks all permutations of a given edit length for acceptance.\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath = /*istanbul ignore start*/void 0 /*istanbul ignore end*/;\n        var addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        }\n\n        // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        // If we have hit the end of both strings, then we are done\n        if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced.\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          // This should not happen, but we want to be safe.\n          /* istanbul ignore next */\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  /*istanbul ignore start*/ /*istanbul ignore end*/pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = { count: last.count + 1, added: added, removed: removed };\n    } else {\n      components.push({ count: 1, added: added, removed: removed });\n    }\n  },\n  /*istanbul ignore start*/ /*istanbul ignore end*/extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n        commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({ count: commonCount });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  /*istanbul ignore start*/ /*istanbul ignore end*/equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  /*istanbul ignore start*/ /*istanbul ignore end*/removeEmpty: function removeEmpty(array) {\n    var ret = [];\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  },\n  /*istanbul ignore start*/ /*istanbul ignore end*/castInput: function castInput(value) {\n    return value;\n  },\n  /*istanbul ignore start*/ /*istanbul ignore end*/tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  /*istanbul ignore start*/ /*istanbul ignore end*/join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n      newPos += component.count;\n\n      // Common case\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count;\n\n      // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  }\n\n  // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n  var lastComponent = components[componentLen - 1];\n  if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return { newPos: path.newPos, components: path.components.slice(0) };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports.characterDiff = undefined;\nexports. /*istanbul ignore end*/diffChars = diffChars;\n\nvar /*istanbul ignore start*/_base = require('./base') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _base2 = _interopRequireDefault(_base);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*istanbul ignore end*/var characterDiff = /*istanbul ignore start*/exports. /*istanbul ignore end*/characterDiff = new /*istanbul ignore start*/_base2['default'] /*istanbul ignore end*/();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2NoYXJhY3Rlci5qcyJdLCJuYW1lcyI6WyJkaWZmQ2hhcnMiLCJjaGFyYWN0ZXJEaWZmIiwib2xkU3RyIiwibmV3U3RyIiwib3B0aW9ucyIsImRpZmYiXSwibWFwcGluZ3MiOiI7Ozs7Z0NBR2dCQSxTLEdBQUFBLFM7O0FBSGhCOzs7Ozs7dUJBRU8sSUFBTUMseUZBQWdCLHdFQUF0QjtBQUNBLFNBQVNELFNBQVQsQ0FBbUJFLE1BQW5CLEVBQTJCQyxNQUEzQixFQUFtQ0MsT0FBbkMsRUFBNEM7QUFBRSxTQUFPSCxjQUFjSSxJQUFkLENBQW1CSCxNQUFuQixFQUEyQkMsTUFBM0IsRUFBbUNDLE9BQW5DLENBQVA7QUFBcUQiLCJmaWxlIjoiY2hhcmFjdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IGNoYXJhY3RlckRpZmYgPSBuZXcgRGlmZigpO1xuZXhwb3J0IGZ1bmN0aW9uIGRpZmZDaGFycyhvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykgeyByZXR1cm4gY2hhcmFjdGVyRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBvcHRpb25zKTsgfVxuIl19\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports.cssDiff = undefined;\nexports. /*istanbul ignore end*/diffCss = diffCss;\n\nvar /*istanbul ignore start*/_base = require('./base') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _base2 = _interopRequireDefault(_base);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*istanbul ignore end*/var cssDiff = /*istanbul ignore start*/exports. /*istanbul ignore end*/cssDiff = new /*istanbul ignore start*/_base2['default'] /*istanbul ignore end*/();\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2Nzcy5qcyJdLCJuYW1lcyI6WyJkaWZmQ3NzIiwiY3NzRGlmZiIsInRva2VuaXplIiwidmFsdWUiLCJzcGxpdCIsIm9sZFN0ciIsIm5ld1N0ciIsImNhbGxiYWNrIiwiZGlmZiJdLCJtYXBwaW5ncyI6Ijs7OztnQ0FPZ0JBLE8sR0FBQUEsTzs7QUFQaEI7Ozs7Ozt1QkFFTyxJQUFNQyw2RUFBVSx3RUFBaEI7QUFDUEEsUUFBUUMsUUFBUixHQUFtQixVQUFTQyxLQUFULEVBQWdCO0FBQ2pDLFNBQU9BLE1BQU1DLEtBQU4sQ0FBWSxlQUFaLENBQVA7QUFDRCxDQUZEOztBQUlPLFNBQVNKLE9BQVQsQ0FBaUJLLE1BQWpCLEVBQXlCQyxNQUF6QixFQUFpQ0MsUUFBakMsRUFBMkM7QUFBRSxTQUFPTixRQUFRTyxJQUFSLENBQWFILE1BQWIsRUFBcUJDLE1BQXJCLEVBQTZCQyxRQUE3QixDQUFQO0FBQWdEIiwiZmlsZSI6ImNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaWZmIGZyb20gJy4vYmFzZSc7XG5cbmV4cG9ydCBjb25zdCBjc3NEaWZmID0gbmV3IERpZmYoKTtcbmNzc0RpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUuc3BsaXQoLyhbe306OyxdfFxccyspLyk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZGlmZkNzcyhvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spIHsgcmV0dXJuIGNzc0RpZmYuZGlmZihvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spOyB9XG4iXX0=\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports.jsonDiff = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports. /*istanbul ignore end*/diffJson = diffJson;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/canonicalize = canonicalize;\n\nvar /*istanbul ignore start*/_base = require('./base') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _base2 = _interopRequireDefault(_base);\n\n/*istanbul ignore end*/var /*istanbul ignore start*/_line = require('./line') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*istanbul ignore end*/var objectPrototypeToString = Object.prototype.toString;\n\nvar jsonDiff = /*istanbul ignore start*/exports. /*istanbul ignore end*/jsonDiff = new /*istanbul ignore start*/_base2['default'] /*istanbul ignore end*/();\n// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken = true;\n\njsonDiff.tokenize = /*istanbul ignore start*/_line.lineDiff /*istanbul ignore end*/.tokenize;\njsonDiff.castInput = function (value) {\n  /*istanbul ignore start*/var _options = /*istanbul ignore end*/this.options,\n      undefinedReplacement = _options.undefinedReplacement,\n      _options$stringifyRep = _options.stringifyReplacer,\n      stringifyReplacer = _options$stringifyRep === undefined ? function (k, v) /*istanbul ignore start*/{\n    return (/*istanbul ignore end*/typeof v === 'undefined' ? undefinedReplacement : v\n    );\n  } : _options$stringifyRep;\n\n\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\njsonDiff.equals = function (left, right) {\n  return (/*istanbul ignore start*/_base2['default'] /*istanbul ignore end*/.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'))\n  );\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n}\n\n// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i = /*istanbul ignore start*/void 0 /*istanbul ignore end*/;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj = /*istanbul ignore start*/void 0 /*istanbul ignore end*/;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if ( /*istanbul ignore start*/(typeof /*istanbul ignore end*/obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n    var sortedKeys = [],\n        _key = /*istanbul ignore start*/void 0 /*istanbul ignore end*/;\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n    sortedKeys.sort();\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n  return canonicalizedObj;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2pzb24uanMiXSwibmFtZXMiOlsiZGlmZkpzb24iLCJjYW5vbmljYWxpemUiLCJvYmplY3RQcm90b3R5cGVUb1N0cmluZyIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwianNvbkRpZmYiLCJ1c2VMb25nZXN0VG9rZW4iLCJ0b2tlbml6ZSIsImNhc3RJbnB1dCIsInZhbHVlIiwib3B0aW9ucyIsInVuZGVmaW5lZFJlcGxhY2VtZW50Iiwic3RyaW5naWZ5UmVwbGFjZXIiLCJrIiwidiIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcXVhbHMiLCJsZWZ0IiwicmlnaHQiLCJjYWxsIiwicmVwbGFjZSIsIm9sZE9iaiIsIm5ld09iaiIsImRpZmYiLCJvYmoiLCJzdGFjayIsInJlcGxhY2VtZW50U3RhY2siLCJyZXBsYWNlciIsImtleSIsImkiLCJsZW5ndGgiLCJjYW5vbmljYWxpemVkT2JqIiwicHVzaCIsIkFycmF5IiwicG9wIiwidG9KU09OIiwic29ydGVkS2V5cyIsImhhc093blByb3BlcnR5Iiwic29ydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztnQ0FxQmdCQSxRLEdBQUFBLFE7eURBSUFDLFksR0FBQUEsWTs7QUF6QmhCOzs7O3VCQUNBOzs7O3VCQUVBLElBQU1DLDBCQUEwQkMsT0FBT0MsU0FBUCxDQUFpQkMsUUFBakQ7O0FBR08sSUFBTUMsK0VBQVcsd0VBQWpCO0FBQ1A7QUFDQTtBQUNBQSxTQUFTQyxlQUFULEdBQTJCLElBQTNCOztBQUVBRCxTQUFTRSxRQUFULEdBQW9CLGdFQUFTQSxRQUE3QjtBQUNBRixTQUFTRyxTQUFULEdBQXFCLFVBQVNDLEtBQVQsRUFBZ0I7QUFBQSxpRUFDK0UsS0FBS0MsT0FEcEY7QUFBQSxNQUM1QkMsb0JBRDRCLFlBQzVCQSxvQkFENEI7QUFBQSx1Q0FDTkMsaUJBRE07QUFBQSxNQUNOQSxpQkFETSx5Q0FDYyxVQUFDQyxDQUFELEVBQUlDLENBQUo7QUFBQSxtQ0FBVSxPQUFPQSxDQUFQLEtBQWEsV0FBYixHQUEyQkgsb0JBQTNCLEdBQWtERztBQUE1RDtBQUFBLEdBRGQ7OztBQUduQyxTQUFPLE9BQU9MLEtBQVAsS0FBaUIsUUFBakIsR0FBNEJBLEtBQTVCLEdBQW9DTSxLQUFLQyxTQUFMLENBQWVoQixhQUFhUyxLQUFiLEVBQW9CLElBQXBCLEVBQTBCLElBQTFCLEVBQWdDRyxpQkFBaEMsQ0FBZixFQUFtRUEsaUJBQW5FLEVBQXNGLElBQXRGLENBQTNDO0FBQ0QsQ0FKRDtBQUtBUCxTQUFTWSxNQUFULEdBQWtCLFVBQVNDLElBQVQsRUFBZUMsS0FBZixFQUFzQjtBQUN0QyxTQUFPLG9FQUFLaEIsU0FBTCxDQUFlYyxNQUFmLENBQXNCRyxJQUF0QixDQUEyQmYsUUFBM0IsRUFBcUNhLEtBQUtHLE9BQUwsQ0FBYSxZQUFiLEVBQTJCLElBQTNCLENBQXJDLEVBQXVFRixNQUFNRSxPQUFOLENBQWMsWUFBZCxFQUE0QixJQUE1QixDQUF2RTtBQUFQO0FBQ0QsQ0FGRDs7QUFJTyxTQUFTdEIsUUFBVCxDQUFrQnVCLE1BQWxCLEVBQTBCQyxNQUExQixFQUFrQ2IsT0FBbEMsRUFBMkM7QUFBRSxTQUFPTCxTQUFTbUIsSUFBVCxDQUFjRixNQUFkLEVBQXNCQyxNQUF0QixFQUE4QmIsT0FBOUIsQ0FBUDtBQUFnRDs7QUFFcEc7QUFDQTtBQUNPLFNBQVNWLFlBQVQsQ0FBc0J5QixHQUF0QixFQUEyQkMsS0FBM0IsRUFBa0NDLGdCQUFsQyxFQUFvREMsUUFBcEQsRUFBOERDLEdBQTlELEVBQW1FO0FBQ3hFSCxVQUFRQSxTQUFTLEVBQWpCO0FBQ0FDLHFCQUFtQkEsb0JBQW9CLEVBQXZDOztBQUVBLE1BQUlDLFFBQUosRUFBYztBQUNaSCxVQUFNRyxTQUFTQyxHQUFULEVBQWNKLEdBQWQsQ0FBTjtBQUNEOztBQUVELE1BQUlLLG1DQUFKOztBQUVBLE9BQUtBLElBQUksQ0FBVCxFQUFZQSxJQUFJSixNQUFNSyxNQUF0QixFQUE4QkQsS0FBSyxDQUFuQyxFQUFzQztBQUNwQyxRQUFJSixNQUFNSSxDQUFOLE1BQWFMLEdBQWpCLEVBQXNCO0FBQ3BCLGFBQU9FLGlCQUFpQkcsQ0FBakIsQ0FBUDtBQUNEO0FBQ0Y7O0FBRUQsTUFBSUUsa0RBQUo7O0FBRUEsTUFBSSxxQkFBcUIvQix3QkFBd0JtQixJQUF4QixDQUE2QkssR0FBN0IsQ0FBekIsRUFBNEQ7QUFDMURDLFVBQU1PLElBQU4sQ0FBV1IsR0FBWDtBQUNBTyx1QkFBbUIsSUFBSUUsS0FBSixDQUFVVCxJQUFJTSxNQUFkLENBQW5CO0FBQ0FKLHFCQUFpQk0sSUFBakIsQ0FBc0JELGdCQUF0QjtBQUNBLFNBQUtGLElBQUksQ0FBVCxFQUFZQSxJQUFJTCxJQUFJTSxNQUFwQixFQUE0QkQsS0FBSyxDQUFqQyxFQUFvQztBQUNsQ0UsdUJBQWlCRixDQUFqQixJQUFzQjlCLGFBQWF5QixJQUFJSyxDQUFKLENBQWIsRUFBcUJKLEtBQXJCLEVBQTRCQyxnQkFBNUIsRUFBOENDLFFBQTlDLEVBQXdEQyxHQUF4RCxDQUF0QjtBQUNEO0FBQ0RILFVBQU1TLEdBQU47QUFDQVIscUJBQWlCUSxHQUFqQjtBQUNBLFdBQU9ILGdCQUFQO0FBQ0Q7O0FBRUQsTUFBSVAsT0FBT0EsSUFBSVcsTUFBZixFQUF1QjtBQUNyQlgsVUFBTUEsSUFBSVcsTUFBSixFQUFOO0FBQ0Q7O0FBRUQsTUFBSSx5REFBT1gsR0FBUCx5Q0FBT0EsR0FBUCxPQUFlLFFBQWYsSUFBMkJBLFFBQVEsSUFBdkMsRUFBNkM7QUFDM0NDLFVBQU1PLElBQU4sQ0FBV1IsR0FBWDtBQUNBTyx1QkFBbUIsRUFBbkI7QUFDQUwscUJBQWlCTSxJQUFqQixDQUFzQkQsZ0JBQXRCO0FBQ0EsUUFBSUssYUFBYSxFQUFqQjtBQUFBLFFBQ0lSLHNDQURKO0FBRUEsU0FBS0EsSUFBTCxJQUFZSixHQUFaLEVBQWlCO0FBQ2Y7QUFDQSxVQUFJQSxJQUFJYSxjQUFKLENBQW1CVCxJQUFuQixDQUFKLEVBQTZCO0FBQzNCUSxtQkFBV0osSUFBWCxDQUFnQkosSUFBaEI7QUFDRDtBQUNGO0FBQ0RRLGVBQVdFLElBQVg7QUFDQSxTQUFLVCxJQUFJLENBQVQsRUFBWUEsSUFBSU8sV0FBV04sTUFBM0IsRUFBbUNELEtBQUssQ0FBeEMsRUFBMkM7QUFDekNELGFBQU1RLFdBQVdQLENBQVgsQ0FBTjtBQUNBRSx1QkFBaUJILElBQWpCLElBQXdCN0IsYUFBYXlCLElBQUlJLElBQUosQ0FBYixFQUF1QkgsS0FBdkIsRUFBOEJDLGdCQUE5QixFQUFnREMsUUFBaEQsRUFBMERDLElBQTFELENBQXhCO0FBQ0Q7QUFDREgsVUFBTVMsR0FBTjtBQUNBUixxQkFBaUJRLEdBQWpCO0FBQ0QsR0FuQkQsTUFtQk87QUFDTEgsdUJBQW1CUCxHQUFuQjtBQUNEO0FBQ0QsU0FBT08sZ0JBQVA7QUFDRCIsImZpbGUiOiJqc29uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcbmltcG9ydCB7bGluZURpZmZ9IGZyb20gJy4vbGluZSc7XG5cbmNvbnN0IG9iamVjdFByb3RvdHlwZVRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuXG5leHBvcnQgY29uc3QganNvbkRpZmYgPSBuZXcgRGlmZigpO1xuLy8gRGlzY3JpbWluYXRlIGJldHdlZW4gdHdvIGxpbmVzIG9mIHByZXR0eS1wcmludGVkLCBzZXJpYWxpemVkIEpTT04gd2hlcmUgb25lIG9mIHRoZW0gaGFzIGFcbi8vIGRhbmdsaW5nIGNvbW1hIGFuZCB0aGUgb3RoZXIgZG9lc24ndC4gVHVybnMgb3V0IGluY2x1ZGluZyB0aGUgZGFuZ2xpbmcgY29tbWEgeWllbGRzIHRoZSBuaWNlc3Qgb3V0cHV0OlxuanNvbkRpZmYudXNlTG9uZ2VzdFRva2VuID0gdHJ1ZTtcblxuanNvbkRpZmYudG9rZW5pemUgPSBsaW5lRGlmZi50b2tlbml6ZTtcbmpzb25EaWZmLmNhc3RJbnB1dCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGNvbnN0IHt1bmRlZmluZWRSZXBsYWNlbWVudCwgc3RyaW5naWZ5UmVwbGFjZXIgPSAoaywgdikgPT4gdHlwZW9mIHYgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkUmVwbGFjZW1lbnQgOiB2fSA9IHRoaXMub3B0aW9ucztcblxuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyA/IHZhbHVlIDogSlNPTi5zdHJpbmdpZnkoY2Fub25pY2FsaXplKHZhbHVlLCBudWxsLCBudWxsLCBzdHJpbmdpZnlSZXBsYWNlciksIHN0cmluZ2lmeVJlcGxhY2VyLCAnICAnKTtcbn07XG5qc29uRGlmZi5lcXVhbHMgPSBmdW5jdGlvbihsZWZ0LCByaWdodCkge1xuICByZXR1cm4gRGlmZi5wcm90b3R5cGUuZXF1YWxzLmNhbGwoanNvbkRpZmYsIGxlZnQucmVwbGFjZSgvLChbXFxyXFxuXSkvZywgJyQxJyksIHJpZ2h0LnJlcGxhY2UoLywoW1xcclxcbl0pL2csICckMScpKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmSnNvbihvbGRPYmosIG5ld09iaiwgb3B0aW9ucykgeyByZXR1cm4ganNvbkRpZmYuZGlmZihvbGRPYmosIG5ld09iaiwgb3B0aW9ucyk7IH1cblxuLy8gVGhpcyBmdW5jdGlvbiBoYW5kbGVzIHRoZSBwcmVzZW5jZSBvZiBjaXJjdWxhciByZWZlcmVuY2VzIGJ5IGJhaWxpbmcgb3V0IHdoZW4gZW5jb3VudGVyaW5nIGFuXG4vLyBvYmplY3QgdGhhdCBpcyBhbHJlYWR5IG9uIHRoZSBcInN0YWNrXCIgb2YgaXRlbXMgYmVpbmcgcHJvY2Vzc2VkLiBBY2NlcHRzIGFuIG9wdGlvbmFsIHJlcGxhY2VyXG5leHBvcnQgZnVuY3Rpb24gY2Fub25pY2FsaXplKG9iaiwgc3RhY2ssIHJlcGxhY2VtZW50U3RhY2ssIHJlcGxhY2VyLCBrZXkpIHtcbiAgc3RhY2sgPSBzdGFjayB8fCBbXTtcbiAgcmVwbGFjZW1lbnRTdGFjayA9IHJlcGxhY2VtZW50U3RhY2sgfHwgW107XG5cbiAgaWYgKHJlcGxhY2VyKSB7XG4gICAgb2JqID0gcmVwbGFjZXIoa2V5LCBvYmopO1xuICB9XG5cbiAgbGV0IGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHN0YWNrLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKHN0YWNrW2ldID09PSBvYmopIHtcbiAgICAgIHJldHVybiByZXBsYWNlbWVudFN0YWNrW2ldO1xuICAgIH1cbiAgfVxuXG4gIGxldCBjYW5vbmljYWxpemVkT2JqO1xuXG4gIGlmICgnW29iamVjdCBBcnJheV0nID09PSBvYmplY3RQcm90b3R5cGVUb1N0cmluZy5jYWxsKG9iaikpIHtcbiAgICBzdGFjay5wdXNoKG9iaik7XG4gICAgY2Fub25pY2FsaXplZE9iaiA9IG5ldyBBcnJheShvYmoubGVuZ3RoKTtcbiAgICByZXBsYWNlbWVudFN0YWNrLnB1c2goY2Fub25pY2FsaXplZE9iaik7XG4gICAgZm9yIChpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY2Fub25pY2FsaXplZE9ialtpXSA9IGNhbm9uaWNhbGl6ZShvYmpbaV0sIHN0YWNrLCByZXBsYWNlbWVudFN0YWNrLCByZXBsYWNlciwga2V5KTtcbiAgICB9XG4gICAgc3RhY2sucG9wKCk7XG4gICAgcmVwbGFjZW1lbnRTdGFjay5wb3AoKTtcbiAgICByZXR1cm4gY2Fub25pY2FsaXplZE9iajtcbiAgfVxuXG4gIGlmIChvYmogJiYgb2JqLnRvSlNPTikge1xuICAgIG9iaiA9IG9iai50b0pTT04oKTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJiBvYmogIT09IG51bGwpIHtcbiAgICBzdGFjay5wdXNoKG9iaik7XG4gICAgY2Fub25pY2FsaXplZE9iaiA9IHt9O1xuICAgIHJlcGxhY2VtZW50U3RhY2sucHVzaChjYW5vbmljYWxpemVkT2JqKTtcbiAgICBsZXQgc29ydGVkS2V5cyA9IFtdLFxuICAgICAgICBrZXk7XG4gICAgZm9yIChrZXkgaW4gb2JqKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIHNvcnRlZEtleXMucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgICBzb3J0ZWRLZXlzLnNvcnQoKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgc29ydGVkS2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAga2V5ID0gc29ydGVkS2V5c1tpXTtcbiAgICAgIGNhbm9uaWNhbGl6ZWRPYmpba2V5XSA9IGNhbm9uaWNhbGl6ZShvYmpba2V5XSwgc3RhY2ssIHJlcGxhY2VtZW50U3RhY2ssIHJlcGxhY2VyLCBrZXkpO1xuICAgIH1cbiAgICBzdGFjay5wb3AoKTtcbiAgICByZXBsYWNlbWVudFN0YWNrLnBvcCgpO1xuICB9IGVsc2Uge1xuICAgIGNhbm9uaWNhbGl6ZWRPYmogPSBvYmo7XG4gIH1cbiAgcmV0dXJuIGNhbm9uaWNhbGl6ZWRPYmo7XG59XG4iXX0=\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports.lineDiff = undefined;\nexports. /*istanbul ignore end*/diffLines = diffLines;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffTrimmedLines = diffTrimmedLines;\n\nvar /*istanbul ignore start*/_base = require('./base') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _base2 = _interopRequireDefault(_base);\n\n/*istanbul ignore end*/var /*istanbul ignore start*/_params = require('../util/params') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*istanbul ignore end*/var lineDiff = /*istanbul ignore start*/exports. /*istanbul ignore end*/lineDiff = new /*istanbul ignore start*/_base2['default'] /*istanbul ignore end*/();\nlineDiff.tokenize = function (value) {\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n  // Ignore the final empty token that occurs if the string ends with a new line\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  }\n\n  // Merge the content and line separators into single tokens\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = /*istanbul ignore start*/(0, _params.generateOptions) /*istanbul ignore end*/(callback, { ignoreWhitespace: true });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2xpbmUuanMiXSwibmFtZXMiOlsiZGlmZkxpbmVzIiwiZGlmZlRyaW1tZWRMaW5lcyIsImxpbmVEaWZmIiwidG9rZW5pemUiLCJ2YWx1ZSIsInJldExpbmVzIiwibGluZXNBbmROZXdsaW5lcyIsInNwbGl0IiwibGVuZ3RoIiwicG9wIiwiaSIsImxpbmUiLCJvcHRpb25zIiwibmV3bGluZUlzVG9rZW4iLCJpZ25vcmVXaGl0ZXNwYWNlIiwidHJpbSIsInB1c2giLCJvbGRTdHIiLCJuZXdTdHIiLCJjYWxsYmFjayIsImRpZmYiXSwibWFwcGluZ3MiOiI7Ozs7Z0NBOEJnQkEsUyxHQUFBQSxTO3lEQUNBQyxnQixHQUFBQSxnQjs7QUEvQmhCOzs7O3VCQUNBOzs7O3VCQUVPLElBQU1DLCtFQUFXLHdFQUFqQjtBQUNQQSxTQUFTQyxRQUFULEdBQW9CLFVBQVNDLEtBQVQsRUFBZ0I7QUFDbEMsTUFBSUMsV0FBVyxFQUFmO0FBQUEsTUFDSUMsbUJBQW1CRixNQUFNRyxLQUFOLENBQVksV0FBWixDQUR2Qjs7QUFHQTtBQUNBLE1BQUksQ0FBQ0QsaUJBQWlCQSxpQkFBaUJFLE1BQWpCLEdBQTBCLENBQTNDLENBQUwsRUFBb0Q7QUFDbERGLHFCQUFpQkcsR0FBakI7QUFDRDs7QUFFRDtBQUNBLE9BQUssSUFBSUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJSixpQkFBaUJFLE1BQXJDLEVBQTZDRSxHQUE3QyxFQUFrRDtBQUNoRCxRQUFJQyxPQUFPTCxpQkFBaUJJLENBQWpCLENBQVg7O0FBRUEsUUFBSUEsSUFBSSxDQUFKLElBQVMsQ0FBQyxLQUFLRSxPQUFMLENBQWFDLGNBQTNCLEVBQTJDO0FBQ3pDUixlQUFTQSxTQUFTRyxNQUFULEdBQWtCLENBQTNCLEtBQWlDRyxJQUFqQztBQUNELEtBRkQsTUFFTztBQUNMLFVBQUksS0FBS0MsT0FBTCxDQUFhRSxnQkFBakIsRUFBbUM7QUFDakNILGVBQU9BLEtBQUtJLElBQUwsRUFBUDtBQUNEO0FBQ0RWLGVBQVNXLElBQVQsQ0FBY0wsSUFBZDtBQUNEO0FBQ0Y7O0FBRUQsU0FBT04sUUFBUDtBQUNELENBeEJEOztBQTBCTyxTQUFTTCxTQUFULENBQW1CaUIsTUFBbkIsRUFBMkJDLE1BQTNCLEVBQW1DQyxRQUFuQyxFQUE2QztBQUFFLFNBQU9qQixTQUFTa0IsSUFBVCxDQUFjSCxNQUFkLEVBQXNCQyxNQUF0QixFQUE4QkMsUUFBOUIsQ0FBUDtBQUFpRDtBQUNoRyxTQUFTbEIsZ0JBQVQsQ0FBMEJnQixNQUExQixFQUFrQ0MsTUFBbEMsRUFBMENDLFFBQTFDLEVBQW9EO0FBQ3pELE1BQUlQLFVBQVUsOEVBQWdCTyxRQUFoQixFQUEwQixFQUFDTCxrQkFBa0IsSUFBbkIsRUFBMUIsQ0FBZDtBQUNBLFNBQU9aLFNBQVNrQixJQUFULENBQWNILE1BQWQsRUFBc0JDLE1BQXRCLEVBQThCTixPQUE5QixDQUFQO0FBQ0QiLCJmaWxlIjoibGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaWZmIGZyb20gJy4vYmFzZSc7XG5pbXBvcnQge2dlbmVyYXRlT3B0aW9uc30gZnJvbSAnLi4vdXRpbC9wYXJhbXMnO1xuXG5leHBvcnQgY29uc3QgbGluZURpZmYgPSBuZXcgRGlmZigpO1xubGluZURpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBsZXQgcmV0TGluZXMgPSBbXSxcbiAgICAgIGxpbmVzQW5kTmV3bGluZXMgPSB2YWx1ZS5zcGxpdCgvKFxcbnxcXHJcXG4pLyk7XG5cbiAgLy8gSWdub3JlIHRoZSBmaW5hbCBlbXB0eSB0b2tlbiB0aGF0IG9jY3VycyBpZiB0aGUgc3RyaW5nIGVuZHMgd2l0aCBhIG5ldyBsaW5lXG4gIGlmICghbGluZXNBbmROZXdsaW5lc1tsaW5lc0FuZE5ld2xpbmVzLmxlbmd0aCAtIDFdKSB7XG4gICAgbGluZXNBbmROZXdsaW5lcy5wb3AoKTtcbiAgfVxuXG4gIC8vIE1lcmdlIHRoZSBjb250ZW50IGFuZCBsaW5lIHNlcGFyYXRvcnMgaW50byBzaW5nbGUgdG9rZW5zXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGluZXNBbmROZXdsaW5lcy5sZW5ndGg7IGkrKykge1xuICAgIGxldCBsaW5lID0gbGluZXNBbmROZXdsaW5lc1tpXTtcblxuICAgIGlmIChpICUgMiAmJiAhdGhpcy5vcHRpb25zLm5ld2xpbmVJc1Rva2VuKSB7XG4gICAgICByZXRMaW5lc1tyZXRMaW5lcy5sZW5ndGggLSAxXSArPSBsaW5lO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmlnbm9yZVdoaXRlc3BhY2UpIHtcbiAgICAgICAgbGluZSA9IGxpbmUudHJpbSgpO1xuICAgICAgfVxuICAgICAgcmV0TGluZXMucHVzaChsaW5lKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmV0TGluZXM7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZGlmZkxpbmVzKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjaykgeyByZXR1cm4gbGluZURpZmYuZGlmZihvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spOyB9XG5leHBvcnQgZnVuY3Rpb24gZGlmZlRyaW1tZWRMaW5lcyhvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spIHtcbiAgbGV0IG9wdGlvbnMgPSBnZW5lcmF0ZU9wdGlvbnMoY2FsbGJhY2ssIHtpZ25vcmVXaGl0ZXNwYWNlOiB0cnVlfSk7XG4gIHJldHVybiBsaW5lRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBvcHRpb25zKTtcbn1cbiJdfQ==\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports.sentenceDiff = undefined;\nexports. /*istanbul ignore end*/diffSentences = diffSentences;\n\nvar /*istanbul ignore start*/_base = require('./base') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _base2 = _interopRequireDefault(_base);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*istanbul ignore end*/var sentenceDiff = /*istanbul ignore start*/exports. /*istanbul ignore end*/sentenceDiff = new /*istanbul ignore start*/_base2['default'] /*istanbul ignore end*/();\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL3NlbnRlbmNlLmpzIl0sIm5hbWVzIjpbImRpZmZTZW50ZW5jZXMiLCJzZW50ZW5jZURpZmYiLCJ0b2tlbml6ZSIsInZhbHVlIiwic3BsaXQiLCJvbGRTdHIiLCJuZXdTdHIiLCJjYWxsYmFjayIsImRpZmYiXSwibWFwcGluZ3MiOiI7Ozs7Z0NBUWdCQSxhLEdBQUFBLGE7O0FBUmhCOzs7Ozs7dUJBR08sSUFBTUMsdUZBQWUsd0VBQXJCO0FBQ1BBLGFBQWFDLFFBQWIsR0FBd0IsVUFBU0MsS0FBVCxFQUFnQjtBQUN0QyxTQUFPQSxNQUFNQyxLQUFOLENBQVksdUJBQVosQ0FBUDtBQUNELENBRkQ7O0FBSU8sU0FBU0osYUFBVCxDQUF1QkssTUFBdkIsRUFBK0JDLE1BQS9CLEVBQXVDQyxRQUF2QyxFQUFpRDtBQUFFLFNBQU9OLGFBQWFPLElBQWIsQ0FBa0JILE1BQWxCLEVBQTBCQyxNQUExQixFQUFrQ0MsUUFBbEMsQ0FBUDtBQUFxRCIsImZpbGUiOiJzZW50ZW5jZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaWZmIGZyb20gJy4vYmFzZSc7XG5cblxuZXhwb3J0IGNvbnN0IHNlbnRlbmNlRGlmZiA9IG5ldyBEaWZmKCk7XG5zZW50ZW5jZURpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUuc3BsaXQoLyhcXFMuKz9bLiE/XSkoPz1cXHMrfCQpLyk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZGlmZlNlbnRlbmNlcyhvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spIHsgcmV0dXJuIHNlbnRlbmNlRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjayk7IH1cbiJdfQ==\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports.wordDiff = undefined;\nexports. /*istanbul ignore end*/diffWords = diffWords;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffWordsWithSpace = diffWordsWithSpace;\n\nvar /*istanbul ignore start*/_base = require('./base') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _base2 = _interopRequireDefault(_base);\n\n/*istanbul ignore end*/var /*istanbul ignore start*/_params = require('../util/params') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*istanbul ignore end*/ // Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n\nvar reWhitespace = /\\S/;\n\nvar wordDiff = /*istanbul ignore start*/exports. /*istanbul ignore end*/wordDiff = new /*istanbul ignore start*/_base2['default'] /*istanbul ignore end*/();\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\nwordDiff.tokenize = function (value) {\n  var tokens = value.split(/(\\s+|\\b)/);\n\n  // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = /*istanbul ignore start*/(0, _params.generateOptions) /*istanbul ignore end*/(options, { ignoreWhitespace: true });\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL3dvcmQuanMiXSwibmFtZXMiOlsiZGlmZldvcmRzIiwiZGlmZldvcmRzV2l0aFNwYWNlIiwiZXh0ZW5kZWRXb3JkQ2hhcnMiLCJyZVdoaXRlc3BhY2UiLCJ3b3JkRGlmZiIsImVxdWFscyIsImxlZnQiLCJyaWdodCIsIm9wdGlvbnMiLCJpZ25vcmVDYXNlIiwidG9Mb3dlckNhc2UiLCJpZ25vcmVXaGl0ZXNwYWNlIiwidGVzdCIsInRva2VuaXplIiwidmFsdWUiLCJ0b2tlbnMiLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJzcGxpY2UiLCJvbGRTdHIiLCJuZXdTdHIiLCJkaWZmIl0sIm1hcHBpbmdzIjoiOzs7O2dDQW1EZ0JBLFMsR0FBQUEsUzt5REFLQUMsa0IsR0FBQUEsa0I7O0FBeERoQjs7Ozt1QkFDQTs7Ozt3QkFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNQyxvQkFBb0IsK0RBQTFCOztBQUVBLElBQU1DLGVBQWUsSUFBckI7O0FBRU8sSUFBTUMsK0VBQVcsd0VBQWpCO0FBQ1BBLFNBQVNDLE1BQVQsR0FBa0IsVUFBU0MsSUFBVCxFQUFlQyxLQUFmLEVBQXNCO0FBQ3RDLE1BQUksS0FBS0MsT0FBTCxDQUFhQyxVQUFqQixFQUE2QjtBQUMzQkgsV0FBT0EsS0FBS0ksV0FBTCxFQUFQO0FBQ0FILFlBQVFBLE1BQU1HLFdBQU4sRUFBUjtBQUNEO0FBQ0QsU0FBT0osU0FBU0MsS0FBVCxJQUFtQixLQUFLQyxPQUFMLENBQWFHLGdCQUFiLElBQWlDLENBQUNSLGFBQWFTLElBQWIsQ0FBa0JOLElBQWxCLENBQWxDLElBQTZELENBQUNILGFBQWFTLElBQWIsQ0FBa0JMLEtBQWxCLENBQXhGO0FBQ0QsQ0FORDtBQU9BSCxTQUFTUyxRQUFULEdBQW9CLFVBQVNDLEtBQVQsRUFBZ0I7QUFDbEMsTUFBSUMsU0FBU0QsTUFBTUUsS0FBTixDQUFZLFVBQVosQ0FBYjs7QUFFQTtBQUNBLE9BQUssSUFBSUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJRixPQUFPRyxNQUFQLEdBQWdCLENBQXBDLEVBQXVDRCxHQUF2QyxFQUE0QztBQUMxQztBQUNBLFFBQUksQ0FBQ0YsT0FBT0UsSUFBSSxDQUFYLENBQUQsSUFBa0JGLE9BQU9FLElBQUksQ0FBWCxDQUFsQixJQUNLZixrQkFBa0JVLElBQWxCLENBQXVCRyxPQUFPRSxDQUFQLENBQXZCLENBREwsSUFFS2Ysa0JBQWtCVSxJQUFsQixDQUF1QkcsT0FBT0UsSUFBSSxDQUFYLENBQXZCLENBRlQsRUFFZ0Q7QUFDOUNGLGFBQU9FLENBQVAsS0FBYUYsT0FBT0UsSUFBSSxDQUFYLENBQWI7QUFDQUYsYUFBT0ksTUFBUCxDQUFjRixJQUFJLENBQWxCLEVBQXFCLENBQXJCO0FBQ0FBO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPRixNQUFQO0FBQ0QsQ0FoQkQ7O0FBa0JPLFNBQVNmLFNBQVQsQ0FBbUJvQixNQUFuQixFQUEyQkMsTUFBM0IsRUFBbUNiLE9BQW5DLEVBQTRDO0FBQ2pEQSxZQUFVLDhFQUFnQkEsT0FBaEIsRUFBeUIsRUFBQ0csa0JBQWtCLElBQW5CLEVBQXpCLENBQVY7QUFDQSxTQUFPUCxTQUFTa0IsSUFBVCxDQUFjRixNQUFkLEVBQXNCQyxNQUF0QixFQUE4QmIsT0FBOUIsQ0FBUDtBQUNEOztBQUVNLFNBQVNQLGtCQUFULENBQTRCbUIsTUFBNUIsRUFBb0NDLE1BQXBDLEVBQTRDYixPQUE1QyxFQUFxRDtBQUMxRCxTQUFPSixTQUFTa0IsSUFBVCxDQUFjRixNQUFkLEVBQXNCQyxNQUF0QixFQUE4QmIsT0FBOUIsQ0FBUDtBQUNEIiwiZmlsZSI6IndvcmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGlmZiBmcm9tICcuL2Jhc2UnO1xuaW1wb3J0IHtnZW5lcmF0ZU9wdGlvbnN9IGZyb20gJy4uL3V0aWwvcGFyYW1zJztcblxuLy8gQmFzZWQgb24gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGF0aW5fc2NyaXB0X2luX1VuaWNvZGVcbi8vXG4vLyBSYW5nZXMgYW5kIGV4Y2VwdGlvbnM6XG4vLyBMYXRpbi0xIFN1cHBsZW1lbnQsIDAwODDigJMwMEZGXG4vLyAgLSBVKzAwRDcgIMOXIE11bHRpcGxpY2F0aW9uIHNpZ25cbi8vICAtIFUrMDBGNyAgw7cgRGl2aXNpb24gc2lnblxuLy8gTGF0aW4gRXh0ZW5kZWQtQSwgMDEwMOKAkzAxN0Zcbi8vIExhdGluIEV4dGVuZGVkLUIsIDAxODDigJMwMjRGXG4vLyBJUEEgRXh0ZW5zaW9ucywgMDI1MOKAkzAyQUZcbi8vIFNwYWNpbmcgTW9kaWZpZXIgTGV0dGVycywgMDJCMOKAkzAyRkZcbi8vICAtIFUrMDJDNyAgy4cgJiM3MTE7ICBDYXJvblxuLy8gIC0gVSswMkQ4ICDLmCAmIzcyODsgIEJyZXZlXG4vLyAgLSBVKzAyRDkgIMuZICYjNzI5OyAgRG90IEFib3ZlXG4vLyAgLSBVKzAyREEgIMuaICYjNzMwOyAgUmluZyBBYm92ZVxuLy8gIC0gVSswMkRCICDLmyAmIzczMTsgIE9nb25la1xuLy8gIC0gVSswMkRDICDLnCAmIzczMjsgIFNtYWxsIFRpbGRlXG4vLyAgLSBVKzAyREQgIMudICYjNzMzOyAgRG91YmxlIEFjdXRlIEFjY2VudFxuLy8gTGF0aW4gRXh0ZW5kZWQgQWRkaXRpb25hbCwgMUUwMOKAkzFFRkZcbmNvbnN0IGV4dGVuZGVkV29yZENoYXJzID0gL15bYS16QS1aXFx1e0MwfS1cXHV7RkZ9XFx1e0Q4fS1cXHV7RjZ9XFx1e0Y4fS1cXHV7MkM2fVxcdXsyQzh9LVxcdXsyRDd9XFx1ezJERX0tXFx1ezJGRn1cXHV7MUUwMH0tXFx1ezFFRkZ9XSskL3U7XG5cbmNvbnN0IHJlV2hpdGVzcGFjZSA9IC9cXFMvO1xuXG5leHBvcnQgY29uc3Qgd29yZERpZmYgPSBuZXcgRGlmZigpO1xud29yZERpZmYuZXF1YWxzID0gZnVuY3Rpb24obGVmdCwgcmlnaHQpIHtcbiAgaWYgKHRoaXMub3B0aW9ucy5pZ25vcmVDYXNlKSB7XG4gICAgbGVmdCA9IGxlZnQudG9Mb3dlckNhc2UoKTtcbiAgICByaWdodCA9IHJpZ2h0LnRvTG93ZXJDYXNlKCk7XG4gIH1cbiAgcmV0dXJuIGxlZnQgPT09IHJpZ2h0IHx8ICh0aGlzLm9wdGlvbnMuaWdub3JlV2hpdGVzcGFjZSAmJiAhcmVXaGl0ZXNwYWNlLnRlc3QobGVmdCkgJiYgIXJlV2hpdGVzcGFjZS50ZXN0KHJpZ2h0KSk7XG59O1xud29yZERpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICBsZXQgdG9rZW5zID0gdmFsdWUuc3BsaXQoLyhcXHMrfFxcYikvKTtcblxuICAvLyBKb2luIHRoZSBib3VuZGFyeSBzcGxpdHMgdGhhdCB3ZSBkbyBub3QgY29uc2lkZXIgdG8gYmUgYm91bmRhcmllcy4gVGhpcyBpcyBwcmltYXJpbHkgdGhlIGV4dGVuZGVkIExhdGluIGNoYXJhY3RlciBzZXQuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aCAtIDE7IGkrKykge1xuICAgIC8vIElmIHdlIGhhdmUgYW4gZW1wdHkgc3RyaW5nIGluIHRoZSBuZXh0IGZpZWxkIGFuZCB3ZSBoYXZlIG9ubHkgd29yZCBjaGFycyBiZWZvcmUgYW5kIGFmdGVyLCBtZXJnZVxuICAgIGlmICghdG9rZW5zW2kgKyAxXSAmJiB0b2tlbnNbaSArIDJdXG4gICAgICAgICAgJiYgZXh0ZW5kZWRXb3JkQ2hhcnMudGVzdCh0b2tlbnNbaV0pXG4gICAgICAgICAgJiYgZXh0ZW5kZWRXb3JkQ2hhcnMudGVzdCh0b2tlbnNbaSArIDJdKSkge1xuICAgICAgdG9rZW5zW2ldICs9IHRva2Vuc1tpICsgMl07XG4gICAgICB0b2tlbnMuc3BsaWNlKGkgKyAxLCAyKTtcbiAgICAgIGktLTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdG9rZW5zO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZXb3JkcyhvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykge1xuICBvcHRpb25zID0gZ2VuZXJhdGVPcHRpb25zKG9wdGlvbnMsIHtpZ25vcmVXaGl0ZXNwYWNlOiB0cnVlfSk7XG4gIHJldHVybiB3b3JkRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBvcHRpb25zKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZXb3Jkc1dpdGhTcGFjZShvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykge1xuICByZXR1cm4gd29yZERpZmYuZGlmZihvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucyk7XG59XG4iXX0=\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports.canonicalize = exports.convertChangesToXML = exports.convertChangesToDMP = exports.merge = exports.parsePatch = exports.applyPatches = exports.applyPatch = exports.createPatch = exports.createTwoFilesPatch = exports.structuredPatch = exports.diffArrays = exports.diffJson = exports.diffCss = exports.diffSentences = exports.diffTrimmedLines = exports.diffLines = exports.diffWordsWithSpace = exports.diffWords = exports.diffChars = exports.Diff = undefined;\n\n/*istanbul ignore end*/var /*istanbul ignore start*/_base = require('./diff/base') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _base2 = _interopRequireDefault(_base);\n\n/*istanbul ignore end*/var /*istanbul ignore start*/_character = require('./diff/character') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_word = require('./diff/word') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_line = require('./diff/line') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_sentence = require('./diff/sentence') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_css = require('./diff/css') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_json = require('./diff/json') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_array = require('./diff/array') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_apply = require('./patch/apply') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_parse = require('./patch/parse') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_merge = require('./patch/merge') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_create = require('./patch/create') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_dmp = require('./convert/dmp') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_xml = require('./convert/xml') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n *\n * JsDiff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nexports. /*istanbul ignore end*/Diff = _base2['default'];\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffChars = _character.diffChars;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffWords = _word.diffWords;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffWordsWithSpace = _word.diffWordsWithSpace;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffLines = _line.diffLines;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffTrimmedLines = _line.diffTrimmedLines;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffSentences = _sentence.diffSentences;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffCss = _css.diffCss;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffJson = _json.diffJson;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/diffArrays = _array.diffArrays;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/structuredPatch = _create.structuredPatch;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/createTwoFilesPatch = _create.createTwoFilesPatch;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/createPatch = _create.createPatch;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/applyPatch = _apply.applyPatch;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/applyPatches = _apply.applyPatches;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/parsePatch = _parse.parsePatch;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/merge = _merge.merge;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/convertChangesToDMP = _dmp.convertChangesToDMP;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/convertChangesToXML = _xml.convertChangesToXML;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/canonicalize = _json.canonicalize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJEaWZmIiwiZGlmZkNoYXJzIiwiZGlmZldvcmRzIiwiZGlmZldvcmRzV2l0aFNwYWNlIiwiZGlmZkxpbmVzIiwiZGlmZlRyaW1tZWRMaW5lcyIsImRpZmZTZW50ZW5jZXMiLCJkaWZmQ3NzIiwiZGlmZkpzb24iLCJkaWZmQXJyYXlzIiwic3RydWN0dXJlZFBhdGNoIiwiY3JlYXRlVHdvRmlsZXNQYXRjaCIsImNyZWF0ZVBhdGNoIiwiYXBwbHlQYXRjaCIsImFwcGx5UGF0Y2hlcyIsInBhcnNlUGF0Y2giLCJtZXJnZSIsImNvbnZlcnRDaGFuZ2VzVG9ETVAiLCJjb252ZXJ0Q2hhbmdlc1RvWE1MIiwiY2Fub25pY2FsaXplIl0sIm1hcHBpbmdzIjoiOzs7Ozt1QkFnQkE7Ozs7dUJBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBRUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7QUFqQ0E7O0FBRUE7Ozs7Ozs7Ozs7Ozs7O2dDQWtDRUEsSTt5REFFQUMsUzt5REFDQUMsUzt5REFDQUMsa0I7eURBQ0FDLFM7eURBQ0FDLGdCO3lEQUNBQyxhO3lEQUVBQyxPO3lEQUNBQyxRO3lEQUVBQyxVO3lEQUVBQyxlO3lEQUNBQyxtQjt5REFDQUMsVzt5REFDQUMsVTt5REFDQUMsWTt5REFDQUMsVTt5REFDQUMsSzt5REFDQUMsbUI7eURBQ0FDLG1CO3lEQUNBQyxZIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogU2VlIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMgb2YgdXNlICovXG5cbi8qXG4gKiBUZXh0IGRpZmYgaW1wbGVtZW50YXRpb24uXG4gKlxuICogVGhpcyBsaWJyYXJ5IHN1cHBvcnRzIHRoZSBmb2xsb3dpbmcgQVBJUzpcbiAqIEpzRGlmZi5kaWZmQ2hhcnM6IENoYXJhY3RlciBieSBjaGFyYWN0ZXIgZGlmZlxuICogSnNEaWZmLmRpZmZXb3JkczogV29yZCAoYXMgZGVmaW5lZCBieSBcXGIgcmVnZXgpIGRpZmYgd2hpY2ggaWdub3JlcyB3aGl0ZXNwYWNlXG4gKiBKc0RpZmYuZGlmZkxpbmVzOiBMaW5lIGJhc2VkIGRpZmZcbiAqXG4gKiBKc0RpZmYuZGlmZkNzczogRGlmZiB0YXJnZXRlZCBhdCBDU1MgY29udGVudFxuICpcbiAqIFRoZXNlIG1ldGhvZHMgYXJlIGJhc2VkIG9uIHRoZSBpbXBsZW1lbnRhdGlvbiBwcm9wb3NlZCBpblxuICogXCJBbiBPKE5EKSBEaWZmZXJlbmNlIEFsZ29yaXRobSBhbmQgaXRzIFZhcmlhdGlvbnNcIiAoTXllcnMsIDE5ODYpLlxuICogaHR0cDovL2NpdGVzZWVyeC5pc3QucHN1LmVkdS92aWV3ZG9jL3N1bW1hcnk/ZG9pPTEwLjEuMS40LjY5MjdcbiAqL1xuaW1wb3J0IERpZmYgZnJvbSAnLi9kaWZmL2Jhc2UnO1xuaW1wb3J0IHtkaWZmQ2hhcnN9IGZyb20gJy4vZGlmZi9jaGFyYWN0ZXInO1xuaW1wb3J0IHtkaWZmV29yZHMsIGRpZmZXb3Jkc1dpdGhTcGFjZX0gZnJvbSAnLi9kaWZmL3dvcmQnO1xuaW1wb3J0IHtkaWZmTGluZXMsIGRpZmZUcmltbWVkTGluZXN9IGZyb20gJy4vZGlmZi9saW5lJztcbmltcG9ydCB7ZGlmZlNlbnRlbmNlc30gZnJvbSAnLi9kaWZmL3NlbnRlbmNlJztcblxuaW1wb3J0IHtkaWZmQ3NzfSBmcm9tICcuL2RpZmYvY3NzJztcbmltcG9ydCB7ZGlmZkpzb24sIGNhbm9uaWNhbGl6ZX0gZnJvbSAnLi9kaWZmL2pzb24nO1xuXG5pbXBvcnQge2RpZmZBcnJheXN9IGZyb20gJy4vZGlmZi9hcnJheSc7XG5cbmltcG9ydCB7YXBwbHlQYXRjaCwgYXBwbHlQYXRjaGVzfSBmcm9tICcuL3BhdGNoL2FwcGx5JztcbmltcG9ydCB7cGFyc2VQYXRjaH0gZnJvbSAnLi9wYXRjaC9wYXJzZSc7XG5pbXBvcnQge21lcmdlfSBmcm9tICcuL3BhdGNoL21lcmdlJztcbmltcG9ydCB7c3RydWN0dXJlZFBhdGNoLCBjcmVhdGVUd29GaWxlc1BhdGNoLCBjcmVhdGVQYXRjaH0gZnJvbSAnLi9wYXRjaC9jcmVhdGUnO1xuXG5pbXBvcnQge2NvbnZlcnRDaGFuZ2VzVG9ETVB9IGZyb20gJy4vY29udmVydC9kbXAnO1xuaW1wb3J0IHtjb252ZXJ0Q2hhbmdlc1RvWE1MfSBmcm9tICcuL2NvbnZlcnQveG1sJztcblxuZXhwb3J0IHtcbiAgRGlmZixcblxuICBkaWZmQ2hhcnMsXG4gIGRpZmZXb3JkcyxcbiAgZGlmZldvcmRzV2l0aFNwYWNlLFxuICBkaWZmTGluZXMsXG4gIGRpZmZUcmltbWVkTGluZXMsXG4gIGRpZmZTZW50ZW5jZXMsXG5cbiAgZGlmZkNzcyxcbiAgZGlmZkpzb24sXG5cbiAgZGlmZkFycmF5cyxcblxuICBzdHJ1Y3R1cmVkUGF0Y2gsXG4gIGNyZWF0ZVR3b0ZpbGVzUGF0Y2gsXG4gIGNyZWF0ZVBhdGNoLFxuICBhcHBseVBhdGNoLFxuICBhcHBseVBhdGNoZXMsXG4gIHBhcnNlUGF0Y2gsXG4gIG1lcmdlLFxuICBjb252ZXJ0Q2hhbmdlc1RvRE1QLFxuICBjb252ZXJ0Q2hhbmdlc1RvWE1MLFxuICBjYW5vbmljYWxpemVcbn07XG4iXX0=\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports. /*istanbul ignore end*/applyPatch = applyPatch;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/applyPatches = applyPatches;\n\nvar /*istanbul ignore start*/_parse = require('./parse') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_distanceIterator = require('../util/distance-iterator') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/var _distanceIterator2 = _interopRequireDefault(_distanceIterator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/*istanbul ignore end*/function applyPatch(source, uniDiff) {\n  /*istanbul ignore start*/var /*istanbul ignore end*/options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = /*istanbul ignore start*/(0, _parse.parsePatch) /*istanbul ignore end*/(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  }\n\n  // Apply the diff to the input\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) /*istanbul ignore start*/{\n    return (/*istanbul ignore end*/line === patchContent\n    );\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL = /*istanbul ignore start*/void 0 /*istanbul ignore end*/,\n      addEOFNL = /*istanbul ignore start*/void 0 /*istanbul ignore end*/;\n\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n        toPos++;\n      }\n    }\n\n    return true;\n  }\n\n  // Search best fit offsets for each hunk based on the previous ones\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n\n    var iterator = /*istanbul ignore start*/(0, _distanceIterator2['default']) /*istanbul ignore end*/(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    }\n\n    // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  }\n\n  // Apply patch hunks\n  var diffOffset = 0;\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    if (_toPos < 0) {\n      // Creating a new file\n      _toPos = 0;\n    }\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  }\n\n  // Handle EOFNL insertion/removal\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n  return lines.join('');\n}\n\n// Wrapper that supports multiple file patches via callbacks.\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = /*istanbul ignore start*/(0, _parse.parsePatch) /*istanbul ignore end*/(uniDiff);\n  }\n\n  var currentIndex = 0;\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n  processIndex();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports. /*istanbul ignore end*/structuredPatch = structuredPatch;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/createTwoFilesPatch = createTwoFilesPatch;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/createPatch = createPatch;\n\nvar /*istanbul ignore start*/_line = require('../diff/line') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/*istanbul ignore end*/function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = /*istanbul ignore start*/(0, _line.diffLines) /*istanbul ignore end*/(oldStr, newStr, options);\n  diff.push({ value: '', lines: [] }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  /*istanbul ignore start*/var _loop = function _loop( /*istanbul ignore end*/i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      /*istanbul ignore start*/var _curRange;\n\n      /*istanbul ignore end*/ // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      }\n\n      // Output our changes\n      /*istanbul ignore start*/(_curRange = /*istanbul ignore end*/curRange).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_curRange /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      })));\n\n      // Track the updated file position\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          /*istanbul ignore start*/var _curRange2;\n\n          /*istanbul ignore end*/ // Overlapping\n          /*istanbul ignore start*/(_curRange2 = /*istanbul ignore end*/curRange).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_curRange2 /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/contextLines(lines)));\n        } else {\n          /*istanbul ignore start*/var _curRange3;\n\n          /*istanbul ignore end*/ // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n          /*istanbul ignore start*/(_curRange3 = /*istanbul ignore end*/curRange).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_curRange3 /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            if (lines.length == 0 && !oldEOFNewline) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            } else if (!oldEOFNewline || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n          hunks.push(hunk);\n\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    /*istanbul ignore start*/_loop( /*istanbul ignore end*/i);\n  }\n\n  return {\n    oldFileName: oldFileName, newFileName: newFileName,\n    oldHeader: oldHeader, newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  var diff = structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options);\n\n  var ret = [];\n  if (oldFileName == newFileName) {\n    ret.push('Index: ' + oldFileName);\n  }\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i];\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports. /*istanbul ignore end*/calcLineCount = calcLineCount;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/merge = merge;\n\nvar /*istanbul ignore start*/_create = require('./create') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_parse = require('./parse') /*istanbul ignore end*/;\n\nvar /*istanbul ignore start*/_array = require('../util/array') /*istanbul ignore end*/;\n\n/*istanbul ignore start*/function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/*istanbul ignore end*/function calcLineCount(hunk) {\n  /*istanbul ignore start*/var _calcOldNewLineCount = /*istanbul ignore end*/calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n\n  var ret = {};\n\n  // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || { oldStart: Infinity },\n        theirsCurrent = theirs.hunks[theirsIndex] || { oldStart: Infinity };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return (/*istanbul ignore start*/(0, _parse.parsePatch) /*istanbul ignore end*/(param)[0]\n      );\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n    return (/*istanbul ignore start*/(0, _create.structuredPatch) /*istanbul ignore end*/(undefined, undefined, base, param)\n    );\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return { mine: mine, theirs: theirs };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart, oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset, newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = { offset: mineOffset, lines: mineLines, index: 0 },\n      their = { offset: theirOffset, lines: theirLines, index: 0 };\n\n  // Handle any leading content\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine);\n\n  // Now in the overlap content. Scan through and select the best changes from each.\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      /*istanbul ignore start*/var _hunk$lines;\n\n      /*istanbul ignore end*/ // Mine inserted\n      /*istanbul ignore start*/(_hunk$lines = /*istanbul ignore end*/hunk.lines).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_hunk$lines /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      /*istanbul ignore start*/var _hunk$lines2;\n\n      /*istanbul ignore end*/ // Theirs inserted\n      /*istanbul ignore start*/(_hunk$lines2 = /*istanbul ignore end*/hunk.lines).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_hunk$lines2 /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  }\n\n  // Now push anything that may be remaining\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if ( /*istanbul ignore start*/(0, _array.arrayStartsWith) /*istanbul ignore end*/(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      /*istanbul ignore start*/var _hunk$lines3;\n\n      /*istanbul ignore end*/ /*istanbul ignore start*/(_hunk$lines3 = /*istanbul ignore end*/hunk.lines).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_hunk$lines3 /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/myChanges));\n      return;\n    } else if ( /*istanbul ignore start*/(0, _array.arrayStartsWith) /*istanbul ignore end*/(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      /*istanbul ignore start*/var _hunk$lines4;\n\n      /*istanbul ignore end*/ /*istanbul ignore start*/(_hunk$lines4 = /*istanbul ignore end*/hunk.lines).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_hunk$lines4 /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/theirChanges));\n      return;\n    }\n  } else if ( /*istanbul ignore start*/(0, _array.arrayEqual) /*istanbul ignore end*/(myChanges, theirChanges)) {\n    /*istanbul ignore start*/var _hunk$lines5;\n\n    /*istanbul ignore end*/ /*istanbul ignore start*/(_hunk$lines5 = /*istanbul ignore end*/hunk.lines).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_hunk$lines5 /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/myChanges));\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n  if (theirChanges.merged) {\n    /*istanbul ignore start*/var _hunk$lines6;\n\n    /*istanbul ignore end*/ /*istanbul ignore start*/(_hunk$lines6 = /*istanbul ignore end*/hunk.lines).push. /*istanbul ignore start*/apply /*istanbul ignore end*/( /*istanbul ignore start*/_hunk$lines6 /*istanbul ignore end*/, /*istanbul ignore start*/_toConsumableArray( /*istanbul ignore end*/theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index];\n\n    // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex];\n\n    // Once we've hit our add, then we are done\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n\n    merged.push(match);\n    matchIndex++;\n\n    // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n\n  return { oldLines: oldLines, newLines: newLines };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports. /*istanbul ignore end*/parsePatch = parsePatch;\nfunction parsePatch(uniDiff) {\n  /*istanbul ignore start*/var /*istanbul ignore end*/options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index);\n\n    // Parse diff metadata\n    while (i < diffstr.length) {\n      var line = diffstr[i];\n\n      // File header found, end parsing diff metadata\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      }\n\n      // Diff index\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    }\n\n    // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n    parseFileHeader(index);\n    parseFileHeader(index);\n\n    // Parse hunks\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  }\n\n  // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\n      i++;\n    }\n  }\n\n  // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: +chunkHeader[2] || 1,\n      newStart: +chunkHeader[3],\n      newLines: +chunkHeader[4] || 1,\n      lines: [],\n      linedelimiters: []\n    };\n\n    var addCount = 0,\n        removeCount = 0;\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Handle the empty block count case\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    }\n\n    // Perform optional sanity checking\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\"use strict\";\n\nexports.__esModule = true;\nexports. /*istanbul ignore end*/arrayEqual = arrayEqual;\n/*istanbul ignore start*/exports. /*istanbul ignore end*/arrayStartsWith = arrayStartsWith;\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2FycmF5LmpzIl0sIm5hbWVzIjpbImFycmF5RXF1YWwiLCJhcnJheVN0YXJ0c1dpdGgiLCJhIiwiYiIsImxlbmd0aCIsImFycmF5Iiwic3RhcnQiLCJpIl0sIm1hcHBpbmdzIjoiOzs7Z0NBQWdCQSxVLEdBQUFBLFU7eURBUUFDLGUsR0FBQUEsZTtBQVJULFNBQVNELFVBQVQsQ0FBb0JFLENBQXBCLEVBQXVCQyxDQUF2QixFQUEwQjtBQUMvQixNQUFJRCxFQUFFRSxNQUFGLEtBQWFELEVBQUVDLE1BQW5CLEVBQTJCO0FBQ3pCLFdBQU8sS0FBUDtBQUNEOztBQUVELFNBQU9ILGdCQUFnQkMsQ0FBaEIsRUFBbUJDLENBQW5CLENBQVA7QUFDRDs7QUFFTSxTQUFTRixlQUFULENBQXlCSSxLQUF6QixFQUFnQ0MsS0FBaEMsRUFBdUM7QUFDNUMsTUFBSUEsTUFBTUYsTUFBTixHQUFlQyxNQUFNRCxNQUF6QixFQUFpQztBQUMvQixXQUFPLEtBQVA7QUFDRDs7QUFFRCxPQUFLLElBQUlHLElBQUksQ0FBYixFQUFnQkEsSUFBSUQsTUFBTUYsTUFBMUIsRUFBa0NHLEdBQWxDLEVBQXVDO0FBQ3JDLFFBQUlELE1BQU1DLENBQU4sTUFBYUYsTUFBTUUsQ0FBTixDQUFqQixFQUEyQjtBQUN6QixhQUFPLEtBQVA7QUFDRDtBQUNGOztBQUVELFNBQU8sSUFBUDtBQUNEIiwiZmlsZSI6ImFycmF5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFycmF5RXF1YWwoYSwgYikge1xuICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGFycmF5U3RhcnRzV2l0aChhLCBiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFycmF5U3RhcnRzV2l0aChhcnJheSwgc3RhcnQpIHtcbiAgaWYgKHN0YXJ0Lmxlbmd0aCA+IGFycmF5Lmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RhcnQubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3RhcnRbaV0gIT09IGFycmF5W2ldKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG4iXX0=\n","/*istanbul ignore start*/\"use strict\";\n\nexports.__esModule = true;\n\nexports[\"default\"] = /*istanbul ignore end*/function (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      }\n\n      // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      }\n\n      // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    }\n\n    // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2Rpc3RhbmNlLWl0ZXJhdG9yLmpzIl0sIm5hbWVzIjpbInN0YXJ0IiwibWluTGluZSIsIm1heExpbmUiLCJ3YW50Rm9yd2FyZCIsImJhY2t3YXJkRXhoYXVzdGVkIiwiZm9yd2FyZEV4aGF1c3RlZCIsImxvY2FsT2Zmc2V0IiwiaXRlcmF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7NENBR2UsVUFBU0EsS0FBVCxFQUFnQkMsT0FBaEIsRUFBeUJDLE9BQXpCLEVBQWtDO0FBQy9DLE1BQUlDLGNBQWMsSUFBbEI7QUFBQSxNQUNJQyxvQkFBb0IsS0FEeEI7QUFBQSxNQUVJQyxtQkFBbUIsS0FGdkI7QUFBQSxNQUdJQyxjQUFjLENBSGxCOztBQUtBLFNBQU8sU0FBU0MsUUFBVCxHQUFvQjtBQUN6QixRQUFJSixlQUFlLENBQUNFLGdCQUFwQixFQUFzQztBQUNwQyxVQUFJRCxpQkFBSixFQUF1QjtBQUNyQkU7QUFDRCxPQUZELE1BRU87QUFDTEgsc0JBQWMsS0FBZDtBQUNEOztBQUVEO0FBQ0E7QUFDQSxVQUFJSCxRQUFRTSxXQUFSLElBQXVCSixPQUEzQixFQUFvQztBQUNsQyxlQUFPSSxXQUFQO0FBQ0Q7O0FBRURELHlCQUFtQixJQUFuQjtBQUNEOztBQUVELFFBQUksQ0FBQ0QsaUJBQUwsRUFBd0I7QUFDdEIsVUFBSSxDQUFDQyxnQkFBTCxFQUF1QjtBQUNyQkYsc0JBQWMsSUFBZDtBQUNEOztBQUVEO0FBQ0E7QUFDQSxVQUFJRixXQUFXRCxRQUFRTSxXQUF2QixFQUFvQztBQUNsQyxlQUFPLENBQUNBLGFBQVI7QUFDRDs7QUFFREYsMEJBQW9CLElBQXBCO0FBQ0EsYUFBT0csVUFBUDtBQUNEOztBQUVEO0FBQ0E7QUFDRCxHQWxDRDtBQW1DRCxDIiwiZmlsZSI6ImRpc3RhbmNlLWl0ZXJhdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSXRlcmF0b3IgdGhhdCB0cmF2ZXJzZXMgaW4gdGhlIHJhbmdlIG9mIFttaW4sIG1heF0sIHN0ZXBwaW5nXG4vLyBieSBkaXN0YW5jZSBmcm9tIGEgZ2l2ZW4gc3RhcnQgcG9zaXRpb24uIEkuZS4gZm9yIFswLCA0XSwgd2l0aFxuLy8gc3RhcnQgb2YgMiwgdGhpcyB3aWxsIGl0ZXJhdGUgMiwgMywgMSwgNCwgMC5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0YXJ0LCBtaW5MaW5lLCBtYXhMaW5lKSB7XG4gIGxldCB3YW50Rm9yd2FyZCA9IHRydWUsXG4gICAgICBiYWNrd2FyZEV4aGF1c3RlZCA9IGZhbHNlLFxuICAgICAgZm9yd2FyZEV4aGF1c3RlZCA9IGZhbHNlLFxuICAgICAgbG9jYWxPZmZzZXQgPSAxO1xuXG4gIHJldHVybiBmdW5jdGlvbiBpdGVyYXRvcigpIHtcbiAgICBpZiAod2FudEZvcndhcmQgJiYgIWZvcndhcmRFeGhhdXN0ZWQpIHtcbiAgICAgIGlmIChiYWNrd2FyZEV4aGF1c3RlZCkge1xuICAgICAgICBsb2NhbE9mZnNldCsrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FudEZvcndhcmQgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdHJ5aW5nIHRvIGZpdCBiZXlvbmQgdGV4dCBsZW5ndGgsIGFuZCBpZiBub3QsIGNoZWNrIGl0IGZpdHNcbiAgICAgIC8vIGFmdGVyIG9mZnNldCBsb2NhdGlvbiAob3IgZGVzaXJlZCBsb2NhdGlvbiBvbiBmaXJzdCBpdGVyYXRpb24pXG4gICAgICBpZiAoc3RhcnQgKyBsb2NhbE9mZnNldCA8PSBtYXhMaW5lKSB7XG4gICAgICAgIHJldHVybiBsb2NhbE9mZnNldDtcbiAgICAgIH1cblxuICAgICAgZm9yd2FyZEV4aGF1c3RlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKCFiYWNrd2FyZEV4aGF1c3RlZCkge1xuICAgICAgaWYgKCFmb3J3YXJkRXhoYXVzdGVkKSB7XG4gICAgICAgIHdhbnRGb3J3YXJkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdHJ5aW5nIHRvIGZpdCBiZWZvcmUgdGV4dCBiZWdpbm5pbmcsIGFuZCBpZiBub3QsIGNoZWNrIGl0IGZpdHNcbiAgICAgIC8vIGJlZm9yZSBvZmZzZXQgbG9jYXRpb25cbiAgICAgIGlmIChtaW5MaW5lIDw9IHN0YXJ0IC0gbG9jYWxPZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIC1sb2NhbE9mZnNldCsrO1xuICAgICAgfVxuXG4gICAgICBiYWNrd2FyZEV4aGF1c3RlZCA9IHRydWU7XG4gICAgICByZXR1cm4gaXRlcmF0b3IoKTtcbiAgICB9XG5cbiAgICAvLyBXZSB0cmllZCB0byBmaXQgaHVuayBiZWZvcmUgdGV4dCBiZWdpbm5pbmcgYW5kIGJleW9uZCB0ZXh0IGxlbmd0aCwgdGhlblxuICAgIC8vIGh1bmsgY2FuJ3QgZml0IG9uIHRoZSB0ZXh0LiBSZXR1cm4gdW5kZWZpbmVkXG4gIH07XG59XG4iXX0=\n","/*istanbul ignore start*/'use strict';\n\nexports.__esModule = true;\nexports. /*istanbul ignore end*/generateOptions = generateOptions;\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n  return defaults;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3BhcmFtcy5qcyJdLCJuYW1lcyI6WyJnZW5lcmF0ZU9wdGlvbnMiLCJvcHRpb25zIiwiZGVmYXVsdHMiLCJjYWxsYmFjayIsIm5hbWUiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7O2dDQUFnQkEsZSxHQUFBQSxlO0FBQVQsU0FBU0EsZUFBVCxDQUF5QkMsT0FBekIsRUFBa0NDLFFBQWxDLEVBQTRDO0FBQ2pELE1BQUksT0FBT0QsT0FBUCxLQUFtQixVQUF2QixFQUFtQztBQUNqQ0MsYUFBU0MsUUFBVCxHQUFvQkYsT0FBcEI7QUFDRCxHQUZELE1BRU8sSUFBSUEsT0FBSixFQUFhO0FBQ2xCLFNBQUssSUFBSUcsSUFBVCxJQUFpQkgsT0FBakIsRUFBMEI7QUFDeEI7QUFDQSxVQUFJQSxRQUFRSSxjQUFSLENBQXVCRCxJQUF2QixDQUFKLEVBQWtDO0FBQ2hDRixpQkFBU0UsSUFBVCxJQUFpQkgsUUFBUUcsSUFBUixDQUFqQjtBQUNEO0FBQ0Y7QUFDRjtBQUNELFNBQU9GLFFBQVA7QUFDRCIsImZpbGUiOiJwYXJhbXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVPcHRpb25zKG9wdGlvbnMsIGRlZmF1bHRzKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGRlZmF1bHRzLmNhbGxiYWNrID0gb3B0aW9ucztcbiAgfSBlbHNlIGlmIChvcHRpb25zKSB7XG4gICAgZm9yIChsZXQgbmFtZSBpbiBvcHRpb25zKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgaWYgKG9wdGlvbnMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgICAgZGVmYXVsdHNbbmFtZV0gPSBvcHRpb25zW25hbWVdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZGVmYXVsdHM7XG59XG4iXX0=\n","'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _parse=require('./parse');var _parse2=_interopRequireDefault(_parse);var _stringify=require('./stringify');var _stringify2=_interopRequireDefault(_stringify);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}exports.default={parse:_parse2.default,stringify:_stringify2.default};module.exports=exports['default'];","'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};exports.default=parse;var _util=require('./util');var util=_interopRequireWildcard(_util);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}var source=void 0;var parseState=void 0;var stack=void 0;var pos=void 0;var line=void 0;var column=void 0;var token=void 0;var key=void 0;var root=void 0;function parse(text,reviver){source=String(text);parseState='start';stack=[];pos=0;line=1;column=0;token=undefined;key=undefined;root=undefined;do{token=lex();parseStates[parseState]()}while(token.type!=='eof');if(typeof reviver==='function'){return internalize({'':root},'',reviver)}return root}function internalize(holder,name,reviver){var value=holder[name];if(value!=null&&(typeof value==='undefined'?'undefined':_typeof(value))==='object'){for(var _key in value){var replacement=internalize(value,_key,reviver);if(replacement===undefined){delete value[_key]}else{value[_key]=replacement}}}return reviver.call(holder,name,value)}var lexState=void 0;var buffer=void 0;var doubleQuote=void 0;var _sign=void 0;var c=void 0;function lex(){lexState='default';buffer='';doubleQuote=false;_sign=1;for(;;){c=peek();var _token=lexStates[lexState]();if(_token){return _token}}}function peek(){if(source[pos]){return String.fromCodePoint(source.codePointAt(pos))}}function read(){var c=peek();if(c==='\\n'){line++;column=0}else if(c){column+=c.length}else{column++}if(c){pos+=c.length}return c}var lexStates={default:function _default(){switch(c){case'\\t':case'\\x0B':case'\\f':case' ':case'\\xA0':case'\\uFEFF':case'\\n':case'\\r':case'\\u2028':case'\\u2029':read();return;case'/':read();lexState='comment';return;case undefined:read();return newToken('eof');}if(util.isSpaceSeparator(c)){read();return}return lexStates[parseState]()},comment:function comment(){switch(c){case'*':read();lexState='multiLineComment';return;case'/':read();lexState='singleLineComment';return;}throw invalidChar(read())},multiLineComment:function multiLineComment(){switch(c){case'*':read();lexState='multiLineCommentAsterisk';return;case undefined:throw invalidChar(read());}read()},multiLineCommentAsterisk:function multiLineCommentAsterisk(){switch(c){case'*':read();return;case'/':read();lexState='default';return;case undefined:throw invalidChar(read());}read();lexState='multiLineComment'},singleLineComment:function singleLineComment(){switch(c){case'\\n':case'\\r':case'\\u2028':case'\\u2029':read();lexState='default';return;case undefined:read();return newToken('eof');}read()},value:function value(){switch(c){case'{':case'[':return newToken('punctuator',read());case'n':read();literal('ull');return newToken('null',null);case't':read();literal('rue');return newToken('boolean',true);case'f':read();literal('alse');return newToken('boolean',false);case'-':case'+':if(read()==='-'){_sign=-1}lexState='sign';return;case'.':buffer=read();lexState='decimalPointLeading';return;case'0':buffer=read();lexState='zero';return;case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':buffer=read();lexState='decimalInteger';return;case'I':read();literal('nfinity');return newToken('numeric',Infinity);case'N':read();literal('aN');return newToken('numeric',NaN);case'\"':case'\\'':doubleQuote=read()==='\"';buffer='';lexState='string';return;}throw invalidChar(read())},identifierNameStartEscape:function identifierNameStartEscape(){if(c!=='u'){throw invalidChar(read())}read();var u=unicodeEscape();switch(u){case'$':case'_':break;default:if(!util.isIdStartChar(u)){throw invalidIdentifier()}break;}buffer+=u;lexState='identifierName'},identifierName:function identifierName(){switch(c){case'$':case'_':case'\\u200C':case'\\u200D':buffer+=read();return;case'\\\\':read();lexState='identifierNameEscape';return;}if(util.isIdContinueChar(c)){buffer+=read();return}return newToken('identifier',buffer)},identifierNameEscape:function identifierNameEscape(){if(c!=='u'){throw invalidChar(read())}read();var u=unicodeEscape();switch(u){case'$':case'_':case'\\u200C':case'\\u200D':break;default:if(!util.isIdContinueChar(u)){throw invalidIdentifier()}break;}buffer+=u;lexState='identifierName'},sign:function sign(){switch(c){case'.':buffer=read();lexState='decimalPointLeading';return;case'0':buffer=read();lexState='zero';return;case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':buffer=read();lexState='decimalInteger';return;case'I':read();literal('nfinity');return newToken('numeric',_sign*Infinity);case'N':read();literal('aN');return newToken('numeric',NaN);}throw invalidChar(read())},zero:function zero(){switch(c){case'.':buffer+=read();lexState='decimalPoint';return;case'e':case'E':buffer+=read();lexState='decimalExponent';return;case'x':case'X':buffer+=read();lexState='hexadecimal';return;}return newToken('numeric',_sign*0)},decimalInteger:function decimalInteger(){switch(c){case'.':buffer+=read();lexState='decimalPoint';return;case'e':case'E':buffer+=read();lexState='decimalExponent';return;}if(util.isDigit(c)){buffer+=read();return}return newToken('numeric',_sign*Number(buffer))},decimalPointLeading:function decimalPointLeading(){if(util.isDigit(c)){buffer+=read();lexState='decimalFraction';return}throw invalidChar(read())},decimalPoint:function decimalPoint(){switch(c){case'e':case'E':buffer+=read();lexState='decimalExponent';return;}if(util.isDigit(c)){buffer+=read();lexState='decimalFraction';return}return newToken('numeric',_sign*Number(buffer))},decimalFraction:function decimalFraction(){switch(c){case'e':case'E':buffer+=read();lexState='decimalExponent';return;}if(util.isDigit(c)){buffer+=read();return}return newToken('numeric',_sign*Number(buffer))},decimalExponent:function decimalExponent(){switch(c){case'+':case'-':buffer+=read();lexState='decimalExponentSign';return;}if(util.isDigit(c)){buffer+=read();lexState='decimalExponentInteger';return}throw invalidChar(read())},decimalExponentSign:function decimalExponentSign(){if(util.isDigit(c)){buffer+=read();lexState='decimalExponentInteger';return}throw invalidChar(read())},decimalExponentInteger:function decimalExponentInteger(){if(util.isDigit(c)){buffer+=read();return}return newToken('numeric',_sign*Number(buffer))},hexadecimal:function hexadecimal(){if(util.isHexDigit(c)){buffer+=read();lexState='hexadecimalInteger';return}throw invalidChar(read())},hexadecimalInteger:function hexadecimalInteger(){if(util.isHexDigit(c)){buffer+=read();return}return newToken('numeric',_sign*Number(buffer))},string:function string(){switch(c){case'\\\\':read();buffer+=escape();return;case'\"':if(doubleQuote){read();return newToken('string',buffer)}buffer+=read();return;case'\\'':if(!doubleQuote){read();return newToken('string',buffer)}buffer+=read();return;case'\\n':case'\\r':throw invalidChar(read());case'\\u2028':case'\\u2029':separatorChar(c);break;case undefined:throw invalidChar(read());}buffer+=read()},start:function start(){switch(c){case'{':case'[':return newToken('punctuator',read());}lexState='value'},beforePropertyName:function beforePropertyName(){switch(c){case'$':case'_':buffer=read();lexState='identifierName';return;case'\\\\':read();lexState='identifierNameStartEscape';return;case'}':return newToken('punctuator',read());case'\"':case'\\'':doubleQuote=read()==='\"';lexState='string';return;}if(util.isIdStartChar(c)){buffer+=read();lexState='identifierName';return}throw invalidChar(read())},afterPropertyName:function afterPropertyName(){if(c===':'){return newToken('punctuator',read())}throw invalidChar(read())},beforePropertyValue:function beforePropertyValue(){lexState='value'},afterPropertyValue:function afterPropertyValue(){switch(c){case',':case'}':return newToken('punctuator',read());}throw invalidChar(read())},beforeArrayValue:function beforeArrayValue(){if(c===']'){return newToken('punctuator',read())}lexState='value'},afterArrayValue:function afterArrayValue(){switch(c){case',':case']':return newToken('punctuator',read());}throw invalidChar(read())},end:function end(){throw invalidChar(read())}};function newToken(type,value){return{type:type,value:value,line:line,column:column}}function literal(s){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=s[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var _c=_step.value;var p=peek();if(p!==_c){throw invalidChar(read())}read()}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}}function escape(){var c=peek();switch(c){case'b':read();return'\\b';case'f':read();return'\\f';case'n':read();return'\\n';case'r':read();return'\\r';case't':read();return'\\t';case'v':read();return'\\x0B';case'0':read();if(util.isDigit(peek())){throw invalidChar(read())}return'\\0';case'x':read();return hexEscape();case'u':read();return unicodeEscape();case'\\n':case'\\u2028':case'\\u2029':read();return'';case'\\r':read();if(peek()==='\\n'){read()}return'';case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':throw invalidChar(read());case undefined:throw invalidChar(read());}return read()}function hexEscape(){var buffer='';var c=peek();if(!util.isHexDigit(c)){throw invalidChar(read())}buffer+=read();c=peek();if(!util.isHexDigit(c)){throw invalidChar(read())}buffer+=read();return String.fromCodePoint(parseInt(buffer,16))}function unicodeEscape(){var buffer='';var count=4;while(count-->0){var _c2=peek();if(!util.isHexDigit(_c2)){throw invalidChar(read())}buffer+=read()}return String.fromCodePoint(parseInt(buffer,16))}var parseStates={start:function start(){if(token.type==='eof'){throw invalidEOF()}push()},beforePropertyName:function beforePropertyName(){switch(token.type){case'identifier':case'string':key=token.value;parseState='afterPropertyName';return;case'punctuator':pop();return;case'eof':throw invalidEOF();}},afterPropertyName:function afterPropertyName(){if(token.type==='eof'){throw invalidEOF()}parseState='beforePropertyValue'},beforePropertyValue:function beforePropertyValue(){if(token.type==='eof'){throw invalidEOF()}push()},beforeArrayValue:function beforeArrayValue(){if(token.type==='eof'){throw invalidEOF()}if(token.type==='punctuator'&&token.value===']'){pop();return}push()},afterPropertyValue:function afterPropertyValue(){if(token.type==='eof'){throw invalidEOF()}switch(token.value){case',':parseState='beforePropertyName';return;case'}':pop();}},afterArrayValue:function afterArrayValue(){if(token.type==='eof'){throw invalidEOF()}switch(token.value){case',':parseState='beforeArrayValue';return;case']':pop();}},end:function end(){}};function push(){var value=void 0;switch(token.type){case'punctuator':switch(token.value){case'{':value={};break;case'[':value=[];break;}break;case'null':case'boolean':case'numeric':case'string':value=token.value;break;}if(root===undefined){root=value}else{var parent=stack[stack.length-1];if(Array.isArray(parent)){parent.push(value)}else{parent[key]=value}}if(value!==null&&(typeof value==='undefined'?'undefined':_typeof(value))==='object'){stack.push(value);if(Array.isArray(value)){parseState='beforeArrayValue'}else{parseState='beforePropertyName'}}else{var current=stack[stack.length-1];if(current==null){parseState='end'}else if(Array.isArray(current)){parseState='afterArrayValue'}else{parseState='afterPropertyValue'}}}function pop(){stack.pop();var current=stack[stack.length-1];if(current==null){parseState='end'}else if(Array.isArray(current)){parseState='afterArrayValue'}else{parseState='afterPropertyValue'}}function invalidChar(c){if(c===undefined){return syntaxError('JSON5: invalid end of input at '+line+':'+column)}return syntaxError('JSON5: invalid character \\''+formatChar(c)+'\\' at '+line+':'+column)}function invalidEOF(){return syntaxError('JSON5: invalid end of input at '+line+':'+column)}function invalidIdentifier(){column-=5;return syntaxError('JSON5: invalid identifier character at '+line+':'+column)}function separatorChar(c){console.warn('JSON5: \\''+c+'\\' is not valid ECMAScript; consider escaping')}function formatChar(c){var replacements={'\\'':'\\\\\\'','\"':'\\\\\"','\\\\':'\\\\\\\\','\\b':'\\\\b','\\f':'\\\\f','\\n':'\\\\n','\\r':'\\\\r','\\t':'\\\\t','\\x0B':'\\\\v','\\0':'\\\\0','\\u2028':'\\\\u2028','\\u2029':'\\\\u2029'};if(replacements[c]){return replacements[c]}if(c<' '){var hexString=c.charCodeAt(0).toString(16);return'\\\\x'+('00'+hexString).substring(hexString.length)}return c}function syntaxError(message){var err=new SyntaxError(message);err.lineNumber=line;err.columnNumber=column;return err}module.exports=exports['default'];","'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};exports.default=stringify;var _util=require('./util');var util=_interopRequireWildcard(_util);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}function stringify(value,replacer,space){var stack=[];var indent='';var propertyList=void 0;var replacerFunc=void 0;var gap='';var quote=void 0;if(replacer!=null&&(typeof replacer==='undefined'?'undefined':_typeof(replacer))==='object'&&!Array.isArray(replacer)){space=replacer.space;quote=replacer.quote;replacer=replacer.replacer}if(typeof replacer==='function'){replacerFunc=replacer}else if(Array.isArray(replacer)){propertyList=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=replacer[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var v=_step.value;var item=void 0;if(typeof v==='string'){item=v}else if(typeof v==='number'||v instanceof String||v instanceof Number){item=String(v)}if(item!==undefined&&propertyList.indexOf(item)<0){propertyList.push(item)}}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}}if(space instanceof Number){space=Number(space)}else if(space instanceof String){space=String(space)}if(typeof space==='number'){if(space>0){space=Math.min(10,Math.floor(space));gap='          '.substr(0,space)}}else if(typeof space==='string'){gap=space.substr(0,10)}return serializeProperty('',{'':value});function serializeProperty(key,holder){var value=holder[key];if(value!=null){if(typeof value.toJSON5==='function'){value=value.toJSON5(key)}else if(typeof value.toJSON==='function'){value=value.toJSON(key)}}if(replacerFunc){value=replacerFunc.call(holder,key,value)}if(value instanceof Number){value=Number(value)}else if(value instanceof String){value=String(value)}else if(value instanceof Boolean){value=value.valueOf()}switch(value){case null:return'null';case true:return'true';case false:return'false';}if(typeof value==='string'){return quoteString(value,false)}if(typeof value==='number'){return String(value)}if((typeof value==='undefined'?'undefined':_typeof(value))==='object'){return Array.isArray(value)?serializeArray(value):serializeObject(value)}return undefined}function quoteString(value){var quotes={'\\'':0.1,'\"':0.2};var replacements={'\\'':'\\\\\\'','\"':'\\\\\"','\\\\':'\\\\\\\\','\\b':'\\\\b','\\f':'\\\\f','\\n':'\\\\n','\\r':'\\\\r','\\t':'\\\\t','\\x0B':'\\\\v','\\0':'\\\\0','\\u2028':'\\\\u2028','\\u2029':'\\\\u2029'};var product='';var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=value[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var c=_step2.value;switch(c){case'\\'':case'\"':quotes[c]++;product+=c;continue;}if(replacements[c]){product+=replacements[c];continue}if(c<' '){var hexString=c.charCodeAt(0).toString(16);product+='\\\\x'+('00'+hexString).substring(hexString.length);continue}product+=c}}catch(err){_didIteratorError2=true;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}var quoteChar=quote||Object.keys(quotes).reduce(function(a,b){return quotes[a]<quotes[b]?a:b});product=product.replace(new RegExp(quoteChar,'g'),replacements[quoteChar]);return quoteChar+product+quoteChar}function serializeObject(value){if(stack.indexOf(value)>=0){throw TypeError('Converting circular structure to JSON5')}stack.push(value);var stepback=indent;indent=indent+gap;var keys=propertyList||Object.keys(value);var partial=[];var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=keys[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var key=_step3.value;var propertyString=serializeProperty(key,value);if(propertyString!==undefined){var member=serializeKey(key)+':';if(gap!==''){member+=' '}member+=propertyString;partial.push(member)}}}catch(err){_didIteratorError3=true;_iteratorError3=err}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return()}}finally{if(_didIteratorError3){throw _iteratorError3}}}var final=void 0;if(partial.length===0){final='{}'}else{var properties=void 0;if(gap===''){properties=partial.join(',');final='{'+properties+'}'}else{var separator=',\\n'+indent;properties=partial.join(separator);final='{\\n'+indent+properties+',\\n'+stepback+'}'}}stack.pop();indent=stepback;return final}function serializeKey(key){if(key.length===0){return quoteString(key,true)}var firstChar=String.fromCodePoint(key.codePointAt(0));if(!util.isIdStartChar(firstChar)){return quoteString(key,true)}for(var i=firstChar.length;i<key.length;i++){if(!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))){return quoteString(key,true)}}return key}function serializeArray(value){if(stack.indexOf(value)>=0){throw TypeError('Converting circular structure to JSON5')}stack.push(value);var stepback=indent;indent=indent+gap;var partial=[];for(var i=0;i<value.length;i++){var propertyString=serializeProperty(String(i),value);partial.push(propertyString!==undefined?propertyString:'null')}var final=void 0;if(partial.length===0){final='[]'}else{if(gap===''){var properties=partial.join(',');final='['+properties+']'}else{var separator=',\\n'+indent;var _properties=partial.join(separator);final='[\\n'+indent+_properties+',\\n'+stepback+']'}}stack.pop();indent=stepback;return final}}module.exports=exports['default'];","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var Space_Separator=exports.Space_Separator=/[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;var ID_Start=exports.ID_Start=/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/;var ID_Continue=exports.ID_Continue=/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;","'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.isSpaceSeparator=isSpaceSeparator;exports.isIdStartChar=isIdStartChar;exports.isIdContinueChar=isIdContinueChar;exports.isDigit=isDigit;exports.isHexDigit=isHexDigit;var _unicode=require('../lib/unicode');var unicode=_interopRequireWildcard(_unicode);function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key]}}newObj.default=obj;return newObj}}function isSpaceSeparator(c){return unicode.Space_Separator.test(c)}function isIdStartChar(c){return c>='a'&&c<='z'||c>='A'&&c<='Z'||c==='$'||c==='_'||unicode.ID_Start.test(c)}function isIdContinueChar(c){return c>='a'&&c<='z'||c>='A'&&c<='Z'||c>='0'&&c<='9'||c==='$'||c==='_'||c==='\\u200C'||c==='\\u200D'||unicode.ID_Continue.test(c)}function isDigit(c){return /[0-9]/.test(c)}function isHexDigit(c){return /[0-9A-Fa-f]/.test(c)}","module.exports = function (args, opts) {\n    if (!opts) opts = {};\n    \n    var flags = { bools : {}, strings : {}, unknownFn: null };\n\n    if (typeof opts['unknown'] === 'function') {\n        flags.unknownFn = opts['unknown'];\n    }\n\n    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {\n      flags.allBools = true;\n    } else {\n      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {\n          flags.bools[key] = true;\n      });\n    }\n    \n    var aliases = {};\n    Object.keys(opts.alias || {}).forEach(function (key) {\n        aliases[key] = [].concat(opts.alias[key]);\n        aliases[key].forEach(function (x) {\n            aliases[x] = [key].concat(aliases[key].filter(function (y) {\n                return x !== y;\n            }));\n        });\n    });\n\n    [].concat(opts.string).filter(Boolean).forEach(function (key) {\n        flags.strings[key] = true;\n        if (aliases[key]) {\n            flags.strings[aliases[key]] = true;\n        }\n     });\n\n    var defaults = opts['default'] || {};\n    \n    var argv = { _ : [] };\n    Object.keys(flags.bools).forEach(function (key) {\n        setArg(key, defaults[key] === undefined ? false : defaults[key]);\n    });\n    \n    var notFlags = [];\n\n    if (args.indexOf('--') !== -1) {\n        notFlags = args.slice(args.indexOf('--')+1);\n        args = args.slice(0, args.indexOf('--'));\n    }\n\n    function argDefined(key, arg) {\n        return (flags.allBools && /^--[^=]+$/.test(arg)) ||\n            flags.strings[key] || flags.bools[key] || aliases[key];\n    }\n\n    function setArg (key, val, arg) {\n        if (arg && flags.unknownFn && !argDefined(key, arg)) {\n            if (flags.unknownFn(arg) === false) return;\n        }\n\n        var value = !flags.strings[key] && isNumber(val)\n            ? Number(val) : val\n        ;\n        setKey(argv, key.split('.'), value);\n        \n        (aliases[key] || []).forEach(function (x) {\n            setKey(argv, x.split('.'), value);\n        });\n    }\n\n    function setKey (obj, keys, value) {\n        var o = obj;\n        for (var i = 0; i < keys.length-1; i++) {\n            var key = keys[i];\n            if (key === '__proto__') return;\n            if (o[key] === undefined) o[key] = {};\n            if (o[key] === Object.prototype || o[key] === Number.prototype\n                || o[key] === String.prototype) o[key] = {};\n            if (o[key] === Array.prototype) o[key] = [];\n            o = o[key];\n        }\n\n        var key = keys[keys.length - 1];\n        if (key === '__proto__') return;\n        if (o === Object.prototype || o === Number.prototype\n            || o === String.prototype) o = {};\n        if (o === Array.prototype) o = [];\n        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {\n            o[key] = value;\n        }\n        else if (Array.isArray(o[key])) {\n            o[key].push(value);\n        }\n        else {\n            o[key] = [ o[key], value ];\n        }\n    }\n    \n    function aliasIsBoolean(key) {\n      return aliases[key].some(function (x) {\n          return flags.bools[x];\n      });\n    }\n\n    for (var i = 0; i < args.length; i++) {\n        var arg = args[i];\n        \n        if (/^--.+=/.test(arg)) {\n            // Using [\\s\\S] instead of . because js doesn't support the\n            // 'dotall' regex modifier. See:\n            // http://stackoverflow.com/a/1068308/13216\n            var m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n            var key = m[1];\n            var value = m[2];\n            if (flags.bools[key]) {\n                value = value !== 'false';\n            }\n            setArg(key, value, arg);\n        }\n        else if (/^--no-.+/.test(arg)) {\n            var key = arg.match(/^--no-(.+)/)[1];\n            setArg(key, false, arg);\n        }\n        else if (/^--.+/.test(arg)) {\n            var key = arg.match(/^--(.+)/)[1];\n            var next = args[i + 1];\n            if (next !== undefined && !/^-/.test(next)\n            && !flags.bools[key]\n            && !flags.allBools\n            && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                setArg(key, next, arg);\n                i++;\n            }\n            else if (/^(true|false)$/.test(next)) {\n                setArg(key, next === 'true', arg);\n                i++;\n            }\n            else {\n                setArg(key, flags.strings[key] ? '' : true, arg);\n            }\n        }\n        else if (/^-[^-]+/.test(arg)) {\n            var letters = arg.slice(1,-1).split('');\n            \n            var broken = false;\n            for (var j = 0; j < letters.length; j++) {\n                var next = arg.slice(j+2);\n                \n                if (next === '-') {\n                    setArg(letters[j], next, arg)\n                    continue;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {\n                    setArg(letters[j], next.split('=')[1], arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (/[A-Za-z]/.test(letters[j])\n                && /-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) {\n                    setArg(letters[j], next, arg);\n                    broken = true;\n                    break;\n                }\n                \n                if (letters[j+1] && letters[j+1].match(/\\W/)) {\n                    setArg(letters[j], arg.slice(j+2), arg);\n                    broken = true;\n                    break;\n                }\n                else {\n                    setArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n                }\n            }\n            \n            var key = arg.slice(-1)[0];\n            if (!broken && key !== '-') {\n                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])\n                && !flags.bools[key]\n                && (aliases[key] ? !aliasIsBoolean(key) : true)) {\n                    setArg(key, args[i+1], arg);\n                    i++;\n                }\n                else if (args[i+1] && /^(true|false)$/.test(args[i+1])) {\n                    setArg(key, args[i+1] === 'true', arg);\n                    i++;\n                }\n                else {\n                    setArg(key, flags.strings[key] ? '' : true, arg);\n                }\n            }\n        }\n        else {\n            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n                argv._.push(\n                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)\n                );\n            }\n            if (opts.stopEarly) {\n                argv._.push.apply(argv._, args.slice(i + 1));\n                break;\n            }\n        }\n    }\n    \n    Object.keys(defaults).forEach(function (key) {\n        if (!hasKey(argv, key.split('.'))) {\n            setKey(argv, key.split('.'), defaults[key]);\n            \n            (aliases[key] || []).forEach(function (x) {\n                setKey(argv, x.split('.'), defaults[key]);\n            });\n        }\n    });\n    \n    if (opts['--']) {\n        argv['--'] = new Array();\n        notFlags.forEach(function(key) {\n            argv['--'].push(key);\n        });\n    }\n    else {\n        notFlags.forEach(function(key) {\n            argv._.push(key);\n        });\n    }\n\n    return argv;\n};\n\nfunction hasKey (obj, keys) {\n    var o = obj;\n    keys.slice(0,-1).forEach(function (key) {\n        o = (o[key] || {});\n    });\n\n    var key = keys[keys.length - 1];\n    return key in o;\n}\n\nfunction isNumber (x) {\n    if (typeof x === 'number') return true;\n    if (/^0x[0-9a-f]+$/i.test(x)) return true;\n    return /^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n\n","'use strict';\nmodule.exports = x => {\n\tif (typeof x !== 'string') {\n\t\tthrow new TypeError('Expected a string, got ' + typeof x);\n\t}\n\n\t// Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n\t// conversion translates it to FEFF (UTF-16 BOM)\n\tif (x.charCodeAt(0) === 0xFEFF) {\n\t\treturn x.slice(1);\n\t}\n\n\treturn x;\n};\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../mcschema/core/node_modules/tsconfig-paths/lib sync recursive\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TsConfigLoader = require(\"./tsconfig-loader\");\nvar path = require(\"path\");\nvar options_1 = require(\"./options\");\nfunction loadConfig(cwd) {\n    if (cwd === void 0) { cwd = options_1.options.cwd; }\n    return configLoader({ cwd: cwd });\n}\nexports.loadConfig = loadConfig;\nfunction configLoader(_a) {\n    var cwd = _a.cwd, explicitParams = _a.explicitParams, _b = _a.tsConfigLoader, tsConfigLoader = _b === void 0 ? TsConfigLoader.tsConfigLoader : _b;\n    if (explicitParams) {\n        // tslint:disable-next-line:no-shadowed-variable\n        var absoluteBaseUrl_1 = path.isAbsolute(explicitParams.baseUrl)\n            ? explicitParams.baseUrl\n            : path.join(cwd, explicitParams.baseUrl);\n        return {\n            resultType: \"success\",\n            configFileAbsolutePath: \"\",\n            baseUrl: explicitParams.baseUrl,\n            absoluteBaseUrl: absoluteBaseUrl_1,\n            paths: explicitParams.paths,\n            mainFields: explicitParams.mainFields,\n            addMatchAll: explicitParams.addMatchAll\n        };\n    }\n    // Load tsconfig and create path matching function\n    var loadResult = tsConfigLoader({\n        cwd: cwd,\n        getEnv: function (key) { return process.env[key]; }\n    });\n    if (!loadResult.tsConfigPath) {\n        return {\n            resultType: \"failed\",\n            message: \"Couldn't find tsconfig.json\"\n        };\n    }\n    if (!loadResult.baseUrl) {\n        return {\n            resultType: \"failed\",\n            message: \"Missing baseUrl in compilerOptions\"\n        };\n    }\n    var tsConfigDir = path.dirname(loadResult.tsConfigPath);\n    var absoluteBaseUrl = path.join(tsConfigDir, loadResult.baseUrl);\n    return {\n        resultType: \"success\",\n        configFileAbsolutePath: loadResult.tsConfigPath,\n        baseUrl: loadResult.baseUrl,\n        absoluteBaseUrl: absoluteBaseUrl,\n        paths: loadResult.paths || {}\n    };\n}\nexports.configLoader = configLoader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fs = require(\"fs\");\nfunction fileExistsSync(path) {\n    try {\n        var stats = fs.statSync(path);\n        return stats.isFile();\n    }\n    catch (err) {\n        // If error, assume file did not exist\n        return false;\n    }\n}\nexports.fileExistsSync = fileExistsSync;\n/**\n * Reads package.json from disk\n * @param file Path to package.json\n */\n// tslint:disable-next-line:no-any\nfunction readJsonFromDiskSync(packageJsonPath) {\n    if (!fs.existsSync(packageJsonPath)) {\n        return undefined;\n    }\n    return require(packageJsonPath);\n}\nexports.readJsonFromDiskSync = readJsonFromDiskSync;\nfunction readJsonFromDiskAsync(path, \n// tslint:disable-next-line:no-any\ncallback) {\n    fs.readFile(path, \"utf8\", function (err, result) {\n        // If error, assume file did not exist\n        if (err || !result) {\n            return callback();\n        }\n        var json = JSON.parse(result);\n        return callback(undefined, json);\n    });\n}\nexports.readJsonFromDiskAsync = readJsonFromDiskAsync;\nfunction fileExistsAsync(path2, callback2) {\n    fs.stat(path2, function (err, stats) {\n        if (err) {\n            // If error assume file does not exist\n            return callback2(undefined, false);\n        }\n        callback2(undefined, stats ? stats.isFile() : false);\n    });\n}\nexports.fileExistsAsync = fileExistsAsync;\nfunction removeExtension(path) {\n    return path.substring(0, path.lastIndexOf(\".\")) || path;\n}\nexports.removeExtension = removeExtension;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// register is used from register.js in root dir\nvar match_path_sync_1 = require(\"./match-path-sync\");\nexports.createMatchPath = match_path_sync_1.createMatchPath;\nexports.matchFromAbsolutePaths = match_path_sync_1.matchFromAbsolutePaths;\nvar match_path_async_1 = require(\"./match-path-async\");\nexports.createMatchPathAsync = match_path_async_1.createMatchPathAsync;\nexports.matchFromAbsolutePathsAsync = match_path_async_1.matchFromAbsolutePathsAsync;\nvar register_1 = require(\"./register\");\nexports.register = register_1.register;\nvar config_loader_1 = require(\"./config-loader\");\nexports.loadConfig = config_loader_1.loadConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path = require(\"path\");\n/**\n * Converts an absolute baseUrl and paths to an array of absolute mapping entries.\n * The array is sorted by longest prefix.\n * Having an array with entries allows us to keep a sorting order rather than\n * sort by keys each time we use the mappings.\n * @param absoluteBaseUrl\n * @param paths\n * @param addMatchAll\n */\nfunction getAbsoluteMappingEntries(absoluteBaseUrl, paths, addMatchAll) {\n    // Resolve all paths to absolute form once here, and sort them by\n    // longest prefix once here, this saves time on each request later.\n    // We need to put them in an array to preseve the sorting order.\n    var sortedKeys = sortByLongestPrefix(Object.keys(paths));\n    var absolutePaths = [];\n    for (var _i = 0, sortedKeys_1 = sortedKeys; _i < sortedKeys_1.length; _i++) {\n        var key = sortedKeys_1[_i];\n        absolutePaths.push({\n            pattern: key,\n            paths: paths[key].map(function (pathToResolve) {\n                return path.join(absoluteBaseUrl, pathToResolve);\n            })\n        });\n    }\n    // If there is no match-all path specified in the paths section of tsconfig, then try to match\n    // all paths relative to baseUrl, this is how typescript works.\n    if (!paths[\"*\"] && addMatchAll) {\n        absolutePaths.push({\n            pattern: \"*\",\n            paths: [absoluteBaseUrl.replace(/\\/$/, \"\") + \"/*\"]\n        });\n    }\n    return absolutePaths;\n}\nexports.getAbsoluteMappingEntries = getAbsoluteMappingEntries;\n/**\n * Sort path patterns.\n * If a module name can be matched with multiple patterns then pattern with the longest prefix will be picked.\n */\nfunction sortByLongestPrefix(arr) {\n    return arr\n        .concat()\n        .sort(function (a, b) { return getPrefixLength(b) - getPrefixLength(a); });\n}\nfunction getPrefixLength(pattern) {\n    var prefixLength = pattern.indexOf(\"*\");\n    return pattern.substr(0, prefixLength).length;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path = require(\"path\");\nvar TryPath = require(\"./try-path\");\nvar MappingEntry = require(\"./mapping-entry\");\nvar Filesystem = require(\"./filesystem\");\n/**\n * See the sync version for docs.\n */\nfunction createMatchPathAsync(absoluteBaseUrl, paths, mainFields, addMatchAll) {\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    if (addMatchAll === void 0) { addMatchAll = true; }\n    var absolutePaths = MappingEntry.getAbsoluteMappingEntries(absoluteBaseUrl, paths, addMatchAll);\n    return function (requestedModule, readJson, fileExists, extensions, callback) {\n        return matchFromAbsolutePathsAsync(absolutePaths, requestedModule, readJson, fileExists, extensions, callback, mainFields);\n    };\n}\nexports.createMatchPathAsync = createMatchPathAsync;\n/**\n * See the sync version for docs.\n */\nfunction matchFromAbsolutePathsAsync(absolutePathMappings, requestedModule, readJson, fileExists, extensions, callback, mainFields) {\n    if (readJson === void 0) { readJson = Filesystem.readJsonFromDiskAsync; }\n    if (fileExists === void 0) { fileExists = Filesystem.fileExistsAsync; }\n    if (extensions === void 0) { extensions = Object.keys(require.extensions); }\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    var tryPaths = TryPath.getPathsToTry(extensions, absolutePathMappings, requestedModule);\n    if (!tryPaths) {\n        return callback();\n    }\n    findFirstExistingPath(tryPaths, readJson, fileExists, callback, 0, mainFields);\n}\nexports.matchFromAbsolutePathsAsync = matchFromAbsolutePathsAsync;\nfunction findFirstExistingMainFieldMappedFile(packageJson, mainFields, packageJsonPath, fileExistsAsync, doneCallback, index) {\n    if (index === void 0) { index = 0; }\n    if (index >= mainFields.length) {\n        return doneCallback(undefined, undefined);\n    }\n    var tryNext = function () {\n        return findFirstExistingMainFieldMappedFile(packageJson, mainFields, packageJsonPath, fileExistsAsync, doneCallback, index + 1);\n    };\n    var mainFieldMapping = packageJson[mainFields[index]];\n    if (typeof mainFieldMapping !== \"string\") {\n        // Skip mappings that are not pointers to replacement files\n        return tryNext();\n    }\n    var mappedFilePath = path.join(path.dirname(packageJsonPath), mainFieldMapping);\n    fileExistsAsync(mappedFilePath, function (err, exists) {\n        if (err) {\n            return doneCallback(err);\n        }\n        if (exists) {\n            return doneCallback(undefined, mappedFilePath);\n        }\n        return tryNext();\n    });\n}\n// Recursive loop to probe for physical files\nfunction findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index, mainFields) {\n    if (index === void 0) { index = 0; }\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    var tryPath = tryPaths[index];\n    if (tryPath.type === \"file\" ||\n        tryPath.type === \"extension\" ||\n        tryPath.type === \"index\") {\n        fileExists(tryPath.path, function (err, exists) {\n            if (err) {\n                return doneCallback(err);\n            }\n            if (exists) {\n                // Not sure why we don't just return the full path? Why strip it?\n                return doneCallback(undefined, TryPath.getStrippedPath(tryPath));\n            }\n            if (index === tryPaths.length - 1) {\n                return doneCallback();\n            }\n            // Continue with the next path\n            return findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index + 1, mainFields);\n        });\n    }\n    else if (tryPath.type === \"package\") {\n        readJson(tryPath.path, function (err, packageJson) {\n            if (err) {\n                return doneCallback(err);\n            }\n            if (packageJson) {\n                return findFirstExistingMainFieldMappedFile(packageJson, mainFields, tryPath.path, fileExists, function (mainFieldErr, mainFieldMappedFile) {\n                    if (mainFieldErr) {\n                        return doneCallback(mainFieldErr);\n                    }\n                    if (mainFieldMappedFile) {\n                        // Not sure why we don't just return the full path? Why strip it?\n                        return doneCallback(undefined, Filesystem.removeExtension(mainFieldMappedFile));\n                    }\n                    // No field in package json was a valid option. Continue with the next path.\n                    return findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index + 1, mainFields);\n                });\n            }\n            // This is async code, we need to return unconditionally, otherwise the code still falls\n            // through and keeps recursing. While this might work in general, libraries that use neo-async\n            // like Webpack will actually not allow you to call the same callback twice.\n            //\n            // An example of where this caused issues:\n            // https://github.com/dividab/tsconfig-paths-webpack-plugin/issues/11\n            //\n            // Continue with the next path\n            return findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index + 1, mainFields);\n        });\n    }\n    else {\n        TryPath.exhaustiveTypeException(tryPath.type);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path = require(\"path\");\nvar Filesystem = require(\"./filesystem\");\nvar MappingEntry = require(\"./mapping-entry\");\nvar TryPath = require(\"./try-path\");\n/**\n * Creates a function that can resolve paths according to tsconfig paths property.\n * @param absoluteBaseUrl Absolute version of baseUrl as specified in tsconfig.\n * @param paths The paths as specified in tsconfig.\n * @param mainFields A list of package.json field names to try when resolving module files.\n * @param addMatchAll Add a match-all \"*\" rule if none is present\n * @returns a function that can resolve paths.\n */\nfunction createMatchPath(absoluteBaseUrl, paths, mainFields, addMatchAll) {\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    if (addMatchAll === void 0) { addMatchAll = true; }\n    var absolutePaths = MappingEntry.getAbsoluteMappingEntries(absoluteBaseUrl, paths, addMatchAll);\n    return function (requestedModule, readJson, fileExists, extensions) {\n        return matchFromAbsolutePaths(absolutePaths, requestedModule, readJson, fileExists, extensions, mainFields);\n    };\n}\nexports.createMatchPath = createMatchPath;\n/**\n * Finds a path from tsconfig that matches a module load request.\n * @param absolutePathMappings The paths to try as specified in tsconfig but resolved to absolute form.\n * @param requestedModule The required module name.\n * @param readJson Function that can read json from a path (useful for testing).\n * @param fileExists Function that checks for existance of a file at a path (useful for testing).\n * @param extensions File extensions to probe for (useful for testing).\n * @param mainFields A list of package.json field names to try when resolving module files.\n * @returns the found path, or undefined if no path was found.\n */\nfunction matchFromAbsolutePaths(absolutePathMappings, requestedModule, readJson, fileExists, extensions, mainFields) {\n    if (readJson === void 0) { readJson = Filesystem.readJsonFromDiskSync; }\n    if (fileExists === void 0) { fileExists = Filesystem.fileExistsSync; }\n    if (extensions === void 0) { extensions = Object.keys(require.extensions); }\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    var tryPaths = TryPath.getPathsToTry(extensions, absolutePathMappings, requestedModule);\n    if (!tryPaths) {\n        return undefined;\n    }\n    return findFirstExistingPath(tryPaths, readJson, fileExists, mainFields);\n}\nexports.matchFromAbsolutePaths = matchFromAbsolutePaths;\nfunction findFirstExistingMainFieldMappedFile(packageJson, mainFields, packageJsonPath, fileExists) {\n    for (var index = 0; index < mainFields.length; index++) {\n        var mainFieldName = mainFields[index];\n        var candidateMapping = packageJson[mainFieldName];\n        if (candidateMapping && typeof candidateMapping === \"string\") {\n            var candidateFilePath = path.join(path.dirname(packageJsonPath), candidateMapping);\n            if (fileExists(candidateFilePath)) {\n                return candidateFilePath;\n            }\n        }\n    }\n    return undefined;\n}\nfunction findFirstExistingPath(tryPaths, readJson, fileExists, mainFields) {\n    if (readJson === void 0) { readJson = Filesystem.readJsonFromDiskSync; }\n    if (mainFields === void 0) { mainFields = [\"main\"]; }\n    for (var _i = 0, tryPaths_1 = tryPaths; _i < tryPaths_1.length; _i++) {\n        var tryPath = tryPaths_1[_i];\n        if (tryPath.type === \"file\" ||\n            tryPath.type === \"extension\" ||\n            tryPath.type === \"index\") {\n            if (fileExists(tryPath.path)) {\n                // Not sure why we don't just return the full path? Why strip it?\n                return TryPath.getStrippedPath(tryPath);\n            }\n        }\n        else if (tryPath.type === \"package\") {\n            var packageJson = readJson(tryPath.path);\n            if (packageJson) {\n                var mainFieldMappedFile = findFirstExistingMainFieldMappedFile(packageJson, mainFields, tryPath.path, fileExists);\n                if (mainFieldMappedFile) {\n                    // Not sure why we don't just return the full path? Why strip it?\n                    return Filesystem.removeExtension(mainFieldMappedFile);\n                }\n            }\n        }\n        else {\n            TryPath.exhaustiveTypeException(tryPath.type);\n        }\n    }\n    return undefined;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar minimist = require(\"minimist\");\nvar argv = minimist(process.argv.slice(2), {\n    string: [\"project\"],\n    alias: {\n        project: [\"P\"]\n    }\n});\nvar project = argv && argv.project;\nexports.options = {\n    cwd: project || process.cwd()\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar match_path_sync_1 = require(\"./match-path-sync\");\nvar config_loader_1 = require(\"./config-loader\");\nvar options_1 = require(\"./options\");\nvar noOp = function () { return void 0; };\nfunction getCoreModules(builtinModules) {\n    builtinModules = builtinModules || [\n        \"assert\",\n        \"buffer\",\n        \"child_process\",\n        \"cluster\",\n        \"crypto\",\n        \"dgram\",\n        \"dns\",\n        \"domain\",\n        \"events\",\n        \"fs\",\n        \"http\",\n        \"https\",\n        \"net\",\n        \"os\",\n        \"path\",\n        \"punycode\",\n        \"querystring\",\n        \"readline\",\n        \"stream\",\n        \"string_decoder\",\n        \"tls\",\n        \"tty\",\n        \"url\",\n        \"util\",\n        \"v8\",\n        \"vm\",\n        \"zlib\"\n    ];\n    var coreModules = {};\n    for (var _i = 0, builtinModules_1 = builtinModules; _i < builtinModules_1.length; _i++) {\n        var module_1 = builtinModules_1[_i];\n        coreModules[module_1] = true;\n    }\n    return coreModules;\n}\n/**\n * Installs a custom module load function that can adhere to paths in tsconfig.\n * Returns a function to undo paths registration.\n */\nfunction register(explicitParams) {\n    var configLoaderResult = config_loader_1.configLoader({\n        cwd: options_1.options.cwd,\n        explicitParams: explicitParams\n    });\n    if (configLoaderResult.resultType === \"failed\") {\n        console.warn(configLoaderResult.message + \". tsconfig-paths will be skipped\");\n        return noOp;\n    }\n    var matchPath = match_path_sync_1.createMatchPath(configLoaderResult.absoluteBaseUrl, configLoaderResult.paths, configLoaderResult.mainFields, configLoaderResult.addMatchAll);\n    // Patch node's module loading\n    // tslint:disable-next-line:no-require-imports variable-name\n    var Module = require(\"module\");\n    var originalResolveFilename = Module._resolveFilename;\n    var coreModules = getCoreModules(Module.builtinModules);\n    // tslint:disable-next-line:no-any\n    Module._resolveFilename = function (request, _parent) {\n        var isCoreModule = coreModules.hasOwnProperty(request);\n        if (!isCoreModule) {\n            var found = matchPath(request);\n            if (found) {\n                var modifiedArguments = [found].concat([].slice.call(arguments, 1)); // Passes all arguments. Even those that is not specified above.\n                // tslint:disable-next-line:no-invalid-this\n                return originalResolveFilename.apply(this, modifiedArguments);\n            }\n        }\n        // tslint:disable-next-line:no-invalid-this\n        return originalResolveFilename.apply(this, arguments);\n    };\n    return function () {\n        // Return node's module loading to original state.\n        Module._resolveFilename = originalResolveFilename;\n    };\n}\nexports.register = register;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path = require(\"path\");\nvar path_1 = require(\"path\");\nvar filesystem_1 = require(\"./filesystem\");\n/**\n * Builds a list of all physical paths to try by:\n * 1. Check for file named exactly as request.\n * 2. Check for files named as request ending in any of the extensions.\n * 3. Check for file specified in package.json's main property.\n * 4. Check for files named as request ending in \"index\" with any of the extensions.\n */\nfunction getPathsToTry(extensions, absolutePathMappings, requestedModule) {\n    if (!absolutePathMappings ||\n        !requestedModule ||\n        requestedModule[0] === \".\" ||\n        requestedModule[0] === path.sep) {\n        return undefined;\n    }\n    var pathsToTry = [];\n    for (var _i = 0, absolutePathMappings_1 = absolutePathMappings; _i < absolutePathMappings_1.length; _i++) {\n        var entry = absolutePathMappings_1[_i];\n        var starMatch = entry.pattern === requestedModule\n            ? \"\"\n            : matchStar(entry.pattern, requestedModule);\n        if (starMatch !== undefined) {\n            var _loop_1 = function (physicalPathPattern) {\n                var physicalPath = physicalPathPattern.replace(\"*\", starMatch);\n                pathsToTry.push({ type: \"file\", path: physicalPath });\n                pathsToTry.push.apply(pathsToTry, extensions.map(function (e) { return ({ type: \"extension\", path: physicalPath + e }); }));\n                pathsToTry.push({\n                    type: \"package\",\n                    path: path.join(physicalPath, \"/package.json\")\n                });\n                var indexPath = path.join(physicalPath, \"/index\");\n                pathsToTry.push.apply(pathsToTry, extensions.map(function (e) { return ({ type: \"index\", path: indexPath + e }); }));\n            };\n            for (var _a = 0, _b = entry.paths; _a < _b.length; _a++) {\n                var physicalPathPattern = _b[_a];\n                _loop_1(physicalPathPattern);\n            }\n        }\n    }\n    return pathsToTry.length === 0 ? undefined : pathsToTry;\n}\nexports.getPathsToTry = getPathsToTry;\n// Not sure why we don't just return the full found path?\nfunction getStrippedPath(tryPath) {\n    return tryPath.type === \"index\"\n        ? path_1.dirname(tryPath.path)\n        : tryPath.type === \"file\"\n            ? tryPath.path\n            : tryPath.type === \"extension\"\n                ? filesystem_1.removeExtension(tryPath.path)\n                : tryPath.type === \"package\"\n                    ? tryPath.path\n                    : exhaustiveTypeException(tryPath.type);\n}\nexports.getStrippedPath = getStrippedPath;\nfunction exhaustiveTypeException(check) {\n    throw new Error(\"Unknown type \" + check);\n}\nexports.exhaustiveTypeException = exhaustiveTypeException;\n/**\n * Matches pattern with a single star against search.\n * Star must match at least one character to be considered a match.\n * @param patttern for example \"foo*\"\n * @param search for example \"fooawesomebar\"\n * @returns the part of search that * matches, or undefined if no match.\n */\nfunction matchStar(pattern, search) {\n    if (search.length < pattern.length) {\n        return undefined;\n    }\n    if (pattern === \"*\") {\n        return search;\n    }\n    var star = pattern.indexOf(\"*\");\n    if (star === -1) {\n        return undefined;\n    }\n    var part1 = pattern.substring(0, star);\n    var part2 = pattern.substring(star + 1);\n    if (search.substr(0, star) !== part1) {\n        return undefined;\n    }\n    if (search.substr(search.length - part2.length) !== part2) {\n        return undefined;\n    }\n    return search.substr(star, search.length - part2.length);\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path = require(\"path\");\nvar fs = require(\"fs\");\n// tslint:disable:no-require-imports\nvar JSON5 = require(\"json5\");\nvar StripBom = require(\"strip-bom\");\nfunction tsConfigLoader(_a) {\n    var getEnv = _a.getEnv, cwd = _a.cwd, _b = _a.loadSync, loadSync = _b === void 0 ? loadSyncDefault : _b;\n    var TS_NODE_PROJECT = getEnv(\"TS_NODE_PROJECT\");\n    // tsconfig.loadSync handles if TS_NODE_PROJECT is a file or directory\n    var loadResult = loadSync(cwd, TS_NODE_PROJECT);\n    return loadResult;\n}\nexports.tsConfigLoader = tsConfigLoader;\nfunction loadSyncDefault(cwd, filename) {\n    // Tsconfig.loadSync uses path.resolve. This is why we can use an absolute path as filename\n    var configPath = resolveConfigPath(cwd, filename);\n    if (!configPath) {\n        return {\n            tsConfigPath: undefined,\n            baseUrl: undefined,\n            paths: undefined\n        };\n    }\n    var config = loadTsconfig(configPath);\n    return {\n        tsConfigPath: configPath,\n        baseUrl: config && config.compilerOptions && config.compilerOptions.baseUrl,\n        paths: config && config.compilerOptions && config.compilerOptions.paths\n    };\n}\nfunction resolveConfigPath(cwd, filename) {\n    if (filename) {\n        var absolutePath = fs.lstatSync(filename).isDirectory()\n            ? path.resolve(filename, \"./tsconfig.json\")\n            : path.resolve(cwd, filename);\n        return absolutePath;\n    }\n    if (fs.statSync(cwd).isFile()) {\n        return path.resolve(cwd);\n    }\n    var configAbsolutePath = walkForTsConfig(cwd);\n    return configAbsolutePath ? path.resolve(configAbsolutePath) : undefined;\n}\nfunction walkForTsConfig(directory, existsSync) {\n    if (existsSync === void 0) { existsSync = fs.existsSync; }\n    var configPath = path.join(directory, \"./tsconfig.json\");\n    if (existsSync(configPath)) {\n        return configPath;\n    }\n    var parentDirectory = path.join(directory, \"../\");\n    // If we reached the top\n    if (directory === parentDirectory) {\n        return undefined;\n    }\n    return walkForTsConfig(parentDirectory, existsSync);\n}\nexports.walkForTsConfig = walkForTsConfig;\nfunction loadTsconfig(configFilePath, existsSync, readFileSync) {\n    if (existsSync === void 0) { existsSync = fs.existsSync; }\n    if (readFileSync === void 0) { readFileSync = function (filename) {\n        return fs.readFileSync(filename, \"utf8\");\n    }; }\n    if (!existsSync(configFilePath)) {\n        return undefined;\n    }\n    var configString = readFileSync(configFilePath);\n    var cleanedJson = StripBom(configString);\n    var config = JSON5.parse(cleanedJson);\n    var extendedConfig = config.extends;\n    if (extendedConfig) {\n        if (typeof extendedConfig === \"string\" &&\n            extendedConfig.indexOf(\".json\") === -1) {\n            extendedConfig += \".json\";\n        }\n        var currentDir = path.dirname(configFilePath);\n        var base = loadTsconfig(path.join(currentDir, extendedConfig), existsSync, readFileSync) || {};\n        // baseUrl should be interpreted as relative to the base tsconfig,\n        // but we need to update it so it is relative to the original tsconfig being loaded\n        if (base && base.compilerOptions && base.compilerOptions.baseUrl) {\n            var extendsDir = path.dirname(extendedConfig);\n            base.compilerOptions.baseUrl = path.join(extendsDir, base.compilerOptions.baseUrl);\n        }\n        return __assign({}, base, config, { compilerOptions: __assign({}, base.compilerOptions, config.compilerOptions) });\n    }\n    return config;\n}\nexports.loadTsconfig = loadTsconfig;\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('dimension', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('dimension_type', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('worldgen/noise_settings', [\r\n        'minecraft:overworld',\r\n        'minecraft:nether',\r\n        'minecraft:end',\r\n        'minecraft:amplified',\r\n        'minecraft:caves',\r\n        'minecraft:floating_islands'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'direct_killer',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('worldgen/configured_feature', [\r\n        'minecraft:acacia',\r\n        'minecraft:bamboo_light',\r\n        'minecraft:bamboo_vegetation',\r\n        'minecraft:bamboo',\r\n        'minecraft:basalt_blobs',\r\n        'minecraft:basalt_pillar',\r\n        'minecraft:birch_bees_0002',\r\n        'minecraft:birch_bees_002',\r\n        'minecraft:birch_bees_005',\r\n        'minecraft:birch_other',\r\n        'minecraft:birch_tall',\r\n        'minecraft:birch',\r\n        'minecraft:blackstone_blobs',\r\n        'minecraft:blue_ice',\r\n        'minecraft:bonus_chest',\r\n        'minecraft:brown_mushroom_giant',\r\n        'minecraft:brown_mushroom_nether',\r\n        'minecraft:brown_mushroom_normal',\r\n        'minecraft:brown_mushroom_swamp',\r\n        'minecraft:brown_mushroom_taiga',\r\n        'minecraft:chorus_plant',\r\n        'minecraft:crimson_forest_vegetation',\r\n        'minecraft:crimson_fungi_planted',\r\n        'minecraft:crimson_fungi',\r\n        'minecraft:dark_forest_vegetation_brown',\r\n        'minecraft:dark_forest_vegetation_red',\r\n        'minecraft:dark_oak',\r\n        'minecraft:delta',\r\n        'minecraft:desert_well',\r\n        'minecraft:disk_clay',\r\n        'minecraft:disk_gravel',\r\n        'minecraft:disk_sand',\r\n        'minecraft:end_gateway_delayed',\r\n        'minecraft:end_gateway',\r\n        'minecraft:end_island_decorated',\r\n        'minecraft:end_island',\r\n        'minecraft:end_spike',\r\n        'minecraft:fancy_oak_bees_0002',\r\n        'minecraft:fancy_oak_bees_002',\r\n        'minecraft:fancy_oak_bees_005',\r\n        'minecraft:fancy_oak',\r\n        'minecraft:flower_default',\r\n        'minecraft:flower_forest',\r\n        'minecraft:flower_plain_decorated',\r\n        'minecraft:flower_plain',\r\n        'minecraft:flower_swamp',\r\n        'minecraft:flower_warm',\r\n        'minecraft:forest_flower_trees',\r\n        'minecraft:forest_flower_vegetation_common',\r\n        'minecraft:forest_flower_vegetation',\r\n        'minecraft:forest_rock',\r\n        'minecraft:fossil',\r\n        'minecraft:freeze_top_layer',\r\n        'minecraft:glowstone_extra',\r\n        'minecraft:glowstone',\r\n        'minecraft:huge_brown_mushroom',\r\n        'minecraft:huge_red_mushroom',\r\n        'minecraft:ice_patch',\r\n        'minecraft:ice_spike',\r\n        'minecraft:iceberg_blue',\r\n        'minecraft:iceberg_packed',\r\n        'minecraft:jungle_bush',\r\n        'minecraft:jungle_tree_no_vine',\r\n        'minecraft:jungle_tree',\r\n        'minecraft:kelp_cold',\r\n        'minecraft:kelp_warm',\r\n        'minecraft:lake_lava',\r\n        'minecraft:lake_water',\r\n        'minecraft:large_basalt_columns',\r\n        'minecraft:mega_jungle_tree',\r\n        'minecraft:mega_pine',\r\n        'minecraft:mega_spruce',\r\n        'minecraft:monster_room',\r\n        'minecraft:mushroom_field_vegetation',\r\n        'minecraft:nether_sprouts',\r\n        'minecraft:oak_badlands',\r\n        'minecraft:oak_bees_0002',\r\n        'minecraft:oak_bees_002',\r\n        'minecraft:oak_bees_005',\r\n        'minecraft:oak',\r\n        'minecraft:ore_andesite',\r\n        'minecraft:ore_blackstone',\r\n        'minecraft:ore_coal',\r\n        'minecraft:ore_debris_large',\r\n        'minecraft:ore_debris_small',\r\n        'minecraft:ore_diamond',\r\n        'minecraft:ore_diorite',\r\n        'minecraft:ore_dirt',\r\n        'minecraft:ore_emerald',\r\n        'minecraft:ore_gold_deltas',\r\n        'minecraft:ore_gold_extra',\r\n        'minecraft:ore_gold_nether',\r\n        'minecraft:ore_gold',\r\n        'minecraft:ore_granite',\r\n        'minecraft:ore_gravel_nether',\r\n        'minecraft:ore_gravel',\r\n        'minecraft:ore_infested',\r\n        'minecraft:ore_iron',\r\n        'minecraft:ore_lapis',\r\n        'minecraft:ore_magma',\r\n        'minecraft:ore_quartz_deltas',\r\n        'minecraft:ore_quartz_nether',\r\n        'minecraft:ore_redstone',\r\n        'minecraft:ore_soul_sand',\r\n        'minecraft:patch_berry_bush',\r\n        'minecraft:patch_berry_decorated',\r\n        'minecraft:patch_berry_sparse',\r\n        'minecraft:patch_brown_mushroom',\r\n        'minecraft:patch_cactus_decorated',\r\n        'minecraft:patch_cactus_desert',\r\n        'minecraft:patch_cactus',\r\n        'minecraft:patch_crimson_roots',\r\n        'minecraft:patch_dead_bush_2',\r\n        'minecraft:patch_dead_bush_badlands',\r\n        'minecraft:patch_dead_bush',\r\n        'minecraft:patch_fire',\r\n        'minecraft:patch_grass_badlands',\r\n        'minecraft:patch_grass_forest',\r\n        'minecraft:patch_grass_jungle',\r\n        'minecraft:patch_grass_normal',\r\n        'minecraft:patch_grass_plain',\r\n        'minecraft:patch_grass_savanna',\r\n        'minecraft:patch_grass_taiga_2',\r\n        'minecraft:patch_grass_taiga',\r\n        'minecraft:patch_large_fern',\r\n        'minecraft:patch_melon',\r\n        'minecraft:patch_pumpkin',\r\n        'minecraft:patch_red_mushroom',\r\n        'minecraft:patch_soul_fire',\r\n        'minecraft:patch_sugar_cane_badlands',\r\n        'minecraft:patch_sugar_cane_desert',\r\n        'minecraft:patch_sugar_cane_swamp',\r\n        'minecraft:patch_sugar_cane',\r\n        'minecraft:patch_sunflower',\r\n        'minecraft:patch_taiga_grass',\r\n        'minecraft:patch_tall_grass_2',\r\n        'minecraft:patch_tall_grass',\r\n        'minecraft:patch_waterlilly',\r\n        'minecraft:pile_hay',\r\n        'minecraft:pile_ice',\r\n        'minecraft:pile_melon',\r\n        'minecraft:pile_pumpkin',\r\n        'minecraft:pile_snow',\r\n        'minecraft:pine',\r\n        'minecraft:plain_vegetation',\r\n        'minecraft:red_mushroom_giant',\r\n        'minecraft:red_mushroom_nether',\r\n        'minecraft:red_mushroom_normal',\r\n        'minecraft:red_mushroom_swamp',\r\n        'minecraft:red_mushroom_taiga',\r\n        'minecraft:sea_pickle',\r\n        'minecraft:seagrass_cold',\r\n        'minecraft:seagrass_deep_cold',\r\n        'minecraft:seagrass_deep_warm',\r\n        'minecraft:seagrass_deep',\r\n        'minecraft:seagrass_normal',\r\n        'minecraft:seagrass_river',\r\n        'minecraft:seagrass_simple',\r\n        'minecraft:seagrass_swamp',\r\n        'minecraft:seagrass_warm',\r\n        'minecraft:small_basalt_columns',\r\n        'minecraft:spring_closed_double',\r\n        'minecraft:spring_closed',\r\n        'minecraft:spring_delta',\r\n        'minecraft:spring_lava_double',\r\n        'minecraft:spring_lava',\r\n        'minecraft:spring_open',\r\n        'minecraft:spring_water',\r\n        'minecraft:spruce_snowy',\r\n        'minecraft:spruce',\r\n        'minecraft:super_birch_bees_0002',\r\n        'minecraft:swamp_tree',\r\n        'minecraft:taiga_vegetation',\r\n        'minecraft:trees_birch',\r\n        'minecraft:trees_giant_spruce',\r\n        'minecraft:trees_giant',\r\n        'minecraft:trees_jungle_edge',\r\n        'minecraft:trees_jungle',\r\n        'minecraft:trees_mountain_edge',\r\n        'minecraft:trees_mountain',\r\n        'minecraft:trees_savanna',\r\n        'minecraft:trees_shattered_savanna',\r\n        'minecraft:trees_water',\r\n        'minecraft:twisting_vines',\r\n        'minecraft:vines',\r\n        'minecraft:void_start_platform',\r\n        'minecraft:warm_ocean_vegetation',\r\n        'minecraft:warped_forest_vegetation',\r\n        'minecraft:warped_fungi_planted',\r\n        'minecraft:warped_fungi',\r\n        'minecraft:weeping_vines'\r\n    ]);\r\n    collections.register('worldgen/configured_structure_feature', [\r\n        'minecraft:bastion_remnant',\r\n        'minecraft:buried_treasure',\r\n        'minecraft:desert_pyramid',\r\n        'minecraft:end_city',\r\n        'minecraft:fortress',\r\n        'minecraft:igloo',\r\n        'minecraft:jungle_pyramid',\r\n        'minecraft:mansion',\r\n        'minecraft:mineshaft_mesa',\r\n        'minecraft:mineshaft',\r\n        'minecraft:monument',\r\n        'minecraft:nether_fossil',\r\n        'minecraft:ocean_ruin_cold',\r\n        'minecraft:ocean_ruin_warm',\r\n        'minecraft:pillager_outpost',\r\n        'minecraft:ruined_portal_desert',\r\n        'minecraft:ruined_portal_jungle',\r\n        'minecraft:ruined_portal_mountain',\r\n        'minecraft:ruined_portal_nether',\r\n        'minecraft:ruined_portal_ocean',\r\n        'minecraft:ruined_portal_swamp',\r\n        'minecraft:ruined_portal',\r\n        'minecraft:shipwreck_beached',\r\n        'minecraft:shipwreck',\r\n        'minecraft:stronghold',\r\n        'minecraft:swamp_hut',\r\n        'minecraft:village_desert',\r\n        'minecraft:village_plains',\r\n        'minecraft:village_savanna',\r\n        'minecraft:village_snowy',\r\n        'minecraft:village_taiga'\r\n    ]);\r\n    collections.register('worldgen/configured_surface_builder', [\r\n        'minecraft:badlands',\r\n        'minecraft:basalt_deltas',\r\n        'minecraft:crimson_forest',\r\n        'minecraft:desert',\r\n        'minecraft:end',\r\n        'minecraft:eroded_badlands',\r\n        'minecraft:frozen_ocean',\r\n        'minecraft:full_sand',\r\n        'minecraft:giant_tree_taiga',\r\n        'minecraft:grass',\r\n        'minecraft:gravelly_mountain',\r\n        'minecraft:ice_spikes',\r\n        'minecraft:mountain',\r\n        'minecraft:mycelium',\r\n        'minecraft:nether',\r\n        'minecraft:nope',\r\n        'minecraft:ocean_sand',\r\n        'minecraft:shattered_savanna',\r\n        'minecraft:soul_sand_valley',\r\n        'minecraft:stone',\r\n        'minecraft:swamp',\r\n        'minecraft:warped_forest',\r\n        'minecraft:wooded_badlands'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.Opt(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { choiceContext: 'conditions' });\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            player: core_1.Mod(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: path => path.pop().push('trigger'),\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), core_1.ObjectNode({\r\n                        amplifier: Common_1.Range(),\r\n                        duration: Common_1.Range()\r\n                    })))\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: EntityPredicate,\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: core_1.Opt(Common_1.Range()),\r\n                        occupied: core_1.Opt(Common_1.Range()),\r\n                        full: core_1.Opt(Common_1.Range())\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: core_1.Opt(Common_1.Range()),\r\n                    durability: core_1.Opt(Common_1.Range()),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: core_1.Opt(Common_1.Range()),\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    duration: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:location': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    distance: core_1.Opt(Common_1.Range()),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:slept_in_bed': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: core_1.Opt(Common_1.Range({ integer: true }))\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: core_1.Opt(Common_1.Range())\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': {\r\n                    location: Reference('location_predicate')\r\n                }\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.UniformInt = exports.Range = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultDimensionType = {\r\n    ultrawarm: false,\r\n    natural: true,\r\n    piglin_safe: false,\r\n    respawn_anchor_works: false,\r\n    bed_works: true,\r\n    has_raids: true,\r\n    has_skylight: true,\r\n    has_ceiling: false,\r\n    coordinate_scale: 1,\r\n    ambient_light: 0,\r\n    logical_height: 256,\r\n    infiniburn: 'minecraft:infiniburn_overworld',\r\n};\r\nexports.DefaultNoiseSettings = {\r\n    name: 'minecraft:overworld',\r\n    bedrock_roof_position: -10,\r\n    bedrock_floor_position: 0,\r\n    sea_level: 63,\r\n    disable_mob_generation: false,\r\n    noise: {\r\n        density_factor: 1,\r\n        density_offset: -0.46875,\r\n        simplex_surface_noise: true,\r\n        random_density_offset: true,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        height: 256,\r\n        sampling: {\r\n            xz_scale: 1,\r\n            y_scale: 1,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        },\r\n        top_slide: {\r\n            target: -10,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        bottom_slide: {\r\n            target: -30,\r\n            size: 0,\r\n            offset: 0\r\n        }\r\n    },\r\n    default_block: {\r\n        Name: \"minecraft:stone\"\r\n    },\r\n    default_fluid: {\r\n        Name: \"minecraft:water\",\r\n        Properties: {\r\n            level: \"0\"\r\n        }\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true })), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    exports.Range = (config) => core_1.ChoiceNode([\r\n        ...((config === null || config === void 0 ? void 0 : config.forceRange) ? [] : [{\r\n                type: 'number',\r\n                node: core_1.NumberNode(config),\r\n                change: (v) => { var _a, _b, _c; return v === undefined ? 0 : (_c = (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : v.n) !== null && _c !== void 0 ? _c : 0; }\r\n            }]),\r\n        {\r\n            type: 'object',\r\n            priority: -1,\r\n            node: core_1.ObjectNode({\r\n                min: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config)),\r\n                max: (config === null || config === void 0 ? void 0 : config.bounds) ? core_1.NumberNode(config) : core_1.Opt(core_1.NumberNode(config))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: typeof v === 'number' ? v : v === undefined ? 1 : v.n,\r\n                max: typeof v === 'number' ? v : v === undefined ? 1 : v.n\r\n            })\r\n        },\r\n        ...((config === null || config === void 0 ? void 0 : config.allowBinomial) ? [{\r\n                type: 'binomial',\r\n                node: core_1.ObjectNode({\r\n                    type: StringNode({ enum: ['minecraft:binomial'] }),\r\n                    n: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    p: core_1.NumberNode({ min: 0, max: 1 })\r\n                }, { context: 'range' }),\r\n                match: (v) => v !== undefined && v.type === 'minecraft:binomial',\r\n                change: (v) => {\r\n                    var _a, _b;\r\n                    return ({\r\n                        type: 'minecraft:binomial',\r\n                        n: typeof v === 'number' ? v : v === undefined ? 1 : ((_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 1),\r\n                        p: 0.5\r\n                    });\r\n                }\r\n            }] : [])\r\n    ], { choiceContext: 'range' });\r\n    exports.UniformInt = (config) => core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer: true, min: config === null || config === void 0 ? void 0 : config.min, max: config === null || config === void 0 ? void 0 : config.max }),\r\n            change: v => v.base\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                base: core_1.NumberNode({ integer: true, min: config === null || config === void 0 ? void 0 : config.min, max: config === null || config === void 0 ? void 0 : config.max }),\r\n                spread: core_1.NumberNode({ integer: true, min: 0, max: config === null || config === void 0 ? void 0 : config.maxSpread })\r\n            }),\r\n            change: v => ({\r\n                base: v,\r\n                spread: 0\r\n            })\r\n        }\r\n    ], { context: 'uniform_int' });\r\n    exports.ConditionCases = {\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: StringNode({ enum: 'entity_source' }),\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), exports.Range({ forceRange: true }))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:requirements': {\r\n            terms: core_1.ListNode(Reference('condition')),\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: exports.Range(),\r\n            period: core_1.Opt(core_1.NumberNode())\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    };\r\n    exports.DimensionTypePresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\r\n        'minecraft:overworld': exports.DefaultDimensionType,\r\n        'minecraft:the_nether': {\r\n            name: 'minecraft:the_nether',\r\n            ultrawarm: true,\r\n            natural: false,\r\n            shrunk: true,\r\n            piglin_safe: true,\r\n            respawn_anchor_works: true,\r\n            bed_works: false,\r\n            has_raids: false,\r\n            has_skylight: false,\r\n            has_ceiling: true,\r\n            ambient_light: 0.1,\r\n            fixed_time: 18000,\r\n            logical_height: 128,\r\n            effects: 'minecraft:the_nether',\r\n            infiniburn: 'minecraft:infiniburn_nether',\r\n        },\r\n        'minecraft:the_end': {\r\n            name: 'minecraft:the_end',\r\n            ultrawarm: false,\r\n            natural: false,\r\n            shrunk: false,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: false,\r\n            has_raids: true,\r\n            has_skylight: false,\r\n            has_ceiling: false,\r\n            ambient_light: 0,\r\n            fixed_time: 6000,\r\n            logical_height: 256,\r\n            effects: 'minecraft:the_end',\r\n            infiniburn: 'minecraft:infiniburn_end',\r\n        }\r\n    });\r\n    exports.NoiseSettingsPresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            name: 'minecraft:nether',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:netherrack\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:lava\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            name: 'minecraft:end',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:end_stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:air\"\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            name: 'minecraft:amplified',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 63,\r\n            disable_mob_generation: false,\r\n            noise: {\r\n                density_factor: 1,\r\n                density_offset: -0.46875,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: true,\r\n                amplified: true,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 256,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -10,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 0,\r\n                    offset: 0\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:caves': {\r\n            name: 'minecraft:caves',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            name: 'minecraft:floating_islands',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                height: 128,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: path => path.push('condition'),\r\n        [core_1.Case]: Common_1.ConditionCases\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const NoPreset = (node) => core_1.Mod(node, {\r\n        enabled: path => path.push('preset').get() === undefined\r\n    });\r\n    schemas.register('dimension', core_1.Mod(core_1.ObjectNode({\r\n        type: Common_1.DimensionTypePresets(Reference('dimension_type')),\r\n        generator: core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            seed: core_1.NumberNode({ integer: true }),\r\n            [core_1.Switch]: path => path.push('type'),\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    biome_source: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        seed: core_1.NumberNode({ integer: true }),\r\n                        [core_1.Switch]: path => path.push('type'),\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                preset: core_1.Opt(StringNode({ enum: ['nether'] })),\r\n                                altitude_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                temperature_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                humidity_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                weirdness_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                biomes: NoPreset(core_1.Mod(core_1.ListNode(Reference('generator_biome')), {\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                }))\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 62 })),\r\n                                biomes: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n                            },\r\n                            'minecraft:vanilla_layered': {\r\n                                large_biomes: core_1.Opt(core_1.BooleanNode()),\r\n                                legacy_biome_init_layer: core_1.Opt(core_1.BooleanNode())\r\n                            }\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true }),\r\n                    settings: Common_1.NoiseSettingsPresets(Reference('noise_settings'))\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: core_1.ObjectNode({\r\n                        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n                        lakes: core_1.Opt(core_1.BooleanNode()),\r\n                        features: core_1.Opt(core_1.BooleanNode()),\r\n                        layers: core_1.ListNode(Reference('generator_layer')),\r\n                        structures: Reference('generator_structures')\r\n                    })\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    seed,\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        seed,\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    schemas.register('generator_biome', core_1.Mod(core_1.ObjectNode({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: core_1.ObjectNode({\r\n            altitude: core_1.NumberNode({ min: -1, max: 1 }),\r\n            temperature: core_1.NumberNode({ min: -1, max: 1 }),\r\n            humidity: core_1.NumberNode({ min: -1, max: 1 }),\r\n            weirdness: core_1.NumberNode({ min: -1, max: 1 }),\r\n            offset: core_1.NumberNode({ min: -1, max: 1 })\r\n        })\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                altitude: 0,\r\n                temperature: 0,\r\n                humidity: 0,\r\n                weirdness: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('generator_biome_noise', core_1.Mod(core_1.ObjectNode({\r\n        firstOctave: core_1.NumberNode({ integer: true }),\r\n        amplitudes: core_1.ListNode(core_1.NumberNode())\r\n    }, { context: 'generator_biome_noise' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$dimension_type', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        ultrawarm: core_1.BooleanNode(),\r\n        natural: core_1.BooleanNode(),\r\n        piglin_safe: core_1.BooleanNode(),\r\n        respawn_anchor_works: core_1.BooleanNode(),\r\n        bed_works: core_1.BooleanNode(),\r\n        has_raids: core_1.BooleanNode(),\r\n        has_skylight: core_1.BooleanNode(),\r\n        has_ceiling: core_1.BooleanNode(),\r\n        coordinate_scale: core_1.NumberNode({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: core_1.NumberNode(),\r\n        fixed_time: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n        logical_height: core_1.NumberNode({ integer: true, min: 0, max: 256 }),\r\n        effects: core_1.Opt(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n    }, { context: 'dimension_type' }), {\r\n        default: () => Common_1.DefaultDimensionType\r\n    }));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Common_1.Range({ allowBinomial: true, integer: true }),\r\n            bonus_rolls: core_1.Opt(Common_1.Range({ integer: true })),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionSwtichNode,\r\n        [core_1.Switch]: path => path.push('function'),\r\n        [core_1.Case]: {\r\n            'minecraft:apply_bonus': {\r\n                enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n                formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n                parameters: core_1.Mod(core_1.ObjectNode({\r\n                    bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                    }),\r\n                    extra: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    }),\r\n                    probability: core_1.Mod(core_1.NumberNode(), {\r\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                    })\r\n                }), {\r\n                    enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n                }),\r\n                ...conditions\r\n            },\r\n            'minecraft:copy_name': {\r\n                source: copySourceSwtichNode,\r\n                ...conditions\r\n            },\r\n            'minecraft:copy_nbt': {\r\n                source: copySourceSwtichNode,\r\n                ops: core_1.ListNode(core_1.ObjectNode({\r\n                    source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                    target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                    op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n                }, { context: 'nbt_operation' })),\r\n                ...conditions\r\n            },\r\n            'minecraft:copy_state': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } })),\r\n                ...conditions\r\n            },\r\n            'minecraft:enchant_randomly': {\r\n                enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }))),\r\n                ...conditions\r\n            },\r\n            'minecraft:enchant_with_levels': {\r\n                levels: Common_1.Range({ allowBinomial: true }),\r\n                treasure: core_1.Opt(core_1.BooleanNode()),\r\n                ...conditions\r\n            },\r\n            'minecraft:exploration_map': {\r\n                destination: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } })),\r\n                decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n                zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                skip_existing_chunks: core_1.Opt(core_1.BooleanNode()),\r\n                ...conditions\r\n            },\r\n            'minecraft:fill_player_head': {\r\n                entity: entitySourceSwtichNode,\r\n                ...conditions\r\n            },\r\n            'minecraft:limit_count': {\r\n                limit: Common_1.Range({ bounds: true }),\r\n                ...conditions\r\n            },\r\n            'minecraft:looting_enchant': {\r\n                count: Common_1.Range({ bounds: true }),\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_attributes': {\r\n                modifiers: core_1.ListNode(Reference('attribute_modifier')),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_contents': {\r\n                entries: core_1.ListNode(Reference('loot_entry')),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_count': {\r\n                count: Common_1.Range({ allowBinomial: true }),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_damage': {\r\n                damage: Common_1.Range({ forceRange: true }),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                seed: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            },\r\n            'minecraft:set_lore': {\r\n                entity: core_1.Opt(entitySourceSwtichNode),\r\n                lore: core_1.ListNode(Reference('text_component')),\r\n                replace: core_1.Opt(core_1.BooleanNode()),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_name': {\r\n                entity: core_1.Opt(entitySourceSwtichNode),\r\n                name: core_1.Opt(Reference('text_component')),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_nbt': {\r\n                tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } }),\r\n                ...conditions\r\n            },\r\n            'minecraft:set_stew_effect': {\r\n                effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                    type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                    duration: Common_1.Range()\r\n                }))),\r\n                ...conditions\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionSwtichNode,\r\n        [core_1.Switch]: path => path.push('condition'),\r\n        [core_1.Case]: {\r\n            ...Common_1.ConditionCases,\r\n            'minecraft:entity_properties': {\r\n                entity: entitySourceSwtichNode,\r\n                predicate: Reference('entity_predicate')\r\n            },\r\n            'minecraft:entity_scores': {\r\n                entity: entitySourceSwtichNode,\r\n                scores: core_1.MapNode(StringNode({ validator: 'objective' }), Common_1.Range({ bounds: true }))\r\n            }\r\n        }\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Common_1.Range({ bounds: true }),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: 6, max: 6 }), { default: () => 6 }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: 6,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: 6,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: core_1.Opt(Common_1.Range()),\r\n        durability: core_1.Opt(Common_1.Range()),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: core_1.Opt(Common_1.Range())\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', core_1.ObjectNode({\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: core_1.Opt(Common_1.Range()),\r\n            y: core_1.Opt(Common_1.Range()),\r\n            z: core_1.Opt(Common_1.Range())\r\n        })),\r\n        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        feature: core_1.Opt(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\r\n        dimension: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: core_1.Opt(Common_1.Range({ integer: true, min: 0, max: 15 }))\r\n        })),\r\n        smokey: core_1.Opt(core_1.BooleanNode()),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Common_1.Range(),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: core_1.Opt(Common_1.Range()),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate')))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: core_1.Opt(Common_1.Range()),\r\n        duration: core_1.Opt(Common_1.Range()),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: core_1.Opt(Common_1.Range()),\r\n        y: core_1.Opt(Common_1.Range()),\r\n        z: core_1.Opt(Common_1.Range()),\r\n        absolute: core_1.Opt(Common_1.Range()),\r\n        horizontal: core_1.Opt(Common_1.Range())\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        vehicle: core_1.Opt(Reference('entity_predicate')),\r\n        targeted_entity: core_1.Opt(Reference('entity_predicate')),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        fishing_hook: core_1.Opt(core_1.ObjectNode({\r\n            in_open_water: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: core_1.Opt(Common_1.Range()),\r\n        taken: core_1.Opt(Common_1.Range()),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ObjectNode({\r\n        text: core_1.Opt(core_1.Keep(StringNode())),\r\n        translate: core_1.Opt(core_1.Keep(StringNode())),\r\n        with: core_1.Opt(Reference('text_component_list')),\r\n        score: core_1.Opt(core_1.ObjectNode({\r\n            name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n            objective: StringNode({ validator: 'objective' }),\r\n            value: core_1.Opt(StringNode())\r\n        })),\r\n        selector: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n        keybind: core_1.Opt(StringNode({ enum: 'keybind', additional: true })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt_path' })),\r\n        interpret: core_1.Opt(core_1.Has('nbt', core_1.BooleanNode())),\r\n        block: core_1.Opt(core_1.Has('nbt', StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } }))),\r\n        entity: core_1.Opt(core_1.Has('nbt', StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities' } }))),\r\n        storage: core_1.Opt(core_1.Has('nbt', StringNode({ validator: 'resource', params: { pool: '$storage' } }))),\r\n        extra: core_1.Opt(Reference('text_component_list')),\r\n        color: core_1.Opt(StringNode()) /* TODO */,\r\n        font: core_1.Opt(StringNode()),\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: path => path.push('action'),\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: path => path.push('action'),\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component')),\r\n                    contents: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: core_1.Opt(core_1.ObjectNode({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    })),\r\n                    contents: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n                        name: core_1.Opt(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        }))\r\n    }, { context: 'text_component_object', collapse: true }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', core_1.Mod(core_1.ObjectNode({\r\n        generate_features: core_1.BooleanNode(),\r\n        bonus_chest: core_1.BooleanNode(),\r\n        seed: core_1.NumberNode({ integer: true }),\r\n        dimensions: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:vanilla_layered',\r\n                                seed\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                seed,\r\n                                humidity_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                altitude_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                weirdness_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                temperature_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                biomes: [\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: 0.0 },\r\n                                        biome: 'minecraft:nether_wastes'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: -0.5 },\r\n                                        biome: 'minecraft:soul_sand_valley'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.4, humidity: 0.0 },\r\n                                        biome: 'minecraft:crimson_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.375, temperature: 0.0, humidity: 0.5 },\r\n                                        biome: 'minecraft:warped_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.175, temperature: -0.5, humidity: 0.0 },\r\n                                        biome: 'minecraft:basalt_deltas'\r\n                                    }\r\n                                ]\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    DimensionType_1.initDimensionTypeSchemas(schemas, collections);\r\n    Dimension_1.initDimensionSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n    worldgen_1.initWorldgenSchemas(schemas, collections);\r\n    WorldSettings_1.initWorldSettingsSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('biome', core_1.Mod(core_1.ObjectNode({\r\n        surface_builder: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_surface_builder' } }),\r\n        depth: core_1.NumberNode(),\r\n        scale: core_1.NumberNode(),\r\n        temperature: core_1.NumberNode(),\r\n        downfall: core_1.NumberNode(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: core_1.Opt(StringNode({ enum: ['none', 'frozen'] })),\r\n        category: StringNode({ enum: 'biome_category' }),\r\n        player_spawn_friendly: core_1.Opt(core_1.BooleanNode()),\r\n        creature_spawn_probability: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        effects: core_1.ObjectNode({\r\n            sky_color: core_1.NumberNode({ color: true }),\r\n            fog_color: core_1.NumberNode({ color: true }),\r\n            water_color: core_1.NumberNode({ color: true }),\r\n            water_fog_color: core_1.NumberNode({ color: true }),\r\n            grass_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            foliage_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            grass_color_modifier: core_1.Opt(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: core_1.Opt(StringNode()),\r\n            mood_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_delay: core_1.NumberNode({ integer: true }),\r\n                block_search_extent: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode()\r\n            })),\r\n            additions_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n            })),\r\n            music: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                min_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                max_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                replace_current_music: core_1.BooleanNode()\r\n            })),\r\n            particle: core_1.Opt(core_1.ObjectNode({\r\n                options: core_1.ObjectNode({\r\n                    type: StringNode()\r\n                }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        starts: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_structure_feature' } })),\r\n        spawners: core_1.MapNode(StringNode({ enum: [\r\n                'water_ambient',\r\n                'ambient',\r\n                'misc',\r\n                'water_creature',\r\n                'creature',\r\n                'monster'\r\n            ] }), core_1.Mod(core_1.ListNode(core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n            weight: core_1.NumberNode({ integer: true }),\r\n            minCount: core_1.NumberNode({ integer: true }),\r\n            maxCount: core_1.NumberNode({ integer: true })\r\n        })), {\r\n            category: () => 'pool',\r\n            default: () => [{\r\n                    type: 'minecraft:bat',\r\n                    weight: 1\r\n                }]\r\n        })),\r\n        spawn_costs: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), core_1.Mod(core_1.ObjectNode({\r\n            energy_budget: core_1.NumberNode(),\r\n            charge: core_1.NumberNode()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: core_1.MapNode(StringNode({ enum: ['air', 'liquid'] }), core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: core_1.ListNode(core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })), { category: () => 'predicate' }))\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            surface_builder: 'minecraft:grass',\r\n            depth: 0.125,\r\n            scale: 0.05,\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('configured_carver', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: core_1.ObjectNode({\r\n            probability: core_1.NumberNode({ min: 0, max: 1 })\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RangeConfig = {\r\n        maximum: core_1.NumberNode({ integer: true }),\r\n        bottom_offset: core_1.NumberNode({ integer: true }),\r\n        top_offset: core_1.NumberNode({ integer: true })\r\n    };\r\n    const ChanceConfig = {\r\n        chance: core_1.NumberNode({ integer: true, min: 0 })\r\n    };\r\n    const CountConfig = {\r\n        count: Common_1.UniformInt({ min: -10, max: 128, maxSpread: 128 })\r\n    };\r\n    schemas.register('configured_decorator', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/decorator' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: path => path.pop().push('type'),\r\n            [core_1.Case]: {\r\n                'minecraft:carving_mask': {\r\n                    step: StringNode({ enum: 'generation_step' }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:chance': ChanceConfig,\r\n                'minecraft:count': CountConfig,\r\n                'minecraft:count_extra': {\r\n                    count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:count_multilayer': CountConfig,\r\n                'minecraft:count_noise': {\r\n                    noise_level: core_1.NumberNode(),\r\n                    below_noise: core_1.NumberNode({ integer: true }),\r\n                    above_noise: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:count_noise_biased': {\r\n                    noise_to_count_ratio: core_1.NumberNode({ integer: true }),\r\n                    noise_factor: core_1.NumberNode(),\r\n                    noise_offset: core_1.NumberNode()\r\n                },\r\n                'minecraft:decorated': {\r\n                    outer: Reference('configured_decorator'),\r\n                    inner: Reference('configured_decorator')\r\n                },\r\n                'minecraft:depth_average': {\r\n                    baseline: core_1.NumberNode({ integer: true }),\r\n                    spread: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:fire': CountConfig,\r\n                'minecraft:glowstone': CountConfig,\r\n                'minecraft:lava_lake': ChanceConfig,\r\n                'minecraft:range': RangeConfig,\r\n                'minecraft:range_biased': RangeConfig,\r\n                'minecraft:range_very_biased': RangeConfig,\r\n                'minecraft:water_lake': ChanceConfig\r\n            }\r\n        }, { context: 'decorator', category: 'predicate' })\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RandomPatchConfig = {\r\n        can_replace: core_1.BooleanNode(),\r\n        project: core_1.BooleanNode(),\r\n        need_water: core_1.BooleanNode(),\r\n        xspread: core_1.NumberNode({ integer: true }),\r\n        yspread: core_1.NumberNode({ integer: true }),\r\n        zspread: core_1.NumberNode({ integer: true }),\r\n        tries: core_1.NumberNode({ integer: true }),\r\n        state_provider: Reference('block_state_provider'),\r\n        block_placer: Reference('block_placer'),\r\n        whitelist: core_1.ListNode(Reference('block_state')),\r\n        blacklist: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const DiskConfig = {\r\n        state: Reference('block_state'),\r\n        radius: Common_1.UniformInt({ min: 0, max: 4, maxSpread: 4 }),\r\n        half_height: core_1.NumberNode({ integer: true, min: 0, max: 4 }),\r\n        targets: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: core_1.NumberNode({ integer: true })\r\n    };\r\n    const OreConfig = {\r\n        state: Reference('block_state'),\r\n        size: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n        target: Reference('rule_test')\r\n    };\r\n    const CountConfig = {\r\n        count: Common_1.UniformInt({ min: -10, max: 128, maxSpread: 128 })\r\n    };\r\n    const Feature = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    schemas.register('configured_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: path => path.pop().push('type'),\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: Common_1.UniformInt({ min: 0, max: 2, maxSpread: 1 }),\r\n                    height: Common_1.UniformInt({ min: 1, max: 5, maxSpread: 5 })\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:decorated': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:decorated_flower': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                    rim_size: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 })\r\n                },\r\n                'minecraft:disk': DiskConfig,\r\n                'minecraft:emerald_ore': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state')\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: core_1.BooleanNode(),\r\n                    exit: Reference('block_pos')\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: core_1.BooleanNode(),\r\n                    crystal_beam_target: Reference('block_pos'),\r\n                    spikes: core_1.ListNode(core_1.ObjectNode({\r\n                        centerX: core_1.NumberNode({ integer: true }),\r\n                        centerZ: core_1.NumberNode({ integer: true }),\r\n                        radius: core_1.NumberNode({ integer: true }),\r\n                        height: core_1.NumberNode({ integer: true }),\r\n                        guarded: core_1.BooleanNode()\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: core_1.NumberNode({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: core_1.BooleanNode()\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:ice_patch': DiskConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: Common_1.UniformInt()\r\n                },\r\n                'minecraft:no_surface_ore': OreConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: Feature,\r\n                    feature_true: Feature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: core_1.ListNode(core_1.ObjectNode({\r\n                        chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n                        feature: Feature\r\n                    })),\r\n                    default: Feature\r\n                },\r\n                'minecraft:sea_pickle': CountConfig,\r\n                'minecraft:seagrass': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state'),\r\n                    place_on: core_1.ListNode(Reference('block_state')),\r\n                    place_in: core_1.ListNode(Reference('block_state')),\r\n                    place_under: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: core_1.ListNode(Feature)\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: core_1.NumberNode({ integer: true }),\r\n                    hole_count: core_1.NumberNode({ integer: true }),\r\n                    requires_block_below: core_1.BooleanNode(),\r\n                    valid_blocks: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:tree': {\r\n                    max_water_depth: core_1.NumberNode({ integer: true }),\r\n                    ignore_vines: core_1.BooleanNode(),\r\n                    heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                    minimum_size: Reference('feature_size'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    leaves_provider: Reference('block_state_provider'),\r\n                    trunk_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: core_1.NumberNode({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: core_1.NumberNode({ integer: true, min: 0, max: 24 })\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                        offset: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                        [core_1.Switch]: path => path.push('type'),\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: path => path.push('type'),\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                }\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:decorated',\r\n            config: {\r\n                decorator: {\r\n                    type: 'minecraft:count',\r\n                    config: {\r\n                        count: 4\r\n                    }\r\n                },\r\n                feature: {\r\n                    type: 'minecraft:tree',\r\n                    config: {\r\n                        max_water_depth: 0,\r\n                        ignore_vines: true,\r\n                        minimum_size: {},\r\n                        trunk_placer: {\r\n                            base_height: 5,\r\n                            height_rand_a: 2,\r\n                            height_rand_b: 0\r\n                        },\r\n                        foliage_placer: {\r\n                            radius: 2,\r\n                            offset: 0,\r\n                            height: 3\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('feature_size', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: core_1.Opt(core_1.NumberNode({ min: 0, max: 80 })),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 81 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                middle_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    schemas.register('block_state_provider', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n                    weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    schemas.register('block_placer', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_placer_type' } }),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:column_placer': {\r\n                min_size: core_1.NumberNode({ integer: true }),\r\n                extra_size: core_1.NumberNode({ integer: true })\r\n            }\r\n        }\r\n    }, { context: 'block_placer' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_block_placer'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        bedrock_roof_position: core_1.NumberNode({ integer: true }),\r\n        bedrock_floor_position: core_1.NumberNode({ integer: true }),\r\n        sea_level: core_1.NumberNode({ integer: true }),\r\n        disable_mob_generation: core_1.BooleanNode(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: core_1.ObjectNode({\r\n            density_factor: core_1.NumberNode(),\r\n            density_offset: core_1.NumberNode(),\r\n            simplex_surface_noise: core_1.BooleanNode(),\r\n            random_density_offset: core_1.BooleanNode(),\r\n            island_noise_override: core_1.Opt(core_1.BooleanNode()),\r\n            amplified: core_1.Opt(core_1.BooleanNode()),\r\n            size_horizontal: core_1.NumberNode({ integer: true }),\r\n            size_vertical: core_1.NumberNode({ integer: true }),\r\n            height: core_1.NumberNode({ integer: true }),\r\n            sampling: core_1.ObjectNode({\r\n                xz_scale: core_1.NumberNode(),\r\n                y_scale: core_1.NumberNode(),\r\n                xz_factor: core_1.NumberNode(),\r\n                y_factor: core_1.NumberNode()\r\n            }),\r\n            bottom_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            }),\r\n            top_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            })\r\n        }),\r\n        structures: Reference('generator_structures')\r\n    }, { context: 'noise_settings' }), {\r\n        default: () => Common_1.DefaultNoiseSettings\r\n    }));\r\n    schemas.register('generator_structures', core_1.ObjectNode({\r\n        stronghold: core_1.Opt(core_1.ObjectNode({\r\n            distance: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            spread: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            count: core_1.NumberNode({ integer: true, min: 1, max: 4095 })\r\n        })),\r\n        structures: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), core_1.Mod(core_1.ObjectNode({\r\n            spacing: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            separation: core_1.Mod(core_1.NumberNode({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                validate: (path, value, errors, options) => {\r\n                    if (path.pop().push('spacing').get() <= value) {\r\n                        errors.add(path, 'error.separation_smaller_spacing');\r\n                    }\r\n                    return node.validate(path, value, errors, options);\r\n                }\r\n            })),\r\n            salt: core_1.NumberNode({ integer: true, min: 0 })\r\n        }, { context: 'generator_structure' }), {\r\n            default: () => ({\r\n                spacing: 10,\r\n                separation: 5,\r\n                salt: 0\r\n            })\r\n        }))\r\n    }));\r\n    schemas.register('generator_layer', core_1.Mod(core_1.ObjectNode({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: core_1.NumberNode({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('processor_list', core_1.Mod(core_1.ObjectNode({\r\n        processors: core_1.ListNode(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', core_1.Mod(core_1.ObjectNode({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: path => path.push('processor_type'),\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: core_1.NumberNode()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: core_1.ListNode(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', core_1.Mod(core_1.ObjectNode({\r\n        position_predicate: core_1.Opt(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: core_1.NumberNode({ min: 0, max: 255, integer: true }),\r\n        max_dist: core_1.NumberNode({ min: 0, max: 255, integer: true }),\r\n        min_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        max_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n    };\r\n    schemas.register('pos_rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: path => path.push('predicate_type'),\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: path => path.push('predicate_type'),\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initStructureFeatureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const templatePoolConfig = {\r\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n        size: core_1.NumberNode({ integer: true })\r\n    };\r\n    schemas.register('configured_structure_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: path => path.pop().push('type'),\r\n            [core_1.Case]: {\r\n                'minecraft:bastion_remnant': templatePoolConfig,\r\n                'minecraft:buried_treasure': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:mineshaft': {\r\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:ocean_ruin': {\r\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                    large_probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    cluster_probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:pillager_outpost': templatePoolConfig,\r\n                'minecraft:ruined_portal': {\r\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\r\n                },\r\n                'minecraft:shipwreck': {\r\n                    is_beached: core_1.BooleanNode()\r\n                },\r\n                'minecraft:village': templatePoolConfig\r\n            }\r\n        }, { context: 'structure_feature', disableSwitchContext: true })\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:bastion_remnant',\r\n            config: {\r\n                start_pool: 'minecraft:bastion/starts',\r\n                size: 6\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceBuilderSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceBuilderSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('configured_surface_builder', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/surface_builder' } }),\r\n        config: core_1.ObjectNode({\r\n            top_material: Reference('block_state'),\r\n            under_material: Reference('block_state'),\r\n            underwater_material: Reference('block_state'),\r\n        }, { context: 'surface_builder' })\r\n    }, { context: 'surface_builder' }), {\r\n        default: () => ({\r\n            type: 'minecraft:default',\r\n            config: {\r\n                top_material: {\r\n                    Name: 'minecraft:grass_block',\r\n                    Properties: {\r\n                        snowy: 'false'\r\n                    }\r\n                },\r\n                under_material: {\r\n                    Name: 'minecraft:dirt'\r\n                },\r\n                underwater_material: {\r\n                    Name: 'minecraft:gravel'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceBuilderSchemas = initSurfaceBuilderSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Processors = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: [{\r\n                        \"processor_type\": \"minecraft:nop\"\r\n                    }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('template_pool', core_1.Mod(core_1.ObjectNode({\r\n        name: StringNode(),\r\n        fallback: StringNode(),\r\n        elements: core_1.ListNode(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', core_1.Mod(core_1.ObjectNode({\r\n        weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', core_1.Mod(core_1.ObjectNode({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: path => path.push('element_type'),\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } }),\r\n                processors: Processors\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                elements: core_1.ListNode(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst StructureFeature_1 = require(\"./StructureFeature\");\r\nconst SurfaceBuilder_1 = require(\"./SurfaceBuilder\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    Biome_1.initBiomeSchemas(schemas, collections);\r\n    Carver_1.initCarverSchemas(schemas, collections);\r\n    Decorator_1.initDecoratorSchemas(schemas, collections);\r\n    Feature_1.initFeatureSchemas(schemas, collections);\r\n    NoiseSettings_1.initNoiseSettingsSchemas(schemas, collections);\r\n    ProcessorList_1.initProcessorListSchemas(schemas, collections);\r\n    StructureFeature_1.initStructureFeatureSchemas(schemas, collections);\r\n    SurfaceBuilder_1.initSurfaceBuilderSchemas(schemas, collections);\r\n    TemplatePool_1.initTemplatePoolSchemas(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCollections = void 0;\r\nfunction initCollections(collections) {\r\n    collections.register('advancement_trigger', [\r\n        'minecraft:bee_nest_destroyed',\r\n        'minecraft:bred_animals',\r\n        'minecraft:brewed_potion',\r\n        'minecraft:changed_dimension',\r\n        'minecraft:channeled_lightning',\r\n        'minecraft:construct_beacon',\r\n        'minecraft:consume_item',\r\n        'minecraft:cured_zombie_villager',\r\n        'minecraft:effects_changed',\r\n        'minecraft:enchanted_item',\r\n        'minecraft:enter_block',\r\n        'minecraft:entity_hurt_player',\r\n        'minecraft:entity_killed_player',\r\n        'minecraft:filled_bucket',\r\n        'minecraft:fishing_rod_hooked',\r\n        'minecraft:hero_of_the_village',\r\n        'minecraft:impossible',\r\n        'minecraft:inventory_changed',\r\n        'minecraft:item_durability_changed',\r\n        'minecraft:item_used_on_block',\r\n        'minecraft:killed_by_crossbow',\r\n        'minecraft:levitation',\r\n        'minecraft:location',\r\n        'minecraft:nether_travel',\r\n        'minecraft:placed_block',\r\n        'minecraft:player_generates_container_loot',\r\n        'minecraft:player_hurt_entity',\r\n        'minecraft:player_interacted_with_entity',\r\n        'minecraft:player_killed_entity',\r\n        'minecraft:recipe_unlocked',\r\n        'minecraft:shot_crossbow',\r\n        'minecraft:slept_in_bed',\r\n        'minecraft:slide_down_block',\r\n        'minecraft:summoned_entity',\r\n        'minecraft:tame_animal',\r\n        'minecraft:target_hit',\r\n        'minecraft:tick',\r\n        'minecraft:thrown_item_picked_up_by_entity',\r\n        'minecraft:used_ender_eye',\r\n        'minecraft:used_totem',\r\n        'minecraft:villager_trade',\r\n        'minecraft:voluntary_exile'\r\n    ]);\r\n    collections.register('dimension', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('dimension_type', [\r\n        'minecraft:overworld',\r\n        'minecraft:the_nether',\r\n        'minecraft:the_end'\r\n    ]);\r\n    collections.register('keybind', [\r\n        'key.advancements',\r\n        'key.attack',\r\n        'key.back',\r\n        'key.chat',\r\n        'key.command',\r\n        'key.drop',\r\n        'key.forward',\r\n        'key.fullscreen',\r\n        'key.hotbar.1',\r\n        'key.hotbar.2',\r\n        'key.hotbar.3',\r\n        'key.hotbar.4',\r\n        'key.hotbar.5',\r\n        'key.hotbar.6',\r\n        'key.hotbar.7',\r\n        'key.hotbar.8',\r\n        'key.hotbar.9',\r\n        'key.inventory',\r\n        'key.jump',\r\n        'key.left',\r\n        'key.loadToolbarActivator',\r\n        'key.pickItem',\r\n        'key.playerlist',\r\n        'key.right',\r\n        'key.saveToolbarActivator',\r\n        'key.screenshot',\r\n        'key.smoothCamera',\r\n        'key.sneak',\r\n        'key.spectatorOutlines',\r\n        'key.sprint',\r\n        'key.swapOffhand',\r\n        'key.togglePerspective',\r\n        'key.use'\r\n    ]);\r\n    collections.register('slot', [\r\n        'mainhand',\r\n        'offhand',\r\n        'head',\r\n        'chest',\r\n        'legs',\r\n        'feet'\r\n    ]);\r\n    collections.register('gamemode', [\r\n        'survival',\r\n        'creative',\r\n        'adventure',\r\n        'spectator'\r\n    ]);\r\n    collections.register('worldgen/noise_settings', [\r\n        'minecraft:overworld',\r\n        'minecraft:nether',\r\n        'minecraft:end',\r\n        'minecraft:amplified',\r\n        'minecraft:caves',\r\n        'minecraft:floating_islands'\r\n    ]);\r\n    collections.register('entity_source', [\r\n        'this',\r\n        'killer',\r\n        'direct_killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('copy_source', [\r\n        'block_entity',\r\n        'this',\r\n        'killer',\r\n        'killer_player'\r\n    ]);\r\n    collections.register('loot_table_apply_bonus_formula', [\r\n        'minecraft:uniform_bonus_count',\r\n        'minecraft:binomial_with_bonus_count',\r\n        'minecraft:ore_drops'\r\n    ]);\r\n    collections.register('map_decoration', [\r\n        'mansion',\r\n        'monument',\r\n        'player',\r\n        'frame',\r\n        'red_marker',\r\n        'blue_marker',\r\n        'target_x',\r\n        'target_point',\r\n        'player_off_map',\r\n        'player_off_limits',\r\n        'red_x',\r\n        'banner_white',\r\n        'banner_orange',\r\n        'banner_magenta',\r\n        'banner_light_blue',\r\n        'banner_yellow',\r\n        'banner_lime',\r\n        'banner_pink',\r\n        'banner_gray',\r\n        'banner_light_gray',\r\n        'banner_cyan',\r\n        'banner_purple',\r\n        'banner_blue',\r\n        'banner_brown',\r\n        'banner_green',\r\n        'banner_red',\r\n        'banner_black'\r\n    ]);\r\n    collections.register('recipe_group', [\r\n        'bed',\r\n        'light_gray_dye',\r\n        'iron_ingot',\r\n        'wooden_stairs',\r\n        'black_dye',\r\n        'stained_terracotta',\r\n        'dyed_bed',\r\n        'magenta_dye',\r\n        'bark',\r\n        'rabbit_stew',\r\n        'light_blue_dye',\r\n        'wooden_fence_gate',\r\n        'planks',\r\n        'stained_glass',\r\n        'wooden_door',\r\n        'stained_glass_pane',\r\n        'wooden_fence',\r\n        'sticks',\r\n        'concrete_powder',\r\n        'wooden_pressure_plate',\r\n        'boat',\r\n        'brown_dye',\r\n        'yellow_dye',\r\n        'bonemeal',\r\n        'red_dye',\r\n        'wooden_trapdoor',\r\n        'wooden_button',\r\n        'gold_ingot',\r\n        'pink_dye',\r\n        'wooden_slab',\r\n        'orange_dye',\r\n        'carpet',\r\n        'sign',\r\n        'wool',\r\n        'sugar',\r\n        'blue_dye',\r\n        'white_dye',\r\n        'banner',\r\n        'netherite_ingot'\r\n    ]);\r\n    collections.register('worldgen/configured_feature', [\r\n        'minecraft:acacia',\r\n        'minecraft:bamboo_light',\r\n        'minecraft:bamboo_vegetation',\r\n        'minecraft:bamboo',\r\n        'minecraft:basalt_blobs',\r\n        'minecraft:basalt_pillar',\r\n        'minecraft:birch_bees_0002',\r\n        'minecraft:birch_bees_002',\r\n        'minecraft:birch_bees_005',\r\n        'minecraft:birch_other',\r\n        'minecraft:birch_tall',\r\n        'minecraft:birch',\r\n        'minecraft:blackstone_blobs',\r\n        'minecraft:blue_ice',\r\n        'minecraft:bonus_chest',\r\n        'minecraft:brown_mushroom_giant',\r\n        'minecraft:brown_mushroom_nether',\r\n        'minecraft:brown_mushroom_normal',\r\n        'minecraft:brown_mushroom_swamp',\r\n        'minecraft:brown_mushroom_taiga',\r\n        'minecraft:chorus_plant',\r\n        'minecraft:crimson_forest_vegetation',\r\n        'minecraft:crimson_fungi_planted',\r\n        'minecraft:crimson_fungi',\r\n        'minecraft:dark_forest_vegetation_brown',\r\n        'minecraft:dark_forest_vegetation_red',\r\n        'minecraft:dark_oak',\r\n        'minecraft:delta',\r\n        'minecraft:desert_well',\r\n        'minecraft:disk_clay',\r\n        'minecraft:disk_gravel',\r\n        'minecraft:disk_sand',\r\n        'minecraft:end_gateway_delayed',\r\n        'minecraft:end_gateway',\r\n        'minecraft:end_island_decorated',\r\n        'minecraft:end_island',\r\n        'minecraft:end_spike',\r\n        'minecraft:fancy_oak_bees_0002',\r\n        'minecraft:fancy_oak_bees_002',\r\n        'minecraft:fancy_oak_bees_005',\r\n        'minecraft:fancy_oak',\r\n        'minecraft:flower_default',\r\n        'minecraft:flower_forest',\r\n        'minecraft:flower_plain_decorated',\r\n        'minecraft:flower_plain',\r\n        'minecraft:flower_swamp',\r\n        'minecraft:flower_warm',\r\n        'minecraft:forest_flower_trees',\r\n        'minecraft:forest_flower_vegetation_common',\r\n        'minecraft:forest_flower_vegetation',\r\n        'minecraft:forest_rock',\r\n        'minecraft:fossil',\r\n        'minecraft:freeze_top_layer',\r\n        'minecraft:glowstone_extra',\r\n        'minecraft:glowstone',\r\n        'minecraft:huge_brown_mushroom',\r\n        'minecraft:huge_red_mushroom',\r\n        'minecraft:ice_patch',\r\n        'minecraft:ice_spike',\r\n        'minecraft:iceberg_blue',\r\n        'minecraft:iceberg_packed',\r\n        'minecraft:jungle_bush',\r\n        'minecraft:jungle_tree_no_vine',\r\n        'minecraft:jungle_tree',\r\n        'minecraft:kelp_cold',\r\n        'minecraft:kelp_warm',\r\n        'minecraft:lake_lava',\r\n        'minecraft:lake_water',\r\n        'minecraft:large_basalt_columns',\r\n        'minecraft:mega_jungle_tree',\r\n        'minecraft:mega_pine',\r\n        'minecraft:mega_spruce',\r\n        'minecraft:monster_room',\r\n        'minecraft:mushroom_field_vegetation',\r\n        'minecraft:nether_sprouts',\r\n        'minecraft:oak_badlands',\r\n        'minecraft:oak_bees_0002',\r\n        'minecraft:oak_bees_002',\r\n        'minecraft:oak_bees_005',\r\n        'minecraft:oak',\r\n        'minecraft:ore_andesite',\r\n        'minecraft:ore_blackstone',\r\n        'minecraft:ore_coal',\r\n        'minecraft:ore_debris_large',\r\n        'minecraft:ore_debris_small',\r\n        'minecraft:ore_diamond',\r\n        'minecraft:ore_diorite',\r\n        'minecraft:ore_dirt',\r\n        'minecraft:ore_emerald',\r\n        'minecraft:ore_gold_deltas',\r\n        'minecraft:ore_gold_extra',\r\n        'minecraft:ore_gold_nether',\r\n        'minecraft:ore_gold',\r\n        'minecraft:ore_granite',\r\n        'minecraft:ore_gravel_nether',\r\n        'minecraft:ore_gravel',\r\n        'minecraft:ore_infested',\r\n        'minecraft:ore_iron',\r\n        'minecraft:ore_lapis',\r\n        'minecraft:ore_magma',\r\n        'minecraft:ore_quartz_deltas',\r\n        'minecraft:ore_quartz_nether',\r\n        'minecraft:ore_redstone',\r\n        'minecraft:ore_soul_sand',\r\n        'minecraft:patch_berry_bush',\r\n        'minecraft:patch_berry_decorated',\r\n        'minecraft:patch_berry_sparse',\r\n        'minecraft:patch_brown_mushroom',\r\n        'minecraft:patch_cactus_decorated',\r\n        'minecraft:patch_cactus_desert',\r\n        'minecraft:patch_cactus',\r\n        'minecraft:patch_crimson_roots',\r\n        'minecraft:patch_dead_bush_2',\r\n        'minecraft:patch_dead_bush_badlands',\r\n        'minecraft:patch_dead_bush',\r\n        'minecraft:patch_fire',\r\n        'minecraft:patch_grass_badlands',\r\n        'minecraft:patch_grass_forest',\r\n        'minecraft:patch_grass_jungle',\r\n        'minecraft:patch_grass_normal',\r\n        'minecraft:patch_grass_plain',\r\n        'minecraft:patch_grass_savanna',\r\n        'minecraft:patch_grass_taiga_2',\r\n        'minecraft:patch_grass_taiga',\r\n        'minecraft:patch_large_fern',\r\n        'minecraft:patch_melon',\r\n        'minecraft:patch_pumpkin',\r\n        'minecraft:patch_red_mushroom',\r\n        'minecraft:patch_soul_fire',\r\n        'minecraft:patch_sugar_cane_badlands',\r\n        'minecraft:patch_sugar_cane_desert',\r\n        'minecraft:patch_sugar_cane_swamp',\r\n        'minecraft:patch_sugar_cane',\r\n        'minecraft:patch_sunflower',\r\n        'minecraft:patch_taiga_grass',\r\n        'minecraft:patch_tall_grass_2',\r\n        'minecraft:patch_tall_grass',\r\n        'minecraft:patch_waterlilly',\r\n        'minecraft:pile_hay',\r\n        'minecraft:pile_ice',\r\n        'minecraft:pile_melon',\r\n        'minecraft:pile_pumpkin',\r\n        'minecraft:pile_snow',\r\n        'minecraft:pine',\r\n        'minecraft:plain_vegetation',\r\n        'minecraft:red_mushroom_giant',\r\n        'minecraft:red_mushroom_nether',\r\n        'minecraft:red_mushroom_normal',\r\n        'minecraft:red_mushroom_swamp',\r\n        'minecraft:red_mushroom_taiga',\r\n        'minecraft:sea_pickle',\r\n        'minecraft:seagrass_cold',\r\n        'minecraft:seagrass_deep_cold',\r\n        'minecraft:seagrass_deep_warm',\r\n        'minecraft:seagrass_deep',\r\n        'minecraft:seagrass_normal',\r\n        'minecraft:seagrass_river',\r\n        'minecraft:seagrass_simple',\r\n        'minecraft:seagrass_swamp',\r\n        'minecraft:seagrass_warm',\r\n        'minecraft:small_basalt_columns',\r\n        'minecraft:spring_closed_double',\r\n        'minecraft:spring_closed',\r\n        'minecraft:spring_delta',\r\n        'minecraft:spring_lava_double',\r\n        'minecraft:spring_lava',\r\n        'minecraft:spring_open',\r\n        'minecraft:spring_water',\r\n        'minecraft:spruce_snowy',\r\n        'minecraft:spruce',\r\n        'minecraft:super_birch_bees_0002',\r\n        'minecraft:swamp_tree',\r\n        'minecraft:taiga_vegetation',\r\n        'minecraft:trees_birch',\r\n        'minecraft:trees_giant_spruce',\r\n        'minecraft:trees_giant',\r\n        'minecraft:trees_jungle_edge',\r\n        'minecraft:trees_jungle',\r\n        'minecraft:trees_mountain_edge',\r\n        'minecraft:trees_mountain',\r\n        'minecraft:trees_savanna',\r\n        'minecraft:trees_shattered_savanna',\r\n        'minecraft:trees_water',\r\n        'minecraft:twisting_vines',\r\n        'minecraft:vines',\r\n        'minecraft:void_start_platform',\r\n        'minecraft:warm_ocean_vegetation',\r\n        'minecraft:warped_forest_vegetation',\r\n        'minecraft:warped_fungi_planted',\r\n        'minecraft:warped_fungi',\r\n        'minecraft:weeping_vines'\r\n    ]);\r\n    collections.register('worldgen/configured_structure_feature', [\r\n        'minecraft:bastion_remnant',\r\n        'minecraft:buried_treasure',\r\n        'minecraft:desert_pyramid',\r\n        'minecraft:end_city',\r\n        'minecraft:fortress',\r\n        'minecraft:igloo',\r\n        'minecraft:jungle_pyramid',\r\n        'minecraft:mansion',\r\n        'minecraft:mineshaft_mesa',\r\n        'minecraft:mineshaft',\r\n        'minecraft:monument',\r\n        'minecraft:nether_fossil',\r\n        'minecraft:ocean_ruin_cold',\r\n        'minecraft:ocean_ruin_warm',\r\n        'minecraft:pillager_outpost',\r\n        'minecraft:ruined_portal_desert',\r\n        'minecraft:ruined_portal_jungle',\r\n        'minecraft:ruined_portal_mountain',\r\n        'minecraft:ruined_portal_nether',\r\n        'minecraft:ruined_portal_ocean',\r\n        'minecraft:ruined_portal_swamp',\r\n        'minecraft:ruined_portal',\r\n        'minecraft:shipwreck_beached',\r\n        'minecraft:shipwreck',\r\n        'minecraft:stronghold',\r\n        'minecraft:swamp_hut',\r\n        'minecraft:village_desert',\r\n        'minecraft:village_plains',\r\n        'minecraft:village_savanna',\r\n        'minecraft:village_snowy',\r\n        'minecraft:village_taiga'\r\n    ]);\r\n    collections.register('worldgen/configured_surface_builder', [\r\n        'minecraft:badlands',\r\n        'minecraft:basalt_deltas',\r\n        'minecraft:crimson_forest',\r\n        'minecraft:desert',\r\n        'minecraft:end',\r\n        'minecraft:eroded_badlands',\r\n        'minecraft:frozen_ocean',\r\n        'minecraft:full_sand',\r\n        'minecraft:giant_tree_taiga',\r\n        'minecraft:grass',\r\n        'minecraft:gravelly_mountain',\r\n        'minecraft:ice_spikes',\r\n        'minecraft:mountain',\r\n        'minecraft:mycelium',\r\n        'minecraft:nether',\r\n        'minecraft:nope',\r\n        'minecraft:ocean_sand',\r\n        'minecraft:shattered_savanna',\r\n        'minecraft:soul_sand_valley',\r\n        'minecraft:stone',\r\n        'minecraft:swamp',\r\n        'minecraft:warped_forest',\r\n        'minecraft:wooded_badlands'\r\n    ]);\r\n    collections.register('biome_category', [\r\n        'beach',\r\n        'desert',\r\n        'extreme_hills',\r\n        'forest',\r\n        'icy',\r\n        'jungle',\r\n        'mesa',\r\n        'mushroom',\r\n        'nether',\r\n        'none',\r\n        'ocean',\r\n        'plains',\r\n        'river',\r\n        'savanna',\r\n        'swamp',\r\n        'taiga',\r\n        'the_end'\r\n    ]);\r\n    collections.register('heightmap_type', [\r\n        'MOTION_BLOCKING',\r\n        'MOTION_BLOCKING_NO_LEAVES',\r\n        'OCEAN_FLOOR',\r\n        'OCEAN_FLOOR_WG',\r\n        'WORLD_SURFACE',\r\n        'WORLD_SURFACE_WG'\r\n    ]);\r\n    collections.register('generation_step', [\r\n        'air',\r\n        'liquid'\r\n    ]);\r\n    collections.register('loot_context_type', [\r\n        'minecraft:empty',\r\n        'minecraft:chest',\r\n        'minecraft:command',\r\n        'minecraft:selector',\r\n        'minecraft:fishing',\r\n        'minecraft:entity',\r\n        'minecraft:gift',\r\n        'minecraft:barter',\r\n        'minecraft:advancement_reward',\r\n        'minecraft:advancement_entity',\r\n        'minecraft:generic',\r\n        'minecraft:block'\r\n    ]);\r\n    collections.register('banner_pattern', [\r\n        'base',\r\n        'square_bottom_left',\r\n        'square_bottom_right',\r\n        'square_top_left',\r\n        'square_top_right',\r\n        'stripe_bottom',\r\n        'stripe_top',\r\n        'stripe_left',\r\n        'stripe_right',\r\n        'stripe_center',\r\n        'stripe_middle',\r\n        'stripe_downright',\r\n        'stripe_downleft',\r\n        'small_stripes',\r\n        'cross',\r\n        'straight_cross',\r\n        'triangle_bottom',\r\n        'triangle_top',\r\n        'triangles_bottom',\r\n        'triangles_top',\r\n        'diagonal_left',\r\n        'diagonal_up_right',\r\n        'diagonal_up_left',\r\n        'diagonal_right',\r\n        'circle',\r\n        'rhombus',\r\n        'half_vertical',\r\n        'half_horizontal',\r\n        'half_vertical_right',\r\n        'half_horizontal_bottom',\r\n        'border',\r\n        'curly_border',\r\n        'gradient',\r\n        'gradient_up',\r\n        'bricks',\r\n        'globe',\r\n        'creeper',\r\n        'skull',\r\n        'flower',\r\n        'mojang',\r\n        'piglin'\r\n    ]);\r\n    collections.register('dye_color', [\r\n        'white',\r\n        'orange',\r\n        'magenta',\r\n        'light_blue',\r\n        'yellow',\r\n        'lime',\r\n        'pink',\r\n        'gray',\r\n        'light_gray',\r\n        'cyan',\r\n        'purple',\r\n        'blue',\r\n        'brown',\r\n        'green',\r\n        'red',\r\n        'black'\r\n    ]);\r\n}\r\nexports.initCollections = initCollections;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\r\nexports.LootTableTypes = new Map([\r\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\r\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:empty', { requires: [], allows: [] }],\r\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\r\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\r\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\r\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\r\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\r\n]);\r\n/**\r\n * A map from loot entity sources to an array of their required context.\r\n */\r\nexports.LootEntitySources = new Map([\r\n    ['direct_killer', [3 /* DirectKillerEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot copy sources to an array of their required context.\r\n */\r\nexports.LootCopySources = new Map([\r\n    ['block_entity', [0 /* BlockEntity */]],\r\n    ['killer', [5 /* KillerEntity */]],\r\n    ['killer_player', [5 /* KillerEntity */]],\r\n    ['this', [8 /* ThisEntity */]]\r\n]);\r\n/**\r\n * A map from loot condition IDs to an array of their required context.\r\n */\r\nexports.LootConditions = new Map([\r\n    ['minecraft:alternative', []],\r\n    ['minecraft:block_state_property', [1 /* BlockState */]],\r\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\r\n    ['minecraft:entity_properties', [7 /* Origin */]],\r\n    ['minecraft:entity_scores', []],\r\n    ['minecraft:inverted', []],\r\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\r\n    ['minecraft:location_check', []],\r\n    ['minecraft:match_tool', [9 /* Tool */]],\r\n    ['minecraft:random_chance', []],\r\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\r\n    ['minecraft:reference', []],\r\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\r\n    ['minecraft:table_bonus', [9 /* Tool */]],\r\n    ['minecraft:time_check', []],\r\n    ['minecraft:weather_check', []]\r\n]);\r\n/**\r\n * A map from loot function IDs to an array of their required context.\r\n */\r\nexports.LootFunctions = new Map([\r\n    ['minecraft:apply_bonus', [9 /* Tool */]],\r\n    ['minecraft:copy_name', []],\r\n    ['minecraft:copy_nbt', []],\r\n    ['minecraft:copy_state', [1 /* BlockState */]],\r\n    ['minecraft:enchant_randomly', []],\r\n    ['minecraft:enchant_with_levels', []],\r\n    ['minecraft:exploration_map', [7 /* Origin */]],\r\n    ['minecraft:explosion_decay', []],\r\n    ['minecraft:fill_player_head', []],\r\n    ['minecraft:furnace_smelt', []],\r\n    ['minecraft:limit_count', []],\r\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\r\n    ['minecraft:set_attributes', []],\r\n    ['minecraft:set_banner_pattern', []],\r\n    ['minecraft:set_contents', []],\r\n    ['minecraft:set_count', []],\r\n    ['minecraft:set_damage', []],\r\n    ['minecraft:set_loot_table', []],\r\n    ['minecraft:set_lore', []],\r\n    ['minecraft:set_name', []],\r\n    ['minecraft:set_nbt', []],\r\n    ['minecraft:set_stew_effect', []]\r\n]);\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getSchemas = exports.getCollections = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Collections_1 = require(\"./Collections\");\r\nconst schemas_1 = require(\"./schemas\");\r\nexports.lootContext = __importStar(require(\"./LootContext\"));\r\nfunction getCollections() {\r\n    const collections = new core_1.CollectionRegistry();\r\n    Collections_1.initCollections(collections);\r\n    return collections;\r\n}\r\nexports.getCollections = getCollections;\r\n/**\r\n * @param collections The CollectionRegistry for this version. Note that apart from\r\n * the built-in collections, the client of this module is responsible for futhermore\r\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\r\n * namespace (`minecraft:`) part, while the values within the collections should.\r\n *\r\n * @example\r\n * for (const key in VANILLA_REGISTRIES>) {\r\n *   collections.register(\r\n *     key.replace(/^minecraft:/, ''),\r\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\r\n *   )\r\n * }\r\n */\r\nfunction getSchemas(collections) {\r\n    const schemas = new core_1.SchemaRegistry();\r\n    schemas_1.initSchemas(schemas, collections);\r\n    return schemas;\r\n}\r\nexports.getSchemas = getSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initAdvancementSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initAdvancementSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const EntityPredicate = core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.Opt(Reference('entity_predicate')),\r\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('condition')),\r\n            change: v => [{\r\n                    condition: 'minecraft:entity_properties',\r\n                    predicate: v\r\n                }]\r\n        }\r\n    ], { choiceContext: 'conditions' });\r\n    schemas.register('advancement', core_1.Mod(core_1.ObjectNode({\r\n        display: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n            icon: core_1.ObjectNode({\r\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\r\n            }),\r\n            title: Reference('text_component'),\r\n            description: Reference('text_component'),\r\n            background: core_1.Opt(StringNode()),\r\n            frame: core_1.Opt(StringNode({ enum: ['task', 'challenge', 'goal'] })),\r\n            show_toast: core_1.Opt(core_1.BooleanNode()),\r\n            announce_to_chat: core_1.Opt(core_1.BooleanNode()),\r\n            hidden: core_1.Opt(core_1.BooleanNode())\r\n        }), {\r\n            default: () => ({\r\n                icon: {\r\n                    item: 'minecraft:stone'\r\n                },\r\n                title: '',\r\n                description: ''\r\n            })\r\n        })),\r\n        parent: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\r\n        criteria: core_1.MapNode(StringNode(), Reference('advancement_criteria')),\r\n        requirements: core_1.Opt(core_1.ListNode(core_1.ListNode(StringNode() // TODO: add validation\r\n        ))),\r\n        rewards: core_1.Opt(core_1.ObjectNode({\r\n            function: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$function' } })),\r\n            loot: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\r\n            recipes: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\r\n            experience: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        })),\r\n    }, { context: 'advancement' }), {\r\n        default: () => ({\r\n            criteria: {\r\n                requirement: {\r\n                    trigger: 'minecraft:location'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('advancement_criteria', core_1.ObjectNode({\r\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\r\n        conditions: core_1.Opt(core_1.ObjectNode({\r\n            player: core_1.Mod(EntityPredicate, {\r\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\r\n            }),\r\n            [core_1.Switch]: path => path.pop().push('trigger'),\r\n            [core_1.Case]: {\r\n                'minecraft:bee_nest_destroyed': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    num_bees_inside: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:bred_animals': {\r\n                    parent: EntityPredicate,\r\n                    partner: EntityPredicate,\r\n                    child: EntityPredicate\r\n                },\r\n                'minecraft:brewed_potion': {\r\n                    potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\r\n                },\r\n                'minecraft:changed_dimension': {\r\n                    from: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n                    to: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\r\n                },\r\n                'minecraft:channeled_lightning': {\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:construct_beacon': {\r\n                    level: Reference('int_bounds')\r\n                },\r\n                'minecraft:consume_item': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:cured_zombie_villager': {\r\n                    villager: EntityPredicate,\r\n                    zombie: EntityPredicate\r\n                },\r\n                'minecraft:effects_changed': {\r\n                    effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), core_1.ObjectNode({\r\n                        amplifier: Reference('int_bounds'),\r\n                        duration: Reference('int_bounds')\r\n                    })))\r\n                },\r\n                'minecraft:enter_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n                },\r\n                'minecraft:enchanted_item': {\r\n                    levels: Reference('int_bounds'),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:entity_hurt_player': {\r\n                    damage: core_1.Opt(Reference('damage_predicate'))\r\n                },\r\n                'minecraft:entity_killed_player': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:filled_bucket': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:fishing_rod_hooked': {\r\n                    entity: EntityPredicate,\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:hero_of_the_village': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:inventory_changed': {\r\n                    slots: core_1.Opt(core_1.ObjectNode({\r\n                        empty: Reference('int_bounds'),\r\n                        occupied: Reference('int_bounds'),\r\n                        full: Reference('int_bounds')\r\n                    })),\r\n                    items: core_1.Opt(core_1.ListNode(Reference('item_predicate')))\r\n                },\r\n                'minecraft:item_durability_changed': {\r\n                    delta: Reference('int_bounds'),\r\n                    durability: Reference('int_bounds'),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:item_used_on_block': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:killed_by_crossbow': {\r\n                    unique_entity_types: Reference('int_bounds'),\r\n                    victims: core_1.Opt(core_1.ListNode(EntityPredicate))\r\n                },\r\n                'minecraft:levitation': {\r\n                    distance: Reference('distance_predicate'),\r\n                    duration: Reference('int_bounds')\r\n                },\r\n                'minecraft:location': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:nether_travel': {\r\n                    distance: Reference('distance_predicate'),\r\n                    entered: core_1.Opt(Reference('location_predicate')),\r\n                    exited: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:placed_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n                    state: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:player_generates_container_loot': {\r\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\r\n                },\r\n                'minecraft:player_hurt_entity': {\r\n                    damage: core_1.Opt(Reference('damage_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_interacted_with_entity': {\r\n                    item: core_1.Opt(Reference('item_predicate')),\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:player_killed_entity': {\r\n                    entity: EntityPredicate,\r\n                    killing_blow: core_1.Opt(Reference('damage_source_predicate'))\r\n                },\r\n                'minecraft:recipe_unlocked': {\r\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\r\n                },\r\n                'minecraft:slept_in_bed': {\r\n                    location: core_1.Opt(Reference('location_predicate'))\r\n                },\r\n                'minecraft:slide_down_block': {\r\n                    block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:shot_crossbow': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:summoned_entity': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:tame_animal': {\r\n                    entity: EntityPredicate\r\n                },\r\n                'minecraft:target_hit': {\r\n                    projectile: EntityPredicate,\r\n                    shooter: EntityPredicate,\r\n                    signal_strength: Reference('int_bounds')\r\n                },\r\n                'minecraft:thrown_item_picked_up_by_entity': {\r\n                    entity: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:used_ender_eye': {\r\n                    distance: Reference('float_bounds')\r\n                },\r\n                'minecraft:used_totem': {\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:villager_trade': {\r\n                    villager: core_1.Opt(Reference('entity_predicate')),\r\n                    item: core_1.Opt(Reference('item_predicate'))\r\n                },\r\n                'minecraft:voluntary_exile': {\r\n                    location: Reference('location_predicate')\r\n                }\r\n            }\r\n        }, { context: 'criterion' }))\r\n    }, { category: 'predicate', context: 'criterion' }));\r\n}\r\nexports.initAdvancementSchemas = initAdvancementSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCommonSchemas = exports.UniformFloat = exports.UniformInt = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.FunctionCases = exports.ConditionCases = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nexports.DefaultDimensionType = {\r\n    ultrawarm: false,\r\n    natural: true,\r\n    piglin_safe: false,\r\n    respawn_anchor_works: false,\r\n    bed_works: true,\r\n    has_raids: true,\r\n    has_skylight: true,\r\n    has_ceiling: false,\r\n    coordinate_scale: 1,\r\n    ambient_light: 0,\r\n    logical_height: 256,\r\n    infiniburn: 'minecraft:infiniburn_overworld',\r\n    min_y: 0,\r\n    height: 256,\r\n};\r\nexports.DefaultNoiseSettings = {\r\n    name: 'minecraft:overworld',\r\n    bedrock_roof_position: -10,\r\n    bedrock_floor_position: 0,\r\n    sea_level: 63,\r\n    disable_mob_generation: false,\r\n    noise: {\r\n        min_y: 0,\r\n        height: 256,\r\n        density_factor: 1,\r\n        density_offset: -0.46875,\r\n        simplex_surface_noise: true,\r\n        random_density_offset: true,\r\n        size_horizontal: 1,\r\n        size_vertical: 2,\r\n        sampling: {\r\n            xz_scale: 1,\r\n            y_scale: 1,\r\n            xz_factor: 80,\r\n            y_factor: 160\r\n        },\r\n        top_slide: {\r\n            target: -10,\r\n            size: 3,\r\n            offset: 0\r\n        },\r\n        bottom_slide: {\r\n            target: -30,\r\n            size: 0,\r\n            offset: 0\r\n        }\r\n    },\r\n    default_block: {\r\n        Name: \"minecraft:stone\"\r\n    },\r\n    default_fluid: {\r\n        Name: \"minecraft:water\",\r\n        Properties: {\r\n            level: \"0\"\r\n        }\r\n    }\r\n};\r\nfunction initCommonSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('block_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\r\n    }, { context: 'block_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('fluid_state', core_1.Mod(core_1.ObjectNode({\r\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\r\n        Properties: core_1.Opt(core_1.MapNode(StringNode(), StringNode()))\r\n    }, { context: 'fluid_state' }), {\r\n        default: () => ({\r\n            Name: 'minecraft:water',\r\n            Properties: {\r\n                'level': '0'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('block_pos', core_1.Mod(core_1.ListNode(core_1.NumberNode({ integer: true })), {\r\n        default: () => [0, 0, 0]\r\n    }));\r\n    const Bounds = (integer) => core_1.Opt(core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer }),\r\n            change: (v) => { var _a, _b; return v === undefined ? 0 : (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 0; }\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer }))\r\n            }, { context: 'range' }),\r\n            change: (v) => ({\r\n                min: v !== null && v !== void 0 ? v : 0,\r\n                max: v !== null && v !== void 0 ? v : 0\r\n            })\r\n        }\r\n    ]));\r\n    schemas.register('int_bounds', Bounds(true));\r\n    schemas.register('float_bounds', Bounds());\r\n    schemas.register('int_range', core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(Reference('number_provider')),\r\n                max: core_1.Opt(Reference('number_provider'))\r\n            })\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer: true })\r\n        }\r\n    ], { context: 'range' }));\r\n    const ObjectWithType = (pool, directType, directPath, directDefault, objectDefault, context, cases) => {\r\n        let defaultCase = {};\r\n        if (objectDefault) {\r\n            Object.keys(cases[objectDefault]).forEach(k => {\r\n                defaultCase[k] = core_1.Mod(cases[objectDefault][k], {\r\n                    enabled: path => path.push('type').get() === undefined\r\n                });\r\n            });\r\n        }\r\n        const provider = core_1.ObjectNode({\r\n            type: core_1.Mod(core_1.Opt(StringNode({ validator: 'resource', params: { pool } })), {\r\n                hidden: () => true\r\n            }),\r\n            [core_1.Switch]: path => path.push('type'),\r\n            [core_1.Case]: cases,\r\n            ...defaultCase\r\n        }, { context, disableSwitchContext: true });\r\n        const choices = [{\r\n                type: directType,\r\n                node: cases[directDefault][directPath]\r\n            }];\r\n        if (objectDefault) {\r\n            choices.push({\r\n                type: 'object',\r\n                priority: -1,\r\n                node: provider\r\n            });\r\n        }\r\n        Object.keys(cases).forEach(k => {\r\n            choices.push({\r\n                type: k,\r\n                match: (v) => (v === null || v === void 0 ? void 0 : v.type) === k,\r\n                node: provider,\r\n                change: (v) => ({ type: k })\r\n            });\r\n        });\r\n        return core_1.ChoiceNode(choices, { context, choiceContext: `${context}.type` });\r\n    };\r\n    schemas.register('number_provider', ObjectWithType('loot_number_provider_type', 'number', 'value', 'minecraft:constant', 'minecraft:uniform', 'number_provider', {\r\n        'minecraft:constant': {\r\n            value: core_1.NumberNode()\r\n        },\r\n        'minecraft:uniform': {\r\n            min: Reference('number_provider'),\r\n            max: Reference('number_provider')\r\n        },\r\n        'minecraft:binomial': {\r\n            n: Reference('number_provider'),\r\n            p: Reference('number_provider')\r\n        },\r\n        'minecraft:score': {\r\n            target: Reference('scoreboard_name_provider'),\r\n            score: StringNode({ validator: 'objective' }),\r\n            scale: core_1.Opt(core_1.NumberNode())\r\n        }\r\n    }));\r\n    schemas.register('scoreboard_name_provider', ObjectWithType('loot_score_provider_type', 'string', 'target', 'minecraft:context', null, 'score_provider', {\r\n        'minecraft:fixed': {\r\n            name: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities', isScoreHolder: true } }) // FIXME: doesn't support selectors\r\n        },\r\n        'minecraft:context': {\r\n            target: core_1.Mod(StringNode({ enum: 'entity_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    schemas.register('nbt_provider', ObjectWithType('loot_nbt_provider_type', 'string', 'target', 'minecraft:context', null, 'nbt_provider', {\r\n        'minecraft:storage': {\r\n            source: StringNode({ validator: 'resource', params: { pool: '$storage' } })\r\n        },\r\n        'minecraft:context': {\r\n            target: core_1.Mod(StringNode({ enum: 'copy_source' }), { default: () => 'this' })\r\n        }\r\n    }));\r\n    const Uniform = (integer) => (config) => core_1.ChoiceNode([\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode({ integer, min: config === null || config === void 0 ? void 0 : config.min, max: config === null || config === void 0 ? void 0 : config.max }),\r\n            change: v => v.base\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                base: core_1.NumberNode({ integer, min: config === null || config === void 0 ? void 0 : config.min, max: config === null || config === void 0 ? void 0 : config.max }),\r\n                spread: core_1.NumberNode({ integer, min: 0, max: config === null || config === void 0 ? void 0 : config.maxSpread })\r\n            }),\r\n            change: v => ({\r\n                base: v,\r\n                spread: 0\r\n            })\r\n        }\r\n    ], { context: 'uniform_int' });\r\n    exports.UniformInt = Uniform(true);\r\n    exports.UniformFloat = Uniform();\r\n    exports.ConditionCases = (entitySourceNode = StringNode({ enum: 'entity_source' })) => ({\r\n        'minecraft:alternative': {\r\n            terms: core_1.ListNode(Reference('condition'))\r\n        },\r\n        'minecraft:block_state_property': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.MapNode(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\r\n        },\r\n        'minecraft:damage_source_properties': {\r\n            predicate: Reference('damage_source_predicate')\r\n        },\r\n        'minecraft:entity_properties': {\r\n            entity: entitySourceNode,\r\n            predicate: Reference('entity_predicate')\r\n        },\r\n        'minecraft:entity_scores': {\r\n            entity: entitySourceNode,\r\n            scores: core_1.MapNode(StringNode({ validator: 'objective' }), Reference('int_range'))\r\n        },\r\n        'minecraft:inverted': {\r\n            term: Reference('condition')\r\n        },\r\n        'minecraft:killed_by_player': {\r\n            inverse: core_1.Opt(core_1.BooleanNode())\r\n        },\r\n        'minecraft:location_check': {\r\n            offsetX: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetY: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            offsetZ: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            predicate: Reference('location_predicate')\r\n        },\r\n        'minecraft:match_tool': {\r\n            predicate: Reference('item_predicate')\r\n        },\r\n        'minecraft:random_chance': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 })\r\n        },\r\n        'minecraft:random_chance_with_looting': {\r\n            chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n            looting_multiplier: core_1.NumberNode()\r\n        },\r\n        'minecraft:requirements': {\r\n            terms: core_1.ListNode(Reference('condition')),\r\n        },\r\n        'minecraft:reference': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\r\n        },\r\n        'minecraft:table_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            chances: core_1.ListNode(core_1.NumberNode({ min: 0, max: 1 }))\r\n        },\r\n        'minecraft:time_check': {\r\n            value: Reference('int_range'),\r\n            period: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n        },\r\n        'minecraft:value_check': {\r\n            value: Reference('number_provider'),\r\n            range: Reference('int_range')\r\n        },\r\n        'minecraft:weather_check': {\r\n            raining: core_1.Opt(core_1.BooleanNode()),\r\n            thundering: core_1.Opt(core_1.BooleanNode())\r\n        }\r\n    });\r\n    exports.FunctionCases = (conditions, copySourceNode = StringNode({ enum: 'copy_source' }), entitySourceNode = StringNode({ enum: 'entity_source' })) => ({\r\n        'minecraft:apply_bonus': {\r\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\r\n            formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\r\n            parameters: core_1.Mod(core_1.ObjectNode({\r\n                bonusMultiplier: core_1.Mod(core_1.NumberNode(), {\r\n                    enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\r\n                }),\r\n                extra: core_1.Mod(core_1.NumberNode(), {\r\n                    enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                }),\r\n                probability: core_1.Mod(core_1.NumberNode(), {\r\n                    enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\r\n                })\r\n            }), {\r\n                enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\r\n            }),\r\n            ...conditions\r\n        },\r\n        'minecraft:copy_name': {\r\n            source: copySourceNode,\r\n            ...conditions\r\n        },\r\n        'minecraft:copy_nbt': {\r\n            source: Reference('nbt_provider'),\r\n            ops: core_1.ListNode(core_1.ObjectNode({\r\n                source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\r\n                target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\r\n                op: StringNode({ enum: ['replace', 'append', 'merge'] })\r\n            }, { context: 'nbt_operation' })),\r\n            ...conditions\r\n        },\r\n        'minecraft:copy_state': {\r\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n            properties: core_1.ListNode(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } })),\r\n            ...conditions\r\n        },\r\n        'minecraft:enchant_randomly': {\r\n            enchantments: core_1.Opt(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }))),\r\n            ...conditions\r\n        },\r\n        'minecraft:enchant_with_levels': {\r\n            levels: Reference('number_provider'),\r\n            treasure: core_1.Opt(core_1.BooleanNode()),\r\n            ...conditions\r\n        },\r\n        'minecraft:exploration_map': {\r\n            destination: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } })),\r\n            decoration: core_1.Opt(StringNode({ enum: 'map_decoration' })),\r\n            zoom: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            search_radius: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            skip_existing_chunks: core_1.Opt(core_1.BooleanNode()),\r\n            ...conditions\r\n        },\r\n        'minecraft:fill_player_head': {\r\n            entity: entitySourceNode,\r\n            ...conditions\r\n        },\r\n        'minecraft:limit_count': {\r\n            limit: Reference('int_range'),\r\n            ...conditions\r\n        },\r\n        'minecraft:looting_enchant': {\r\n            count: Reference('number_provider'),\r\n            limit: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_attributes': {\r\n            modifiers: core_1.ListNode(Reference('attribute_modifier')),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_banner_pattern': {\r\n            patterns: core_1.ListNode(core_1.ObjectNode({\r\n                pattern: StringNode({ enum: 'banner_pattern' }),\r\n                color: StringNode({ enum: 'dye_color' })\r\n            })),\r\n            append: core_1.Opt(core_1.BooleanNode()),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_contents': {\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_count': {\r\n            count: Reference('number_provider'),\r\n            add: core_1.Opt(core_1.BooleanNode()),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_damage': {\r\n            damage: Reference('number_provider'),\r\n            add: core_1.Opt(core_1.BooleanNode()),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_enchantments': {\r\n            enchantments: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }), Reference('number_provider')),\r\n            add: core_1.Opt(core_1.BooleanNode()),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_loot_table': {\r\n            name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n            seed: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_lore': {\r\n            entity: core_1.Opt(entitySourceNode),\r\n            lore: core_1.ListNode(Reference('text_component')),\r\n            replace: core_1.Opt(core_1.BooleanNode()),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_name': {\r\n            entity: core_1.Opt(entitySourceNode),\r\n            name: core_1.Opt(Reference('text_component')),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_nbt': {\r\n            tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } }),\r\n            ...conditions\r\n        },\r\n        'minecraft:set_stew_effect': {\r\n            effects: core_1.Opt(core_1.ListNode(core_1.ObjectNode({\r\n                type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\r\n                duration: Reference('number_provider')\r\n            }))),\r\n            ...conditions\r\n        }\r\n    });\r\n    exports.DimensionTypePresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\r\n        'minecraft:overworld': exports.DefaultDimensionType,\r\n        'minecraft:the_nether': {\r\n            name: 'minecraft:the_nether',\r\n            ultrawarm: true,\r\n            natural: false,\r\n            shrunk: true,\r\n            piglin_safe: true,\r\n            respawn_anchor_works: true,\r\n            bed_works: false,\r\n            has_raids: false,\r\n            has_skylight: false,\r\n            has_ceiling: true,\r\n            ambient_light: 0.1,\r\n            fixed_time: 18000,\r\n            logical_height: 128,\r\n            effects: 'minecraft:the_nether',\r\n            infiniburn: 'minecraft:infiniburn_nether',\r\n            min_y: 0,\r\n            height: 256,\r\n        },\r\n        'minecraft:the_end': {\r\n            name: 'minecraft:the_end',\r\n            ultrawarm: false,\r\n            natural: false,\r\n            shrunk: false,\r\n            piglin_safe: false,\r\n            respawn_anchor_works: false,\r\n            bed_works: false,\r\n            has_raids: true,\r\n            has_skylight: false,\r\n            has_ceiling: false,\r\n            ambient_light: 0,\r\n            fixed_time: 6000,\r\n            logical_height: 256,\r\n            effects: 'minecraft:the_end',\r\n            infiniburn: 'minecraft:infiniburn_end',\r\n            min_y: 0,\r\n            height: 256,\r\n        }\r\n    });\r\n    exports.NoiseSettingsPresets = (node) => core_1.ObjectOrPreset(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\r\n        'minecraft:overworld': exports.DefaultNoiseSettings,\r\n        'minecraft:nether': {\r\n            name: 'minecraft:nether',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:netherrack\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:lava\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:end': {\r\n            name: 'minecraft:end',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:end_stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:air\"\r\n            }\r\n        },\r\n        'minecraft:amplified': {\r\n            name: 'minecraft:amplified',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 63,\r\n            disable_mob_generation: false,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 256,\r\n                density_factor: 1,\r\n                density_offset: -0.46875,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: true,\r\n                amplified: true,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -10,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 0,\r\n                    offset: 0\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:caves': {\r\n            name: 'minecraft:caves',\r\n            bedrock_roof_position: 0,\r\n            bedrock_floor_position: 0,\r\n            sea_level: 32,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0.019921875,\r\n                simplex_surface_noise: false,\r\n                random_density_offset: false,\r\n                size_horizontal: 1,\r\n                size_vertical: 2,\r\n                sampling: {\r\n                    xz_scale: 1,\r\n                    y_scale: 3,\r\n                    xz_factor: 80,\r\n                    y_factor: 60\r\n                },\r\n                top_slide: {\r\n                    target: 120,\r\n                    size: 3,\r\n                    offset: 0\r\n                },\r\n                bottom_slide: {\r\n                    target: 320,\r\n                    size: 4,\r\n                    offset: -1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        },\r\n        'minecraft:floating_islands': {\r\n            name: 'minecraft:floating_islands',\r\n            bedrock_roof_position: -10,\r\n            bedrock_floor_position: -10,\r\n            sea_level: 0,\r\n            disable_mob_generation: true,\r\n            noise: {\r\n                min_y: 0,\r\n                height: 128,\r\n                density_factor: 0,\r\n                density_offset: 0,\r\n                simplex_surface_noise: true,\r\n                random_density_offset: false,\r\n                island_noise_override: true,\r\n                size_horizontal: 2,\r\n                size_vertical: 1,\r\n                sampling: {\r\n                    xz_scale: 2,\r\n                    y_scale: 1,\r\n                    xz_factor: 80,\r\n                    y_factor: 160\r\n                },\r\n                top_slide: {\r\n                    target: -3000,\r\n                    size: 64,\r\n                    offset: -46\r\n                },\r\n                bottom_slide: {\r\n                    target: -30,\r\n                    size: 7,\r\n                    offset: 1\r\n                }\r\n            },\r\n            default_block: {\r\n                Name: \"minecraft:stone\"\r\n            },\r\n            default_fluid: {\r\n                Name: \"minecraft:water\",\r\n                Properties: {\r\n                    level: \"0\"\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.initCommonSchemas = initCommonSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initConditionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initConditionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('predicate', core_1.ObjectOrList(Reference('condition'), { choiceContext: 'condition' }));\r\n    schemas.register('condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\r\n        [core_1.Switch]: path => path.push('condition'),\r\n        [core_1.Case]: Common_1.ConditionCases()\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:entity_properties',\r\n            entity: 'this'\r\n        })\r\n    }));\r\n}\r\nexports.initConditionSchemas = initConditionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const NoPreset = (node) => core_1.Mod(node, {\r\n        enabled: path => path.push('preset').get() === undefined\r\n    });\r\n    schemas.register('dimension', core_1.Mod(core_1.ObjectNode({\r\n        type: Common_1.DimensionTypePresets(Reference('dimension_type')),\r\n        generator: core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\r\n            seed: core_1.NumberNode({ integer: true }),\r\n            [core_1.Switch]: path => path.push('type'),\r\n            [core_1.Case]: {\r\n                'minecraft:noise': {\r\n                    biome_source: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\r\n                        seed: core_1.NumberNode({ integer: true }),\r\n                        [core_1.Switch]: path => path.push('type'),\r\n                        [core_1.Case]: {\r\n                            'minecraft:fixed': {\r\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\r\n                            },\r\n                            'minecraft:multi_noise': {\r\n                                preset: core_1.Opt(StringNode({ enum: ['nether'] })),\r\n                                altitude_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                temperature_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                humidity_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                weirdness_noise: NoPreset(Reference('generator_biome_noise')),\r\n                                biomes: NoPreset(core_1.Mod(core_1.ListNode(Reference('generator_biome')), {\r\n                                    default: () => [{\r\n                                            biome: 'minecraft:plains'\r\n                                        }]\r\n                                }))\r\n                            },\r\n                            'minecraft:checkerboard': {\r\n                                scale: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 62 })),\r\n                                biomes: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\r\n                            },\r\n                            'minecraft:vanilla_layered': {\r\n                                large_biomes: core_1.Opt(core_1.BooleanNode()),\r\n                                legacy_biome_init_layer: core_1.Opt(core_1.BooleanNode())\r\n                            }\r\n                        }\r\n                    }, { category: 'predicate', disableSwitchContext: true }),\r\n                    settings: Common_1.NoiseSettingsPresets(Reference('noise_settings'))\r\n                },\r\n                'minecraft:flat': {\r\n                    settings: core_1.ObjectNode({\r\n                        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n                        lakes: core_1.Opt(core_1.BooleanNode()),\r\n                        features: core_1.Opt(core_1.BooleanNode()),\r\n                        layers: core_1.ListNode(Reference('generator_layer')),\r\n                        structures: Reference('generator_structures')\r\n                    })\r\n                }\r\n            }\r\n        }, { disableSwitchContext: true })\r\n    }, { category: 'pool', context: 'dimension' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                type: 'minecraft:overworld',\r\n                generator: {\r\n                    type: 'minecraft:noise',\r\n                    seed,\r\n                    biome_source: {\r\n                        type: 'minecraft:fixed',\r\n                        seed,\r\n                        biome: 'minecraft:plains'\r\n                    },\r\n                    settings: 'minecraft:overworld'\r\n                }\r\n            };\r\n        }\r\n    }));\r\n    schemas.register('generator_biome', core_1.Mod(core_1.ObjectNode({\r\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\r\n        parameters: core_1.ObjectNode({\r\n            altitude: core_1.NumberNode({ min: -1, max: 1 }),\r\n            temperature: core_1.NumberNode({ min: -1, max: 1 }),\r\n            humidity: core_1.NumberNode({ min: -1, max: 1 }),\r\n            weirdness: core_1.NumberNode({ min: -1, max: 1 }),\r\n            offset: core_1.NumberNode({ min: -1, max: 1 })\r\n        })\r\n    }, { context: 'generator_biome' }), {\r\n        default: () => ({\r\n            biome: 'minecraft:plains',\r\n            parameters: {\r\n                altitude: 0,\r\n                temperature: 0,\r\n                humidity: 0,\r\n                weirdness: 0,\r\n                offset: 0\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('generator_biome_noise', core_1.Mod(core_1.ObjectNode({\r\n        firstOctave: core_1.NumberNode({ integer: true }),\r\n        amplitudes: core_1.ListNode(core_1.NumberNode())\r\n    }, { context: 'generator_biome_noise' }), {\r\n        default: () => ({\r\n            firstOctave: -7,\r\n            amplitudes: [1, 1]\r\n        })\r\n    }));\r\n}\r\nexports.initDimensionSchemas = initDimensionSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDimensionTypeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initDimensionTypeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('dimension_type', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$dimension_type', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        ultrawarm: core_1.BooleanNode(),\r\n        natural: core_1.BooleanNode(),\r\n        piglin_safe: core_1.BooleanNode(),\r\n        respawn_anchor_works: core_1.BooleanNode(),\r\n        bed_works: core_1.BooleanNode(),\r\n        has_raids: core_1.BooleanNode(),\r\n        has_skylight: core_1.BooleanNode(),\r\n        has_ceiling: core_1.BooleanNode(),\r\n        coordinate_scale: core_1.NumberNode({ min: 0.00001, max: 30000000 }),\r\n        ambient_light: core_1.NumberNode(),\r\n        fixed_time: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n        logical_height: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n        effects: core_1.Opt(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\r\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\r\n        min_y: core_1.NumberNode({ integer: true, min: -2048, max: 2047 }),\r\n        height: core_1.NumberNode({ integer: true, min: 0, max: 4096 })\r\n    }, { context: 'dimension_type' }), node => ({\r\n        default: () => Common_1.DefaultDimensionType,\r\n        validate: (path, value, errors, options) => {\r\n            value = node.validate(path, value, errors, options);\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) + (value === null || value === void 0 ? void 0 : value.height) > 2047) {\r\n                errors.add(path.push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.logical_height) > (value === null || value === void 0 ? void 0 : value.height)) {\r\n                errors.add(path.push('logical_height'), 'error.logical_height');\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.height) % 16 !== 0) {\r\n                errors.add(path.push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if ((value === null || value === void 0 ? void 0 : value.min_y) % 16 !== 0) {\r\n                errors.add(path.push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n}\r\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initItemModifierSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initItemModifierSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('item_modifier', core_1.ObjectOrList(Reference('function'), { choiceContext: 'function' }));\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('condition')))\r\n    };\r\n    schemas.register('function', core_1.Mod(core_1.ObjectNode({\r\n        function: StringNode({ validator: 'resource', params: { pool: 'loot_function_type' } }),\r\n        [core_1.Switch]: path => path.push('function'),\r\n        [core_1.Case]: Common_1.FunctionCases(conditions)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => [{\r\n                function: 'minecraft:set_count',\r\n                count: 1\r\n            }]\r\n    }));\r\n}\r\nexports.initItemModifierSchemas = initItemModifierSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initLootTableSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst LootContext_1 = require(\"../LootContext\");\r\nconst Common_1 = require(\"./Common\");\r\nfunction initLootTableSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const conditions = {\r\n        conditions: core_1.Opt(core_1.ListNode(Reference('loot_condition')))\r\n    };\r\n    const functionsAndConditions = {\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function'))),\r\n        ...conditions\r\n    };\r\n    function compileSwitchNode(contextMap, collectionID, getNode) {\r\n        const cases = [];\r\n        const getAvailableOptions = (providedContext) => collections\r\n            .get(collectionID)\r\n            .filter(t => {\r\n            var _a;\r\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\r\n            return requiredContext.every(c => providedContext.includes(c));\r\n        });\r\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\r\n            const providedContext = [...allows, ...requires];\r\n            cases.push({\r\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\r\n                node: getNode(getAvailableOptions(providedContext))\r\n            });\r\n        }\r\n        cases.push({ match: _ => true, node: getNode(collectionID) });\r\n        return core_1.SwitchNode(cases);\r\n    }\r\n    const conditionIDSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\r\n    const functionIDSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\r\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\r\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\r\n    schemas.register('loot_table', core_1.Mod(core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\r\n        pools: core_1.Opt(core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n            rolls: Reference('number_provider'),\r\n            bonus_rolls: core_1.Opt(Reference('number_provider')),\r\n            entries: core_1.ListNode(Reference('loot_entry')),\r\n            ...functionsAndConditions\r\n        }, { category: 'pool', context: 'loot_pool' }), {\r\n            default: () => ({\r\n                rolls: 1,\r\n                entries: [{\r\n                        type: 'minecraft:item',\r\n                        name: 'minecraft:stone'\r\n                    }]\r\n            })\r\n        }))),\r\n        functions: core_1.Opt(core_1.ListNode(Reference('loot_function')))\r\n    }, { context: 'loot_table' }), {\r\n        default: () => ({\r\n            pools: [{\r\n                    rolls: 1,\r\n                    entries: [{\r\n                            type: 'minecraft:item',\r\n                            name: 'minecraft:stone'\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    const weightMod = {\r\n        enabled: path => {\r\n            var _a;\r\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\r\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\r\n        }\r\n    };\r\n    schemas.register('loot_entry', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\r\n        weight: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true, min: 1 }), weightMod)),\r\n        quality: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), weightMod)),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:alternatives': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:dynamic': {\r\n                name: StringNode(),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:group': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:item': {\r\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:loot_table': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:sequence': {\r\n                children: core_1.ListNode(Reference('loot_entry')),\r\n                ...functionsAndConditions\r\n            },\r\n            'minecraft:tag': {\r\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\r\n                expand: core_1.Opt(core_1.BooleanNode()),\r\n                ...functionsAndConditions\r\n            }\r\n        }\r\n    }, { context: 'loot_entry' }), {\r\n        default: () => ({\r\n            type: 'minecraft:item',\r\n            name: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('loot_function', core_1.Mod(core_1.ObjectNode({\r\n        function: functionIDSwtichNode,\r\n        [core_1.Switch]: path => path.push('function'),\r\n        [core_1.Case]: Common_1.FunctionCases(conditions, copySourceSwtichNode, entitySourceSwtichNode)\r\n    }, { category: 'function', context: 'function' }), {\r\n        default: () => ({\r\n            function: 'minecraft:set_count',\r\n            count: 1\r\n        })\r\n    }));\r\n    schemas.register('loot_condition', core_1.Mod(core_1.ObjectNode({\r\n        condition: conditionIDSwtichNode,\r\n        [core_1.Switch]: path => path.push('condition'),\r\n        [core_1.Case]: Common_1.ConditionCases(entitySourceSwtichNode)\r\n    }, { category: 'predicate', context: 'condition' }), {\r\n        default: () => ({\r\n            condition: 'minecraft:random_chance',\r\n            chance: 0.5\r\n        })\r\n    }));\r\n    schemas.register('attribute_modifier', core_1.Mod(core_1.ObjectNode({\r\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\r\n        name: StringNode(),\r\n        amount: Reference('number_provider'),\r\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\r\n        slot: core_1.StringOrList(StringNode({ enum: 'slot' }))\r\n    }, { context: 'attribute_modifier' }), {\r\n        default: () => ({\r\n            attribute: 'minecraft:generic.max_health',\r\n            name: '',\r\n            amount: 1,\r\n            operation: 'addition',\r\n            slot: 'mainhand'\r\n        })\r\n    }));\r\n}\r\nexports.initLootTableSchemas = initLootTableSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPackMcmetaSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst CURRENT_PACK_FORMAT = 7;\r\nfunction initPackMcmetaSchemas(schemas, _) {\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('pack_mcmeta', core_1.Mod(core_1.ObjectNode({\r\n        pack: core_1.Mod(core_1.ObjectNode({\r\n            pack_format: core_1.Mod(core_1.NumberNode({ integer: true, min: CURRENT_PACK_FORMAT, max: CURRENT_PACK_FORMAT }), {\r\n                default: () => CURRENT_PACK_FORMAT,\r\n                canUpdate: (_p, v) => v !== CURRENT_PACK_FORMAT,\r\n                update: () => [{ name: 'pack_format', params: [CURRENT_PACK_FORMAT], newValue: CURRENT_PACK_FORMAT }]\r\n            }),\r\n            description: core_1.Reference(schemas, 'text_component')\r\n        }), {\r\n            default: () => ({\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            })\r\n        })\r\n    }), {\r\n        default: () => ({\r\n            pack: {\r\n                pack_format: CURRENT_PACK_FORMAT,\r\n                description: ''\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initPredicatesSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initPredicatesSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const StateChoice = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode(),\r\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: core_1.ObjectNode({\r\n                min: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                max: core_1.Opt(core_1.NumberNode({ integer: true }))\r\n            }),\r\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => v === 'true' || v === 1\r\n        }\r\n    ]);\r\n    schemas.register('item_predicate', core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\r\n        count: Reference('int_bounds'),\r\n        durability: Reference('int_bounds'),\r\n        potion: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\r\n        enchantments: core_1.Opt(core_1.ListNode(Reference('enchantment_predicate')))\r\n    }, { context: 'item' }));\r\n    schemas.register('enchantment_predicate', core_1.ObjectNode({\r\n        enchantment: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\r\n        levels: Reference('int_bounds')\r\n    }, { context: 'enchantment' }));\r\n    schemas.register('block_predicate', core_1.ObjectNode({\r\n        block: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'block' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\r\n    }, { context: 'block' }));\r\n    schemas.register('fluid_predicate', core_1.ObjectNode({\r\n        fluid: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\r\n        state: core_1.Opt(core_1.MapNode(StringNode(), StateChoice))\r\n    }, { context: 'fluid' }));\r\n    schemas.register('location_predicate', core_1.ObjectNode({\r\n        position: core_1.Opt(core_1.ObjectNode({\r\n            x: Reference('float_bounds'),\r\n            y: Reference('float_bounds'),\r\n            z: Reference('float_bounds')\r\n        })),\r\n        biome: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\r\n        feature: core_1.Opt(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\r\n        dimension: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\r\n        light: core_1.Opt(core_1.ObjectNode({\r\n            light: Reference('int_bounds')\r\n        })),\r\n        smokey: core_1.Opt(core_1.BooleanNode()),\r\n        block: core_1.Opt(Reference('block_predicate')),\r\n        fluid: core_1.Opt(Reference('fluid_predicate'))\r\n    }, { context: 'location' }));\r\n    schemas.register('statistic_predicate', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\r\n        stat: StringNode(),\r\n        value: Reference('int_bounds'),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:mined': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:crafted': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:used': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:broken': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:picked_up': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:dropped': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\r\n            },\r\n            'minecraft:killed': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:killed_by': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\r\n            },\r\n            'minecraft:custom': {\r\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\r\n            }\r\n        }\r\n    }));\r\n    schemas.register('player_predicate', core_1.ObjectNode({\r\n        gamemode: core_1.Opt(StringNode({ enum: 'gamemode' })),\r\n        level: Reference('int_bounds'),\r\n        advancements: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), core_1.ChoiceNode([\r\n            { type: 'boolean', node: core_1.BooleanNode(), change: _ => true },\r\n            {\r\n                type: 'object', node: core_1.MapNode(StringNode(), core_1.BooleanNode())\r\n            }\r\n        ]))),\r\n        recipes: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), core_1.BooleanNode())),\r\n        stats: core_1.Opt(core_1.ListNode(Reference('statistic_predicate')))\r\n    }, { context: 'player' }));\r\n    schemas.register('status_effect_predicate', core_1.ObjectNode({\r\n        amplifier: Reference('int_bounds'),\r\n        duration: Reference('int_bounds'),\r\n        ambient: core_1.Opt(core_1.BooleanNode()),\r\n        visible: core_1.Opt(core_1.BooleanNode())\r\n    }, { context: 'status_effect' }));\r\n    schemas.register('distance_predicate', core_1.ObjectNode({\r\n        x: Reference('float_bounds'),\r\n        y: Reference('float_bounds'),\r\n        z: Reference('float_bounds'),\r\n        absolute: Reference('float_bounds'),\r\n        horizontal: Reference('float_bounds')\r\n    }, { context: 'distance' }));\r\n    schemas.register('entity_predicate', core_1.ObjectNode({\r\n        type: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\r\n        team: core_1.Opt(StringNode({ validator: 'team' })),\r\n        location: core_1.Opt(Reference('location_predicate')),\r\n        distance: core_1.Opt(Reference('distance_predicate')),\r\n        flags: core_1.Opt(core_1.ObjectNode({\r\n            is_on_fire: core_1.Opt(core_1.BooleanNode()),\r\n            is_sneaking: core_1.Opt(core_1.BooleanNode()),\r\n            is_sprinting: core_1.Opt(core_1.BooleanNode()),\r\n            is_swimming: core_1.Opt(core_1.BooleanNode()),\r\n            is_baby: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        equipment: core_1.Opt(core_1.MapNode(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\r\n        vehicle: core_1.Opt(Reference('entity_predicate')),\r\n        targeted_entity: core_1.Opt(Reference('entity_predicate')),\r\n        player: core_1.Opt(Reference('player_predicate')),\r\n        fishing_hook: core_1.Opt(core_1.ObjectNode({\r\n            in_open_water: core_1.Opt(core_1.BooleanNode())\r\n        })),\r\n        effects: core_1.Opt(core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\r\n    }, { context: 'entity' }));\r\n    schemas.register('damage_source_predicate', core_1.ObjectNode({\r\n        is_explosion: core_1.Opt(core_1.BooleanNode()),\r\n        is_fire: core_1.Opt(core_1.BooleanNode()),\r\n        is_magic: core_1.Opt(core_1.BooleanNode()),\r\n        is_projectile: core_1.Opt(core_1.BooleanNode()),\r\n        is_lightning: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_armor: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_invulnerability: core_1.Opt(core_1.BooleanNode()),\r\n        bypasses_magic: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        direct_entity: core_1.Opt(Reference('entity_predicate'))\r\n    }, { context: 'damage_source' }));\r\n    schemas.register('damage_predicate', core_1.ObjectNode({\r\n        dealt: Reference('float_bounds'),\r\n        taken: Reference('float_bounds'),\r\n        blocked: core_1.Opt(core_1.BooleanNode()),\r\n        source_entity: core_1.Opt(Reference('entity_predicate')),\r\n        type: core_1.Opt(Reference('damage_source_predicate'))\r\n    }, { context: 'damage' }));\r\n}\r\nexports.initPredicatesSchemas = initPredicatesSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initRecipeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initRecipeSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('recipe', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:crafting_shaped': {\r\n                group: core_1.Opt(StringNode({ enum: 'recipe_group', additional: true })),\r\n                pattern: core_1.ListNode(StringNode()),\r\n                key: core_1.MapNode(StringNode(), // TODO: add validation\r\n                Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:crafting_shapeless': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredients: core_1.ListNode(Reference('recipe_ingredient')),\r\n                result: Reference('recipe_result')\r\n            },\r\n            'minecraft:smelting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 200 }))\r\n            },\r\n            'minecraft:blasting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:smoking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:campfire_cooking': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                experience: core_1.Opt(core_1.NumberNode()),\r\n                cookingtime: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 100 }))\r\n            },\r\n            'minecraft:stonecutting': {\r\n                group: core_1.Opt(StringNode()),\r\n                ingredient: Reference('recipe_ingredient'),\r\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                count: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:smithing': {\r\n                group: core_1.Opt(StringNode()),\r\n                base: Reference('recipe_ingredient_object'),\r\n                addition: Reference('recipe_ingredient_object'),\r\n                result: Reference('recipe_result')\r\n            }\r\n        }\r\n    }, { context: 'recipe' }), {\r\n        default: () => ({\r\n            type: 'minecraft:crafting_shaped'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('recipe_ingredient_object'),\r\n            change: v => v[0]\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: core_1.ListNode(Reference('recipe_ingredient_object')),\r\n            change: v => [v]\r\n        }\r\n    ]), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_ingredient_object', core_1.Mod(core_1.ObjectNode({\r\n        item: core_1.Opt(StringNode({ validator: 'resource', params: { pool: 'item' } })),\r\n        tag: core_1.Opt(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n    schemas.register('recipe_result', core_1.Mod(core_1.ObjectNode({\r\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n        count: core_1.Opt(core_1.Mod(core_1.NumberNode({ integer: true }), { default: () => 1 }))\r\n    }), {\r\n        default: () => ({\r\n            item: 'minecraft:stone'\r\n        })\r\n    }));\r\n}\r\nexports.initRecipeSchemas = initRecipeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTagsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTagsSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const TagBase = (type) => core_1.Mod(core_1.ObjectNode({\r\n        replace: core_1.Opt(core_1.BooleanNode()),\r\n        values: core_1.ListNode(core_1.ChoiceNode([\r\n            {\r\n                type: 'string',\r\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\r\n                change: v => v.id\r\n            },\r\n            {\r\n                type: 'object',\r\n                node: core_1.ObjectNode({\r\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\r\n                    required: core_1.BooleanNode()\r\n                }),\r\n                change: v => ({ id: v })\r\n            }\r\n        ])),\r\n    }, { context: 'tag' }), {\r\n        default: () => ({\r\n            values: []\r\n        })\r\n    });\r\n    schemas.register('block_tag', TagBase('block'));\r\n    schemas.register('entity_type_tag', TagBase('entity_type'));\r\n    schemas.register('fluid_tag', TagBase('fluid'));\r\n    schemas.register('function_tag', TagBase('$function'));\r\n    schemas.register('game_event_tag', TagBase('game_event'));\r\n    schemas.register('item_tag', TagBase('item'));\r\n}\r\nexports.initTagsSchemas = initTagsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTextComponentSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initTextComponentSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\r\n    schemas.register('text_component', core_1.Mod(core_1.ChoiceNode([\r\n        {\r\n            type: 'object',\r\n            node: Reference('text_component_object'),\r\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\r\n        },\r\n        {\r\n            type: 'list',\r\n            node: Reference('text_component_list'),\r\n            change: v => [v]\r\n        },\r\n        {\r\n            type: 'string',\r\n            priority: 1,\r\n            node: StringNode(),\r\n            change: getSimpleString\r\n        },\r\n        {\r\n            type: 'number',\r\n            node: core_1.NumberNode(),\r\n            change: v => {\r\n                const n = parseFloat(getSimpleString(v));\r\n                return isFinite(n) ? n : (!!v ? 1 : 0);\r\n            }\r\n        },\r\n        {\r\n            type: 'boolean',\r\n            node: core_1.BooleanNode(),\r\n            change: v => {\r\n                const s = getSimpleString(v);\r\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\r\n            }\r\n        }\r\n    ], { context: 'text_component' }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_object', core_1.Mod(core_1.ObjectNode({\r\n        text: core_1.Opt(core_1.Keep(StringNode())),\r\n        translate: core_1.Opt(core_1.Keep(StringNode())),\r\n        with: core_1.Opt(Reference('text_component_list')),\r\n        score: core_1.Opt(core_1.ObjectNode({\r\n            name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\r\n            objective: StringNode({ validator: 'objective' }),\r\n            value: core_1.Opt(StringNode())\r\n        })),\r\n        selector: core_1.Opt(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\r\n        keybind: core_1.Opt(StringNode({ enum: 'keybind', additional: true })),\r\n        nbt: core_1.Opt(StringNode({ validator: 'nbt_path' })),\r\n        interpret: core_1.Opt(core_1.Has('nbt', core_1.BooleanNode())),\r\n        block: core_1.Opt(core_1.Has('nbt', StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } }))),\r\n        entity: core_1.Opt(core_1.Has('nbt', StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities' } }))),\r\n        storage: core_1.Opt(core_1.Has('nbt', StringNode({ validator: 'resource', params: { pool: '$storage' } }))),\r\n        extra: core_1.Opt(Reference('text_component_list')),\r\n        color: core_1.Opt(StringNode()) /* TODO */,\r\n        font: core_1.Opt(StringNode()),\r\n        bold: core_1.Opt(core_1.BooleanNode()),\r\n        italic: core_1.Opt(core_1.BooleanNode()),\r\n        underlined: core_1.Opt(core_1.BooleanNode()),\r\n        strikethrough: core_1.Opt(core_1.BooleanNode()),\r\n        obfuscated: core_1.Opt(core_1.BooleanNode()),\r\n        insertion: core_1.Opt(StringNode()),\r\n        clickEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\r\n            [core_1.Switch]: path => path.push('action'),\r\n            [core_1.Case]: {\r\n                'change_page': {\r\n                    value: StringNode()\r\n                },\r\n                'copy_to_clipboard': {\r\n                    value: StringNode()\r\n                },\r\n                'open_file': {\r\n                    value: StringNode()\r\n                },\r\n                'open_url': {\r\n                    value: StringNode()\r\n                },\r\n                'run_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                },\r\n                'suggest_command': {\r\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\r\n                }\r\n            }\r\n        })),\r\n        hoverEvent: core_1.Opt(core_1.ObjectNode({\r\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\r\n            [core_1.Switch]: path => path.push('action'),\r\n            [core_1.Case]: {\r\n                'show_text': {\r\n                    value: core_1.Opt(Reference('text_component')),\r\n                    contents: core_1.Opt(Reference('text_component'))\r\n                },\r\n                'show_item': {\r\n                    value: core_1.Opt(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\r\n                    contents: core_1.Opt(core_1.ObjectNode({\r\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\r\n                        count: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                        tag: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\r\n                    }))\r\n                },\r\n                'show_entity': {\r\n                    value: core_1.Opt(core_1.ObjectNode({\r\n                        name: core_1.Opt(StringNode()),\r\n                        type: core_1.Opt(StringNode()),\r\n                        id: core_1.Opt(StringNode())\r\n                    })),\r\n                    contents: core_1.Opt(core_1.Mod(core_1.ObjectNode({\r\n                        name: core_1.Opt(Reference('text_component')),\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n                        id: StringNode({ validator: 'uuid' })\r\n                    }), {\r\n                        default: () => ({\r\n                            type: 'minecraft:pig',\r\n                            id: '00000001-0001-0001-0001-000000000001'\r\n                        })\r\n                    }))\r\n                }\r\n            }\r\n        }))\r\n    }, { context: 'text_component_object', collapse: true }), {\r\n        default: () => ({\r\n            text: \"\"\r\n        })\r\n    }));\r\n    schemas.register('text_component_list', core_1.Mod(core_1.ListNode(Reference('text_component')), {\r\n        default: () => [{\r\n                text: \"\"\r\n            }]\r\n    }));\r\n}\r\nexports.initTextComponentSchemas = initTextComponentSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initWorldSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('world_settings', core_1.Mod(core_1.ObjectNode({\r\n        generate_features: core_1.BooleanNode(),\r\n        bonus_chest: core_1.BooleanNode(),\r\n        seed: core_1.NumberNode({ integer: true }),\r\n        dimensions: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\r\n    }, { context: 'world_settings' }), {\r\n        default: () => {\r\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\r\n            return {\r\n                generate_features: true,\r\n                bonus_chest: false,\r\n                seed,\r\n                dimensions: {\r\n                    'minecraft:overworld': {\r\n                        type: 'minecraft:overworld',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:vanilla_layered',\r\n                                seed\r\n                            },\r\n                            settings: 'minecraft:overworld',\r\n                        }\r\n                    },\r\n                    'minecraft:the_nether': {\r\n                        type: 'minecraft:the_nether',\r\n                        generator: {\r\n                            type: 'minecraft:noise',\r\n                            seed,\r\n                            biome_source: {\r\n                                type: 'minecraft:multi_noise',\r\n                                seed,\r\n                                humidity_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                altitude_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                weirdness_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                temperature_noise: {\r\n                                    firstOctave: -7,\r\n                                    amplitudes: [1.0, 1.0]\r\n                                },\r\n                                biomes: [\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: 0.0 },\r\n                                        biome: 'minecraft:nether_wastes'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.0, humidity: -0.5 },\r\n                                        biome: 'minecraft:soul_sand_valley'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.0, temperature: 0.4, humidity: 0.0 },\r\n                                        biome: 'minecraft:crimson_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.375, temperature: 0.0, humidity: 0.5 },\r\n                                        biome: 'minecraft:warped_forest'\r\n                                    },\r\n                                    {\r\n                                        parameters: { altitude: 0.0, weirdness: 0.0, offset: 0.175, temperature: -0.5, humidity: 0.0 },\r\n                                        biome: 'minecraft:basalt_deltas'\r\n                                    }\r\n                                ]\r\n                            },\r\n                            settings: 'minecraft:nether'\r\n                        }\r\n                    },\r\n                    'minecraft:the_end': {\r\n                        type: \"minecraft:the_end\",\r\n                        generator: {\r\n                            type: \"minecraft:noise\",\r\n                            seed,\r\n                            biome_source: {\r\n                                type: \"minecraft:the_end\",\r\n                                seed\r\n                            },\r\n                            settings: \"minecraft:end\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }));\r\n}\r\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSchemas = void 0;\r\nconst Advancement_1 = require(\"./Advancement\");\r\nconst Common_1 = require(\"./Common\");\r\nconst Condition_1 = require(\"./Condition\");\r\nconst Dimension_1 = require(\"./Dimension\");\r\nconst DimensionType_1 = require(\"./DimensionType\");\r\nconst ItemModifier_1 = require(\"./ItemModifier\");\r\nconst LootTable_1 = require(\"./LootTable\");\r\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\r\nconst Predicates_1 = require(\"./Predicates\");\r\nconst Recipe_1 = require(\"./Recipe\");\r\nconst Tags_1 = require(\"./Tags\");\r\nconst TextComponent_1 = require(\"./TextComponent\");\r\nconst worldgen_1 = require(\"./worldgen\");\r\nconst WorldSettings_1 = require(\"./WorldSettings\");\r\nfunction initSchemas(schemas, collections) {\r\n    // `Common.ts` is the only file that has exports. It should be initialized first. \r\n    Common_1.initCommonSchemas(schemas, collections);\r\n    Advancement_1.initAdvancementSchemas(schemas, collections);\r\n    Condition_1.initConditionSchemas(schemas, collections);\r\n    DimensionType_1.initDimensionTypeSchemas(schemas, collections);\r\n    Dimension_1.initDimensionSchemas(schemas, collections);\r\n    ItemModifier_1.initItemModifierSchemas(schemas, collections);\r\n    LootTable_1.initLootTableSchemas(schemas, collections);\r\n    PackMcmeta_1.initPackMcmetaSchemas(schemas, collections);\r\n    Predicates_1.initPredicatesSchemas(schemas, collections);\r\n    Recipe_1.initRecipeSchemas(schemas, collections);\r\n    Tags_1.initTagsSchemas(schemas, collections);\r\n    TextComponent_1.initTextComponentSchemas(schemas, collections);\r\n    worldgen_1.initWorldgenSchemas(schemas, collections);\r\n    WorldSettings_1.initWorldSettingsSchemas(schemas, collections);\r\n}\r\nexports.initSchemas = initSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initBiomeSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initBiomeSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('biome', core_1.Mod(core_1.ObjectNode({\r\n        surface_builder: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_surface_builder' } }),\r\n        depth: core_1.NumberNode(),\r\n        scale: core_1.NumberNode(),\r\n        temperature: core_1.NumberNode(),\r\n        downfall: core_1.NumberNode(),\r\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\r\n        temperature_modifier: core_1.Opt(StringNode({ enum: ['none', 'frozen'] })),\r\n        category: StringNode({ enum: 'biome_category' }),\r\n        player_spawn_friendly: core_1.Opt(core_1.BooleanNode()),\r\n        creature_spawn_probability: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n        effects: core_1.ObjectNode({\r\n            sky_color: core_1.NumberNode({ color: true }),\r\n            fog_color: core_1.NumberNode({ color: true }),\r\n            water_color: core_1.NumberNode({ color: true }),\r\n            water_fog_color: core_1.NumberNode({ color: true }),\r\n            grass_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            foliage_color: core_1.Opt(core_1.NumberNode({ color: true })),\r\n            grass_color_modifier: core_1.Opt(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\r\n            ambient_sound: core_1.Opt(StringNode()),\r\n            mood_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_delay: core_1.NumberNode({ integer: true }),\r\n                block_search_extent: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode()\r\n            })),\r\n            additions_sound: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                tick_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n            })),\r\n            music: core_1.Opt(core_1.ObjectNode({\r\n                sound: StringNode(),\r\n                min_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                max_delay: core_1.NumberNode({ integer: true, min: 0 }),\r\n                replace_current_music: core_1.BooleanNode()\r\n            })),\r\n            particle: core_1.Opt(core_1.ObjectNode({\r\n                options: core_1.ObjectNode({\r\n                    type: StringNode()\r\n                }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            }))\r\n        }),\r\n        starts: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_structure_feature' } })),\r\n        spawners: core_1.MapNode(StringNode({ enum: [\r\n                'water_ambient',\r\n                'ambient',\r\n                'misc',\r\n                'water_creature',\r\n                'creature',\r\n                'monster'\r\n            ] }), core_1.Mod(core_1.ListNode(core_1.ObjectNode({\r\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\r\n            weight: core_1.NumberNode({ integer: true }),\r\n            minCount: core_1.NumberNode({ integer: true }),\r\n            maxCount: core_1.NumberNode({ integer: true })\r\n        })), {\r\n            category: () => 'pool',\r\n            default: () => [{\r\n                    type: 'minecraft:bat',\r\n                    weight: 1\r\n                }]\r\n        })),\r\n        spawn_costs: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), core_1.Mod(core_1.ObjectNode({\r\n            energy_budget: core_1.NumberNode(),\r\n            charge: core_1.NumberNode()\r\n        }, { category: 'function' }), {\r\n            default: () => ({\r\n                energy_budget: 0.12,\r\n                charge: 1.0\r\n            })\r\n        })),\r\n        carvers: core_1.MapNode(StringNode({ enum: ['air', 'liquid'] }), core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\r\n            default: () => ['minecraft:cave']\r\n        })),\r\n        features: core_1.ListNode(core_1.Mod(core_1.ListNode(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })), { category: () => 'predicate' }))\r\n    }, { context: 'biome' }), {\r\n        default: () => ({\r\n            surface_builder: 'minecraft:grass',\r\n            depth: 0.125,\r\n            scale: 0.05,\r\n            temperature: 0.8,\r\n            downfall: 0.4,\r\n            precipitation: 'rain',\r\n            category: 'plains',\r\n            effects: {\r\n                sky_color: 7907327,\r\n                fog_color: 12638463,\r\n                water_color: 4159204,\r\n                water_fog_color: 329011\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initBiomeSchemas = initBiomeSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initCarverSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initCarverSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('configured_carver', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\r\n        config: core_1.ObjectNode({\r\n            probability: core_1.NumberNode({ min: 0, max: 1 })\r\n        })\r\n    }, { context: 'carver' }), {\r\n        default: () => ({\r\n            type: 'minecraft:cave',\r\n            config: {\r\n                probability: 0.1\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initCarverSchemas = initCarverSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initDecoratorSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initDecoratorSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RangeConfig = {\r\n        maximum: core_1.NumberNode({ integer: true }),\r\n        bottom_offset: core_1.NumberNode({ integer: true }),\r\n        top_offset: core_1.NumberNode({ integer: true })\r\n    };\r\n    const ChanceConfig = {\r\n        chance: core_1.NumberNode({ integer: true, min: 0 })\r\n    };\r\n    const CountConfig = {\r\n        count: Common_1.UniformInt({ min: -10, max: 128, maxSpread: 128 })\r\n    };\r\n    schemas.register('configured_decorator', core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/decorator' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: path => path.pop().push('type'),\r\n            [core_1.Case]: {\r\n                'minecraft:carving_mask': {\r\n                    step: StringNode({ enum: 'generation_step' }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:chance': ChanceConfig,\r\n                'minecraft:count': CountConfig,\r\n                'minecraft:count_extra': {\r\n                    count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_count: core_1.NumberNode({ integer: true, min: 0 }),\r\n                    extra_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:count_multilayer': CountConfig,\r\n                'minecraft:count_noise': {\r\n                    noise_level: core_1.NumberNode(),\r\n                    below_noise: core_1.NumberNode({ integer: true }),\r\n                    above_noise: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:count_noise_biased': {\r\n                    noise_to_count_ratio: core_1.NumberNode({ integer: true }),\r\n                    noise_factor: core_1.NumberNode(),\r\n                    noise_offset: core_1.NumberNode()\r\n                },\r\n                'minecraft:decorated': {\r\n                    outer: Reference('configured_decorator'),\r\n                    inner: Reference('configured_decorator')\r\n                },\r\n                'minecraft:depth_average': {\r\n                    baseline: core_1.NumberNode({ integer: true }),\r\n                    spread: core_1.NumberNode({ integer: true })\r\n                },\r\n                'minecraft:fire': CountConfig,\r\n                'minecraft:glowstone': CountConfig,\r\n                'minecraft:lava_lake': ChanceConfig,\r\n                'minecraft:range': RangeConfig,\r\n                'minecraft:range_biased': RangeConfig,\r\n                'minecraft:range_very_biased': RangeConfig,\r\n                'minecraft:water_lake': ChanceConfig\r\n            }\r\n        }, { context: 'decorator', category: 'predicate' })\r\n    }, { context: 'decorator', category: 'predicate' }));\r\n}\r\nexports.initDecoratorSchemas = initDecoratorSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nrequire(\"./Decorator\");\r\nrequire(\"./ProcessorList\");\r\nfunction initFeatureSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const RandomPatchConfig = {\r\n        can_replace: core_1.BooleanNode(),\r\n        project: core_1.BooleanNode(),\r\n        need_water: core_1.BooleanNode(),\r\n        xspread: core_1.NumberNode({ integer: true }),\r\n        yspread: core_1.NumberNode({ integer: true }),\r\n        zspread: core_1.NumberNode({ integer: true }),\r\n        tries: core_1.NumberNode({ integer: true }),\r\n        state_provider: Reference('block_state_provider'),\r\n        block_placer: Reference('block_placer'),\r\n        whitelist: core_1.ListNode(Reference('block_state')),\r\n        blacklist: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const DiskConfig = {\r\n        state: Reference('block_state'),\r\n        radius: Common_1.UniformInt({ min: 0, max: 4, maxSpread: 4 }),\r\n        half_height: core_1.NumberNode({ integer: true, min: 0, max: 4 }),\r\n        targets: core_1.ListNode(Reference('block_state'))\r\n    };\r\n    const HugeMushroomConfig = {\r\n        cap_provider: Reference('block_state_provider'),\r\n        stem_provider: Reference('block_state_provider'),\r\n        foliage_radius: core_1.NumberNode({ integer: true })\r\n    };\r\n    const OreConfig = {\r\n        state: Reference('block_state'),\r\n        size: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n        target: Reference('rule_test')\r\n    };\r\n    const CountConfig = {\r\n        count: Common_1.UniformInt({ min: -10, max: 128, maxSpread: 128 })\r\n    };\r\n    const Feature = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('configured_feature')\r\n        }\r\n    ], { choiceContext: 'feature' });\r\n    schemas.register('configured_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: path => path.pop().push('type'),\r\n            [core_1.Case]: {\r\n                'minecraft:bamboo': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:basalt_columns': {\r\n                    reach: Common_1.UniformInt({ min: 0, max: 2, maxSpread: 1 }),\r\n                    height: Common_1.UniformInt({ min: 1, max: 5, maxSpread: 5 })\r\n                },\r\n                'minecraft:block_pile': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:decorated': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:decorated_flower': {\r\n                    decorator: Reference('configured_decorator'),\r\n                    feature: Feature\r\n                },\r\n                'minecraft:delta_feature': {\r\n                    contents: Reference('block_state'),\r\n                    rim: Reference('block_state'),\r\n                    size: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                    rim_size: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 })\r\n                },\r\n                'minecraft:disk': DiskConfig,\r\n                'minecraft:dripstone_cluster': {\r\n                    floor_to_ceiling_search_range: core_1.NumberNode({ integer: true, min: 1, max: 512 }),\r\n                    height: Common_1.UniformInt({ min: 1, max: 64, maxSpread: 64 }),\r\n                    radius: Common_1.UniformInt({ min: 1, max: 64, maxSpread: 64 }),\r\n                    max_stalagmite_stalactite_height_diff: core_1.NumberNode({ integer: true, min: 0, max: 64 }),\r\n                    height_deviation: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    dripstone_block_layer_thickness: Common_1.UniformInt({ min: 0, max: 64, maxSpread: 64 }),\r\n                    density: Common_1.UniformFloat({ min: 0, max: 1, maxSpread: 1 }),\r\n                    wetness: Common_1.UniformFloat({ min: 0, max: 1, maxSpread: 1 }),\r\n                    wetness_mean: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    wetness_deviation: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    chance_of_dripstone_column_at_max_distance_from_center: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    max_distance_from_center_affecting_chance_of_dripstone_column: core_1.NumberNode({ integer: true, min: 1, max: 64 }),\r\n                    max_distance_from_center_affecting_height_bias: core_1.NumberNode({ integer: true, min: 1, max: 64 })\r\n                },\r\n                'minecraft:emerald_ore': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state')\r\n                },\r\n                'minecraft:end_gateway': {\r\n                    exact: core_1.BooleanNode(),\r\n                    exit: Reference('block_pos')\r\n                },\r\n                'minecraft:end_spike': {\r\n                    crystal_invulnerable: core_1.BooleanNode(),\r\n                    crystal_beam_target: Reference('block_pos'),\r\n                    spikes: core_1.ListNode(core_1.ObjectNode({\r\n                        centerX: core_1.NumberNode({ integer: true }),\r\n                        centerZ: core_1.NumberNode({ integer: true }),\r\n                        radius: core_1.NumberNode({ integer: true }),\r\n                        height: core_1.NumberNode({ integer: true }),\r\n                        guarded: core_1.BooleanNode()\r\n                    }))\r\n                },\r\n                'minecraft:fill_layer': {\r\n                    state: Reference('block_state'),\r\n                    height: core_1.NumberNode({ integer: true, min: 0, max: 255 })\r\n                },\r\n                'minecraft:flower': RandomPatchConfig,\r\n                'minecraft:forest_rock': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:geode': {\r\n                    blocks: core_1.ObjectNode({\r\n                        filling_provider: Reference('block_state_provider'),\r\n                        inner_layer_provider: Reference('block_state_provider'),\r\n                        alternate_inner_layer_provider: Reference('block_state_provider'),\r\n                        middle_layer_provider: Reference('block_state_provider'),\r\n                        outer_layer_provider: Reference('block_state_provider'),\r\n                        inner_placements: core_1.ListNode(Reference('block_state'))\r\n                    }),\r\n                    layers: core_1.ObjectNode({\r\n                        filling: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        inner_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        middle_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                        outer_layer: core_1.Opt(core_1.NumberNode({ min: 0.01, max: 50 })),\r\n                    }),\r\n                    crack: core_1.ObjectNode({\r\n                        generate_crack_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                        base_crack_size: core_1.Opt(core_1.NumberNode({ min: 0, max: 5 })),\r\n                        crack_point_offset: core_1.Opt(core_1.NumberNode({ min: 0, max: 10, integer: true })),\r\n                    }),\r\n                    noise_multiplier: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    use_potential_placements_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    use_alternate_layer0_chance: core_1.Opt(core_1.NumberNode({ min: 0, max: 1 })),\r\n                    placements_require_layer0_alternate: core_1.Opt(core_1.BooleanNode()),\r\n                    min_outer_wall_distance: core_1.Opt(core_1.NumberNode({ min: 1, max: 10, integer: true })),\r\n                    max_outer_wall_distance: core_1.Opt(core_1.NumberNode({ min: 1, max: 20, integer: true })),\r\n                    min_distribution_points: core_1.Opt(core_1.NumberNode({ min: 1, max: 10, integer: true })),\r\n                    max_distribution_points: core_1.Opt(core_1.NumberNode({ min: 1, max: 20, integer: true })),\r\n                    min_point_offset: core_1.Opt(core_1.NumberNode({ min: 1, max: 10, integer: true })),\r\n                    max_point_offset: core_1.Opt(core_1.NumberNode({ min: 1, max: 10, integer: true })),\r\n                    min_gen_offset: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                    max_gen_offset: core_1.Opt(core_1.NumberNode({ integer: true })),\r\n                },\r\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\r\n                'minecraft:huge_fungus': {\r\n                    hat_state: Reference('block_state'),\r\n                    decor_state: Reference('block_state'),\r\n                    stem_state: Reference('block_state'),\r\n                    valid_base_block: Reference('block_state'),\r\n                    planted: core_1.BooleanNode()\r\n                },\r\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\r\n                'minecraft:ice_patch': DiskConfig,\r\n                'minecraft:iceberg': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:lake': {\r\n                    state: Reference('block_state')\r\n                },\r\n                'minecraft:large_dripstone': {\r\n                    floor_to_ceiling_search_range: core_1.Opt(core_1.NumberNode({ integer: true, min: 1, max: 512 })),\r\n                    column_radius: Common_1.UniformInt({ min: 1, max: 30, maxSpread: 30 }),\r\n                    height_scale: Common_1.UniformFloat({ min: 0, max: 10, maxSpread: 10 }),\r\n                    max_column_radius_to_cave_height_ratio: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    stalactite_bluntness: Common_1.UniformFloat({ min: 0.1, max: 5, maxSpread: 5 }),\r\n                    stalagmite_bluntness: Common_1.UniformFloat({ min: 0.1, max: 5, maxSpread: 5 }),\r\n                    wind_speed: Common_1.UniformFloat({ min: 0, max: 1, maxSpread: 1 }),\r\n                    min_radius_for_wind: core_1.NumberNode({ integer: true, min: 0, max: 100 }),\r\n                    min_bluntness_for_wind: core_1.NumberNode({ min: 0, max: 5 })\r\n                },\r\n                'minecraft:nether_forest_vegetation': {\r\n                    state_provider: Reference('block_state_provider')\r\n                },\r\n                'minecraft:netherrack_replace_blobs': {\r\n                    state: Reference('block_state'),\r\n                    target: Reference('block_state'),\r\n                    radius: Common_1.UniformInt()\r\n                },\r\n                'minecraft:no_surface_ore': OreConfig,\r\n                'minecraft:ore': OreConfig,\r\n                'minecraft:random_patch': RandomPatchConfig,\r\n                'minecraft:random_boolean_selector': {\r\n                    feature_false: Feature,\r\n                    feature_true: Feature\r\n                },\r\n                'minecraft:random_selector': {\r\n                    features: core_1.ListNode(core_1.ObjectNode({\r\n                        chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n                        feature: Feature\r\n                    })),\r\n                    default: Feature\r\n                },\r\n                'minecraft:sea_pickle': CountConfig,\r\n                'minecraft:seagrass': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:simple_block': {\r\n                    to_place: Reference('block_state'),\r\n                    place_on: core_1.ListNode(Reference('block_state')),\r\n                    place_in: core_1.ListNode(Reference('block_state')),\r\n                    place_under: core_1.ListNode(Reference('block_state'))\r\n                },\r\n                'minecraft:simple_random_selector': {\r\n                    features: core_1.ListNode(Feature)\r\n                },\r\n                'minecraft:small_dripstone': {\r\n                    max_placements: core_1.NumberNode({ integer: true, min: 0, max: 100 }),\r\n                    empty_space_search_radius: core_1.NumberNode({ integer: true, min: 0, max: 20 }),\r\n                    max_offset_from_origin: core_1.NumberNode({ integer: true, min: 0, max: 20 }),\r\n                    chance_of_taller_dripstone: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 1 }))\r\n                },\r\n                'minecraft:spring_feature': {\r\n                    state: Reference('fluid_state'),\r\n                    rock_count: core_1.NumberNode({ integer: true }),\r\n                    hole_count: core_1.NumberNode({ integer: true }),\r\n                    requires_block_below: core_1.BooleanNode(),\r\n                    valid_blocks: core_1.ListNode(StringNode({ validator: 'resource', params: { pool: 'block' } }))\r\n                },\r\n                'minecraft:tree': {\r\n                    max_water_depth: core_1.NumberNode({ integer: true }),\r\n                    ignore_vines: core_1.BooleanNode(),\r\n                    heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                    minimum_size: Reference('feature_size'),\r\n                    trunk_provider: Reference('block_state_provider'),\r\n                    leaves_provider: Reference('block_state_provider'),\r\n                    trunk_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\r\n                        base_height: core_1.NumberNode({ integer: true, min: 0, max: 32 }),\r\n                        height_rand_a: core_1.NumberNode({ integer: true, min: 0, max: 24 }),\r\n                        height_rand_b: core_1.NumberNode({ integer: true, min: 0, max: 24 })\r\n                    }, { context: 'trunk_placer' }),\r\n                    foliage_placer: core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\r\n                        radius: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                        offset: Common_1.UniformInt({ min: 0, max: 8, maxSpread: 8 }),\r\n                        [core_1.Switch]: path => path.push('type'),\r\n                        [core_1.Case]: {\r\n                            'minecraft:blob_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:bush_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:fancy_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:jungle_foliage_placer': {\r\n                                height: core_1.NumberNode({ integer: true, min: 0, max: 16 })\r\n                            },\r\n                            'minecraft:mega_pine_foliage_placer': {\r\n                                crown_height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            },\r\n                            'minecraft:pine_foliage_placer': {\r\n                                height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            },\r\n                            'minecraft:spruce_foliage_placer': {\r\n                                trunk_height: Common_1.UniformInt({ min: 0, max: 16, maxSpread: 8 })\r\n                            }\r\n                        }\r\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\r\n                    decorators: core_1.ListNode(core_1.ObjectNode({\r\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\r\n                        [core_1.Switch]: path => path.push('type'),\r\n                        [core_1.Case]: {\r\n                            'minecraft:alter_ground': {\r\n                                provider: Reference('block_state_provider')\r\n                            },\r\n                            'minecraft:beehive': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            },\r\n                            'minecraft:cocoa': {\r\n                                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                            }\r\n                        }\r\n                    }, { context: 'tree_decorator' }))\r\n                }\r\n            }\r\n        }, { context: 'feature' })\r\n    }, { context: 'feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:decorated',\r\n            config: {\r\n                decorator: {\r\n                    type: 'minecraft:count',\r\n                    config: {\r\n                        count: 4\r\n                    }\r\n                },\r\n                feature: {\r\n                    type: 'minecraft:tree',\r\n                    config: {\r\n                        max_water_depth: 0,\r\n                        ignore_vines: true,\r\n                        minimum_size: {},\r\n                        trunk_placer: {\r\n                            base_height: 5,\r\n                            height_rand_a: 2,\r\n                            height_rand_b: 0\r\n                        },\r\n                        foliage_placer: {\r\n                            radius: 2,\r\n                            offset: 0,\r\n                            height: 3\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('feature_size', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\r\n        min_clipped_height: core_1.Opt(core_1.NumberNode({ min: 0, max: 80 })),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:two_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 81 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            },\r\n            'minecraft:three_layers_feature_size': {\r\n                limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                upper_limit: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 80 })),\r\n                lower_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                middle_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 })),\r\n                upper_size: core_1.Opt(core_1.NumberNode({ integer: true, min: 0, max: 16 }))\r\n            }\r\n        }\r\n    }, { disableSwitchContext: true }), {\r\n        default: () => ({\r\n            type: 'minecraft:two_layers_feature_size'\r\n        })\r\n    }));\r\n    schemas.register('block_state_provider', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:rotated_block_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:simple_state_provider': {\r\n                state: Reference('block_state')\r\n            },\r\n            'minecraft:weighted_state_provider': {\r\n                entries: core_1.ListNode(core_1.Mod(core_1.ObjectNode({\r\n                    weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n                    data: Reference('block_state')\r\n                }), {\r\n                    default: () => ({\r\n                        data: {}\r\n                    })\r\n                }))\r\n            }\r\n        }\r\n    }, { context: 'block_state_provider' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_state_provider'\r\n        })\r\n    }));\r\n    schemas.register('block_placer', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_placer_type' } }),\r\n        [core_1.Switch]: path => path.push('type'),\r\n        [core_1.Case]: {\r\n            'minecraft:column_placer': {\r\n                min_size: core_1.NumberNode({ integer: true }),\r\n                extra_size: core_1.NumberNode({ integer: true })\r\n            }\r\n        }\r\n    }, { context: 'block_placer' }), {\r\n        default: () => ({\r\n            type: 'minecraft:simple_block_placer'\r\n        })\r\n    }));\r\n}\r\nexports.initFeatureSchemas = initFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initNoiseSettingsSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nconst Common_1 = require(\"../Common\");\r\nfunction initNoiseSettingsSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('noise_settings', core_1.Mod(core_1.ObjectNode({\r\n        name: core_1.Mod(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings', isDefinition: true } }), {\r\n            enabled: (path) => path.getArray().length > 0\r\n        }),\r\n        bedrock_roof_position: core_1.NumberNode({ integer: true }),\r\n        bedrock_floor_position: core_1.NumberNode({ integer: true }),\r\n        sea_level: core_1.NumberNode({ integer: true }),\r\n        disable_mob_generation: core_1.BooleanNode(),\r\n        default_block: Reference('block_state'),\r\n        default_fluid: Reference('block_state'),\r\n        noise: core_1.ObjectNode({\r\n            min_y: core_1.NumberNode({ integer: true, min: -2048, max: 2047 }),\r\n            height: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            density_factor: core_1.NumberNode(),\r\n            density_offset: core_1.NumberNode(),\r\n            size_horizontal: core_1.NumberNode({ integer: true }),\r\n            size_vertical: core_1.NumberNode({ integer: true }),\r\n            simplex_surface_noise: core_1.BooleanNode(),\r\n            random_density_offset: core_1.Opt(core_1.BooleanNode()),\r\n            island_noise_override: core_1.Opt(core_1.BooleanNode()),\r\n            amplified: core_1.Opt(core_1.BooleanNode()),\r\n            sampling: core_1.ObjectNode({\r\n                xz_scale: core_1.NumberNode(),\r\n                y_scale: core_1.NumberNode(),\r\n                xz_factor: core_1.NumberNode(),\r\n                y_factor: core_1.NumberNode()\r\n            }),\r\n            bottom_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            }),\r\n            top_slide: core_1.ObjectNode({\r\n                target: core_1.NumberNode({ integer: true }),\r\n                size: core_1.NumberNode({ integer: true }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            })\r\n        }),\r\n        structures: Reference('generator_structures')\r\n    }, { context: 'noise_settings' }), node => ({\r\n        default: () => Common_1.DefaultNoiseSettings,\r\n        validate: (path, value, errors, options) => {\r\n            var _a, _b, _c, _d;\r\n            value = node.validate(path, value, errors, options);\r\n            if (((_a = value === null || value === void 0 ? void 0 : value.noise) === null || _a === void 0 ? void 0 : _a.min_y) + ((_b = value === null || value === void 0 ? void 0 : value.noise) === null || _b === void 0 ? void 0 : _b.height) > 2047) {\r\n                errors.add(path.push('noise').push('height'), 'error.min_y_plus_height', 2047);\r\n            }\r\n            if (((_c = value === null || value === void 0 ? void 0 : value.noise) === null || _c === void 0 ? void 0 : _c.height) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('height'), 'error.height_multiple', 16);\r\n            }\r\n            if (((_d = value === null || value === void 0 ? void 0 : value.noise) === null || _d === void 0 ? void 0 : _d.min_y) % 16 !== 0) {\r\n                errors.add(path.push('noise').push('min_y'), 'error.min_y_multiple', 16);\r\n            }\r\n            return value;\r\n        }\r\n    })));\r\n    schemas.register('generator_structures', core_1.ObjectNode({\r\n        stronghold: core_1.Opt(core_1.ObjectNode({\r\n            distance: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            spread: core_1.NumberNode({ integer: true, min: 0, max: 1023 }),\r\n            count: core_1.NumberNode({ integer: true, min: 1, max: 4095 })\r\n        })),\r\n        structures: core_1.MapNode(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), core_1.Mod(core_1.ObjectNode({\r\n            spacing: core_1.NumberNode({ integer: true, min: 0, max: 4096 }),\r\n            separation: core_1.Mod(core_1.NumberNode({ integer: true, min: 0, max: 4096 }), (node) => ({\r\n                validate: (path, value, errors, options) => {\r\n                    if (path.pop().push('spacing').get() <= value) {\r\n                        errors.add(path, 'error.separation_smaller_spacing');\r\n                    }\r\n                    return node.validate(path, value, errors, options);\r\n                }\r\n            })),\r\n            salt: core_1.NumberNode({ integer: true, min: 0 })\r\n        }, { context: 'generator_structure' }), {\r\n            default: () => ({\r\n                spacing: 10,\r\n                separation: 5,\r\n                salt: 0\r\n            })\r\n        }))\r\n    }));\r\n    schemas.register('generator_layer', core_1.Mod(core_1.ObjectNode({\r\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n        height: core_1.NumberNode({ integer: true, min: 1 })\r\n    }), {\r\n        default: () => ({\r\n            block: 'minecraft:stone',\r\n            height: 1\r\n        })\r\n    }));\r\n}\r\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initProcessorListSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initProcessorListSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    schemas.register('processor_list', core_1.Mod(core_1.ObjectNode({\r\n        processors: core_1.ListNode(Reference('processor'))\r\n    }, { context: 'processor_list' }), {\r\n        default: () => ({\r\n            processors: [{\r\n                    processor_type: 'minecraft:rule',\r\n                    rules: [{\r\n                            location_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            },\r\n                            input_predicate: {\r\n                                predicate_type: 'minecraft:always_true'\r\n                            }\r\n                        }]\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor', core_1.Mod(core_1.ObjectNode({\r\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\r\n        [core_1.Switch]: path => path.push('processor_type'),\r\n        [core_1.Case]: {\r\n            'minecraft:block_age': {\r\n                mossiness: core_1.NumberNode()\r\n            },\r\n            'minecraft:block_ignore': {\r\n                blocks: core_1.ListNode(Reference('block_state'))\r\n            },\r\n            'minecraft:block_rot': {\r\n                integrity: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:gravity': {\r\n                heightmap: StringNode({ enum: 'heightmap_type' }),\r\n                offset: core_1.NumberNode({ integer: true })\r\n            },\r\n            'minecraft:rule': {\r\n                rules: core_1.ListNode(Reference('processor_rule'))\r\n            }\r\n        }\r\n    }, { category: 'function', context: 'processor' }), {\r\n        default: () => ({\r\n            processor_type: 'minecraft:rule',\r\n            rules: [{\r\n                    location_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    },\r\n                    input_predicate: {\r\n                        predicate_type: 'minecraft:always_true'\r\n                    }\r\n                }]\r\n        })\r\n    }));\r\n    schemas.register('processor_rule', core_1.Mod(core_1.ObjectNode({\r\n        position_predicate: core_1.Opt(Reference('pos_rule_test')),\r\n        location_predicate: Reference('rule_test'),\r\n        input_predicate: Reference('rule_test'),\r\n        output_state: Reference('block_state'),\r\n        output_nbt: core_1.Opt(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\r\n    }, { category: 'predicate', context: 'processor_rule' }), {\r\n        default: () => ({\r\n            location_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            },\r\n            input_predicate: {\r\n                predicate_type: 'minecraft:always_true'\r\n            }\r\n        })\r\n    }));\r\n    const posTestFields = {\r\n        min_dist: core_1.NumberNode({ min: 0, max: 255, integer: true }),\r\n        max_dist: core_1.NumberNode({ min: 0, max: 255, integer: true }),\r\n        min_chance: core_1.NumberNode({ min: 0, max: 1 }),\r\n        max_chance: core_1.NumberNode({ min: 0, max: 1 })\r\n    };\r\n    schemas.register('pos_rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\r\n        [core_1.Switch]: path => path.push('predicate_type'),\r\n        [core_1.Case]: {\r\n            'minecraft:axis_aligned_linear_pos': {\r\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\r\n                ...posTestFields\r\n            },\r\n            'minecraft:linear_pos': posTestFields\r\n        }\r\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\r\n    schemas.register('rule_test', core_1.ObjectNode({\r\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\r\n        [core_1.Switch]: path => path.push('predicate_type'),\r\n        [core_1.Case]: {\r\n            'minecraft:block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\r\n            },\r\n            'minecraft:blockstate_match': {\r\n                block_state: Reference('block_state')\r\n            },\r\n            'minecraft:random_block_match': {\r\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:random_blockstate_match': {\r\n                block_state: Reference('block_state'),\r\n                probability: core_1.NumberNode({ min: 0, max: 1 })\r\n            },\r\n            'minecraft:tag_match': {\r\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\r\n            }\r\n        }\r\n    }, { context: 'rule_test', disableSwitchContext: true }));\r\n}\r\nexports.initProcessorListSchemas = initProcessorListSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initStructureFeatureSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initStructureFeatureSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const templatePoolConfig = {\r\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\r\n        size: core_1.NumberNode({ integer: true })\r\n    };\r\n    schemas.register('configured_structure_feature', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\r\n        config: core_1.ObjectNode({\r\n            [core_1.Switch]: path => path.pop().push('type'),\r\n            [core_1.Case]: {\r\n                'minecraft:bastion_remnant': templatePoolConfig,\r\n                'minecraft:buried_treasure': {\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:mineshaft': {\r\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\r\n                    probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:ocean_ruin': {\r\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\r\n                    large_probability: core_1.NumberNode({ min: 0, max: 1 }),\r\n                    cluster_probability: core_1.NumberNode({ min: 0, max: 1 })\r\n                },\r\n                'minecraft:pillager_outpost': templatePoolConfig,\r\n                'minecraft:ruined_portal': {\r\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\r\n                },\r\n                'minecraft:shipwreck': {\r\n                    is_beached: core_1.BooleanNode()\r\n                },\r\n                'minecraft:village': templatePoolConfig\r\n            }\r\n        }, { context: 'structure_feature', disableSwitchContext: true })\r\n    }, { context: 'structure_feature' }), {\r\n        default: () => ({\r\n            type: 'minecraft:bastion_remnant',\r\n            config: {\r\n                start_pool: 'minecraft:bastion/starts',\r\n                size: 6\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initSurfaceBuilderSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nfunction initSurfaceBuilderSchemas(schemas, collections) {\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    schemas.register('configured_surface_builder', core_1.Mod(core_1.ObjectNode({\r\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/surface_builder' } }),\r\n        config: core_1.ObjectNode({\r\n            top_material: Reference('block_state'),\r\n            under_material: Reference('block_state'),\r\n            underwater_material: Reference('block_state'),\r\n        }, { context: 'surface_builder' })\r\n    }, { context: 'surface_builder' }), {\r\n        default: () => ({\r\n            type: 'minecraft:default',\r\n            config: {\r\n                top_material: {\r\n                    Name: 'minecraft:grass_block',\r\n                    Properties: {\r\n                        snowy: 'false'\r\n                    }\r\n                },\r\n                under_material: {\r\n                    Name: 'minecraft:dirt'\r\n                },\r\n                underwater_material: {\r\n                    Name: 'minecraft:gravel'\r\n                }\r\n            }\r\n        })\r\n    }));\r\n}\r\nexports.initSurfaceBuilderSchemas = initSurfaceBuilderSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initTemplatePoolSchemas = void 0;\r\nconst core_1 = require(\"@mcschema/core\");\r\nrequire(\"./ProcessorList\");\r\nfunction initTemplatePoolSchemas(schemas, collections) {\r\n    const Reference = core_1.Reference.bind(undefined, schemas);\r\n    const StringNode = core_1.StringNode.bind(undefined, collections);\r\n    const Processors = core_1.ChoiceNode([\r\n        {\r\n            type: 'string',\r\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\r\n            change: v => undefined\r\n        },\r\n        {\r\n            type: 'object',\r\n            node: Reference('processor_list'),\r\n            change: v => ({\r\n                processors: [{\r\n                        \"processor_type\": \"minecraft:nop\"\r\n                    }]\r\n            })\r\n        }\r\n    ]);\r\n    schemas.register('template_pool', core_1.Mod(core_1.ObjectNode({\r\n        name: StringNode(),\r\n        fallback: StringNode(),\r\n        elements: core_1.ListNode(Reference('template_weighted_element'))\r\n    }, { context: 'template_pool' }), {\r\n        default: () => ({\r\n            fallback: 'minecraft:empty',\r\n            elements: [\r\n                {\r\n                    weight: 1,\r\n                    element: {\r\n                        element_type: 'minecraft:single_pool_element',\r\n                        projection: 'rigid',\r\n                        processors: 'minecraft:empty'\r\n                    }\r\n                }\r\n            ]\r\n        })\r\n    }));\r\n    schemas.register('template_weighted_element', core_1.Mod(core_1.ObjectNode({\r\n        weight: core_1.NumberNode({ integer: true, min: 1 }),\r\n        element: Reference('template_element')\r\n    }, { category: 'pool' }), {\r\n        default: () => ({\r\n            weight: 1,\r\n            element: {\r\n                element_type: 'minecraft:single_pool_element',\r\n                projection: 'rigid',\r\n                processors: 'minecraft:empty'\r\n            }\r\n        })\r\n    }));\r\n    schemas.register('template_element', core_1.Mod(core_1.ObjectNode({\r\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\r\n        projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\r\n        [core_1.Switch]: path => path.push('element_type'),\r\n        [core_1.Case]: {\r\n            'minecraft:feature_pool_element': {\r\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } }),\r\n                processors: Processors\r\n            },\r\n            'minecraft:legacy_single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: Processors\r\n            },\r\n            'minecraft:list_pool_element': {\r\n                elements: core_1.ListNode(Reference('template_element'))\r\n            },\r\n            'minecraft:single_pool_element': {\r\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\r\n                processors: Processors\r\n            }\r\n        }\r\n    }, { context: 'template_element', disableSwitchContext: true }), {\r\n        default: () => ({\r\n            element_type: 'minecraft:single_pool_element',\r\n            projection: 'rigid',\r\n            processors: 'minecraft:empty'\r\n        })\r\n    }));\r\n}\r\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.initWorldgenSchemas = void 0;\r\nconst Biome_1 = require(\"./Biome\");\r\nconst Carver_1 = require(\"./Carver\");\r\nconst Decorator_1 = require(\"./Decorator\");\r\nconst Feature_1 = require(\"./Feature\");\r\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\r\nconst ProcessorList_1 = require(\"./ProcessorList\");\r\nconst StructureFeature_1 = require(\"./StructureFeature\");\r\nconst SurfaceBuilder_1 = require(\"./SurfaceBuilder\");\r\nconst TemplatePool_1 = require(\"./TemplatePool\");\r\nfunction initWorldgenSchemas(schemas, collections) {\r\n    Biome_1.initBiomeSchemas(schemas, collections);\r\n    Carver_1.initCarverSchemas(schemas, collections);\r\n    Decorator_1.initDecoratorSchemas(schemas, collections);\r\n    Feature_1.initFeatureSchemas(schemas, collections);\r\n    NoiseSettings_1.initNoiseSettingsSchemas(schemas, collections);\r\n    ProcessorList_1.initProcessorListSchemas(schemas, collections);\r\n    StructureFeature_1.initStructureFeatureSchemas(schemas, collections);\r\n    SurfaceBuilder_1.initSurfaceBuilderSchemas(schemas, collections);\r\n    TemplatePool_1.initTemplatePoolSchemas(schemas, collections);\r\n}\r\nexports.initWorldgenSchemas = initWorldgenSchemas;\r\n","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","module.exports = require(\"module\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}
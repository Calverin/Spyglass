{
	// Place your Spyglass workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"AstNode is predicate": {
		"scope": "javascript,typescript",
		"prefix": "astis",
		"body": [
			"export const ${1:Node} = Object.freeze({",
			"\tis(node: AstNode | undefined): node is ${1:Node} {",
			"\t\treturn (node as ${1:Node} | undefined)?.type === '${2:type}'",
			"\t},",
			"})",
		]
	},
	"destruct": {
		"scope": "javascript,typescript",
		"prefix": "des",
		"body": [
			"const { $0 } = $1.destruct(${2:node})"
		]
	},
}